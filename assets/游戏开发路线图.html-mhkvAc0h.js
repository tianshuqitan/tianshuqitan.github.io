import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as l,d as r,o as a}from"./app-DltcksTa.js";const n={};function o(t,e){return a(),l("div",null,e[0]||(e[0]=[r('<h1 id="游戏开发前端路线图" tabindex="-1"><a class="header-anchor" href="#游戏开发前端路线图"><span>游戏开发前端路线图</span></a></h1><ul><li><a href="https://roadmap.sh/game-developer" target="_blank" rel="noopener noreferrer">原文地址</a></li><li><a href="https://gamemath.com/" target="_blank" rel="noopener noreferrer">3D Math Primer for Graphics and Game Development</a></li><li><a href="https://www.gamedevs.org/" target="_blank" rel="noopener noreferrer">游戏开发文档</a></li><li><a href="https://box2d.org/" target="_blank" rel="noopener noreferrer">Box2D</a></li></ul><h2 id="数学-mathematics" tabindex="-1"><a class="header-anchor" href="#数学-mathematics"><span>数学(Mathematics)</span></a></h2><ul><li>线性代数(Linear Algebra)</li><li>向量(Vector)</li><li>矩阵(Matrix) <ul><li><a href="https://www.gameludere.com/2019/12/21/matrix-algebra-and-game-programming/" target="_blank" rel="noopener noreferrer">Matrix Algebra and Game Programming</a></li></ul></li><li>线性变换(Linear Transformation)</li><li>几何(Geometry) <ul><li><a href="https://www.mathsisfun.com/geometry/index.html" target="_blank" rel="noopener noreferrer">Geometry</a></li></ul></li><li>仿射空间(Affine Space)</li><li>仿射变换(Affine Transformation) <ul><li><a href="https://www.gamedevs.org/uploads/affine-transformations.pdf" target="_blank" rel="noopener noreferrer">Affine Transformations</a></li></ul></li><li>方向(Orientation) <ul><li>四元数(Quaternion)</li><li>欧拉角(Euler Angle)</li></ul></li><li>投影(Projection) <ul><li>透视投影(Perspective)</li><li>正交投影(Orthogonal)</li></ul></li><li>曲线(Curve) <ul><li>样条(Spline)</li><li>埃尔米特曲线(Hermite)</li><li>贝塞尔曲线(Bezier)</li><li>Catmull-Rom 曲线</li></ul></li></ul><h2 id="物理-physics" tabindex="-1"><a class="header-anchor" href="#物理-physics"><span>物理(Physics)</span></a></h2><ul><li>动力学(Dynamics) <ul><li>质心(Center of Mass)</li><li>转动惯量(Moment of Inertia)</li><li>加速度(Acceleration)</li><li>关节(Joints)</li><li>恢复系数(Restitution)</li><li>力(Force)</li><li>角速度(Angular Velocity)</li><li>浮力(Buoyancy) <ul><li><a href="https://www.gamedeveloper.com/programming/water-interaction-model-for-boats-in-video-games" target="_blank" rel="noopener noreferrer">Water interaction model for boats in video games</a></li><li><a href="https://www.gamedeveloper.com/programming/water-interaction-model-for-boats-in-video-games-part-2" target="_blank" rel="noopener noreferrer">Water interaction model for boats in video games: Part 2</a></li></ul></li><li>摩擦力(Friction)</li><li>线速度(Linear Velocity)</li></ul></li><li>碰撞检测(Collision Detection) <ul><li>连续碰撞检测(CCD)</li><li>粗略阶段(Broad Phase) <ul><li>包围体(Bounding Volume) <ul><li>轴对齐包围盒(Axis-Aligned Bounding Box(AABB))</li><li>定向包围盒(Oriented Bounding Box(OBB))</li></ul></li><li>空间划分(Spatial Partitioning) <ul><li>排序与剪裁(Sort and Sweep) <ul><li><a href="https://leanrada.com/notes/sweep-and-prune/" target="_blank" rel="noopener noreferrer">Sort, sweep, and prune: Collision detection algorithms</a></li></ul></li><li>层次包围体(Bounding Volume Hierarchy(BVH))</li><li>动态包围体树(Dynamic Bounding Volume Tree(DBVT)) <ul><li><a href="https://sopiro.github.io/DynamicBVH/" target="_blank" rel="noopener noreferrer">Dynamic Bounding Volume Hierarchies</a></li></ul></li></ul></li></ul></li><li>精确阶段(Narrow Phase) <ul><li>相交(Intersection) <ul><li>SAT 算法(Separating Axis Theorem) <ul><li><a href="https://dyn4j.org/2010/01/sat/" target="_blank" rel="noopener noreferrer">SAT(Separating Axis Theorem)</a></li></ul></li><li>EPA 算法 <ul><li><a href="https://dyn4j.org/2010/05/epa-expanding-polytope-algorithm/" target="_blank" rel="noopener noreferrer">EPA(Expanding Polytope Algorithm)</a></li></ul></li><li>GJK 算法(Gilbert–Johnson–Keerthi)</li></ul></li><li>凸性(Convexity) <ul><li>凸体(Convex) <ul><li>凸包(Convex Hull)</li></ul></li><li>凹(Concave) <ul><li>凸分解(Convex Decomposition)</li></ul></li></ul></li></ul></li></ul></li></ul><h2 id="游戏引擎-game-engine" tabindex="-1"><a class="header-anchor" href="#游戏引擎-game-engine"><span>游戏引擎(Game Engine)</span></a></h2><ul><li><a href="https://docs.unity3d.com/Manual/index.html" target="_blank" rel="noopener noreferrer">Unity 3D</a></li><li><a href="https://dev.epicgames.com/documentation/en-us/unreal-engine" target="_blank" rel="noopener noreferrer">虚幻引擎(Unreal Engine)</a></li><li><a href="https://godotengine.org/" target="_blank" rel="noopener noreferrer">Godot</a></li><li>原生开发(Native)</li></ul><h2 id="编程语言-programming-languages" tabindex="-1"><a class="header-anchor" href="#编程语言-programming-languages"><span>编程语言(Programming Languages)</span></a></h2><ul><li>C/C++</li><li><a href="https://learn.microsoft.com/zh-cn/dotnet/csharp/" target="_blank" rel="noopener noreferrer">C#</a></li><li><a href="https://rust-lang.org/zh-CN/" target="_blank" rel="noopener noreferrer">Rust</a></li><li><a href="https://www.python.org/doc/" target="_blank" rel="noopener noreferrer">Python</a></li></ul><h2 id="计算机图形学-computer-graphics" tabindex="-1"><a class="header-anchor" href="#计算机图形学-computer-graphics"><span>计算机图形学(Computer Graphics)</span></a></h2><ul><li>光线追踪(Ray Tracing)</li><li>光栅化(Rasterization)</li><li>图形管线(Graphics Pipeline)</li><li>采样(Sampling)</li><li>着色器(Shader)</li><li>渲染方程(Rendering Equation)</li><li>反射(Reflection) <ul><li>漫反射(Diffuse)</li><li>镜面反射(Specular)</li></ul></li><li>贴图映射(Mapping) <ul><li>纹理贴图(Texture)</li><li>凹凸贴图(Bump)</li><li>视差贴图(Parallax)</li><li>视差遮蔽贴图(Horizon)</li></ul></li><li>计算机动画(Computer Animation)</li><li>色彩(Color)</li><li>视觉感知(Visual Perception)</li><li>时间重映射(Tone Reproduction)</li><li>光照与阴影(Lighting and Shadow) <ul><li>阴影贴图(Shadow Map) <ul><li>2D</li><li>Cube</li><li>级联阴影(Cascaded)</li></ul></li><li>模板阴影(Stencil Shadow)</li><li>光源类型(Light Source) <ul><li>定向光(Directional Light)</li><li>点光源(Point Light)</li><li>聚光灯(Spot Light)</li><li>无限光源(Infinite Light)</li></ul></li></ul></li><li>可见性与遮挡(Visibility and Occlusion) <ul><li>遮挡物(Occluder) <ul><li>雾效(Fog)</li></ul></li><li>遮挡剔除(Culling) <ul><li>视锥剔除(Frustum)</li><li>光线遮挡(Light)</li><li>阴影遮挡(Shadow)</li></ul></li><li>裁剪(Clipping) <ul><li>多边形裁剪(Polygon)</li><li>多面体裁剪(Polyhedron)</li></ul></li></ul></li></ul><h2 id="图形-api-graphics-api" tabindex="-1"><a class="header-anchor" href="#图形-api-graphics-api"><span>图形 API(Graphics API)</span></a></h2><ul><li>DirectX <ul><li>HLSL(高级着色语言) <ul><li><a href="https://learn.microsoft.com/en-us/windows/win32/direct3dhlsl/dx-graphics-hlsl" target="_blank" rel="noopener noreferrer">High-level shader language(HLSL)</a></li><li><a href="https://docs.vulkan.org/guide/latest/high_level_shader_language_comparison.html" target="_blank" rel="noopener noreferrer">Vulkan High Level Shader Language Comparison</a></li></ul></li></ul></li><li>OpenGL <ul><li>GLSL(OpenGL着色语言) <ul><li><a href="https://registry.khronos.org/OpenGL-Refpages/" target="_blank" rel="noopener noreferrer">OpenGL® and OpenGL® ES Reference Pages</a></li></ul></li></ul></li><li><a href="https://www.khronos.org/opengles/" target="_blank" rel="noopener noreferrer">OpenGL ES</a></li><li><a href="https://www.vulkan.org/" target="_blank" rel="noopener noreferrer">Vulkan</a><ul><li>SPIR-V</li></ul></li><li><a href="https://www.khronos.org/webgl/" target="_blank" rel="noopener noreferrer">WebGL</a></li><li><a href="https://developer.apple.com/metal/" target="_blank" rel="noopener noreferrer">Metal</a></li></ul><hr><h2 id="ai" tabindex="-1"><a class="header-anchor" href="#ai"><span>AI</span></a></h2><ul><li>决策逻辑(Decision Making) <ul><li>决策树(Decision Tree) <ul><li><a href="https://www.gamedeveloper.com/programming/behavior-trees-for-ai-how-they-work" target="_blank" rel="noopener noreferrer">Behavior trees for AI: How they work</a></li></ul></li><li>状态机(State Machine)</li><li>行为树(Behavior Tree) <ul><li><a href="https://sterberino.github.io/open-behavior-trees-documentation/index.html" target="_blank" rel="noopener noreferrer">Open Behavior Trees</a></li></ul></li><li>模糊逻辑(Fuzzy Logic) <ul><li><a href="https://www.michelepirovano.com/pdf/fuzzy_ai_in_games.pdf" target="_blank" rel="noopener noreferrer">The use of Fuzzy Logic for Artificial Intelligence in Games</a></li></ul></li><li>马尔可夫系统(Markov System) <ul><li><a href="https://towardsdatascience.com/modeling-games-with-markov-chains-c7b614731a7f/" target="_blank" rel="noopener noreferrer">Modeling Games with Markov Chains</a></li><li><a href="https://www.gamedeveloper.com/design/advanced-math-in-game-design-random-walks-and-markov-chains-in-action" target="_blank" rel="noopener noreferrer">Advanced math in game design: random walks and Markov chains in action</a></li></ul></li><li>目标导向行为(Goal Oriented Behavior) <ul><li><a href="https://static.hlt.bme.hu/semantics/external/pages/GOAP/alumni.media.mit.edu/_jorkin/goap.html" target="_blank" rel="noopener noreferrer">Goal-Oriented Action Planning(GOAP)</a></li></ul></li></ul></li><li>移动(Movement) <ul><li><a href="https://www.gamedeveloper.com/design/analyzing-core-character-movement-in-3d" target="_blank" rel="noopener noreferrer">Analyzing Core Character Movement in 3D</a></li></ul></li><li>棋类游戏逻辑(Board Game) <ul><li>极小化极大算法(Minimax) <ul><li><a href="https://xlinux.nist.gov/dads/" target="_blank" rel="noopener noreferrer">Dictionary of Algorithms and Data Structures</a></li></ul></li><li>Alpha-Beta剪枝(Alpha-Beta Pruning)</li><li>蒙特卡洛树搜索(Monte Carlo tree search(MCTS))</li></ul></li></ul><h2 id="ai-学习系统-ai-learning" tabindex="-1"><a class="header-anchor" href="#ai-学习系统-ai-learning"><span>AI 学习系统(AI Learning)</span></a></h2><ul><li>朴素贝叶斯分类器(Naive Bayes Classifier)</li><li>机器学习(Decision Learning)</li><li>强化学习(Reinforcements Learning)</li><li>决策树学习(Decision Tree Learning)</li><li>深度学习(Deep Learning)</li><li>人工神经网络(Artificial Neutral Network)</li></ul><h2 id="高级渲染-advanced-rendering" tabindex="-1"><a class="header-anchor" href="#高级渲染-advanced-rendering"><span>高级渲染(Advanced Rendering)</span></a></h2><ul><li>实时光线追踪(Real-Time Ray Tracing) <ul><li>DirectX 光线追踪(DirectX Ray Tracing)</li><li>Vulkan 光线追踪(Vulkan Ray Tracing)</li><li>OptiX(NVIDIA光追框架)</li></ul></li><li>基于物理的渲染(PBR)(Physically-Based Rendering) <ul><li>微表面散射(Microsurface Scattering)</li><li>透明与半透明效果(Translucency and Transparency)</li><li>能量守恒(Conservation of Energy)</li><li>金属度(Metallicity)</li></ul></li></ul>',21)]))}const u=i(n,[["render",o]]),g=JSON.parse('{"path":"/Unity/RoadMap/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91%E8%B7%AF%E7%BA%BF%E5%9B%BE.html","title":"游戏开发前端路线图","lang":"zh-CN","frontmatter":{"article":false},"git":{"createdTime":1747311815000,"updatedTime":1760006209000,"contributors":[{"name":"unknown","username":"unknown","email":"chenmengjie@cyou-inc.com","commits":3,"url":"https://github.com/unknown"}]},"readingTime":{"minutes":3.36,"words":1008},"filePathRelative":"Unity/RoadMap/游戏开发路线图.md","localizedDate":"2025年5月15日","excerpt":""}');export{u as comp,g as data};
