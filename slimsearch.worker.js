[...new Array(6)].map((e,t)=>`[vp-content] h${t+1}`).join(",");const{entries:$}=Object,{fromEntries:st}=Object,nt="ENTRIES",D="KEYS",W="VALUES",_="";class S{set;_type;_path;constructor(t,s){const n=t._tree,o=Array.from(n.keys());this.set=t,this._type=s,this._path=o.length>0?[{node:n,keys:o}]:[]}next(){const t=this.dive();return this.backtrack(),t}dive(){if(this._path.length===0)return{done:!0,value:void 0};const{node:t,keys:s}=b(this._path);if(b(s)===_)return{done:!1,value:this.result()};const n=t.get(b(s));return this._path.push({node:n,keys:Array.from(n.keys())}),this.dive()}backtrack(){if(this._path.length===0)return;const t=b(this._path).keys;t.pop(),!(t.length>0)&&(this._path.pop(),this.backtrack())}key(){return this.set._prefix+this._path.map(({keys:t})=>b(t)).filter(t=>t!==_).join("")}value(){return b(this._path).node.get(_)}result(){switch(this._type){case W:return this.value();case D:return this.key();default:return[this.key(),this.value()]}}[Symbol.iterator](){return this}}const b=e=>e[e.length-1],ot=(e,t,s)=>{const n=new Map;if(typeof t!="string")return n;const o=t.length+1,r=o+s,i=new Uint8Array(r*o).fill(s+1);for(let c=0;c<o;++c)i[c]=c;for(let c=1;c<r;++c)i[c*o]=c;return q(e,t,s,n,i,1,o,""),n},q=(e,t,s,n,o,r,i,c)=>{const l=r*i;t:for(const u of e.keys())if(u===_){const h=o[l-1];h<=s&&n.set(c,[e.get(u),h])}else{let h=r;for(let f=0;f<u.length;++f,++h){const m=u[f],g=i*h,y=g-i;let d=o[g];const a=Math.max(0,h-s-1),w=Math.min(i-1,h+s);for(let p=a;p<w;++p){const O=m!==t[p],C=o[y+p]+ +O,k=o[y+p+1]+1,x=o[g+p]+1,v=o[g+p+1]=Math.min(C,k,x);v<d&&(d=v)}if(d>s)continue t}q(e.get(u),t,s,n,o,h,i,c+u)}};class z{_tree;_prefix;_size=void 0;constructor(t=new Map,s=""){this._tree=t,this._prefix=s}atPrefix(t){if(!t.startsWith(this._prefix))throw new Error("Mismatched prefix");const[s,n]=I(this._tree,t.slice(this._prefix.length));if(s===void 0){const[o,r]=L(n);for(const i of o.keys())if(i!==_&&i.startsWith(r)){const c=new Map;return c.set(i.slice(r.length),o.get(i)),new z(c,t)}}return new z(s,t)}clear(){this._size=void 0,this._tree.clear()}delete(t){return this._size=void 0,rt(this._tree,t)}entries(){return new S(this,nt)}forEach(t){for(const[s,n]of this)t(s,n,this)}fuzzyGet(t,s){return ot(this._tree,t,s)}get(t){const s=F(this._tree,t);return s!==void 0?s.get(_):void 0}has(t){return F(this._tree,t)?.has(_)??!1}keys(){return new S(this,D)}set(t,s){if(typeof t!="string")throw new Error("key must be a string");return this._size=void 0,E(this._tree,t).set(_,s),this}get size(){if(this._size)return this._size;this._size=0;const t=this.entries();for(;!t.next().done;)this._size+=1;return this._size}update(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=E(this._tree,t);return n.set(_,s(n.get(_))),this}fetch(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=E(this._tree,t);let o=n.get(_);return o===void 0&&n.set(_,o=s()),o}values(){return new S(this,W)}[Symbol.iterator](){return this.entries()}static from(t){const s=new z;for(const[n,o]of t)s.set(n,o);return s}static fromObject(t){return z.from(Object.entries(t))}}const I=(e,t,s=[])=>{if(t.length===0||e==null)return[e,s];for(const n of e.keys())if(n!==_&&t.startsWith(n))return s.push([e,n]),I(e.get(n),t.slice(n.length),s);return s.push([e,t]),I(void 0,"",s)},F=(e,t)=>{if(t.length===0||!e)return e;for(const s of e.keys())if(s!==_&&t.startsWith(s))return F(e.get(s),t.slice(s.length))},E=(e,t)=>{const s=t.length;t:for(let n=0;e&&n<s;){for(const r of e.keys())if(r!==_&&t[n]===r[0]){const i=Math.min(s-n,r.length);let c=1;for(;c<i&&t[n+c]===r[c];)++c;const l=e.get(r);if(c===r.length)e=l;else{const u=new Map;u.set(r.slice(c),l),e.set(t.slice(n,n+c),u),e.delete(r),e=u}n+=c;continue t}const o=new Map;return e.set(t.slice(n),o),o}return e},rt=(e,t)=>{const[s,n]=I(e,t);if(s!==void 0){if(s.delete(_),s.size===0)A(n);else if(s.size===1){const[o,r]=s.entries().next().value;R(n,o,r)}}},A=e=>{if(e.length===0)return;const[t,s]=L(e);if(t.delete(s),t.size===0)A(e.slice(0,-1));else if(t.size===1){const[n,o]=t.entries().next().value;n!==_&&R(e.slice(0,-1),n,o)}},R=(e,t,s)=>{if(e.length===0)return;const[n,o]=L(e);n.set(o+t,s),n.delete(o)},L=e=>e[e.length-1],it=(e,t)=>{const s=e._idToShortId.get(t);if(s!=null)return e._storedFields.get(s)},ct=/[\n\r\p{Z}\p{P}]+/u,j="or",N="and",ut="and_not",ht=(e,t)=>{e.includes(t)||e.push(t)},P=(e,t)=>{for(const s of t)e.includes(s)||e.push(s)},B=({score:e},{score:t})=>t-e,lt=()=>new Map,M=e=>{const t=new Map;for(const s of Object.keys(e))t.set(parseInt(s,10),e[s]);return t},G=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)?e[t]:void 0,H={[j]:(e,t)=>{for(const s of t.keys()){const n=e.get(s);if(n==null)e.set(s,t.get(s));else{const{score:o,terms:r,match:i}=t.get(s);n.score=n.score+o,n.match=Object.assign(n.match,i),P(n.terms,r)}}return e},[N]:(e,t)=>{const s=new Map;for(const n of t.keys()){const o=e.get(n);if(o==null)continue;const{score:r,terms:i,match:c}=t.get(n);P(o.terms,i),s.set(n,{score:o.score+r,terms:o.terms,match:Object.assign(o.match,c)})}return s},[ut]:(e,t)=>{for(const s of t.keys())e.delete(s);return e}},dt=(e,t,s,n,o,r)=>{const{k:i,b:c,d:l}=r;return Math.log(1+(s-t+.5)/(t+.5))*(l+e*(i+1)/(e+i*(1-c+c*n/o)))},at=e=>(t,s,n)=>({term:t,fuzzy:typeof e.fuzzy=="function"?e.fuzzy(t,s,n):e.fuzzy??!1,prefix:typeof e.prefix=="function"?e.prefix(t,s,n):e.prefix===!0,termBoost:typeof e.boostTerm=="function"?e.boostTerm(t,s,n):1}),J=(e,t,s,n)=>{for(const o of Object.keys(e._fieldIds))if(e._fieldIds[o]===s){e._options.logger("warn",`SlimSearch: document with ID ${e._documentIds.get(t)} has changed before removal: term "${n}" was not present in field "${o}". Removing a document after it has changed can corrupt the index!`,"version_conflict");return}},ft=(e,t,s,n)=>{if(!e._index.has(n)){J(e,s,t,n);return}const o=e._index.fetch(n,lt),r=o.get(t),i=r?.get(s);!r||typeof i>"u"?J(e,s,t,n):i<=1?r.size<=1?o.delete(t):r.delete(s):r.set(s,i-1),e._index.get(n).size===0&&e._index.delete(n)},mt={k:1.2,b:.7,d:.5},gt={idField:"id",extractField:(e,t)=>e[t],tokenize:e=>e.split(ct),processTerm:e=>e.toLowerCase(),fields:void 0,searchOptions:void 0,storeFields:[],logger:(e,t)=>{console?.[e]?.(t)},autoVacuum:!0},Y={combineWith:j,prefix:!1,fuzzy:!1,maxFuzzy:6,boost:{},weights:{fuzzy:.45,prefix:.375},bm25:mt},pt={combineWith:N,prefix:(e,t,s)=>t===s.length-1},_t={batchSize:1e3,batchWait:10},K={minDirtFactor:.1,minDirtCount:20},yt={..._t,...K},U=Symbol("*"),wt=(e,t)=>{const s=new Map,n={...e._options.searchOptions,...t};for(const[o,r]of e._documentIds){const i=n.boostDocument?n.boostDocument(r,"",e._storedFields.get(o)):1;s.set(o,{score:i,terms:[],match:{}})}return s},Q=(e,t=j)=>{if(e.length===0)return new Map;const s=t.toLowerCase();if(!(s in H))throw new Error(`Invalid combination operator: ${t}`);return e.reduce(H[s])},T=(e,t,s,n,o,r,i,c,l,u=new Map)=>{if(r==null)return u;for(const h of Object.keys(i)){const f=i[h],m=e._fieldIds[h],g=r.get(m);if(g==null)continue;let y=g.size;const d=e._avgFieldLength[m];for(const a of g.keys()){if(!e._documentIds.has(a)){ft(e,m,a,s),y-=1;continue}const w=c?c(e._documentIds.get(a),s,e._storedFields.get(a)):1;if(!w)continue;const p=g.get(a),O=e._fieldLength.get(a)[m],C=dt(p,y,e._documentCount,O,d,l),k=n*o*f*w*C,x=u.get(a);if(x){x.score+=k,ht(x.terms,t);const v=G(x.match,s);v?v.push(h):x.match[s]=[h]}else u.set(a,{score:k,terms:[t],match:{[s]:[h]}})}}return u},xt=(e,t,s)=>{const n={...e._options.searchOptions,...s},o=(n.fields??e._options.fields).reduce((d,a)=>({...d,[a]:G(n.boost,a)||1}),{}),{boostDocument:r,weights:i,maxFuzzy:c,bm25:l}=n,{fuzzy:u,prefix:h}={...Y.weights,...i},f=e._index.get(t.term),m=T(e,t.term,t.term,1,t.termBoost,f,o,r,l);let g,y;if(t.prefix&&(g=e._index.atPrefix(t.term)),t.fuzzy){const d=t.fuzzy===!0?.2:t.fuzzy,a=d<1?Math.min(c,Math.round(t.term.length*d)):d;a&&(y=e._index.fuzzyGet(t.term,a))}if(g)for(const[d,a]of g){const w=d.length-t.term.length;if(!w)continue;y?.delete(d);const p=h*d.length/(d.length+.3*w);T(e,t.term,d,p,t.termBoost,a,o,r,l,m)}if(y)for(const d of y.keys()){const[a,w]=y.get(d);if(!w)continue;const p=u*d.length/(d.length+w);T(e,t.term,d,p,t.termBoost,a,o,r,l,m)}return m},X=(e,t,s={})=>{if(t===U)return wt(e,s);if(typeof t!="string"){const h={...s,...t,queries:void 0},f=t.queries.map(m=>X(e,m,h));return Q(f,h.combineWith)}const{tokenize:n,processTerm:o,searchOptions:r}=e._options,i={tokenize:n,processTerm:o,...r,...s},{tokenize:c,processTerm:l}=i,u=c(t).flatMap(h=>l(h)).filter(h=>!!h).map(at(i)).map(h=>xt(e,h,i));return Q(u,i.combineWith)},Z=(e,t,s={})=>{const{searchOptions:n}=e._options,o={...n,...s},r=X(e,t,s),i=[];for(const[c,{score:l,terms:u,match:h}]of r){const f=u.length||1,m={id:e._documentIds.get(c),score:l*f,terms:Object.keys(h),queryTerms:u,match:h};Object.assign(m,e._storedFields.get(c)),(o.filter==null||o.filter(m))&&i.push(m)}return t===U&&o.boostDocument==null||i.sort(B),i},zt=(e,t,s={})=>{s={...e._options.autoSuggestOptions,...s};const n=new Map;for(const{score:r,terms:i}of Z(e,t,s)){const c=i.join(" "),l=n.get(c);l!=null?(l.score+=r,l.count+=1):n.set(c,{score:r,terms:i,count:1})}const o=[];for(const[r,{score:i,terms:c,count:l}]of n)o.push({suggestion:r,terms:c,score:i/l});return o.sort(B),o};class bt{_options;_index;_documentCount;_documentIds;_idToShortId;_fieldIds;_fieldLength;_avgFieldLength;_nextId;_storedFields;_dirtCount;_currentVacuum;_enqueuedVacuum;_enqueuedVacuumConditions;constructor(t){if(!t?.fields)throw new Error('SlimSearch: option "fields" must be provided');const s=t.autoVacuum==null||t.autoVacuum===!0?yt:t.autoVacuum;this._options={...gt,...t,autoVacuum:s,searchOptions:{...Y,...t.searchOptions},autoSuggestOptions:{...pt,...t.autoSuggestOptions}},this._index=new z,this._documentCount=0,this._documentIds=new Map,this._idToShortId=new Map,this._fieldIds={},this._fieldLength=new Map,this._avgFieldLength=[],this._nextId=0,this._storedFields=new Map,this._dirtCount=0,this._currentVacuum=null,this._enqueuedVacuum=null,this._enqueuedVacuumConditions=K,this.addFields(this._options.fields)}get isVacuuming(){return this._currentVacuum!=null}get dirtCount(){return this._dirtCount}get dirtFactor(){return this._dirtCount/(1+this._documentCount+this._dirtCount)}get documentCount(){return this._documentCount}get termCount(){return this._index.size}toJSON(){const t=[];for(const[s,n]of this._index){const o={};for(const[r,i]of n)o[r]=Object.fromEntries(i);t.push([s,o])}return{documentCount:this._documentCount,nextId:this._nextId,documentIds:Object.fromEntries(this._documentIds),fieldIds:this._fieldIds,fieldLength:Object.fromEntries(this._fieldLength),averageFieldLength:this._avgFieldLength,storedFields:Object.fromEntries(this._storedFields),dirtCount:this._dirtCount,index:t,version:2}}addFields(t){for(let s=0;s<t.length;s++)this._fieldIds[t[s]]=s}}const vt=e=>new bt(e),kt=({documentCount:e,nextId:t,fieldIds:s,averageFieldLength:n,dirtCount:o,version:r},i)=>{if(r!==2)throw new Error("SlimSearch: cannot deserialize an index created with an incompatible version");const c=vt(i);return c._documentCount=e,c._nextId=t,c._idToShortId=new Map,c._fieldIds=s,c._avgFieldLength=n,c._dirtCount=o??0,c._index=new z,c},It=(e,t)=>{const{index:s,documentIds:n,fieldLength:o,storedFields:r}=e,i=kt(e,t);i._documentIds=M(n),i._fieldLength=M(o),i._storedFields=M(r);for(const[c,l]of i._documentIds)i._idToShortId.set(l,c);for(const[c,l]of s){const u=new Map;for(const h of Object.keys(l))u.set(parseInt(h,10),M(l[h]));i._index.set(c,u)}return i},V=(e,t)=>{const s=e.toLowerCase(),n=t.toLowerCase(),o=[];let r=0,i=0;const c=(u,h=!1)=>{let f;i===0?f=u.length>20?`… ${u.slice(-20)}`:u:h?f=u.length+i>100?`${u.slice(0,100-i)}… `:u:f=u.length>20?`${u.slice(0,20)} … ${u.slice(-20)}`:u,f&&o.push(f),i+=f.length,h||(o.push(["mark",t]),i+=t.length,i>=100&&o.push(" …"))};let l=s.indexOf(n,r);if(l===-1)return null;for(;l>=0;){const u=l+n.length;if(c(e.slice(r,l)),r=u,i>100)break;l=s.indexOf(n,r)}return i<100&&c(e.slice(r),!0),o},Mt=(e,t)=>t.contents.reduce((s,[,n])=>s+n,0)-e.contents.reduce((s,[,n])=>s+n,0),Ot=(e,t)=>Math.max(...t.contents.map(([,s])=>s))-Math.max(...e.contents.map(([,s])=>s)),tt=(e,t,s={})=>{const n={};return Z(t,e,{boost:{h:2,t:1,c:4},prefix:!0,...s}).forEach(o=>{const{id:r,terms:i,score:c}=o,l=r.includes("@"),u=r.includes("#"),[h,f]=r.split(/[#@]/),m=Number(h),g=i.sort((d,a)=>d.length-a.length).filter((d,a)=>i.slice(a+1).every(w=>!w.includes(d))),{contents:y}=n[m]??={title:"",contents:[]};if(l)y.push([{type:"customField",id:m,index:f,display:g.map(d=>o.c.map(a=>V(a,d))).flat().filter(d=>d!==null)},c]);else{const d=g.map(a=>V(o.h,a)).filter(a=>a!==null);if(d.length&&y.push([{type:u?"heading":"title",id:m,...u&&{anchor:f},display:d},c]),"t"in o&&o.t)for(const a of o.t){const w=g.map(p=>V(a,p)).filter(p=>p!==null);w.length&&y.push([{type:"text",id:m,...u&&{anchor:f},display:w},c])}}}),$(n).sort(([,o],[,r])=>"max"==="total"?Mt(o,r):Ot(o,r)).map(([o,{title:r,contents:i}])=>{if(!r){const c=it(t,o);c&&(r=c.h)}return{title:r,contents:i.map(([c])=>c)}})},et=(e,t,s={})=>{const n=zt(t,e,{fuzzy:.2,maxFuzzy:3,...s}).map(({suggestion:o})=>o);return e.includes(" ")?n:n.filter(o=>!o.includes(" "))},Ct=st($(JSON.parse("{\"/\":{\"documentCount\":407,\"nextId\":407,\"documentIds\":{\"0\":\"0\",\"1\":\"1\",\"2\":\"2\",\"3\":\"3\",\"4\":\"4\",\"5\":\"5\",\"6\":\"6\",\"7\":\"6#大模型\",\"8\":\"6#大模型-api-平台\",\"9\":\"6#ide-plugins\",\"10\":\"6#mcp\",\"11\":\"6#开源库\",\"12\":\"6#ai-工具网站\",\"13\":\"6#ai-排名\",\"14\":\"6#ai-翻译\",\"15\":\"7\",\"16\":\"8\",\"17\":\"8#flux\",\"18\":\"9\",\"19\":\"10\",\"20\":\"11\",\"21\":\"12\",\"22\":\"13\",\"23\":\"14\",\"24\":\"15\",\"25\":\"16\",\"26\":\"17\",\"27\":\"18\",\"28\":\"19\",\"29\":\"20\",\"30\":\"21\",\"31\":\"22\",\"32\":\"23\",\"33\":\"24\",\"34\":\"25\",\"35\":\"26\",\"36\":\"27\",\"37\":\"28\",\"38\":\"29\",\"39\":\"29#安装\",\"40\":\"30\",\"41\":\"30#q1-如果游戏出现卡顿-掉帧-你的分析和解决思路是什么\",\"42\":\"30#q2-unity-中的-gc-垃圾回收-是如何工作的-你如何优化-gc\",\"43\":\"30#q3-什么是-draw-call-如何减少-draw-call\",\"44\":\"30#q1-你如何设计一个游戏的-ui-框架\",\"45\":\"30#q2-什么是-scriptableobject-so-你会在什么场景下使用它\",\"46\":\"30#q3-谈谈你对-ecs-dots-的理解-它解决了什么问题\",\"47\":\"30#q1-unity-的-c-脚本后端-mono-和-il2cpp-有什么区别\",\"48\":\"30#q2-什么是值类型-value-type-和引用类型-reference-type-struct-和-class-的区别\",\"49\":\"30#q3-unity-中的协程-coroutine-和-c-的-async-await-有什么区别\",\"50\":\"30#q1-解释一下-urp-universal-render-pipeline-和内置管线-built-in-的主要区别。\",\"51\":\"30#q2-什么是-shader-vertex-shader-顶点着色器-和-fragment-shader-片元-像素着色器-分别做什么\",\"52\":\"30#q1-你在项目中遇到的最困难的技术挑战是什么-你是如何解决的\",\"53\":\"30#q2-你如何进行代码审查-code-review-你关注哪些点\",\"54\":\"31\",\"55\":\"31#第一部分-性能优化-硬核\",\"56\":\"31#第二部分-架构与设计模式\",\"57\":\"31#第三部分-c-与引擎底层\",\"58\":\"31#第四部分-渲染与图形学\",\"59\":\"31#第五部分-情景与软技能\",\"60\":\"32\",\"61\":\"33\",\"62\":\"33#🧱-unity-核心概念\",\"63\":\"33#💻-c-编程与内存管理\",\"64\":\"33#⚙️-性能优化与实践\",\"65\":\"33#🔧-资源管理与高级特性\",\"66\":\"33#💡-面试备考建议\",\"67\":\"33#🔍-unity-引擎核心\",\"68\":\"33#💻-c-编程与内存管理-1\",\"69\":\"33#⚙️-性能优化与实践-1\",\"70\":\"33#🔧-架构设计与高级特性\",\"71\":\"33#🧠-其他高频考点\",\"72\":\"33#💡-面试准备建议\",\"73\":\"34\",\"74\":\"34#第一部分-性能优化与诊断-必考硬核\",\"75\":\"34#第二部分-架构与设计模式-考察可维护性和扩展性\",\"76\":\"34#第三部分-引擎与语言底层-考察原理与深入理解\",\"77\":\"34#第四部分-软技能与领导力\",\"78\":\"34#🚀-一、-unity-核心知识与引擎特性\",\"79\":\"34#_1-生命周期与执行顺序\",\"80\":\"34#_2-协程-coroutine-与异步编程\",\"81\":\"34#_3-内存管理与-gc\",\"82\":\"34#⚙️-二、-性能优化与架构设计\",\"83\":\"34#_4-渲染优化-draw-call-overdraw\",\"84\":\"34#_5-资源管理与热更新\",\"85\":\"34#_6-架构模式与模块化\",\"86\":\"34#💻-三、-网络与数据\",\"87\":\"34#_7-网络同步与延迟处理\",\"88\":\"34#_8-数据存储与持久化\",\"89\":\"34#💡-四、-高级与实战经验\",\"90\":\"34#_9-shader-渲染管线理解\",\"91\":\"34#_10-错误处理与调试\",\"92\":\"34#总结与建议\",\"93\":\"35\",\"94\":\"35#参考\",\"95\":\"36\",\"96\":\"37\",\"97\":\"37#托管内存\",\"98\":\"37#原生内存\",\"99\":\"37#动态堆分配器-dynamic-heap-allocator\",\"100\":\"37#桶分配器-bucket-allocator\",\"101\":\"37#双线程分配器-dual-thread-allocator\",\"102\":\"37#线程本地存储-tls-栈分配器-thread-local-storage-stack-allocator\",\"103\":\"37#线程安全线性分配器-thread-safe-linear-allocator\",\"104\":\"37#自定义分配器\",\"105\":\"38\",\"106\":\"39\",\"107\":\"39#gpu-实例化\",\"108\":\"39#drawcall-批处理\",\"109\":\"39#静态批处理\",\"110\":\"39#动态批处理\",\"111\":\"39#手动合并网格\",\"112\":\"39#srp-batcher\",\"113\":\"40\",\"114\":\"40#要求和兼容性\",\"115\":\"40#使用-gpu-实例化\",\"116\":\"40#光照\",\"117\":\"40#性能影响\",\"118\":\"40#创建支持-gpu-实例化的着色器\",\"119\":\"40#使用带有-gpu-实例化的着色器变体\",\"120\":\"40#向-gpu-实例化着色器添加每实例属性\",\"121\":\"40#surface-shader-示例\",\"122\":\"40#vertex-fragment-shader-示例\",\"123\":\"40#运行时更改每实例数据示例\",\"124\":\"41\",\"125\":\"42\",\"126\":\"42#unity-与材质\",\"127\":\"42#srp-batcher-工作原理\",\"128\":\"42#如何启用-srp-batcher\",\"129\":\"42#srp-batcher-兼容性\",\"130\":\"42#性能分析的艺术\",\"131\":\"42#覆盖信息\",\"132\":\"42#各种场景基准测试\",\"133\":\"42#支持的平台\",\"134\":\"42#常见问题\",\"135\":\"42#如何检查-srp-batcher-效率\",\"136\":\"42#编写自己的兼容着色器的-srp\",\"137\":\"42#未来\",\"138\":\"43\",\"139\":\"43#unity-ui-优化指南\",\"140\":\"43#unity-ui-基础\",\"141\":\"43#术语\",\"142\":\"43#渲染细节\",\"143\":\"43#canvases-批处理-batch-构建\",\"144\":\"43#graphics-重建-rebuild\",\"145\":\"43#layout-重建\",\"146\":\"43#graphic-重建\",\"147\":\"43#unity-ui-性能分析工具\",\"148\":\"43#unity-profiler\",\"149\":\"43#unity-frame-debugger\",\"150\":\"43#instruments-vtune\",\"151\":\"43#xcode-frame-debugger-intel-gpa\",\"152\":\"43#分析分析器-profiler-结果\",\"153\":\"43#填充率、canvas-和输入\",\"154\":\"43#修复填充率问题\",\"155\":\"43#消除不可见-ui\",\"156\":\"43#简化-ui-结构\",\"157\":\"43#禁用不可见的相机输出\",\"158\":\"43#大部分被遮挡的相机\",\"159\":\"43#基于组合的-ui\",\"160\":\"43#ui-着色器和低规格设备\",\"161\":\"43#ui-canvas-重建\",\"162\":\"43#child-顺序\",\"163\":\"43#拆分-canvas\",\"164\":\"43#unity-ui-中的输入和射线检测\",\"165\":\"43#移动设备上错误的鼠标输入检测-5-3\",\"166\":\"43#射线检测优化\",\"167\":\"43#优化-ui-控件\",\"168\":\"43#ui-文本\",\"169\":\"43#textmeshpro-文本\",\"170\":\"43#scroll-views\",\"171\":\"43#其他-ui-优化技术和技巧\",\"172\":\"43#基于-recttransform-的布局\",\"173\":\"43#禁用-canvas\",\"174\":\"43#分配事件相机\",\"175\":\"43#ui-源代码定制\",\"176\":\"43#其他优化建议\",\"177\":\"44\",\"178\":\"44#合理划分-canvas\",\"179\":\"44#graphic-raycaster-的最佳使用\",\"180\":\"44#避免使用-camera-main\",\"181\":\"44#尽可能避免使用-layout-group\",\"182\":\"44#正确使用-ui-对象缓存池\",\"183\":\"44#如何隐藏-canvas\",\"184\":\"44#在-ui-元素上优化使用-animator\",\"185\":\"44#更多资源\",\"186\":\"45\",\"187\":\"45#概述\",\"188\":\"45#重要文档\",\"189\":\"45#资源-assets\",\"190\":\"45#脚本后端-scripting-backends\",\"191\":\"45#unity-中的代码剥离-code-stripping\",\"192\":\"45#托管代码剥离\",\"193\":\"45#原生代码剥离\",\"194\":\"45#unity-模块剥离-unity-module-stripping\",\"195\":\"45#c-代码剥离\",\"196\":\"45#根-roots\",\"197\":\"45#泛型共享-generic-sharing\",\"198\":\"45#程序集定义文件-assembly-definition-files\",\"199\":\"45#构建报告-build-report\",\"200\":\"45#原生内存-native-memory\",\"201\":\"45#音频-audio\",\"202\":\"45#android-内存管理-android-memory-management\",\"203\":\"45#android-上的分页-paging-on-android\",\"204\":\"45#内存消耗限制-memory-consumption-limitations\",\"205\":\"45#dumpsys\",\"206\":\"45#android-studio\",\"207\":\"45#插件-plugins\",\"208\":\"45#应用程序大小-application-size\",\"209\":\"46\",\"210\":\"46#渲染-rendering\",\"211\":\"46#相机-camera\",\"212\":\"46#清除-clear\",\"213\":\"46#剔除-culling\",\"214\":\"46#运动矢量-motion-vectors\",\"215\":\"46#填充率-fillrate\",\"216\":\"46#绘制调用批处理-draw-call-batching\",\"217\":\"46#几何体-geometry\",\"218\":\"46#细节级别-level-of-detail-lod\",\"219\":\"46#纹理-textures\",\"220\":\"46#资源审计-asset-auditing\",\"221\":\"46#纹理压缩-texture-compression\",\"222\":\"46#gpu-上传-gpu-upload\",\"223\":\"46#多线程渲染-multithreaded-rendering-和图形作业-graphics-jobs\",\"224\":\"46#单线程渲染-singlethreaded-rendering-单客户端-无工作线程\",\"225\":\"46#多线程渲染-multithreaded-rendering-单客户端-单工作线程\",\"226\":\"46#分析多线程渲染-profiling-multithreaded-rendering\",\"227\":\"46#作业化渲染-jobified-rendering-多客户端-单工作线程\",\"228\":\"46#图形作业-graphics-jobs-多客户端-无工作线程\",\"229\":\"46#帧缓冲区-framebuffer\",\"230\":\"46#双缓冲-double-buffering-和-三缓冲-triple-buffering\",\"231\":\"46#颜色缓冲区-color-buffer\",\"232\":\"46#模板缓冲区-stencil-buffer-和深度缓冲区-depth-buffer\",\"233\":\"46#本机分辨率-native-resolution\",\"234\":\"46#最终-blit-final-blit\",\"235\":\"46#着色器-shaders\",\"236\":\"46#移动着色器-mobile-shaders\",\"237\":\"46#项目导入-project-imports\",\"238\":\"46#着色器构建报告-shader-build-report\",\"239\":\"46#着色器内存-shader-memory\",\"240\":\"46#着色器关键字-shader-keywords\",\"241\":\"46#着色器变体-shader-variants\",\"242\":\"46#着色器变体集合-shader-variant-collections\",\"243\":\"46#着色器预加载-shader-preloading\",\"244\":\"46#内置着色器-built-in-shaders\",\"245\":\"47\",\"246\":\"47#资源审核\",\"247\":\"47#纹理\",\"248\":\"47#模型\",\"249\":\"47#音频\",\"250\":\"47#字符串和文本\",\"251\":\"47#区域约束与序数比对\",\"252\":\"47#低效的内置字符串-api\",\"253\":\"47#正则表达式\",\"254\":\"47#xml、json-和其他长格式文本解析\",\"255\":\"47#resources-文件夹\",\"256\":\"47#一般优化\",\"257\":\"47#按-id-寻址属性\",\"258\":\"47#使用非分配物理-api\",\"259\":\"47#与-unityengine-object-子类进行-null-比较\",\"260\":\"47#矢量和四元数数学以及运算顺序\",\"261\":\"47#内置-colorutility\",\"262\":\"47#find-和-findobjectoftype\",\"263\":\"47#调试代码和-conditional-属性\",\"264\":\"47#特别优化\",\"265\":\"47#多维数组-与交错数组-数组的数组\",\"266\":\"47#粒子系统池\",\"267\":\"47#更新管理器-update-manager\",\"268\":\"47#在更新管理器中使用-c-委托\",\"269\":\"47#加载线程控制\",\"270\":\"47#大批量对象移动和-cullinggroup\",\"271\":\"47#减少方法调用开销\",\"272\":\"47#简单属性\",\"273\":\"47#简单方法\",\"274\":\"48\",\"275\":\"48#增量式垃圾回收\",\"276\":\"48#禁用垃圾回收\",\"277\":\"48#垃圾回收最佳实践\",\"278\":\"48#临时分配\",\"279\":\"48#可重用对象池\",\"280\":\"48#重复的字符串连接\",\"281\":\"48#返回数组的函数\",\"282\":\"48#集合和数组重用\",\"283\":\"48#闭包和匿名方法\",\"284\":\"48#装箱-boxing\",\"285\":\"48#返回数组的-unity-api\",\"286\":\"48#替代的非分配-api\",\"287\":\"48#空数组重用\",\"288\":\"49\",\"289\":\"50\",\"290\":\"50#定义程序集\",\"291\":\"50#引用和依赖关系\",\"292\":\"50#默认引用\",\"293\":\"50#循环引用\",\"294\":\"50#创建程序集定义资产\",\"295\":\"50#创建程序集定义引用资产\",\"296\":\"50#创建特定平台的程序集\",\"297\":\"50#为-editor-代码创建程序集\",\"298\":\"50#创建测试程序集\",\"299\":\"50#引用另一个程序集\",\"300\":\"50#引用预编译的-plugin-程序集\",\"301\":\"50#有条件地包含程序集\",\"302\":\"50#根据-unity-和项目-package-版本定义符号\",\"303\":\"50#version-define-表达式\",\"304\":\"50#unity-版本号\",\"305\":\"50#package-和-module-版本号\",\"306\":\"50#查找脚本所属的程序集\",\"307\":\"50#特殊文件夹\",\"308\":\"50#设置设置程序集属性\",\"309\":\"50#在构建脚本中获取程序集信息\",\"310\":\"51\",\"311\":\"52\",\"312\":\"52#编程能力\",\"313\":\"52#引擎知识\",\"314\":\"52#网络编程\",\"315\":\"52#版本控制\",\"316\":\"52#调试\",\"317\":\"52#优化\",\"318\":\"52#ta-技术美术\",\"319\":\"52#游戏特效\",\"320\":\"52#地编\",\"321\":\"52#行业\",\"322\":\"52#经典插件\",\"323\":\"52#其他\",\"324\":\"53\",\"325\":\"53#数学-mathematics\",\"326\":\"53#物理-physics\",\"327\":\"53#游戏引擎-game-engine\",\"328\":\"53#编程语言-programming-languages\",\"329\":\"53#计算机图形学-computer-graphics\",\"330\":\"53#图形-api-graphics-api\",\"331\":\"53#ai\",\"332\":\"53#ai-学习系统-ai-learning\",\"333\":\"53#高级渲染-advanced-rendering\",\"334\":\"54\",\"335\":\"54#sidebar\",\"336\":\"54#navbar\",\"337\":\"55\",\"338\":\"55#项目根目录下创建-gitignore\",\"339\":\"55#同步到-github\",\"340\":\"55#报错处理\",\"341\":\"55#参考\",\"342\":\"56\",\"343\":\"56#环境\",\"344\":\"56#创建项目\",\"345\":\"56#通过命令行创建-推荐\",\"346\":\"56#手动创建\",\"347\":\"56#目录结构\",\"348\":\"56#已有项目安装依赖包\",\"349\":\"56#使用-vuepress\",\"350\":\"56#启动开发服务器\",\"351\":\"56#构建你的网站\",\"352\":\"57\",\"353\":\"58\",\"354\":\"58#官网\",\"355\":\"58#安装\",\"356\":\"58#配置\",\"357\":\"58#添加搜索框\",\"358\":\"58#博客模式\",\"359\":\"58#图标\",\"360\":\"58#导航栏\",\"361\":\"58#侧边栏\",\"362\":\"58#页脚\",\"363\":\"58#页面信息\",\"364\":\"58#页面元数据\",\"365\":\"58#frontmatter\",\"366\":\"58#markdown\",\"367\":\"58#代码块\",\"368\":\"59\",\"369\":\"60\",\"370\":\"61\",\"371\":\"61#unity3d-中-c-的底层原理\",\"372\":\"61#list-源码剖析\",\"373\":\"61#dictionary-源码剖析\",\"374\":\"61#参考\",\"375\":\"62\",\"376\":\"63\",\"377\":\"63#多语言\",\"378\":\"64\",\"379\":\"64#ugui-系统的原理及其组件使用\",\"380\":\"65\",\"381\":\"65#架构的好坏\",\"382\":\"65#架构中的思维方式\",\"383\":\"65#unity3d-分层设计\",\"384\":\"66\",\"385\":\"67\",\"386\":\"68\",\"387\":\"68#_1-什么是内存\",\"388\":\"68#_2-android-内存管理\",\"389\":\"68#_3-unity-内存\",\"390\":\"68#_4-native-内存\",\"391\":\"68#scene\",\"392\":\"68#audio\",\"393\":\"68#code-size\",\"394\":\"68#assetbundle\",\"395\":\"68#resources-文件夹\",\"396\":\"68#texture\",\"397\":\"68#mesh\",\"398\":\"68#_5-managed-托管-内存\",\"399\":\"68#vm-内存池\",\"400\":\"68#gc-机制\",\"401\":\"68#boehm\",\"402\":\"68#memory-fragmentation-内存碎片化\",\"403\":\"68#zombie-memory-僵尸内存\",\"404\":\"68#最佳实践\",\"405\":\"69\",\"406\":\"70\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[1,7],\"1\":[1,2],\"2\":[1],\"3\":[1,4],\"4\":[1,20],\"5\":[1,3],\"6\":[1],\"7\":[1,30],\"8\":[3,1],\"9\":[2,13],\"10\":[1,8],\"11\":[1,2],\"12\":[2,7],\"13\":[2,7],\"14\":[2,44],\"15\":[1],\"16\":[1,5],\"17\":[1,36],\"18\":[1,7],\"19\":[1,49],\"20\":[1,51],\"21\":[1,2],\"22\":[1,164],\"23\":[1,10],\"24\":[2,23],\"25\":[1,4],\"26\":[1,52],\"27\":[1,15],\"28\":[1],\"29\":[1,6],\"30\":[1,197],\"31\":[1,24],\"32\":[1],\"33\":[1,27],\"34\":[1,17],\"35\":[1,6],\"36\":[1],\"37\":[2],\"38\":[1,4],\"39\":[1,3],\"40\":[5,15],\"41\":[5,172],\"42\":[8,88],\"43\":[6,86],\"44\":[5,89],\"45\":[6,72],\"46\":[7,77],\"47\":[10,67],\"48\":[9,72],\"49\":[9,77],\"50\":[11,54],\"51\":[11,61],\"52\":[4,57],\"53\":[6,53],\"54\":[3,20],\"55\":[4,194],\"56\":[2,158],\"57\":[3,178],\"58\":[2,129],\"59\":[2,99],\"60\":[3,506],\"61\":[2,47],\"62\":[3,61],\"63\":[3,67],\"64\":[2,68],\"65\":[2,63],\"66\":[2,82],\"67\":[3,60],\"68\":[3,69],\"69\":[2,60],\"70\":[2,56],\"71\":[2,43],\"72\":[2,43],\"73\":[4,14],\"74\":[4,161],\"75\":[4,147],\"76\":[4,122],\"77\":[2,76],\"78\":[4],\"79\":[2,44],\"80\":[2,35],\"81\":[2,46],\"82\":[3],\"83\":[2,44],\"84\":[2,31],\"85\":[2,46],\"86\":[3],\"87\":[2,31],\"88\":[2,33],\"89\":[3],\"90\":[2,30],\"91\":[2,25],\"92\":[1,36],\"93\":[1,69],\"94\":[1,3],\"95\":[1,2],\"96\":[2,157],\"97\":[1,200],\"98\":[1,99],\"99\":[5,76],\"100\":[4,152],\"101\":[5,77],\"102\":[9,93],\"103\":[6,88],\"104\":[1,235],\"105\":[1,1],\"106\":[2,148],\"107\":[2,2],\"108\":[2,141],\"109\":[1,163],\"110\":[1,155],\"111\":[1,26],\"112\":[1,317],\"113\":[2,26],\"114\":[1,59],\"115\":[3,58],\"116\":[1,85],\"117\":[1,17],\"118\":[3,201],\"119\":[3,48],\"120\":[3,76],\"121\":[3,80],\"122\":[4,70],\"123\":[1,44],\"124\":[1,33],\"125\":[3,54],\"126\":[2,35],\"127\":[3,124],\"128\":[3,26],\"129\":[3,44],\"130\":[1,52],\"131\":[1,35],\"132\":[1,48],\"133\":[1,23],\"134\":[1,94],\"135\":[4,94],\"136\":[2,111],\"137\":[1,45],\"138\":[3,11],\"139\":[3,86],\"140\":[3,9],\"141\":[1,94],\"142\":[1,28],\"143\":[4,35],\"144\":[4,129],\"145\":[2,119],\"146\":[2,51],\"147\":[3,34],\"148\":[2,116],\"149\":[3,115],\"150\":[2,99],\"151\":[5,130],\"152\":[3,82],\"153\":[3],\"154\":[1,26],\"155\":[2,33],\"156\":[3,15],\"157\":[1,32],\"158\":[1,17],\"159\":[2,60],\"160\":[2,114],\"161\":[3,44],\"162\":[2,39],\"163\":[2,96],\"164\":[3,19],\"165\":[4,48],\"166\":[1,95],\"167\":[3,7],\"168\":[2,231],\"169\":[2,180],\"170\":[2,148],\"171\":[3,12],\"172\":[3,44],\"173\":[2,71],\"174\":[1,42],\"175\":[2,27],\"176\":[1,1],\"177\":[3,21],\"178\":[2,75],\"179\":[3,71],\"180\":[3,63],\"181\":[3,123],\"182\":[3,20],\"183\":[2,30],\"184\":[4,13],\"185\":[1,23],\"186\":[2,2],\"187\":[1,14],\"188\":[1,13],\"189\":[3,49],\"190\":[4,104],\"191\":[5,13],\"192\":[1,43],\"193\":[1,38],\"194\":[5,33],\"195\":[2,22],\"196\":[3,50],\"197\":[4,32],\"198\":[5,15],\"199\":[4,51],\"200\":[4,156],\"201\":[3,135],\"202\":[5,16],\"203\":[5,51],\"204\":[5,37],\"205\":[1,488],\"206\":[2,56],\"207\":[3,17],\"208\":[4,22],\"209\":[4,2],\"210\":[3,54],\"211\":[3,18],\"212\":[3,170],\"213\":[3,84],\"214\":[4,32],\"215\":[3,159],\"216\":[5,122],\"217\":[3,61],\"218\":[6,117],\"219\":[3,9],\"220\":[4,18],\"221\":[4,86],\"222\":[4,72],\"223\":[7,20],\"224\":[6,16],\"225\":[6,87],\"226\":[5,25],\"227\":[6,34],\"228\":[6,80],\"229\":[3,7],\"230\":[7,38],\"231\":[4,20],\"232\":[6,47],\"233\":[4,109],\"234\":[4,57],\"235\":[3],\"236\":[4,46],\"237\":[4,42],\"238\":[5,72],\"239\":[4,18],\"240\":[4,32],\"241\":[4,37],\"242\":[5,15],\"243\":[4,9],\"244\":[5,37],\"245\":[3,23],\"246\":[1,95],\"247\":[1,79],\"248\":[1,89],\"249\":[1,30],\"250\":[1,36],\"251\":[1,25],\"252\":[2,68],\"253\":[1,48],\"254\":[3,118],\"255\":[2,17],\"256\":[1,10],\"257\":[3,36],\"258\":[2,22],\"259\":[6,19],\"260\":[1,21],\"261\":[2,27],\"262\":[3,43],\"263\":[2,39],\"264\":[1,6],\"265\":[4,54],\"266\":[1,23],\"267\":[4,62],\"268\":[3,20],\"269\":[1,101],\"270\":[2,45],\"271\":[1,104],\"272\":[1,50],\"273\":[1,23],\"274\":[1,117],\"275\":[1,212],\"276\":[1,60],\"277\":[1,24],\"278\":[1,44],\"279\":[1,107],\"280\":[1,146],\"281\":[1,83],\"282\":[1,56],\"283\":[1,88],\"284\":[3,75],\"285\":[3,111],\"286\":[2,24],\"287\":[1,12],\"288\":[1,37],\"289\":[1,71],\"290\":[1,30],\"291\":[1,64],\"292\":[1,50],\"293\":[1,19],\"294\":[1,27],\"295\":[1,30],\"296\":[1,18],\"297\":[3,18],\"298\":[1,16],\"299\":[1,31],\"300\":[3,37],\"301\":[1,58],\"302\":[5,64],\"303\":[3,32],\"304\":[2,72],\"305\":[4,42],\"306\":[1,26],\"307\":[1,53],\"308\":[1,40],\"309\":[1,46],\"310\":[1,3],\"311\":[2,3],\"312\":[1,70],\"313\":[1,78],\"314\":[1,16],\"315\":[1,14],\"316\":[1,4],\"317\":[1,47],\"318\":[2,34],\"319\":[1,25],\"320\":[1,18],\"321\":[1,32],\"322\":[1,24],\"323\":[1,41],\"324\":[1,11],\"325\":[3,42],\"326\":[3,101],\"327\":[4,9],\"328\":[4,4],\"329\":[4,85],\"330\":[4,24],\"331\":[1,75],\"332\":[4,18],\"333\":[4,29],\"334\":[1],\"335\":[1,78],\"336\":[1,85],\"337\":[1],\"338\":[1,24],\"339\":[2,132],\"340\":[1,42],\"341\":[1,12],\"342\":[1,4],\"343\":[1,22],\"344\":[1],\"345\":[3,8],\"346\":[1,40],\"347\":[1,37],\"348\":[1,10],\"349\":[2],\"350\":[1,23],\"351\":[1,11],\"352\":[1,3],\"353\":[1],\"354\":[1,2],\"355\":[1,39],\"356\":[1],\"357\":[1,26],\"358\":[1,84],\"359\":[1,44],\"360\":[1,63],\"361\":[1,75],\"362\":[1,30],\"363\":[1,38],\"364\":[1,40],\"365\":[1,44],\"366\":[1,18],\"367\":[1,59],\"368\":[1,3],\"369\":[1,116],\"370\":[3],\"371\":[4,116],\"372\":[2,2],\"373\":[2],\"374\":[1,2],\"375\":[3],\"376\":[2],\"377\":[1,63],\"378\":[2,2],\"379\":[2,77],\"380\":[2],\"381\":[1,46],\"382\":[1,32],\"383\":[2,82],\"384\":[1,10],\"385\":[4,14],\"386\":[5,4],\"387\":[2,103],\"388\":[3,102],\"389\":[3,75],\"390\":[3,64],\"391\":[1,28],\"392\":[1,78],\"393\":[2,38],\"394\":[1,162],\"395\":[2,22],\"396\":[1,39],\"397\":[1,12],\"398\":[4],\"399\":[2,23],\"400\":[2,45],\"401\":[1,61],\"402\":[3,27],\"403\":[4,23],\"404\":[1,70],\"405\":[1,3],\"406\":[1]},\"averageFieldLength\":[2.38820638820639,56.3348720669371],\"storedFields\":{\"0\":{\"h\":\"主页\",\"t\":[\"关于微软官网的一些链接，中文是 zh-cn，英文是 en-us\"]},\"1\":{\"h\":\"\",\"t\":[\"书签备忘。\"]},\"2\":{\"h\":\"编程语言\"},\"3\":{\"h\":\"AssetBundle\",\"t\":[\"官方 AssetBundle - Manual。\"]},\"4\":{\"h\":\"Unity\",\"t\":[\"Unity 官方相关网站\",\"Unity 官网\",\"Unity 手册\",\"Unity 2022.3 中文手册\",\"Unity Assetstore\",\"Unity Technologies - Github\",\"Unity Learn\",\"Unity Blog\",\"Unity Best Practices(How-To)\",\"Unity 最佳实践(中文-HowTo)\"]},\"5\":{\"h\":\"Vue\",\"t\":[\"Vue.js\",\"Vue CLI\"]},\"6\":{\"h\":\"AI\"},\"7\":{\"h\":\"大模型\",\"t\":[\"网页版\",\"DeepSeek V3\",\"Kimi k2\",\"Qwen Chat - 3\",\"通义\",\"豆包\",\"Gemini - 2.5\",\"Google AI Studio\",\"模型下载\",\"HuggingFace\",\"HuggingFace - 国内镜像\",\"API\",\"Claude\",\"国内受限(注册/使用)\",\"Kimi k2\",\"DeepSeek\",\"API\",\"Google AI 开发者\",\"Google AI Studio\",\"阿里云百炼\",\"图生模型\",\"Tripo\",\"Trellis3D\",\"Trellis3D - Online\"]},\"8\":{\"h\":\"大模型 API 平台\",\"t\":[\"OpenRouter\"]},\"9\":{\"h\":\"IDE/Plugins\",\"t\":[\"Cursor\",\"Cline\",\"RooCode\",\"Continue\",\"Trae(字节)\",\"Trae下载(从文档进来的)\",\"Claude Code\",\"Claude Code Router\",\"Gemini-CLI\"]},\"10\":{\"h\":\"MCP\",\"t\":[\"MCP(ModelContextProtocol)\",\"MCP 示例\",\"MCP 官方汇总 - Github\",\"Awesome MCP Servers - Github\",\"Awesome MCP Servers - Web\"]},\"11\":{\"h\":\"开源库\",\"t\":[\"OpenPose\",\"nanoGPT\"]},\"12\":{\"h\":\"AI 工具网站\",\"t\":[\"LiblibAI\",\"OpenPoseEditor\",\"OpenPoseEditor - ZhuYu(推荐)\",\"LLM 3D 可视化\"]},\"13\":{\"h\":\"AI 排名\",\"t\":[\"LMArena AI模型评估\",\"LMArena Leaderboard(排行版)\",\"OpenRouter Leaderboard(API使用榜单)\"]},\"14\":{\"h\":\"AI 翻译\",\"t\":[\"吴恩达老师的反思式三步翻译法：AI 翻译 Prompt\",\"你是一位精通简体中文的专业翻译。请帮我将该 Markdown 文档翻译为中文，并另存为文件。 规则： 1. 翻译要遵循原文，不要随意扩展，也不要遗漏任何信息。 2. 保留原始 Markdown 格式。 3. 保留 Unity 及计算机等相关术语。 4. 翻译专业术语的时候，第一次出现要在括号里面写上英文原文，如：\\\"垃圾回收(Garbage Collector)\\\"，之后就可以只写中文了。 5. 人名不翻译。 6. 代码块不翻译。 7. Markdown 的引用以及链接不翻译。 8. 在保证内容的原意的基础上，尝试进行意译，使其更易于理解，更符合中文的表达习惯，同时保持原有的格式不变。 翻译不完整，请补全剩余部分。\"]},\"15\":{\"h\":\"AI\"},\"16\":{\"h\":\"ComfyUI\",\"t\":[\"ComfyUI\",\"ComfyUI-Github\",\"ComfyUI-Manager\",\"ComfyUI-GGUF\",\"ComfyUI-Crystools\"]},\"17\":{\"h\":\"Flux\",\"t\":[\"Flux 官网\",\"Flux - Github\",\"flux1-dev-fp8.safetensors\",\"Flux1-Dev Check Point\",\"已经包含了 TwoTextEncoders\",\"ConfyUI 中使用 Load CheckPoint 节点，ComfyUI/models/checkpoints/\",\"flux1-schnell-fp8.safetensors\",\"Flux1-Schnell Check Point\",\"flux1-schnell-Q4_K_S.gguf\",\"black-forest-labs/FLUX.1-schnell 量化模型\",\"ConfyUI 中使用 ComfyUI-GGUF 节点，放置目录 ComfyUI/models/unet\"]},\"18\":{\"h\":\"Android\",\"t\":[\"Android Developers\",\"Apktool\",\"Apktool - Github\",\"NDK 下载\",\"Java\"]},\"19\":{\"h\":\"Cocos\",\"t\":[\"官网\",\"Cocos\",\"Cocos - 官方文档\",\"Cocos - 3.10 API\",\"Cocos - 3.17 API\",\"Cocos - 4.00 API\",\"Cocos - 历史版本\",\"Cocos - Github\",\"Cocos - 资料大全\",\"Cocos2d-x 用户手册\",\"Cocos Blog\",\"Sofdec2 - 视频集成SDK\",\"TheoraPlayer - 跨平台的视频库\",\"Cocos2dx-lua 绑定之代码编辑器\",\"Cocos2dx-lua 开发环境搭建(让Lua具备代码提示等)\",\"Cocos2dx 的lua官方加密的解密方法\",\"Cocos2D-X shader(五)cocostudio导出界面置灰及复原lua实现版\",\"基于cocos2d-lua的shader入门玩转\",\"Cocos2dx-lua-tools\",\"Cocos2d_lua_snippets\",\"FormatLua\",\"UTF8字符串在lua的截取和字数统计\",\"Cocos creator mini game\",\"Cocos2dx RichText关于字符串截取的bug\",\"Cocos2d-x3.7 cclabel文字破碎，异常，变乱\",\"BabeLua 常见问题\",\"BabeLua 环境配置与代码调试\"]},\"20\":{\"h\":\"OpenGL\",\"t\":[\"官网\",\"OpenGL 2.0 Reference\",\"2010 OpenGL_SuperBible_5th_Edition(链接已失效)\",\"2015 OpenGL_SuperBible_7th_Edition(链接已失效)\",\"Vulkan\",\"工具\",\"Nvidia Nsight\",\"Adreno\",\"ARM - graphics-and-gaming\",\"调试\",\"Glblend 在线混合\",\"GL Shader在线编辑器1\",\"GL Shader在线编辑器2\",\"GL Shader在线编辑器3\",\"学习网站\",\"LearnOpenGL 英文原站\",\"LearnOpenGL Github\",\"LearnOpenGL 中文翻译\",\"GAMES101 - Bilibil\",\"GAMES101 - Games.cn\",\"Games202 - Games.cn\",\"Games202 - 论坛\",\"GAMES202\",\"Glad\",\"Shadertoy\",\"GlslSandbox\",\"RedblobGames\",\"PPT 切换 - 纯 Shader 实现\",\"BLOG\",\"欧拉角与万向节死锁\"]},\"21\":{\"h\":\"游戏开发\",\"t\":[\"游戏编程模式 - 中文在线\"]},\"22\":{\"h\":\"Unity\",\"t\":[\"官网\",\"Unity 官网\",\"Unity Manual\",\"Unity Assetstore\",\"Unity Technologies - Github\",\"Unity Learn\",\"Unity Blog\",\"Unity Best Practices(How-To)\",\"Unity 最佳实践(中文-HowTo)\",\"Unity 6 graphics learning resources\",\"Unity Download Archive\",\"官方示例\",\"ui-toolkit-manual-code-examples\",\"Addressables-Sample\",\"非官方下载网站\",\"NoUnityCN\",\"NoUnityCN - Github\",\"插件\",\"XLua\",\"Odin 官网\",\"Odin - 分组嵌套(Nesting Groups)\",\"DOTweenPro\",\"DOTween - Github\",\"Unity-UI-Extensions\",\"Airtest - UI自动化测试\",\"Alpha Mask: UI, Sprites, Tilemaps, Particles, 3D\",\"Best HTTP\",\"Easy Touch Controls - Hedgehog Team\",\"protobuf-net\",\"SharpZipLib\",\"com.unity.sharp-zip-lib\",\"Spine\",\"AVProVideo\",\"Unity-SerializableDictionary\",\"UnityUIOptimizationTool\",\"SolidUtilities - 常用工具集(是否包含某个Attribute)\",\"GraphViewBehaviorTree\",\"fullserializer - VisualScripting 使用的序列化工具\",\"luban\",\"luban_examples\",\"HybridCLR\",\"使用 UIBuilder GraphView 和 ScriptableObject 制作行为树插件\",\"UniTask\",\"Loxodon\",\"Newtonsoft.Json - Json序列化反序列化\",\"Lua\",\"lua-protobuf\",\"xLua\",\"build_xlua_with_libs\",\"tolua\",\"xlua-framework\",\"Miku-LuaProfiler\",\"Excel\",\"NPOI\",\"npoi-examples\",\"MiniExcel\",\"GraphView\",\"NewGraph\",\"XNode\",\"NodeGraphProcessor\",\"Framework\",\"Game Framework\",\"https://github.com/EllanJiang/GameFramework\",\"https://github.com/EllanJiang/UnityGameFramework\",\"https://github.com/EllanJiang/StarForce\",\"ET\",\"QFramework\",\"FairyGUI\",\"BDFramework.Core\",\"资源查看\",\"AssetStudio\",\"Asset Bundle Browser\",\"Il2CppDumper Unity il2cpp逆向工程\",\"项目\",\"Gobang 五子棋\",\"Gobang Github\",\"Slicol - 贪吃蛇\",\"BLOG\",\"腾讯手游优化之路\",\"雨松 MOMO\",\"毛星云 Blog - CSDN\",\"毛星云 Blog - 知乎\",\"Unity 优化图形渲染\",\"Unity 使用 Profiler 进行性能分析\",\"Unity 教你打造自己的 EventSystem(事件总线)\",\"Unity 从入门到精通\",\"Unity 场景中导出模型插件\",\"Unity 游戏开发从零单排(五) - 导入CS模型到Unity3D\",\"Unity-Design-Pattern - 毛星云 - Github\",\"How to EncodeToPng compressed Textures in Unity\",\"AI\",\"姿态识别 \",\"ThreeDPoseUnityBarracuda - 姿态识别\",\"MoCap VFX - 姿势识别\",\"MediaPipe\",\"MediaPipeUnityPlugin\",\"Unity MCP\"]},\"23\":{\"h\":\"Unreal\",\"t\":[\"官网\",\"UE5 官方文档\",\"Unreal Engine - Github\",\"Unreal Community\",\"Unreal Learning\",\"BLOG\",\"虚幻引擎学习资源汇总\"]},\"24\":{\"h\":\"C#\",\"t\":[\"官网\",\"C# 指南\",\"C# 规范\",\".Net API 浏览器\",\".NET Framework Source Code Online\",\"Dotnet 命令\",\"安装面向开发人员的 .NET Framework\",\"MVVM 工具包\",\"书籍\",\"C# in Depth\",\"工具\",\"CSharp - IL\"]},\"25\":{\"h\":\"Go\",\"t\":[\"官网\",\"官网\",\"Go 下载\",\"Go Doc\"]},\"26\":{\"h\":\"Lua\",\"t\":[\"官网\",\"Lua 官网\",\"Lua 5.4 Reference Manual\",\"Lua-Users\",\"SampleCode\",\"Programming in Lua\",\"Luajit\",\"Luadec lua逆向\",\"文档\",\"Cloudwu Lua5.3 中文文档\",\"BLOG\",\"Lua 5.1 代码阅读(八)：ldo.h/ldo.c\",\"从零开始实现 Lua 解释器之介绍\",\"C++ 与 Lua 交互之配置&交互原理&示例\",\"Lua and C/C + + Interoperation\",\"Lua 5.2 新版本可变长参数操作\",\"lua.natvis - VS Lua 调试\",\"VS2012以上版本 C++环境查看 Lua 5.1 栈/Global/Registry的可视化器\",\"Lua Parsing and Code Generation Internals\",\"Lua 源码分析\"]},\"27\":{\"h\":\"Python\",\"t\":[\"官网\",\"Python 2.7.18 中文文档\",\"Python 3.10.1 中文文档\",\"Python Documentation by Version\",\"Python 下载\",\"BLOG\",\"Python-输出cmd改变颜色\"]},\"28\":{\"h\":\"语言\"},\"29\":{\"h\":\"Rust\",\"t\":[\"官网\",\"Rust\",\"Rust - Github\",\"Rust开发的应用\",\"Bevy 游戏引擎\"]},\"30\":{\"h\":\"日常备忘\",\"t\":[\"工具类\",\"GeoGebra - 数学教学软件\",\"Wolframalpha - 知识在线问答工具\",\"矩阵计算器\",\"时间戳转换工具\",\"在线工具箱\",\"Unicode 编码表\",\"JSON格式化 - json.cn\",\"Json Editor Online\",\"在线 PhotoShop\",\"亿图在线作图\",\"亿图脑图\",\"ProcessOn\",\"语雀 - 笔记网站\",\"免费的在线文档翻译\",\"科学上网\",\"中国互联网络信息中心\",\"古诗词网\",\"对称艺术\",\"Mermaid\",\"Regex 正则在线测试\",\"Jetbra 测试码\",\"C# Online Compiler\",\"Deepseek\",\"Stackblitz - Online IDE\",\"色值查询预览\",\"游戏UI设计\",\"PDF 翻译\",\"下载狗 - 视频地址解析\",\"Undraw - UI 图标\",\"Iconpark - UI 图标\",\"图片在线拼接\",\"娱乐类\",\"JRKanKan\",\"樱花动漫1\",\"樱花动漫2\",\"知轩藏书\",\"游戏类\",\"SteamWorkShopDownloader\",\"How to download workshop mod's as non-steam user\",\"Repack-games\",\"风灵月影官网\",\"Steamcommunity 302 Ver.11.2\",\"皮卡丘打排球 - 游戏学习\",\"学习类网站\",\"C语言中文网\",\"极客学院\",\"泰课在线\",\"SIKI学院\",\"计算机图形学与混合现实研讨会\",\"LeetCode\",\"云风的BLOG\",\"云风的Github\",\"计算机组成原理\",\"aabao\",\"Linux\",\"Linux ssh命令详解\",\"VS\",\"Visual Assist\",\"OLEDLG-for-Visual-Assist-X\",\"书籍\",\"C++ Primer 5th Edition PDF Github\",\"C++ Primer 5th Edition PDF\",\"C Primer Plus 第六版 中文版\",\"C++ Primer Plus 第六版 中文版\",\"Game Programming Patterns 英文原版\",\"Game Programming Patterns 中文翻译\",\"插件\",\"AdBlock\",\"Infinity\",\"SC翻译\",\"Markdown Viewer\",\"Picture-in-Picture\",\"Save All Resources\",\"MaoXian web clipper\",\"租房\",\"水木社区\",\"链家\",\"贝壳\",\"豆瓣\",\"Kindle 书签\",\"Z-Library\",\"Bookfere\",\"Sobooks\",\"Amazon 免费Kinddle电子书\",\"SaltTiger\",\"Jiumodiary - 搜索\",\"Dalipan - 搜索\",\"技能\",\"游戏中的技能系统设计\",\"Dota2 Scripting\",\"Dota2 数据驱动类技能\",\"Category:AMHC 汉化\",\"玩家\",\"牌上的花色 – MUD中的玩家\",\"素材\",\"3D模型 sketchfab\",\"Wunderboy 破解软件下载\",\"Richwhitehouse\",\"Blender Source Tools\",\"Milkshape3d\",\"Blender\",\"Blender 参考手册\",\"Animation in Blender\",\"blender_io_mesh_bsp\",\"油小猴\",\"Wally\",\"Crowbar - GoldSource and Source Engine Modding Tool\",\"How to import whole .vmf map into Blender?\",\"SabreCSG - Source Engine VMF and Unreal Gold T3D Importer for Unity!\",\"CSM Source SDK\",\"Mdldecompiler\",\"Desirefx - 免费模型网站\",\"OpenGameArt - 免费的游戏素材\",\"Mixamo - 模型动画\",\"Mocaponline - 模型动画\"]},\"31\":{\"h\":\"Github\",\"t\":[\"Protobuf\",\"Lantern\",\"LeetCode All In One\",\"Unity Shaders Book\",\"Assimp - 模型加载库\",\"Lua-Protobuf\",\"Imgui\",\"Create GitHub Resource Download Link\",\"Simple Image Search Engine - 本地图片查找\",\"ASTC\"]},\"32\":{\"h\":\"杂项\"},\"33\":{\"h\":\"软件\",\"t\":[\"IDM repack\",\"SVN 中文文档\",\"Markdown Preview Enhanced\",\"Total Commander\",\"Total Commander 插件\",\"Sqlite\",\"Everything \",\"TeamViewer\",\"Drawio\",\"Cmder\",\"Edge 插件\",\"Gitbook\",\"Httrack\",\"Clumsy 网络模拟\",\"ShadowSocks\",\"Snipaste\",\"Notepad3\",\"Prince HTML > PDF\"]},\"34\":{\"h\":\"Sublime\",\"t\":[\"Packages\",\"Lua-Language-Server\",\"Sublimelsp\",\"Lsp doc\",\"Sumneko lua\",\"QuickXDev GithuB\",\"QuickXDev 作者博客\",\"CTags\",\"Tmtheme-editor\",\"Sublime License\"]},\"35\":{\"h\":\"设计模式\",\"t\":[\"游戏编程模式 - 中文在线\",\"设计模式 - 在线\",\"Clean Code\"]},\"36\":{\"h\":\"编程\"},\"37\":{\"h\":\"C#\"},\"38\":{\"h\":\"Go\",\"t\":[\"Go 官网\",\"Go 下载\",\"Go 文档\"]},\"39\":{\"h\":\"安装\",\"t\":[\"scoop install go\"]},\"40\":{\"h\":\"一、 性能优化 (Performance Optimization)\",\"t\":[\"面试 Unity 高级游戏客户端开发，面试官会期望你不仅精通 Unity 的各项功能，更在软件架构、性能优化、底层原理、和团队协作方面有深入的理解和实践经验。\",\"以下是一些可能遇到的高级面试题，分为几大类，并附上了答案要点。\",\"这是高级开发的核心。面试官会着重考察你定位和解决性能问题的能力。\"]},\"41\":{\"h\":\"Q1: 如果游戏出现卡顿(掉帧)，你的分析和解决思路是什么？\",\"t\":[\"答案要点:\",\"这是一个开放性问题，考察你的分析流程。\",\"定位问题：\",\"首先，使用 Unity Profiler 进行分析。\",\"CPU Usage 视图：查看是 CPU 卡顿还是 GPU 卡顿。\",\"CPU 瓶颈： 看 Update()、FixedUpdate()、LateUpdate() 中哪个函数占用高。 \",\"Update() (游戏逻辑): 检查是否有复杂的算法、过多的 GetComponent、FindObjectOfType、SendMessage 等。\",\"FixedUpdate() (物理): 检查 Physics.Update 占用是否过高，是否物理交互体过多，或者 Mesh Collider 过于复杂。\",\"Render.RenderLoop (渲染提交): 如果这里高，可能是 CPU 在准备数据给 GPU 时（例如 Culling、SetPass Calls）遇到了瓶颈。\",\"GC (垃圾回收): 检查 GC.Alloc 是否频繁。如果高，说明有大量临时内存分配，导致 GC 卡顿。\",\"GPU 瓶颈：\",\"使用 Profiler 的 GPU Usage 模块（或使用平台专用工具如 Frame Debugger, RenderDoc, Xcode Frame Debugger）。\",\"查看 Draw Calls (现在称为 SetPass Calls) 是否过多。\",\"查看 Overdraw (过度绘制) 是否严重，尤其是在 UI 和粒子特效上。\",\"查看 Fragment Shader (片元着色器) 是否过于复杂，纹理采样是否过多。\",\"解决问题 (根据定位)：\",\"CPU - 游戏逻辑:\",\"缓存组件： 在 Awake() 中缓存 GetComponent 的结果。\",\"对象池 (Object Pooling): 对频繁创建和销毁的对象（如子弹、特效）使用对象池，避免 Instantiate 和 Destroy 带来的 CPU 开销和 GC。\",\"算法优化： 优化循环、使用更高效的数据结构。\",\"CPU - 物理:\",\"简化 Mesh Collider，尽量使用 Primitive Collider (Box, Sphere)。\",\"调整 Physics Time Step (时间步长)。\",\"优化物理检测（如 Raycast）的频率和层级 (LayerMask)。\",\"CPU - 渲染提交 (Draw Calls):\",\"合批 (Batching):\",\"Static Batching: 对静态物体勾选 Static。\",\"Dynamic Batching: 对使用相同材质的小型动态物体（Unity 自动处理）。\",\"GPU Instancing: 绘制大量相同 Mesh（如草、树）。\",\"SRP Batcher (URP/HDRP): 确保材质兼容 SRP Batcher。\",\"图集 (Atlas): 将多个纹理合并到一张大图上，使物体能共享材质，从而进行合批。\",\"GPU - Overdraw / Fillrate:\",\"优化 UI：避免大面积透明 UI 重叠，使用 RectMask2D。\",\"优化粒子：减少粒子数量，使用更简单的 Shader，减小透明贴图面积。\",\"Shader： 优化 Shader，将复杂的计算从 Fragment Shader 移到 Vertex Shader。\",\"GC (垃圾回收):\",\"避免堆分配 (Heap Allocation):\",\"不要在 Update 中 new 对象。\",\"避免在循环中进行字符串拼接 (使用 StringBuilder)。\",\"缓存 yield return new WaitForSeconds(t) 对象。\",\"使用非分配的物理 API (如 Physics.RaycastNonAlloc)。\",\"Structs: 对小型数据结构使用 struct 代替 class。\"]},\"42\":{\"h\":\"Q2: Unity 中的 GC（垃圾回收）是如何工作的？你如何优化 GC？\",\"t\":[\"答案要点:\",\"工作原理: Unity 的 Mono/IL2CPP 使用Boehm GC（一种保守的垃圾回收器）或新版的SGen GC（分代 GC）。简单来说，它会定期扫描堆 (Heap) 上的内存，找出所有不再被栈 (Stack) 或静态变量引用的对象，然后释放它们。这个过程是自动的，但会暂停主线程，导致卡顿。\",\"优化 GC (核心是减少堆分配):\",\"对象池 (Object Pooling): 避免 Instantiate 和 Destroy。\",\"避免在 Update 中分配：\",\"new Class()\",\"字符串拼接：string a = \\\"a\\\" + \\\"b\\\"; (应使用 StringBuilder)。\",\"Lambda 表达式和闭包：如果闭包捕获了堆上的变量，可能会产生分配。\",\"foreach 循环：在某些旧版 Unity 中，foreach 对非泛型集合（如 ArrayList）会产生 GC（因为装箱 Boxing）。现在对 List<T> 等是安全的。\",\"gameObject.name 或 gameObject.tag：会产生一个新的 string 副本。\",\"使用 Structs: 对于临时数据或小型数据包，使用 struct 存放在栈上。\",\"缓存： 缓存 WaitForSeconds、数组等。\",\"增量 GC (Incremental GC): 在 Player Settings 中开启。它将 GC 的工作分摊到多个帧中执行，减少单帧的卡顿峰值，但会增加总体的 GC 开销。适用于追求平滑帧率的项目。\"]},\"43\":{\"h\":\"Q3: 什么是 Draw Call？如何减少 Draw Call？\",\"t\":[\"答案要点:\",\"定义: Draw Call (在现代 Unity 中常被称为 SetPass Call) 是 CPU 向 GPU 发送的一个 \\\"绘制\\\" 命令。例如：\\\"嘿，GPU，请使用这个 Shader、这个 Material、这组 Mesh 数据来画一个东西\\\"。\",\"瓶颈: 过多的 Draw Call 会耗尽 CPU 资源（因为 CPU 需要准备数据、切换渲染状态），导致 CPU 成为瓶颈，即使 GPU 很空闲。\",\"减少方法: 核心思想是让 GPU 一次绘制更多的东西。 \",\"合批 (Batching):\",\"Static Batching: (静态合批) 对共享相同 Material 的静态物体，在构建时将其 Mesh 合并成一个大 Mesh。缺点是增加内存占用。\",\"Dynamic Batching: (动态合批) 引擎自动对共享相同 Material 的小 Mesh（顶点数有限）动态合并。有 CPU 开销。\",\"GPU Instancing: (GPU 实例化) 一次 Draw Call 绘制成百上千个相同的 Mesh（使用不同的位置、颜色等）。非常适合绘制草、树、石头。\",\"SRP Batcher (URP/HDRP): URP/HDRP 下的新技术。如果 Shader 兼容，它能高效地将使用不同 Material（但相同 Shader）的 Draw Call 打包。\",\"纹理图集 (Texture Atlasing): 将多个物体的纹理合并到一张大图（图集）中，这样它们就可以共享同一个 Material，从而使合批成为可能。\",\"高级开发需要具备搭建大型、可维护项目框架的能力。\"]},\"44\":{\"h\":\"Q1: 你如何设计一个游戏的 UI 框架？\",\"t\":[\"答案要点: 这是一个考察架构能力的开放性问题。没有标准答案，但好的答案应包含以下几点：\",\"解耦 (Decoupling): 使用 MVC, MVP 或 MVVM 模式。 \",\"View: UGUI Prefab 和挂载的脚本，只负责显示和接收输入。\",\"Presenter / ViewModel: 中间层，负责业务逻辑（如点击按钮后做什么），并连接 View 和 Model。\",\"Model: 纯数据层（如玩家数据、背包数据）。\",\"目标： View 和 Model 完全分离，更换 UI（View）不需要修改逻辑（Presenter）。\",\"层级管理 (Layer Management):\",\"需要一个 UIManager 来管理 UI 的显示层级。\",\"例如：背景层 (HUD)、常规窗口层 (背包)、弹出层 (提示框)、顶层 (加载遮罩)。\",\"窗口栈 (Window Stack):\",\"管理窗口的打开和关闭顺序，支持 \\\"返回\\\" 操作，类似 Android 的 Activity 栈。\",\"资源管理 (Resource Management):\",\"UI Prefab 应通过 Addressables 或 AssetBundle 异步加载，而不是放在场景中或 Resources 文件夹。\",\"管理 UI 的加载和卸载，避免内存占用过高。\",\"事件系统 (Event System):\",\"使用全局事件总线 (Event Bus)（例如基于 ScriptableObject 的事件或 C# event）来解耦 UI 系统和其他游戏系统（如玩家死亡、获得物品）的通信。\"]},\"45\":{\"h\":\"Q2: 什么是 ScriptableObject (SO)？你会在什么场景下使用它？\",\"t\":[\"答案要点:\",\"定义:ScriptableObject 是 Unity 中一种可以创建实例并保存为项目资产 (.asset) 的数据容器。它继承自 UnityEngine.Object 但不依附于 GameObject。\",\"使用场景 (核心价值：数据与逻辑分离):\",\"游戏配置数据: 存储不常变化的数据，如武器配置、敌人属性、关卡数据。设计师可以直接在 Project 窗口修改这些 .asset 文件，而不需要动场景或 Prefab。\",\"共享数据: 多个 MonoBehaviour 可以引用同一个 SO 实例。例如，一个 PlayerStats SO 可以在多个场景中被引用，作为共享的玩家数据（注意：运行时修改 SO 会直接修改.asset 文件，通常只用于读取配置）。\",\"创建\\\"事件\\\"资产 (Event Channel): 可以创建一个 GameEvent 类型的 SO，游戏中的物体 A 可以 \\\"Raise\\\" 这个事件，物体 B 可以 \\\"Listen\\\" 这个事件。A 和 B 互不知道对方，完全解耦。\",\"插件或系统的配置: 很多插件（如 URP 的 Render Pipeline Asset）本身就是一个 SO，用于存储复杂的配置。\"]},\"46\":{\"h\":\"Q3: 谈谈你对 ECS (DOTS) 的理解？它解决了什么问题？\",\"t\":[\"答案要点:\",\"ECS (Entity Component System) 是什么: 是一种面向数据 (Data-Oriented) 的编程范式，与 Unity 传统的面向对象 (Object-Oriented, GameObject-Component) 相对。 \",\"Entity (实体): 一个 ID，一个\\\"空壳\\\"。\",\"Component (组件):纯数据，通常是 struct (如 Position, Velocity)。没有方法。\",\"System (系统):纯逻辑，负责处理具有特定组件组合的 Entities（如 MovementSystem 负责更新所有带 Position 和 Velocity 的实体）。\",\"解决了什么问题 (核心：性能):\",\"CPU 缓存命中率 (Cache Locality): 传统 OOP 中，GameObject 在内存中是分散的。ECS 会将同类数据（如所有的 Position）连续存储在内存块 (Archetype Chunks) 中。\",\"数据访问： CPU 访问连续内存（如遍历一个 Position 数组）远快于访问分散内存（遍历 GameObject 列表，再逐个 GetComponent<Transform>().position）。\",\"多线程 (C# Job System): 由于数据和逻辑分离，且数据布局规整，ECS 非常适合与 C# Job System 结合，轻松实现大规模并行计算（如上万个单位的移动），充分利用现代 CPU 的多核。\",\"考察对 Unity 工作流和 C#高级特性的理解。\"]},\"47\":{\"h\":\"Q1: Unity 的 C# 脚本后端 Mono 和 IL2CPP 有什么区别？\",\"t\":[\"答案要点:\",\"Mono:\",\"使用 JIT (Just-In-Time) 编译（在 PC 等平台）或 AOT (Ahead-of-Time) 编译（在 iOS 等平台）。\",\"它将 C#代码编译为 .NET 中间语言 (IL)。运行时，Mono 的虚拟机 (runtime) 负责执行这些 IL 代码。\",\"优点： 编辑器下编译快。\",\"缺点： 运行效率通常低于 IL2CPP，且在某些平台（如 iOS、主机）受限制（必须 AOT）。\",\"IL2CPP (Intermediate Language To C++):\",\"Unity 的自研技术。它分两步： \",\"将 .NET IL 代码转换为 C++ 代码。\",\"使用目标平台的原生 C++编译器（如 Clang, MSVC）将 C++代码编译为本地机器码。\",\"优点：\",\"高性能： C++编译优化后，通常比 Mono 运行更快。\",\"跨平台： 支持所有平台，是 iOS 和主机的唯一选择。\",\"代码安全： C++代码更难被反编译。\",\"缺点： 编译时间（尤其是 C++编译阶段）比 Mono 长。\"]},\"48\":{\"h\":\"Q2: 什么是值类型 (Value Type) 和引用类型 (Reference Type)？ 和 的区别？\",\"t\":[\"答案要点:\",\"值类型 (Value Type):\",\"如 int, float, bool, Vector3, 以及自定义的 struct。\",\"存储： 变量本身直接存储数据。通常（但不总是）分配在栈 (Stack) 上。\",\"传递： 按值传递。当赋值或作为参数传递时，会复制一份完整的数据。\",\"引用类型 (Reference Type):\",\"如 string, Array, List<T>, 以及自定义的 class (包括所有 MonoBehaviour)。\",\"存储： 变量存储的是一个指向数据实际位置的引用（地址）。数据本身存储在堆 (Heap) 上。\",\"传递： 按引用传递（技术上是按值传递引用）。当赋值或传递时，只复制引用（地址），它们指向堆上同一份数据。\",\"高级应用 (面试官想听的):\",\"性能：struct 可以避免 GC，因为它们通常在栈上。但如果 struct 过大，按值复制的开销（memcpy）可能会高于传递一个引用。\",\"装箱 (Boxing): 将值类型（如 int）转换为引用类型（如 object）的过程。例如 object o = 10;。这会在堆上分配内存并产生 GC，应在性能敏感代码中避免。\",\"struct vs class 的选择： 当数据结构很小（如 Vector3）、逻辑简单、且希望按值复制时，使用 struct。其他情况（如 MonoBehaviour、需要继承、需要复杂逻辑）使用 class。\"]},\"49\":{\"h\":\"Q3: Unity 中的协程 (Coroutine) 和 C# 的 有什么区别？\",\"t\":[\"答案要点:\",\"协程 (Coroutine):\",\"本质： Unity 实现的迭代器 (Iterator) 模式。yield return 会保存当前函数的执行状态，并在下一帧（或指定时间后）从该点继续。\",\"线程： 始终运行在主线程上。它只是将任务分片到不同的帧，不是多线程。\",\"用途： 非常适合处理游戏中的时间相关逻辑（如 \\\"等待 2 秒后执行\\\"、\\\"播放动画时等待\\\"）。\",\"缺点： 依赖 MonoBehaviour (必须由它启动)，代码嵌套（回调地狱）时可读性差。\",\"async/await (Task):\",\"本质： C# 语言层面的异步编程模型 (TAP)。\",\"线程：async 方法开始时在当前线程（通常是主线程）。当 await 一个 可以 在后台运行的任务时（如 Task.Run()、HttpClient.GetStringAsync()），它会释放主线程，让主线程继续工作。任务完成后，await 后续的代码会（默认）切回主线程继续执行。\",\"用途： 非常适合处理 I/O 操作（如网络请求、读写文件），或将 CPU 密集型计算（使用 Task.Run）抛到线程池中执行，避免阻塞主线程。\",\"总结： 协程用于主线程的时间分片。async/await 用于真正的异步/并发，处理 I/O 或利用多核。\",\"高级开发需要理解渲染管线，并能与 TA（技术美术）协作。\"]},\"50\":{\"h\":\"Q1: 解释一下 URP (Universal Render Pipeline) 和内置管线 (Built-in) 的主要区别。\",\"t\":[\"答案要点:\",\"内置管线 (Built-in):\",\"Unity 的传统管线。\",\"特点： \\\"黑盒\\\"，定制性差。渲染路径主要是前向渲染 (Forward Rendering) 和延迟渲染 (Deferred Rendering)。\",\"缺点： 扩展困难，性能优化（如合批）依赖旧技术。\",\"URP (Universal Render Pipeline):\",\"可编程渲染管线 (SRP) 的一种。\",\"特点：\",\"可定制： 通过 C#脚本（Renderer Features）可以轻松注入自定义的渲染通道。\",\"性能/跨平台： 专为移动端到 PC 端的全平台优化。\",\"渲染： 主要使用单通道前向渲染 (Single-Pass Forward Rendering)，在 VR 中效率很高。\",\"工具： 深度集成了 Shader Graph 和 VFX Graph。\",\"SRP Batcher： 提供了更高效的合批机制。\"]},\"51\":{\"h\":\"Q2: 什么是 Shader？Vertex Shader (顶点着色器) 和 Fragment Shader (片元/像素着色器) 分别做什么？\",\"t\":[\"答案要点:\",\"Shader: 是一段运行在 GPU 上的小程序。它告诉 GPU 如何获取 Mesh 数据（顶点、UV、法线等）并最终将其渲染到屏幕上的像素。\",\"Vertex Shader (顶点着色器):\",\"输入： 模型的单个顶点数据（如模型空间坐标、UV、法线）。\",\"运行： 模型的每个顶点都会运行一次。\",\"核心工作：坐标变换。将顶点坐标从模型空间 (Model Space) 转换到世界空间 (World Space)，再到视图空间 (View Space)，最后到裁剪空间 (Clip Space)。\",\"其他： 也可以处理顶点动画，并将 UV、法线等数据传递给片元着色器。\",\"Fragment (Pixel) Shader (片元/像素着色器):\",\"输入： 从 Vertex Shader 传递过来的插值数据（如 UV、世界法线）和光栅化后确定的屏幕像素位置。\",\"运行： 模型覆盖到的每个屏幕像素都会运行一次。\",\"核心工作：计算颜色。根据 UV 坐标采样纹理，结合法线和光照信息，计算该像素的最终颜色 (Color)。\",\"性能： Fragment Shader 通常是 GPU 的瓶颈，因为屏幕像素远多于模型顶点。复杂的计算（如多重纹理采样、复杂光照）应尽量避免。\"]},\"52\":{\"h\":\"Q1: 你在项目中遇到的最困难的技术挑战是什么？你是如何解决的？\",\"t\":[\"答案要点: 这是考察你解决实际问题能力和经验深度的。你需要准备一个真实、具体、有深度的例子。\",\"STAR 法则:\",\"S (Situation): 项目背景是什么？（例如：一个百人同屏的 MMO 项目）\",\"T (Task): 遇到的具体技术难题是什么？（例如：同屏人数一多，帧率暴跌至 10 帧）\",\"A (Action): 你采取了哪些具体行动？（例如：使用 Profiler 定位到是Animator.Update和 Draw Calls 过高 -> 我设计了一套 LOD（细节层次）系统，远处的玩家关闭 Animator，并使用烘焙的静态 Mesh -> 同时与 TA 合作，将所有玩家的装备合并材质，使用图集和 GPU Instancing -> ...）\",\"R (Result): 结果如何？（例如：帧率稳定在 30 帧，同屏承载能力从 30 人提升到 100 人）。\"]},\"53\":{\"h\":\"Q2: 你如何进行代码审查 (Code Review)？你关注哪些点？\",\"t\":[\"答案要点:\",\"功能性 (Functionality): 代码是否正确实现了需求？\",\"可读性 (Readability): 命名是否规范？逻辑是否清晰？注释是否必要且准确？\",\"性能 (Performance): 是否有明显的性能陷阱？（如在 Update 中 GetComponent、产生 GC 等）。\",\"架构 (Architecture): 是否遵循了项目的设计规范？（如 MVC/MVP，是否正确使用了事件系统）。\",\"可维护性 (Maintainability): 是否有\\\"坏味道\\\"（Bad Smell）？（如超大函数、重复代码）。\",\"态度： 作为高级开发，CR 时应对事不对人，提出建设性意见，而不是批评。\",\"高级 Unity 面试 = 优化深度 + 架构广度 + 底层原理 + 解决问题的经验。准备好你最得意的项目，并能清晰地阐述你在其中扮演的关键角色和技术决策。祝你面试顺利！\"]},\"54\":{\"h\":\"面试题与答案（专家视角）\",\"t\":[\"你好。作为一名在 Unity 一线有多年经验的开发者，我很高兴能和你聊聊。高级（Senior）职位不仅意味着“知道怎么做”，更意味着你知道 为什么这么做、权衡（Trade-offs）是什么以及如何带领团队做得更好。\",\"我的面试会比较深入，重点考察你在性能、架构和底层原理上的理解。我们开始吧。\"]},\"55\":{\"h\":\"第一部分：性能优化（硬核）\",\"t\":[\"这是高级开发的立身之本。你必须是团队里的性能“消防员”和“架构师”。\",\"Q1: 我们的游戏在手机上发热严重，帧率在复杂场景下掉到 20 帧。Profiler 显示 CPU Usage 很高。你的详细排查步骤（SOP）是什么？\",\"专家期待的答案（要点）：\",\"第一步：区分瓶颈。 打开 Profiler，首先看 CPU Usage 和 GPU Usage。既然 CPU 高，我会看主线程（Main Thread）的时间轴。\",\"第二步：定位 CPU 峰值。\",\"Update() 及其子项： 查看是否有过多的游戏逻辑。重点检查 Find、GetComponent、复杂的循环、或者 SendMessage。\",\"Render.RenderLoop（Culling / Batching）： 如果这里高，说明 CPU 在“准备数据给 GPU”时遇到了瓶颈。这通常意味着 Draw Calls 太多了。我会立即检查 Frame Debugger。\",\"Physics.Update： 物理模拟是否过载？是不是有不必要的 Mesh Collider 或者 Raycast 过于频繁？\",\"GC.Alloc： 检查是否有不该有的堆内存分配。在 Update 中哪怕只有几 K 的分配，累积起来都会导致 GC（垃圾回收）卡顿。\",\"第三步：针对性解决（举例）。\",\"GC 问题： 我会立刻检查是否有 string 拼接、new 关键字、LINQ、闭包（Lambda）或者“装箱”（Boxing）。解决方案是：使用 StringBuilder、缓存、使用对象池（Object Pooling）、以及使用 struct 或非分配 API（如 Physics.RaycastNonAlloc）。\",\"Draw Call 问题（来自 Render.RenderLoop）： 我会检查： \",\"合批（Batching）： 静态物体是否勾选 Static？动态物体能否共享材质以触发动态合批？\",\"GPU Instancing： 是否有大量重复的 Mesh（如草、树）没有启用 Instancing？\",\"URP/HDRP： 是否正确配置了 SRP Batcher？（要求 Shader 兼容）。\",\"UI： UGUI 的 Canvas 是否被频繁重建（Rebuild）？是否有多个 Canvas 可以合并？\",\"逻辑问题（来自 Update）：\",\"算法： 是否有 O(n²)的循环可以优化？\",\"缓存：GetComponent 和 Camera.main 这种是否在 Awake() 中缓存了？\",\"LOD（Level of Detail）： 远处的 AI 和动画（Animator）是否还在高频更新？我会实现一个 LOD 系统，远处只更新位置，甚至不更新。\",\"追问：如果你发现 GC 是主要问题，但开启 Incremental GC（增量 GC）后，总 CPU 时间反而变长了，你怎么解释？\",\"专家期待的答案： 增量 GC 的原理是“化整为零”。它把一次大的 GC 暂停（Stop-the-World）分散到多个帧去执行。这能消除单帧的峰值卡顿，让画面更平滑。但是，GC 的总工作量（包括标记、切换上下文）是变多了的，所以总 CPU 占用会上升。这是一个典型的**用“总时长”换“平滑度”**的权衡。对于需要稳定帧率的 VR 或动作游戏，这是值得的；但对于总电量敏感的放置类游戏，可能就不划算了。\"]},\"56\":{\"h\":\"第二部分：架构与设计模式\",\"t\":[\"高级开发要为项目的可维护性和扩展性负责。\",\"Q2: 我们要做一个类似《原神》的开放世界游戏。你需要设计一个“任务系统”和“背包系统”。你会如何设计，让它们既能独立工作，又能低耦合地交互（比如“任务要求玩家拥有 3 个苹果”）？\",\"专家期待的答案（要点）：\",\"数据驱动（Data-Driven）： 我会大量使用 ScriptableObject (SO)。 \",\"任务（Quest）： 每个任务是一个 QuestSO。它包含任务 ID、描述、前置任务、以及“完成条件”。\",\"物品（Item）： 每个物品是一个 ItemSO。它包含物品 ID、图标、描述、类型（消耗品、装备、任务物品）。\",\"核心管理器（Managers）：\",\"InventoryManager (背包)：负责维护一个 Dictionary<ItemSO, int> 来存储玩家拥有的物品数量。\",\"QuestManager (任务)：负责维护玩家当前的任务列表（List<QuestState>）。\",\"解耦（Decoupling）—— 这是关键：\",\"事件总线（Event Bus）/ 消息系统： 我会建立一个全局的事件系统。 \",\"当 InventoryManager 物品数量变化时，它会触发一个事件，例如 OnInventoryChanged(ItemSO item, int newAmount)。\",\"QuestManager 会订阅这个事件。\",\"任务系统的工作流：\",\"QuestManager 在 Update（或定时）检查当前激活任务的“完成条件”。\",\"“完成条件”本身也应该被抽象。比如一个 ICheckCondition 接口，它有一个 Check() 方法。\",\"对于“检查 3 个苹果”这个条件，它会有一个 CheckItemCondition 类。它的 Check() 方法会去查询InventoryManager.GetItemCount(appleSO) 是否 >= 3。\",\"为什么这样好？\",\"低耦合：InventoryManager 完全不知道 QuestManager 的存在。它只管发事件。\",\"可扩展： 明天我可以轻松加入 AchievementManager（成就系统），它也去订阅 OnInventoryChanged 事件来检查“收集 100 个苹果”的成就，而不需要改动背包系统的任何代码。\",\"可测试： 我可以独立测试 InventoryManager，模拟添加物品并验证事件是否正确触发。\",\"追问：你提到了 ScriptableObject。它和 MonoBehaviour 最大的区别是什么？你为什么选择它来存数据？\",\"专家期待的答案：MonoBehaviour 必须依附于 GameObject 存在于场景或 Prefab 中，它有生命周期（Awake, Update）。而 ScriptableObject 是一个数据容器资产（.asset），它独立于场景存在。\",\"我选择它的原因是： \",\"解耦： 设计师（策划）可以直接在 Project 窗口修改这些 .asset 文件（如物品属性、任务配置），而不需要打开场景、找到对应的 GameObject，极大地提高了效率。\",\"共享与引用： 多个系统（背包、商店、任务）都可以引用同一个ItemSO 资产。它们比较的是引用，而不是 string ID，效率高且不易出错。\",\"内存： 它们不会像 GameObject 那样在 Instantiate 时产生大量开销。\"]},\"57\":{\"h\":\"第三部分：C# 与引擎底层\",\"t\":[\"高级开发必须深入理解语言和引擎的“黑盒”。\",\"Q3: Unity 的协程 (Coroutine) 和 C# 的 async/await (Task) 都能处理异步。请深入对比它们，并说明在什么场景下你会优先选择哪个？\",\"专家期待的答案（要点）：\",\"本质区别：\",\"协程 (Coroutine)： 是 Unity 实现的一种迭代器 (Iterator) 模式。它在主线程上运行，通过 yield return 将任务挂起，并在下一帧（或指定时间后）在主线程上继续执行。它本质上是时间分片（Time-slicing），不是多线程。\",\"async/await (Task)： 是 C#语言层面的异步编程模型。它可以（但非必须）在后台线程（线程池）中执行任务（如使用 Task.Run），并在 await 完成后自动切回主线程（如果 await 是在主线程发起的）。这是真正的异步/并发。\",\"选择场景：\",\"优先使用协程 (Coroutine)：\",\"游戏逻辑的时序控制： “等待 2 秒后开门”、“播放动画，等动画播完后执行下一步”。这种与 Unity 生命周期紧密绑定的、必须在主线程执行的顺序逻辑，用协程最直观。\",\"依赖 MonoBehaviour： 协程的启动（StartCoroutine）和生命周期管理（GameObject 销毁时自动停止）都依赖 MonoBehaviour，在写游戏逻辑时很方便。\",\"优先使用 async/await (Task)：\",\"非主线程的 CPU 密集计算： 比如复杂的寻路算法、大地图的生成、数据的序列化/反序列化。我会用 Task.Run(() => {...}) 把它们丢到后台线程，计算完成后 await 结果，在主线程更新 UI。这能防止主线程卡死。\",\"I/O 操作： 如网络请求（HttpClient.GetAsync）、读写磁盘（File.ReadAllBytesAsync）。这些操作在等待时，async/await 会释放线程，效率远高于协程（协程会一直占用主线程“空等”）。\",\"非 MonoBehaviour 的纯 C#逻辑层： 在架构中，如果我的核心系统（如网络层、数据层）是纯 C#类，不依赖 Unity，那么使用 async/await 是标准做法，也更利于单元测试。\",\"追问：IL2CPP 是如何工作的？它为什么通常比 Mono 快？\",\"专家期待的答案： IL2CPP (Intermediate Language To C++) 是 Unity 的脚本后端。\",\"工作流： 1. 它首先将 C# 编译后的 IL（中间语言）字节码 转换 成 C++ 代码。 2. 然后，它调用目标平台（如 iOS 的 Clang，Windows 的 MSVC）的原生 C++编译器，将这些 C++代码编译成本地机器码。\",\"为什么快：\",\"AOT (Ahead-of-Time)： 与 Mono 的 JIT（Just-in-Time，运行时编译）不同，IL2CPP 是 AOT（提前编译）。它在构建时就完成了所有编译，运行时没有 JIT 的开销。\",\"C++ 编译器优化： 原生的 C++编译器（如 Clang）经过几十年的发展，其代码优化能力（如内联、循环展开）通常比 Mono 的 JIT 引擎更强。\",\"泛型优化： IL2CPP 在转换为 C++时，可以为值类型泛型（如 List<int>）生成特化代码，避免了 Mono 中可能发生的装箱（Boxing）和运行时泛型开销。\"]},\"58\":{\"h\":\"第四部分：渲染与图形学\",\"t\":[\"高级开发需要能和 TA（技术美术）无缝对接，并定位渲染瓶颈。\",\"Q4: URP (Universal Render Pipeline) 和内置管线 (Built-in) 相比，你认为它最大的优势是什么？以及，什么是 SRP Batcher？它为什么能提升性能？\",\"专家期待的答案（要点）：\",\"URP 最大优势：\",\"可定制性： 这是 SRP（可编程渲染管线）的核心。URP 允许我们通过 Renderer Features 轻松地在渲染循环中注入自定义的 Pass（如后处理、描边）。而在内置管线中，这需要用 OnRenderImage 或复杂的 CommandBuffer，非常 hack。\",\"透明和统一： 相比内置管线的“黑盒”，URP 的代码是开放的，并且为所有平台（从移动端到 PC）提供了统一的渲染路径和光照模型。\",\"工具集成： 深度集成了 Shader Graph 和 VFX Graph。\",\"SRP Batcher（关键）：\",\"它是什么： URP/HDRP 下的一种新的合批机制。\",\"解决什么问题： 在内置管线中，Draw Call 的主要 CPU 开销在于设置渲染状态（SetPass Call）。切换不同的 Material（即使 Shader 相同）也会打断合批，因为 GPU 需要加载不同的材质属性（如颜色、贴图）。\",\"工作原理： SRP Batcher 将所有兼容的 Material 属性（如 _Color, _MainTex）统一收集到一个**巨大的 GPU 缓冲区（CBuffer）**中。\",\"如何提升性能： 当渲染使用**相同 Shader（但不同 Material）**的物体时，GPU 不再需要切换状态或加载新数据。它只需要从那个大缓冲区中根据偏移量（Offset）读取该物体的材质属性即可。CPU 只在每帧开始时上传一次这个大缓冲区，渲染时几乎没有 SetPass 的开销，极大地降低了 CPU 在 Render.RenderLoop 上的耗时。\",\"追问：如果 SRP Batcher 要生效，对 Shader 和 Material 有什么要求？\",\"专家期待的答案：\",\"Shader 必须兼容： Shader 中所有的属性（CBuffer）必须声明在 CBUFFER_START(UnityPerMaterial) 块内。所有使用 Shader Graph 创建的 URP Shader 默认都是兼容的。\",\"Mesh 必须是 Mesh 或 SkinnedMesh： 不能是粒子系统（粒子系统有自己的合批方式）。\",\"Material 必须使用同一个 Shader： 或者使用该 Shader 的变体（Variant）。\"]},\"59\":{\"h\":\"第五部分：情景与软技能\",\"t\":[\"Q5: （情景题）你接手了一个老项目。团队里一位初级开发提交了 Code Review，你发现他为了实现一个功能，在 Update 里使用了 GameObject.Find 和 string.Format。你会如何处理这次 Code Review？\",\"专家期待的答案（要点）：\",\"这考察的是技术领导力和团队协作，而不只是找茬。\",\"态度（首要）：对事不对人。我会首先肯定他完成了功能（Good job on getting this feature working.），然后再提出问题。\",\"指出问题（指出“What”）： 我会明确指出两个性能隐患点： \",\"GameObject.Find：在 Update 中每帧调用非常耗时，它是全场景遍历。\",\"string.Format (或 + 拼接)：每帧都会产生新的 string 对象，导致不必要的 GC。\",\"解释原因（解释“Why”）： 我会简要解释为什么这很糟糕。“Find 会拖慢 CPU，而 string 分配会引发 GC，导致游戏在低端设备上卡顿。”\",\"给出解决方案（给出“How”）：\",\"对于 GameObject.Find：建议他在 Awake() 或 Start() 中查找一次，并将结果缓存在一个私有字段中。\",\"对于 string.Format：如果这个字符串是用于 UI 显示，我会问他：“这个 UI 真的需要每帧都更新吗？”。如果需要，我会建议他使用 StringBuilder 来构建字符串，或者如果只是拼接数字，使用 int.ToString()（它在某些情况下有缓存）。\",\"拔高（Senior 的价值）： 我不会只停留在这个 PR。我会在评论中 @ 团队所有人，或者在周会上分享：“提醒大家注意，Update 中要避免 Find 和 string 拼接。我们可以建立一个团队的‘性能最佳实践’文档，把这个加进去。”\",\"总结： 目标不是“驳回”他的代码，而是帮助他成长，并提升整个团队的质量标准。\"]},\"60\":{\"h\":\"1. (宏观诊断) 性能攻坚的系统性思维\",\"t\":[\"你好。作为一名专家级（Expert-level）的开发者，我很高兴能与你（Senior-level）进行交流。高级开发不仅意味着能独立完成任务，更意味着你具备架构设计、性能攻坚、风险预估和指导他人的能力。\",\"我准备的这10个问题会混合考察你的技术深度（Depth）和知识广度（Breadth）。我们开始吧。\",\"问题: “你接手一个项目，在目标中端机上运行复杂场景时，帧率从60 FPS掉到了25 FPS。Profiler显示 Main Thread 耗时约40ms，其中 Render.RenderLoop 占了20ms，Update 占了10ms，GC.Alloc 每帧有5KB。\",\"请问：\",\"你如何系统性地分析这个性能问题？\",\"Render.RenderLoop 占用20ms，你如何判断这究竟是CPU的锅，还是GPU的锅？\",\"针对 GC.Alloc，你有哪些可立即执行的优化手段？”\",\"考察点:\",\"广度: 考察候选人是否具备从CPU、GPU、内存三个维度全面诊断问题的能力。\",\"深度:\",\"Render.RenderLoop 是个陷阱。它高，可能是CPU在准备数据（Culling, SetPass calls）时过载，也可能是CPU在等待GPU完成上一帧（Gfx.WaitForPresent）。候选人必须知道如何用Profiler或Frame Debugger区分这两者。\",\"对GC的理解是否深入，是否能立刻想到是字符串、闭包、LINQ等问题。\",\"问题: “在设计一个大型游戏（例如MMORPG）时，你需要处理大量系统间的通信。比如：\",\"背包系统 (Inventory)\",\"任务系统 (Quest)\",\"成就系统 (Achievement)\",\"UI系统 (UI)\",\"当玩家‘获得一个稀有物品’时，背包需要更新，任务系统需要检查是否完成‘收集任务’，成就系统需要检查是否解锁‘收藏家’成就，UI需要弹出提示。\",\"请你设计一个解耦的通信方案。请对比 C# event、UnityEvent 和 基于ScriptableObject的Event Channel 这三种方案的优缺点，并说明你在这种场景下会最终选择哪一个，为什么？”\",\"考察点:\",\"架构能力: 是否理解“观察者模式”和“事件总线”。\",\"深度:\",\"C# event：性能最高，但有C#层面的强引用，容易导致内存泄漏，且不方便策划配置。\",\"UnityEvent：方便策划在Inspector里拖拽引用，但有性能开销，且依然存在耦合。\",\"SO Event Channel：真正的“总线”，完全解耦（发布者和订阅者互不知晓），资产化管理。\",\"高级候选人应能清晰地分析这三者的性能、内存、易用性和解耦程度的权衡（Trade-offs）。\",\"问题: “Unity的协程 (Coroutine) 和 C# 的 async/await (Task) 都可以处理异步流程。\",\"请从实现原理和线程模型上，深入对比二者。\",\"你需要实现两个功能：(A) 从服务器异步下载一个5MB的资源包；(B) 让一个UI元素在2秒内从透明渐变到不透明。\",\"你会分别为(A)和(B)选择哪种技术？为什么？\",\"如果在 Update 中 await Task.Yield()，会发生什么？”\",\"考察点:\",\"深度:\",\"协程是Unity主线程上的迭代器（Iterator），是时间分片，不是多线程。\",\"async/await 是C#的异步编程模型，await 后的代码默认会通过 UnitySynchronizationContext 切回主线程，但 Task 本身（如 Task.Run）可以在线程池中执行。\",\"(A) 适合 async/await（I/O密集型，不阻塞主线程）。(B) 适合协程（与Unity生命周期和时间紧密绑定）。\",\"await Task.Yield() 会将执行权交还给主线程，并在同一帧的稍晚时间点继续执行，这与 yield return null（等到下一帧）是完全不同的。\",\"问题: “URP (Universal Render Pipeline) 带来了 SRP Batcher。\",\"它和传统的 Static Batching / Dynamic Batching 的核心区别是什么？\",\"SRP Batcher 号称能极大降低Draw Call中的CPU开销，它的实现原理是什么？（提示：CBuffer）\",\"要让 SRP Batcher 生效，你对项目中的Shader和Material有什么硬性要求？”\",\"考察点:\",\"渲染深度: 这是区分中高级开发的关键点。\",\"传统合批是“合并Mesh”。\",\"SRP Batcher 是“合并CBuffer”。它将所有Material的属性（UnityPerMaterial CBuffer）打包到一块大的GPU内存中。渲染时，CPU不再需要为每个Material切换CBuffer（这是SetPass的主要开销），只需告诉GPU一个偏移量（offset）即可。\",\"要求：所有Material必须使用兼容SRP Batcher的同一个Shader（或其变体）。\",\"问题: “1. struct (值类型) 一定分配在栈 (Stack) 上吗？请举出一个 struct 分配在堆 (Heap) 上的反例。 2. foreach 循环在迭代 List<T> 和 T[] (数组) 时，底层的实现（和性能）有何不同？ 3. 在性能极度敏感的代码中（例如每帧执行1000次），使用 foreach 循环迭代一个 List<int>，你担心GC吗？为什么？”\",\"考察点:\",\"C#深度: 对C#底层的理解。 \",\"struct 作为 class 的成员变量时，它分配在堆上。struct 被“装箱”（Boxing）时，也分配在堆上。\",\"List<T>.GetEnumerator() 返回的是一个 struct（List<T>.Enumerator）。T[] 则是直接优化为 for 循环和索引器。\",\"List<T>.Enumerator 是 struct，它实现了 IDisposable。在 foreach 中使用不会产生GC（除非被装箱）。这是一个常见的误区，高级开发者必须澄清。\",\"问题: “你为什么会推荐团队从传统的 AssetBundle (AB) 工作流迁移到 Addressable Asset System (AAS)？\",\"Addressables (AAS) 相比手动管理 AssetBundle，解决了哪些核心痛点？\",\"AAS的“Label”和“Group”是如何影响最终的AB包体结构和依赖关系的？\",\"如果一个 Material (M) 引用了一个 Texture (T)，M在A组，T在B组，当你只加载M时，会发生什么？”\",\"考察点:\",\"工程化广度: 是否有大型项目的资源管理经验。\",\"痛点：手动AB需要开发者自己管理依赖关系（AssetBundleManifest），非常繁琐。AAS自动处理依赖，并解耦了“资产寻址”和“资产打包”。\",\"依赖：AAS会分析依赖。加载M时，会自动加载其依赖的AB包（B组），所以T也会被加载。高级开发者应理解这种隐式依赖。\",\"问题: “Unity引入了 C# Job System (C# JS) 来利用多核CPU。\",\"为什么 C# JS 必须使用 NativeContainer (如 NativeArray)，而不能直接访问托管对象（如 List<T> 或 class）？\",\"这背后的内存安全机制（Safety System）是如何工作的？（提示：Race Condition）\",\"请描述一个你认为最适合使用 C# JS 的具体游戏场景。”\",\"考察点:\",\"多线程知识:\",\"为了线程安全和性能。托管对象由GC管理，在多线程中访问它们会产生“竞态条件”（Race Conditions）。\",\"NativeContainer 分配在非托管内存中，不受GC影响。\",\"Unity的Safety System会在Editor下检测多线程对同一 NativeContainer 的“同时读写”或“同时写”操作，并抛出异常，强制开发者处理依赖关系（JobHandle）。\",\"场景：大规模寻路（A*）、大量单位的Boids算法、Mesh的程序化生成、大规模物理计算等。\",\"问题: “1. 请详细解释 Update 和 FixedUpdate 的核心区别和各自的适用场景。 2. 为什么所有与 Rigidbody 相关的操作（如 AddForce, MovePosition）都强烈建议在 FixedUpdate 中执行？如果在 Update 中执行会怎样？ 3. 如果我的游戏物理帧率（Fixed Timestep 设为 0.02s，即50Hz）低于渲染帧率（例如100 FPS），Rigidbody 的运动看起来会卡顿（Stutter）。请问根本原因是什么？你如何解决这个问题？”\",\"考察点:\",\"引擎底层:\",\"Update 随渲染帧率变化，FixedUpdate 以固定时间步长调用。\",\"物理引擎以 FixedUpdate 的步长进行模拟。如果在 Update 中施加力，力的施加会不均匀（帧率高时施加次数多），导致物理效果不确定。\",\"根本原因： 物理模拟在 0.02s, 0.04s, 0.06s... 时刻更新位置。而渲染在 0.01s, 0.02s, 0.03s... 时刻。在 0.03s 时渲染的还是 0.02s 的物理位置，导致画面在两个物理帧之间是“静止”的。\",\"解决： 开启 Rigidbody 上的 Interpolation（插值）。它会使渲染的物体“平滑”地从上一个物理位置移动到当前物理位置。\",\"问题: “你遇到了一个棘手的渲染BUG：一个模型在场景中完全不可见。 但是你检查了：\",\"GameObject 和 MeshRenderer 都是激活的。\",\"Material 和 Shader 都设置正确，不是透明Shader。\",\"模型不在 Camera 的近裁或远裁平面之外。\",\"请你至少列出 5 种可能导致这个问题的其他原因，并说明你的排查思路。”\",\"考察点:\",\"渲染广度: 对渲染管线中各种“遮挡”和“剔除”的理解。\",\"可能原因：\",\"Culling Mask: 相机的 Culling Mask 没有包含该物体的 Layer。\",\"Shader问题: Vertex Shader 中把顶点移出了屏幕（例如 vert 函数写错）。\",\"Z-Test: Shader的ZTest设置成了 Always 并且被其他物体遮挡，或者ZWrite设置成了 Off 导致无法写入深度。\",\"Render Queue: Render Queue 设置不当（例如在 Geometry 队列之前就被天空盒覆盖）。\",\"Frustum Culling: 模型的 Mesh.bounds (包围盒) 不正确，导致摄像机认为它在视锥体外，提前剔除了。\",\"遮挡剔除 (Occlusion Culling): 如果开启了遮挡剔除，可能它被错误地标记为“被遮挡”。\",\"Scale:Transform 的 scale 被设置为了0。\",\"问题: “你作为团队的高级开发，在进行 Code Review (CR) 时，发现一位初级开发者提交的代码中，为了实现一个UI功能，在 Update 里每帧都执行了 GetComponent 和 string.Format。\",\"你的 CR评论 会怎么写？（请具体说明你的沟通方式）\",\"你如何确保这类低级性能问题在未来不再重复出现？”\",\"考察点:\",\"团队领导力: 高级开发不仅要自己写好代码，还要提升整个团队的水平。\",\"沟通方式:\",\"对事不对人。先肯定（“功能实现是OK的”），再指出问题（“我注意到这里有两个性能隐患”）。\",\"清晰解释“Why”：解释 GetComponent 的耗时和 string.Format 的GCAlloc会如何导致卡顿。\",\"给出“How”：提供具体解决方案（“请在 Awake 中缓存这个组件”，“对于字符串拼接，请使用 StringBuilder 或其他非分配方式”）。\",\"建立标准（Senior的职责）：\",\"文档化： 建立团队的《性能开发规范》Wiki。\",\"工具化： 引入静态代码分析工具（如 Roslyn Analyzer），在CI/CD流程中自动检测这类问题。\",\"分享： 组织技术分享会，定期宣讲最佳实践。\"]},\"61\":{\"h\":\"🔍 问题详解与回答思路\",\"t\":[\"了解你可能面对的 Unity 面试问题并做好准备，能让你在面试中更加从容自信。我为你整理了一份常见且重要的 Unity 面试问题清单，并附上了参考答案和备考建议，希望能助你一臂之力。\",\"下面这个表格汇总了 Unity 面试中经常考察的几个技术方向及核心问题，你可以先快速了解一下：\",\"技术领域\",\"核心面试问题\",\"Unity 基础概念\",\"MonoBehaviour 生命周期，碰撞器与触发器的区别，Prefab（预制件）的作用\",\"C# 编程基础\",\"值类型与引用类型，垃圾回收（GC）机制与优化，委托与事件\",\"性能优化\",\"对象池技术，Draw Call 优化，GC 优化策略\",\"资源与热更新\",\"AssetBundle 的管理与卸载，热更新方案（如 ILRuntime、HybridCLR）\",\"图形与物理\",\"相机分层渲染原理，FixedUpdate 的作用，坐标转换（世界坐标、屏幕坐标等）\"]},\"62\":{\"h\":\"🧱 Unity 核心概念\",\"t\":[\"请简述 MonoBehaviour 的生命周期，并说明 Awake()、Start()、Update()、FixedUpdate() 和 OnDestroy() 的用途与区别。\",\"Awake()：脚本实例被创建时调用，常用于初始化变量或设置脚本间的引用。无论脚本是否启用（enabled）都会执行。\",\"Start()：在脚本第一次启用后，在第一次 Update() 之前调用。常用于依赖其他对象初始化完成的逻辑。\",\"Update()：每一帧调用一次，是处理游戏主要逻辑的地方。但要注意避免在此处进行复杂计算，以免导致帧率下降。\",\"FixedUpdate()：在固定的时间间隔调用，与帧率无关。主要用于物理计算（如 Rigidbody 的操作），以保证物理模拟的稳定性。\",\"OnDestroy()：当对象被销毁时调用，用于清理资源，如取消事件监听。\",\"碰撞器（Collider）和触发器（Trigger）的区别是什么？\",\"碰撞器：当 Is Trigger = false 时，碰撞器会根据物理引擎产生真实的碰撞效果（如物体被弹开），可以调用 OnCollisionEnter/Stay/Exit 系列函数。\",\"触发器：当 Is Trigger = true 时，碰撞器不会被物理引擎处理，物体可以相互穿过，用于检测重叠事件，可以调用 OnTriggerEnter/Stay/Exit 系列函数。\",\"核心区别：一个参与物理模拟，一个仅用于检测。\"]},\"63\":{\"h\":\"💻 C# 编程与内存管理\",\"t\":[\"C# 中值类型（Value Type）和引用类型（Reference Type）的主要区别是什么？\",\"存储位置：值类型通常分配在栈（Stack） 上，而引用类型实例分配在堆（Heap） 上，变量本身（引用）存储在栈中。\",\"传递方式：值类型在赋值或传递参数时是传递副本；引用类型是传递引用（指向同一块内存）。\",\"例子：结构体（struct）是值类型，类（class）是引用类型。在需要避免 GC（垃圾回收）压力的性能敏感处，可考虑使用 struct。\",\"在 Unity 中，如何优化以减少垃圾回收（GC）？\",\"使用对象池（Object Pool）：对于频繁创建和销毁的对象（如子弹、敌人），通过池化技术复用对象，避免频繁的内存分配与回收。\",\"避免不必要的堆分配：在 Update 等高频方法中，避免使用字符串拼接（改用 StringBuilder）、闭包以及匿名方法，这些都可能产生 GC Alloc。\",\"使用值类型：在合适场景下，使用 struct 代替 class，因为值类型在栈上分配，离开作用域后自动释放，不会给 GC 带来负担。\",\"委托和事件缓存：如果委托会被频繁添加/移除，可以考虑缓存委托实例，避免重复创建。\"]},\"64\":{\"h\":\"⚙️ 性能优化与实践\",\"t\":[\"请说明对象池（Object Pool）的概念、适用场景及简单实现思路。\",\"概念：对象池是预先创建好一组对象并存储在一个集合中的管理系统。当需要时从池中取出，不用时放回池中，而非直接销毁，从而实现对象的复用。\",\"适用场景：任何需要频繁实例化和销毁的 GameObject，如子弹、特效、敌人等。\",\"实现思路：通常使用 Stack<T> 或 Queue<T> 来存储空闲对象。提供一个 Get 方法从池中取出（或创建）对象，一个 Release 方法将对象放回池中并重置状态。\",\"Unity 中的 Draw Call 是什么？如何优化？\",\"是什么：CPU 每次准备并命令 GPU 渲染一个物体的过程。Draw Call 过多会成为 CPU 的性能瓶颈。\",\"优化方法： \",\"静态批处理（Static Batching）：将不会移动的静态物体合并成一个大的网格，用一个 Draw Call 渲染。限制：需要物体使用相同的材质，可能会增加内存占用。\",\"动态批处理（Dynamic Batching）：Unity 自动将满足条件的小型网格物体（顶点数少于 900）在同一帧动态合并。限制：要求严格，如相同材质、相同缩放等。\",\"使用图集（Atlas）：将多个纹理合并到一张大图上，让多个物体共享同一个材质，这是合批的前提。\"]},\"65\":{\"h\":\"🔧 资源管理与高级特性\",\"t\":[\"AssetBundle 的作用是什么？加载和卸载时需要注意什么？\",\"作用：用于打包和管理游戏资源，便于热更新、按需加载和资源分包。\",\"注意事项： \",\"加载：使用 AssetBundle.LoadFromFile 或 UnityWebRequestAssetBundle 进行异步加载，避免卡顿。\",\"卸载：使用 AssetBundle.Unload(true) 会卸载 AssetBundle 及其创建的所有资源，但如果场景中仍有引用会导致资源丢失。使用 false 参数则只卸载 AssetBundle 文件本身。通常更安全的做法是管理好资源的引用，在确保不再需要时调用 Unload(true)。\",\"Unity 中有哪些热更新方案？它们的原理是什么？\",\"方案：常见的包括 ILRuntime、HybridCLR 等。\",\"原理：这些方案的核心都是在 AOT（静态编译）平台（如 iOS）上，动态地加载和执行 C#代码。ILRuntime 通过 C#实现的一个虚拟机来解释执行 IL 代码；而 HybridCLR 则通过扩展 Unity 的 Native 运行时，实现了真正的 IL2CPP 运行时动态加载 DLL 的能力。此外，也常配合 Lua 这类脚本语言进行逻辑热更。\"]},\"66\":{\"h\":\"💡 面试备考建议\",\"t\":[\"深入理解原理：面试官不只想听“是什么”，更想听“为什么”。例如，不仅要知道怎么用协程，还要理解其基于迭代器的实现原理与主线程的关系。\",\"结合项目经验：准备一些你如何在实际项目中解决具体技术难题或进行性能优化的案例，这比空谈理论更有说服力。例如，你可以描述如何使用 Profiler 定位性能瓶颈并实施优化。\",\"保持思维活跃：对于场景题（例如“如何设计一个水果忍者切水果的机制？”），大胆地和面试官沟通，展示你的问题分析能力和设计思路，这比直接给出答案更重要。\",\"希望这份问题清单和解答思路能帮助你系统地准备面试。记住，扎实的技术基础、清晰的逻辑表达和解决实际问题的能力，是你通过面试的关键。\",\"如果你对某个特定领域（比如 Shader 编程、网络同步或特定的项目经历）有更深入的疑问，我很乐意提供更进一步的信息。\",\"作为准备面试 Unity 高级游戏客户端开发的你，确实需要系统地梳理可能遇到的面试问题。我为你整合了网络上的高频面试题和参考答案，希望能帮助你更有针对性地进行准备。\",\"下面这个表格汇总了常见的考察方向和核心问题，你可以先快速了解一下：\",\"考察方向\",\"核心面试问题\",\"Unity 引擎基础\",\"MonoBehaviour 生命周期，Prefab（预制件）的作用，碰撞检测原理\",\"C# 与内存管理\",\"值类型与引用类型，垃圾回收（GC）机制及优化，委托与事件的区别\",\"性能优化\",\"对象池技术，Draw Call 优化，GC 优化策略\",\"架构与设计\",\"状态机设计，ECS 架构，网络同步（状态同步 vs 帧同步）\",\"资源与热更新\",\"AssetBundle 管理与卸载，Lua 基础\",\"算法与底层\",\"排序算法，数据结构（如 List 底层），四叉树等空间划分算法\"]},\"67\":{\"h\":\"🔍 Unity 引擎核心\",\"t\":[\"请详述 MonoBehaviour 的生命周期中，Awake、Start、Update、FixedUpdate 和 LateUpdate 的调用顺序与用途？\",\"Awake：脚本实例被创建时调用，无论脚本是否启用。通常用于初始化变量或建立脚本间的引用。\",\"Start：在脚本第一次启用后，在第一次 Update 之前调用。常用于依赖其他对象初始化完成的逻辑。\",\"Update：每一帧调用一次，是处理游戏主要逻辑（如输入、非物理移动）的地方。\",\"FixedUpdate：在固定的物理时间步长调用，与帧率无关。主要用于物理计算（如对 Rigidbody 的操作），以保证物理模拟的稳定性。\",\"LateUpdate：在所有 Update 执行完毕后同一帧调用。常用于相机跟随，确保相机在对象移动后再更新。\",\"碰撞器（Collider）和触发器（Trigger）的区别是什么？\",\"碰撞器：当 Is Trigger = false 时，碰撞器会根据物理引擎产生真实的碰撞效果（如物体被弹开），可以调用 OnCollisionEnter/Stay/Exit 系列函数。\",\"触发器：当 Is Trigger = true 时，碰撞器不会被物理引擎处理，物体可以相互穿过，用于检测重叠事件，可以调用 OnTriggerEnter/Stay/Exit 系列函数。\",\"核心区别：一个参与物理模拟并产生阻挡，一个仅用于检测穿透。\"]},\"68\":{\"h\":\"💻 C# 编程与内存管理\",\"t\":[\"C# 中值类型（Value Type）和引用类型（Reference Type）的主要区别是什么？在函数参数传递时有何不同？\",\"存储位置：值类型通常分配在栈（Stack） 上，而引用类型实例分配在堆（Heap） 上，变量本身（引用）存储在栈中。\",\"传递方式：值类型在赋值或作为参数传递时是传递副本；引用类型是传递引用（指向同一块内存）。\",\"修改方式：若需在函数内修改值类型变量的值，需使用 ref 或 out 关键字按引用传递。\",\"在Unity中，如何优化以减少垃圾回收（GC）？\",\"使用对象池（Object Pool）：对于频繁创建和销毁的对象（如子弹、敌人），通过池化技术复用对象，避免频繁的内存分配与回收。\",\"避免在高频代码中产生堆分配：在 Update 等高频方法中，避免使用字符串拼接（改用 StringBuilder）、闭包以及部分 LINQ 查询，这些都可能产生 GC Alloc。\",\"使用值类型：在合适场景下，使用 struct 代替 class，因为值类型在栈上分配，离开作用域后自动释放，不会给GC带来负担。\",\"注意装箱拆箱：避免值类型与 object 类型之间的频繁转换，这会产生临时垃圾对象。对于需要频繁使用的值类型（如积分），可以考虑使用泛型集合或预装箱策略。\"]},\"69\":{\"h\":\"⚙️ 性能优化与实践\",\"t\":[\"对象池（Object Pool）在闲置对象过多时如何优化？\",\"除了基本的池化，高级优化包括：\",\"动态回收机制：为对象池中的闲置对象设定一个时间阈值，当闲置时间超过阈值时，自动将其从池中移除并销毁，以释放资源。\",\"限制池大小：为对象池设置一个最大容量，防止在特定峰值下创建过多对象，导致后续长期闲置。当池满后，新的回收请求可以直接销毁对象。\",\"Unity 中的 Draw Call 是什么？有哪些优化方法？\",\"是什么：CPU 每次准备并命令 GPU 渲染一个物体的过程。Draw Call 过多会成为 CPU 的主要性能瓶颈。\",\"优化方法： \",\"静态批处理（Static Batching）：将不会移动的静态物体合并成一个大的网格，用一个 Draw Call 渲染。限制：需要物体使用相同的材质，可能会增加内存占用。\",\"动态批处理（Dynamic Batching）：Unity 自动将满足条件的小型网格物体（顶点数少于900）在同一帧动态合并。限制：要求严格，如相同材质、相同缩放等。\",\"GPU Instancing：适用于绘制大量相同的物体（如草、树），允许在一个 Draw Call 中渲染多个实例，但对物体形态变化有要求。\",\"使用图集（Atlas）：将多个纹理合并到一张大图上，让多个物体共享同一个材质，这是实现合批的前提。\"]},\"70\":{\"h\":\"🔧 架构设计与高级特性\",\"t\":[\"请设计一个高效的角色状态机系统。\",\"数据结构：使用哈希表（Dictionary）存储状态名与状态对象的映射。每个状态应包含 Enter, Exit, Update 方法，以及检查状态转换条件的方法。\",\"状态切换：在 ChangeState 方法中，确保先调用旧状态的 Exit，再设置新状态并调用其 Enter。\",\"优化：可以使用委托或事件来解耦状态间的转换条件，使系统更灵活。避免在状态类的 Update 中编写冗长的条件判断。\",\"AssetBundle 加载和卸载时需要注意什么？\",\"加载：使用 AssetBundle.LoadFromFile（异步版）或 UnityWebRequestAssetBundle 进行异步加载，避免主线程卡顿。\",\"卸载：AssetBundle.Unload(false) 和 AssetBundle.Unload(true) 是关键。 \",\"Unload(false)：只卸载 AssetBundle 文件本身，但已经从中加载出来的资源（如 Texture、GameObject）会保留在内存中。\",\"Unload(true)：强烈建议的用法。会卸载 AssetBundle 文件以及它创建的所有资源。但必须确保这些资源没有任何引用（例如场景中没有对象在使用这个纹理），否则会导致资源丢失（变成粉色）。\",\"最佳实践：建立引用计数机制或依赖管理，确保在资源完全不被使用时才调用 Unload(true)。\"]},\"71\":{\"h\":\"🧠 其他高频考点\",\"t\":[\"网络：UDP 和 TCP 的区别（连接性、可靠性、效率）是基础。在此基础上，可能会问如何基于不可靠的 UDP 实现可靠传输（如添加序列号、确认应答、重传机制），以及状态同步和帧同步的区别与应用场景。\",\"Lua 热更：如果岗位要求或你简历中提及，需准备 Lua 的 pairs 与 ipairs 区别、如何用元表实现面向对象、闭包 等基础问题。\",\"算法与数据结构：排序算法（快排的原理、时间复杂度）、数据结构（如 List 的底层是数组，其增删改查的效率）是常客。高级岗位可能涉及 四叉树/八叉树 等空间划分算法用于碰撞检测优化。\"]},\"72\":{\"h\":\"💡 面试准备建议\",\"t\":[\"深入理解原理：面试官不只想听“是什么”，更想听“为什么”和“如何实现”。例如，不仅要会使用协程，最好能理解其基于 C# 迭代器的实现原理。\",\"结合项目经验：准备几个你如何在实际项目中解决具体技术难题、进行性能优化或设计复杂系统的案例。使用 STAR（情境-任务-行动-结果）法则来组织你的回答，这会非常有说服力。\",\"保持思维活跃：对于场景题（例如“如何设计水果忍者切水果的机制？”），大胆地和面试官沟通，展示你的问题分析能力、设计思路和权衡考量，这比直接给出一个“正确”答案更重要。\",\"希望这份整合的面试题集能帮助你构建清晰的知识脉络，充满信心地迎接挑战。祝你面试顺利！\",\"如果你对某个特定领域（如 Shader 编程、特定类型的游戏系统设计等）有更深入的疑问，我很乐意提供进一步的信息。\"]},\"73\":{\"h\":\"🚀 高级 Unity 客户端面试宝典\",\"t\":[\"你好！作为一名经验丰富的高级 Unity 客户端程序，我能理解你对即将到来的面试的重视。高级职位的面试会着重考察你的系统架构能力、性能攻坚经验、底层引擎原理以及技术领导力。\",\"我为你准备了一份“高级面试宝典”，涵盖了最常被问到的、有深度和广度的问题，以及作为高级开发者应该给出的答案要点。\"]},\"74\":{\"h\":\"第一部分：性能优化与诊断（必考硬核）\",\"t\":[\"序号\",\"面试问题\",\"高级答案要点（应包含原理和权衡）\",\"Q1\",\"【GC 攻坚】 如何系统地追踪和消除游戏中的 GC (垃圾回收) 峰值？请至少列出五种常见的 GC Alloc 场景及其解决方案。\",\"追踪: 专门在 Profiler 中关注 GC.Alloc 模块。消除核心: 避免在 Update、LateUpdate 或循环中产生堆内存分配。* 五种场景与解决: * 1. 字符串拼接: 使用 StringBuilder 或直接缓存。* 2. foreach 遍历非泛型集合: 使用 for 循环或将集合泛型化 (List<T>)。* 3. 协程 yield return new WaitForSeconds(): 缓存 WaitForSeconds 对象。* 4. LINQ: 避免在热代码中使用 LINQ（会产生闭包和迭代器对象）。* 5. Lambda 表达式 / 闭包: 捕获外部变量的闭包会在堆上分配对象。尽量用事件或委托替代。* 高级: 讨论 增量 GC (Incremental GC) 的权衡（提高总 CPU 耗时，但分散单帧卡顿峰值）。\",\"Q2\",\"【渲染瓶颈】 Profiler 显示 Render.RenderLoop 耗时过高。如何判断瓶颈在 CPU 还是 GPU？如果是 CPU 瓶颈，你会如何解决？\",\"判断:Render.RenderLoop 高通常是 CPU 瓶颈。它代表 CPU 在执行剔除、几何体提交、设置渲染状态（Draw Calls / SetPass Calls）。如果是 GPU 瓶颈，Profiler 中 WaitForTargetRender 或 Gfx.WaitForPresent 会更高，或 GPU 视图高。* CPU 瓶颈解决方案 (降低 Draw Call): * 1. 合批: 确保正确使用了 Static Batching、Dynamic Batching 和 GPU Instancing。* 2. 优化 UI: 使用图集（Atlas）、控制 Canvas 重建（Rebuild）频率，避免不必要的 GraphicRaycaster。* 3. SRP Batcher (URP/HDRP): 确保材质和 Shader 兼容 SRP Batcher，以最小化 SetPass Calls。* 4. 视锥体/遮挡剔除: 优化 Camera.cullingMask 和 Occlusion Culling 配置。\",\"Q3\",\"【物理同步】 请解释为什么物理相关的操作（Rigidbody.AddForce 等）应该在 FixedUpdate 中执行？当物理时间步长和渲染帧率不同时，如何保证运动的平滑性？\",\"FixedUpdate: 物理引擎的模拟周期是固定的，依赖 FixedUpdate 来保证模拟的确定性和稳定性。在 Update 中施加力会导致力施加的频率不均匀，物理效果不稳定。* 平滑性: 当渲染帧率 > 物理帧率时，运动会出现“卡顿”。* 解决: 启用 Rigidbody 的 插值 (Interpolation) 模式（如 Interpolate 或 Extrapolate）。这会在渲染帧中对物理位置进行平滑过渡或预测，使视觉效果流畅。\"]},\"75\":{\"h\":\"第二部分：架构与设计模式（考察可维护性和扩展性）\",\"t\":[\"序号\",\"面试问题\",\"高级答案要点（应包含原理和权衡）\",\"Q4\",\"【系统解耦】 在一个大型项目中，你如何设计一套通信机制来解耦游戏系统（如，玩家数据变化如何通知 UI、任务和成就系统）？请对比 C# Action/Event 和 基于 ScriptableObject 的事件系统（Event Channel） 的优缺点。\",\"解耦目标: 发布者（如玩家数据）不应知道订阅者（UI、任务系统）的存在。* C# Action/Event: * 优点: 性能极高，语言原生支持。* 缺点: 发布者和订阅者之间存在强引用（易导致内存泄漏），且在跨场景、生命周期管理上较麻烦。* SO Event Channel: * 优点:完全解耦（零引用），资产化管理（策划或设计师可配置），生命周期易管理（只要 SO 在内存中）。* 缺点: 性能略低于原生 C# Event，实现稍复杂。* 选择: 在大型、需要高可配置性和可维护性的项目中，我会优先选择 SO Event Channel 作为核心消息总线。\",\"Q5\",\"【数据驱动】 谈谈你对 ScriptableObject (SO) 的理解，并在你的架构中给出至少三个 SO 的高级应用场景。\",\"理解: SO 是一种数据容器资产，独立于 GameObject 和场景。其核心价值在于数据与逻辑分离。* 高级应用: * 1. 游戏配置数据: 存储敌人属性、技能配置、关卡配置等，供策划直接编辑。* 2. 运行时共享数据: 创建一个 PlayerStatsSO，多个 MonoBehaviour 引用同一个实例，作为跨场景的共享数据源。* 3. 事件总线: 如 Q4 所述，创建 GameEventSO 来实现系统间的低耦合通信。* 4. 状态机 (SO-based State Machine): 用 SO 来定义状态和状态转换，使状态机逻辑清晰、可复用。\",\"Q6\",\"【ECS/DOTS】 作为一个高级开发者，你如何看待 Unity 的 DOTS (Data-Oriented Tech Stack)，以及它核心的 ECS (Entity Component System) 解决了传统 OOP (GameObject) 架构的哪些根本性问题？\",\"理解: DOTS 是面向数据的技术栈，旨在利用现代 CPU 多核和内存架构提升性能。* ECS 解决的问题 (核心是性能): * 1. CPU 缓存命中率 (Cache Locality): 传统 GameObject 的组件数据在内存中是分散的。ECS 将同类型组件数据（如所有单位的 Position）连续存储在内存块中，使得 CPU 在处理数据时缓存命中率极高，效率大幅提升。* 2. 多线程优化: 数据和逻辑分离，且数据规整，天然适合 C# Job System 进行大规模并行计算，充分利用多核 CPU。* 3. 零 GC 压力: 组件通常是 struct（值类型），存储在非托管内存中（通过 NativeArray），避免了托管内存的 GC 压力。\"]},\"76\":{\"h\":\"第三部分：引擎与语言底层（考察原理与深入理解）\",\"t\":[\"序号\",\"面试问题\",\"高级答案要点（应包含原理和权衡）\",\"Q7\",\"【IL2CPP】 C# 脚本后端从 Mono 切换到 IL2CPP 的意义是什么？请解释 IL2CPP 的工作原理和它带来的性能优势。\",\"意义: IL2CPP 是 Unity 的跨平台解决方案，尤其是对 iOS 和主机平台（因其不允许 JIT 即时编译）。* 工作原理:1. 将 C# 编译后的 IL（中间语言）转换为 C++ 代码。 2. 使用目标平台的原生 C++ 编译器（如 Clang）将 C++ 代码编译成机器码。* 性能优势: * AOT (Ahead-of-Time): 所有代码在构建时编译成高度优化的机器码，运行时性能优于 Mono JIT。* 原生 C++ 编译器优化: 可以利用更成熟的 C++ 编译器优化技术。* 泛型优化: 更好地处理值类型泛型，避免不必要的装箱（Boxing）。\",\"Q8\",\"【资源管理】 你为什么会推荐使用 Addressable Asset System (AAS) 而不是手动管理 AssetBundle？AAS 是如何解决 AssetBundle 的依赖管理问题的？\",\"核心痛点: 手动 AB 最大的问题是依赖管理和寻址。* AAS 优势: * 1. 逻辑寻址: 通过字符串地址或 Label 寻址，与资源实际的打包位置解耦。* 2. 自动依赖管理: AAS 在构建时自动生成依赖关系图。当你加载一个资源时，它会自动识别并加载所有所需的 AB 包，解决了手动管理 AssetBundleManifest 的繁琐和易错性。* 3. 运行时加载模式切换: 可以轻松切换本地加载和远程加载。\",\"Q9\",\"【着色器】 请解释 Vertex Shader (顶点着色器) 和 Fragment Shader (片元着色器) 的主要职责和性能权衡。你会在什么情况下把计算逻辑从 Fragment Shader 转移到 Vertex Shader？\",\"职责: * Vertex Shader: 运行于每个顶点。主要职责是进行坐标变换（将模型空间坐标转换到裁剪空间）和计算光照信息、将数据传递给 Fragment Shader。* Fragment Shader: 运行于每个像素（或片元）。主要职责是计算最终的颜色，包括采样纹理、应用光照模型。* 性能权衡: 屏幕上的像素数量远多于顶点数量，所以 Fragment Shader 往往是 GPU 的主要瓶颈 (Fillrate)。* 转移情况: 当计算结果在顶点之间可以平滑插值，且不需要逐像素精度时（例如简单的模型动画、非精确的光照法线），将计算从 Fragment 转移到 Vertex，可以大幅减少计算量。\"]},\"77\":{\"h\":\"第四部分：软技能与领导力\",\"t\":[\"序号\",\"面试问题\",\"高级答案要点（应包含原理和权衡）\",\"Q10\",\"【Code Review 与技术标准】 你在 Code Review 中发现一个明显的性能隐患（如在 Update 中使用 GameObject.Find）。作为高级开发者，你的 CR 评论应该怎么写，才能既解决问题，又能提升初级/中级开发者的水平？\",\"沟通原则:对事不对人，重在教育和赋能。* CR 评论结构: * 1. 肯定: “功能实现没问题，做得很好！”* 2. 指出问题: “我注意到你在 Update 中使用了 GameObject.Find。”* 3. 解释原因 (Why): “Find 会遍历整个场景，在热代码中会导致严重的 CPU 瓶颈。”* 4. 给出方案 (How): “请在 Awake() 或 Start() 中查找一次并缓存结果。”* 5. 拔高（建立标准）: “这是一个常见的性能陷阱。我将把这个点加入到我们的《项目性能规范》中，希望大家未来都能注意。”* 后续行动: 将此问题纳入团队的技术分享或自动化静态代码检查，从源头上解决问题。\",\"下一步，你想让我帮你演练一下其中某一类（例如“性能优化”）的问题，并给你更具体的场景题吗？\",\"太棒了！作为一名高级 Unity 游戏客户端程序，你会被期待具备扎实的基础知识、丰富的实战经验、优秀的问题解决能力和系统架构思维。\",\"以下是可能被问到的问题以及相应的回答思路，我将它们分为几个主要类别：\"]},\"78\":{\"h\":\"🚀 一、 Unity 核心知识与引擎特性\"},\"79\":{\"h\":\"1.\",\"t\":[\"问题： 请详细描述 Unity 脚本的生命周期函数（如 Awake, Start, Update, FixedUpdate, LateUpdate 等）及其执行顺序，特别是在一个复杂的场景中。\",\"回答要点：\",\"顺序： 初始化（Awake $\\\\to$ OnEnable $\\\\to$ Start）$\\\\to$ 物理更新（FixedUpdate）$\\\\to$ 游戏逻辑更新（Update）$\\\\to$ 晚期更新（LateUpdate）$\\\\to$ 渲染（OnGUI $\\\\to$ OnRenderObject $\\\\dots$）$\\\\to$ 销毁（OnDisable $\\\\to$ OnDestroy）。\",\"区别： 强调 Update 与 FixedUpdate 的区别（帧率相关 vs 物理步长相关）。\",\"高级点： 提及 Reset（编辑器专用）、OnApplicationPause、OnBecameVisible/Invisible 等。\"]},\"80\":{\"h\":\"2.\",\"t\":[\"问题： 协程是如何工作的？它与线程/异步任务有什么本质区别？在什么情况下应该使用它？\",\"回答要点：\",\"工作原理： 协程不是多线程，它仍然在主线程上执行。它通过 yield return 关键字暂停并在下一帧或特定条件满足时恢复执行，实现非阻塞的逻辑。\",\"区别： 线程是 OS 级别的并发执行，是真并行；协程是 Unity 框架内的协作式多任务，是假并行。协程主要用于 Unity API 的延时、等待等操作。\",\"使用场景： 资源加载、UI 动画、等待网络响应、按时间步进的流程（如新手引导）。\"]},\"81\":{\"h\":\"3.\",\"t\":[\"问题： 在 Unity 中，如何有效地管理内存并减少垃圾回收（GC）的频率和耗时？\",\"回答要点：\",\"对象池 (Object Pooling)： 用于频繁创建和销毁的物体（如子弹、特效）。\",\"减少装箱/拆箱： 避免值类型与引用类型之间的隐式转换。\",\"字符串操作： 使用 StringBuilder 而不是频繁的字符串拼接。\",\"集合操作： 避免在 Update 中频繁创建新的 List、Array 或 Dictionary，使用缓存或 Clear()。\",\"协程优化： 缓存 yield return new WaitForSeconds(X)，改为 yield return cachedWaitForSecondsX。\",\"Profile 分析： 使用 Unity Profiler 查找 GC 发生的原因和位置。\"]},\"82\":{\"h\":\"⚙️ 二、 性能优化与架构设计\"},\"83\":{\"h\":\"4.\",\"t\":[\"问题： 提高游戏渲染性能的常用方法有哪些？如何减少 Draw Call 和 Overdraw？\",\"回答要点：\",\"Draw Call 优化：\",\"合批 (Batching)： 使用 Static Batching（静态物体）和 Dynamic Batching（动态物体，有条件限制）。\",\"SRP Batcher / GPU Instancing： 用于相同 Mesh 和 Material 的大量绘制。\",\"Atlas (图集)： 将小图打包，共享材质。\",\"Overdraw 优化：\",\"剔除 (Culling)： Frustum Culling (视锥体剔除)、Occlusion Culling (遮挡剔除)。\",\"UI 优化： 避免 UI 重叠过多透明元素。\",\"LOD (Level of Detail)： 远处的物体使用低模。\"]},\"84\":{\"h\":\"5.\",\"t\":[\"问题： 你们的项目是如何进行资源管理（加载、卸载）和热更新的？请描述 AssetBundle 或 Addressables 的使用经验。\",\"回答要点：\",\"Addressables 优势： 相比 AssetBundle，Addressables 提供了更高级的抽象层，简化了依赖管理、异步加载和热更新流程。\",\"加载/卸载策略： 按需异步加载，使用引用计数管理内存，适时调用 Resources.UnloadUnusedAssets。\",\"热更新流程： 描述主包、远端服务器、版本校验、下载、解压、校验完整性的过程。强调增量更新和断点续传的实现。\"]},\"85\":{\"h\":\"6.\",\"t\":[\"问题： 在您的项目中，如何组织 UI/游戏逻辑模块？使用过哪些设计模式或架构（如 MVC, MVVM, ECS, FSM）？\",\"**回答要点：\",\"UI 架构： 比如使用 MVVM（Model-View-ViewModel）或 MVP。View 负责显示，ViewModel 负责业务逻辑和数据绑定，Model 负责数据。\",\"游戏核心架构： 可能使用 ECS (Entity Component System) 来处理高性能的、数据驱动的系统（如果项目有此需求），或者传统的 Component-Based Architecture。\",\"设计模式应用：单例 (Singleton)（管理器）、观察者 (Observer)（事件系统）、命令 (Command)（技能系统）、状态机 (FSM)（角色AI）。\"]},\"86\":{\"h\":\"💻 三、 网络与数据\"},\"87\":{\"h\":\"7.\",\"t\":[\"问题： 在多人联机游戏中，你们如何处理网络延迟和数据同步问题？\",\"回答要点：\",\"同步方案： 帧同步（RTS/MOBA）或状态同步（MMO/FPS）。\",\"延迟补偿：客户端预测 (Client-Side Prediction)、服务端回滚 (Server Reconciliation)、延迟补偿 (Lag Compensation)。\",\"数据传输： 区分使用 TCP（可靠性要求高）和 UDP（实时性要求高，如移动/技能）。\"]},\"88\":{\"h\":\"8.\",\"t\":[\"问题： 如何在客户端安全、高效地存储用户数据（如配置、存档、本地缓存）？\",\"回答要点：\",\"存储方式：JSON/XML 序列化（可读性好）、Protobuf/FlatBuffers（性能高、数据结构紧凑）。\",\"安全性：数据加密（如 XOR 加密、AES）、校验和/哈希值（防止篡改）、避免明文存储关键信息。\",\"Unity API： 提及 PlayerPrefs 仅用于简单配置，不应用于关键存档数据。\"]},\"89\":{\"h\":\"💡 四、 高级与实战经验\"},\"90\":{\"h\":\"9.\",\"t\":[\"问题： 你对 Unity 的渲染管线（URP/HDRP）有什么了解？在 Shader 编写上，如何兼顾性能与效果？\",\"回答要点：\",\"渲染管线： 了解 URP/HDRP 的目标、优势（如批处理优化、可编程性）。\",\"Shader 优化： 减少复杂计算（如三角函数、Pow）、使用更少的纹理采样、在片元着色器中避免不必要的计算、使用半精度浮点数（half）代替全精度（float）来提高移动端性能。\"]},\"91\":{\"h\":\"10.\",\"t\":[\"问题： 你如何处理和调试线上版本中出现的崩溃或难以复现的 Bug？\",\"回答要点：\",\"日志系统： 统一的日志管理，区分级别（Debug, Info, Warning, Error）。\",\"异常捕获与上报： 客户端全局捕获未处理异常 (Application.logMessageReceived)，并将堆栈信息、设备信息、操作步骤上报给崩溃收集平台（如 Sentry, Bugly）。\",\"复现： 记录关键操作序列和状态快照，方便在本地环境模拟。\"]},\"92\":{\"h\":\"总结与建议\",\"t\":[\"作为高级程序，面试官期望看到的不仅仅是技术点的罗列，更重要的是：\",\"深入的理解： 不仅知道“怎么做”，更要理解“为什么这么做”以及不同方案的优劣权衡。\",\"系统级思维： 从项目的整体架构、维护性、扩展性和性能维度来思考问题。\",\"解决问题的能力： 结合你实际项目中的经验，用 “STAR” 法则（Situation-Task-Action-Result，情境-任务-行动-结果）来描述你解决复杂问题的过程。\",\"面试中，请务必结合你实际做过的项目来回答，这样会更有说服力！\",\"您希望我针对上述某个类别（例如：性能优化与架构设计）再提供一些更深入的、更具挑战性的追问和答案提示吗？\"]},\"93\":{\"h\":\"测试\",\"t\":[\"Unity 面试常见问题与回答。\",\"Assetbunle.Unload 传入 true 和 false 的区别？\",\"摄像机如何还原深度信息？\",\"UGUI 动静分离，哪些部分（顶点，颜色，材质）改变会导致重绘\",\"半透明物体的渲染顺序？\",\"Shader 如何优化？\",\"lua的rawget/rawset方法是干什么用的\",\"资源打包/热更的流程？\",\"AssetBundle 的组成结构？\",\"大世界地图资源处理，场景管理\",\"红点系统怎么实现？\",\"把封装的类和对象池结合使用，与结构体相对比，哪个好\",\"假如说有个需求，玩家要刺杀某个NPC，NPC不在AOI范围内，但是要求玩家能看到NPC，怎么做\",\"动态图集\",\"一个点对一个面的镜像点怎么求\",\"一个点到直线的距离怎么求\",\"AlpahTest和Blend的区别\",\"何为内存对齐\",\"把场景中的一个物体渲染到屏幕上，经过了哪些坐标空间的转换\",\"协程和线程的区别\",\"event和delegate的区别\",\"什么是拆装箱\",\"什么是内存泄漏\",\"C#强引用和弱引用有啥区别\",\"GC产生的原因，如何避免\",\"值类型和引用类型的区别\",\"ECS模式的设计思想\",\"红黑树，二叉树的原理和实现\",\"A*/四叉树\",\"TCP和UDP的区别\",\"常见的优化思路\",\"项目中用到了哪些设计模式\",\"二叉树的基本结构、排列顺序？\",\"C#中的List是如何扩容的\",\"值类型赋值，该如何同步修改？\",\"什么是闭包？可以举例说明\",\"C#中的浅拷贝和深拷贝\"]},\"94\":{\"h\":\"参考\",\"t\":[\"S0nrEir's Blog\"]},\"95\":{\"h\":\"手册\",\"t\":[\"Unity 中的内存\"]},\"96\":{\"h\":\"Unity 中的内存\",\"t\":[\"原文地址 - UnityManual\",\"为了确保您的应用程序运行时没有性能问题，了解 Unity 如何使用和分配内存非常重要。本文档的这一部分解释了 Unity 中内存的工作原理，旨在帮助希望提高应用程序内存性能的读者。\",\"Unity 使用三个内存管理层来处理应用程序中的内存：\",\"托管内存(Managed memory)：一个受控的内存层，使用托管堆和 垃圾回收器 来自动分配和指派内存。\",\"C# 非托管内存(C# unmanaged memory)：可以在 C# 下与 Unity Collections 命名空间和包(package)结合使用的内存管理层。这种内存类型被称为 \\\"非托管\\\"，因为它不使用 垃圾回收器 来管理未使用的内存部分。\",\"原生内存(Native memory)：Unity 用于运行引擎的 C++ 内存。在大多数情况下，Unity 用户无法访问此内存，但如果您想微调应用程序性能的某些方面，了解它会很有用。\",\"托管内存\",\"Mono 和 IL2CPP 的 脚本虚拟机(VM) 实现了 托管内存 系统，有时也称为脚本内存系统。这些 VM 提供了一个受控的内存环境，分为以下几种不同类型：\",\"托管堆(The Managed Heap)：VM 使用 垃圾回收器(GC) 自动控制的内存区域。因此，在托管堆上分配的内存被称为 GC 分配(GC Allocation)。Profiler 将此类分配的任何发生记录为 GC.Alloc 采样。\",\"脚本栈(The Scripting Stack)：当您的应用程序进入和退出任何代码范围时，脚本栈会建立和展开。\",\"原生 VM 内存(Native VM memory)：包含与 Unity 脚本层相关的内存。大多数时候，您不需要操作原生 VM 内存，但了解它包含与您的代码生成的执行代码相关的内存会很有用，特别是围绕 泛型(generics) 的使用、反射(Reflection) 使用的类型元数据，以及运行 VM 所需的内存。\",\"由于托管内存系统使用 VM，它具有一个受控环境，可以自动跟踪分配的引用以管理其生命周期。这意味着您的应用程序不太可能过早释放内存，而其他代码正在尝试访问它。这也意味着您可以对 内存泄漏(memory leaks) 提供一些保护，内存泄漏发生在内存无法从代码访问或未使用的内存堆积时。\",\"在 Unity 中使用托管内存是管理应用程序内存的最简单方法；但它有一些缺点。垃圾回收器使用方便，但在释放和分配内存方面也是不可预测的，这可能会导致性能问题，例如卡顿，这发生在垃圾回收器必须停止以释放和分配内存时。为了解决这种不可预测性，您可以使用 C# 非托管内存层。\",\"C# 非托管内存\",\"C# 非托管内存层允许您访问原生内存层以微调内存分配，同时方便地编写 C# 代码。\",\"您可以使用 Unity 核心 API 中的 Unity.Collections 命名空间(包括 NativeArray) 以及 Unity Collections 包 中的数据结构来访问 C# 非托管内存。如果您使用 Unity 的 C# Job 系统或 Burst，则必须使用 C# 非托管内存。有关此内容的更多信息，请参阅 Job 系统 和 Burst 的文档。\",\"原生内存\",\"Unity 引擎的内部 C/C++ 核心拥有自己的内存管理系统，称为原生内存。在大多数情况下，您无法直接访问或修改此内存类型。\",\"Unity 将项目中的场景(scenes)、资源(assets)、图形 API、图形驱动程序、子系统和插件(plug-in)缓冲区以及分配存储在原生内存中，这意味着您可以通过 Unity 的 C# API 间接访问原生内存。这意味着您可以以安全简便的方式操作应用程序的数据，而不会失去 Unity 原生核心中原生且高性能代码的优势。\",\"大多数时候，您不需要与 Unity 的原生内存交互，但您可以在使用 Profiler 时通过 Profiler 标记(Profiler markers) 查看它如何影响应用程序的性能。您还可以通过更改 Unity 原生内存分配器的一些可配置设置来调整应用程序的性能。有关更多信息，请参阅 原生内存 部分。\"]},\"97\":{\"h\":\"托管内存\",\"t\":[\"Unity 的托管内存系统是基于 Mono 或 IL2CPP 虚拟机(VM) 的 C# 脚本环境。托管内存系统的优点在于它管理内存的释放，因此您无需通过代码手动请求释放内存。\",\"Unity 的托管内存系统使用 垃圾回收器 和 托管堆 来自动释放脚本(scripts) 不再持有任何引用的内存分配。这有助于防止内存泄漏。内存泄漏发生在内存被分配后，对其的引用丢失，然后内存从未被释放，因为它需要一个 引用(reference) 来释放它。\",\"此内存管理系统还保护内存访问，这意味着您无法访问已释放的内存，或您的代码从未有效访问过的内存。但是，此内存管理过程会影响运行时性能，因为分配托管内存对 CPU 来说非常耗时。垃圾回收(Garbage collection) 也可能会停止 CPU 执行其他工作，直到它完成。\",\"值类型和引用类型\",\"当调用方法时，脚本后端将其参数的值复制到为该特定调用保留的内存区域中，该数据结构称为调用栈(call stack)。脚本后端可以快速复制占用少量字节的数据类型。然而，对象、字符串和数组通常要大得多，脚本后端定期复制这些类型的数据效率很低。\",\"托管代码中所有非空 引用类型对象(reference-type objects) 和所有 装箱值类型对象(boxed value-typed objects) 都必须在托管堆上分配。\",\"熟悉值类型和引用类型非常重要，这样您才能有效地管理代码。有关更多信息，请参阅 Microsoft 关于 值类型 和 引用类型 的文档。\",\"自动内存管理\",\"创建对象时，Unity 从一个称为堆(heap) 的中央池中分配存储它所需的内存，堆是 Unity 项目选择的脚本运行时(Mono 或 IL2CPP)自动管理的内存区域。当对象不再使用时，它曾经占用的内存可以被回收并用于其他用途。\",\"Unity 的脚本后端 使用 垃圾回收器 来自动管理应用程序的内存，这样您就不需要通过显式方法调用来分配和释放这些内存块。自动内存管理比显式分配/释放需要更少的编码工作，并减少内存泄漏的可能性。\",\"托管堆概述\",\"托管堆是 Unity 项目选择的脚本运行时(Mono 或 IL2CPP)自动管理的内存区域。\",\"一块内存。图中标注的 A 是一些空闲内存。\",\"在上图中，蓝色框表示 Unity 分配给托管堆的内存量。其中的白色框表示 Unity 存储在托管堆内存空间中的数据值。当需要额外的数据值时，Unity 从托管堆的空闲空间(标注 A)分配它们。\",\"内存碎片和堆扩展\",\"一块内存，一些已释放的对象用灰色虚线表示。\",\"上图显示了内存碎片的示例。当 Unity 释放对象时，对象占用的内存被释放。然而，空闲空间不会成为一个大的 \\\"空闲内存\\\" 池的一部分。\",\"已释放对象两侧的对象可能仍在被使用。因此，释放的空间是其他内存段之间的 \\\"间隙\\\"。Unity 只能使用此间隙来存储与已释放对象大小相同或更小的数据。\",\"这种情况称为内存碎片(memory fragmentation)。这发生在堆中有大量可用内存，但它仅在对象之间的 \\\"间隙\\\" 中可用时。这意味着即使有足够的总空间用于大内存分配，托管堆也找不到足够大的连续内存块来分配给该分配。\",\"标注 A 的对象是需要添加到堆中的新对象。标注 B 的项是已释放对象占用的内存空间，加上空闲的、未保留的内存。即使有足够的总空闲空间，由于没有足够的连续空间，标注 A 的新对象的内存无法容纳在堆中，并且必须运行垃圾回收器。\",\"如果分配了一个大对象并且没有足够的连续空闲空间来容纳它，如上图所示，Unity 内存管理器会执行两个操作：\",\"首先，如果垃圾回收器尚未运行，它会运行。这会尝试释放足够的空间来满足分配请求。\",\"如果在垃圾回收器运行后，仍然没有足够的连续空间来容纳请求的内存量，则堆必须扩展。堆扩展的具体量取决于平台；然而，在大多数平台上，当堆扩展时，它会以先前扩展量的两倍进行扩展。\",\"托管堆扩展注意事项\",\"堆的意外扩展可能会带来问题。Unity 的垃圾回收策略往往会更频繁地产生内存碎片。您应该注意以下几点：\",\"Unity 在托管堆扩展时不会定期释放分配给托管堆的内存；相反，它会保留扩展后的堆，即使其中很大一部分是空的。这是为了防止在发生进一步的大量分配时需要重新扩展堆。\",\"在大多数平台上，Unity 最终会将托管堆空闲部分使用的内存释放回操作系统。发生这种情况的时间间隔不确定且不可靠。\",\"垃圾回收器不会清除原生内存对象或其他原生分配。Resources.UnloadUnusedAssets 会为任何不再有任何引用指向它的原生对象执行此操作。它还会触发 GC.Collect 以确保这些引用的状态是最新的。请记住： \",\"UnloadUnusedAssets 不会自动触发，仅在手动和场景更改时触发。如果您想更早地释放该内存(例如，对于 RAM 较低的平台上的全屏 RenderTextures 来说至关重要)，您应该对对象调用 Destroy，以充分利用您拥有的内存。\",\"存在托管内存泄漏的风险。如果您保留了对已清理对象的引用，则存在泄漏托管对象引用的原生对象的风险。静态字段和事件是此类内存泄漏的常见来源。有关如何使用 Memory Profiler 分析这些问题的更多信息，请参阅 Memory Profiler 包文档中的 托管 Shell 对象(Managed shell objects)。\",\"调用 UnloadUnusedAssets 或 GC.Collect 会触发 CPU 密集型进程，您可能希望在 Gameplay 期间避免这样做。\"]},\"98\":{\"h\":\"原生内存\",\"t\":[\"提示\",\"本节中关于分配器的信息仅适用于原生内存，不适用于托管堆，托管堆在 托管内存 部分中介绍。本节假设您对原生内存管理和分配器有一般了解。\",\"应用程序使用内存分配器来平衡性能和可用内存空间。如果应用程序有大量空闲内存，它可以在加载 场景 和帧时优先使用更快、内存占用更多的分配器。然而，如果应用程序内存有限，即使这意味着使用较慢的分配器，它也需要有效地使用该内存。为了帮助您为不同的项目获得最佳性能，您可以自定义 Unity 的分配器以适应每个应用程序的大小和要求。\",\"Unity 有五种分配器类型。每种类型都有不同的算法将分配放入内存块中，因此适用于不同的分配。分配之间的重要区别通常是持久性或分配生命周期，这决定了分配应该去哪里。例如，长期存在的(持久的)分配会进入堆和桶分配器，而短期存在的分配会进入线程安全线性分配器和 TLS 分配器。\",\"下表列出了每种分配器类型的算法和用途：\",\"分配器类型\",\"算法\",\"用途\",\"动态堆(Dynamic heap)\",\"两级隔离适配(Two Level Segregated Fit, TLSF)\",\"• 主要分配器 • Gfx 分配器 • Typetree 分配器 • 文件缓存分配器 • Profiler 分配器 • Editor Profiler 分配器(仅在 Editor 中)\",\"桶(Bucket)\",\"固定大小无锁分配器\",\"作为小型分配的共享分配器，用于：• 主要分配器 • Gfx 分配器 • Typetree 分配器 • 文件缓存分配器\",\"双线程(Dual thread)\",\"根据大小和线程 ID 重定向分配\",\"• 主要分配器 • Gfx 分配器 • Typetree 分配器 • 文件缓存分配器\",\"线程本地存储(TLS)栈(Thread Local Storage(TLS) stack)\",\"后进先出(LIFO) 栈\",\"临时分配\",\"线程安全线性(Threadsafe linear)\",\"循环首次进入首次退出(Round robin FIFO)\",\"用于将数据传递给 Job 的缓冲区\",\"提示\",\"本文档中的示例使用当您关闭 Player 或 Editor 时写入日志的内存使用报告，前提是您使用了 -log-memory-performance-stats 命令行参数。要查找您的日志文件，请按照 日志文件页面 上的说明进行操作。\"]},\"99\":{\"h\":\"动态堆分配器(Dynamic Heap Allocator)\",\"t\":[\"动态堆分配器是主要的堆分配器。它将两级隔离适配(TLSF)算法应用于内存块。\",\"每个平台都有一个默认块大小，您可以自定义。分配必须小于半个块。半个块或更大的分配对于动态堆分配器来说太大，在这种情况下，Unity 会使用虚拟内存 API 进行分配。\",\"动态堆分配器的示例使用报告：\",\"[ALLOC_DEFAULT_MAIN] Peak usage frame count: [16.0 MB-32.0 MB]: 497 frames, [32.0 MB-64.0 MB]: 1 frames Requested Block Size 16.0 MB Peak Block count 2 Peak Allocated memory 54.2 MB Peak Large allocation bytes 40.2 MB\",\"在此示例中，TLSF 块大小设置为 16 MB，Unity 已分配两个块。分配器的峰值使用量为 54.2MB。在这 52.4MB 中，40.2MB 未在 TLSF 块中分配，而是回退到虚拟内存。大多数帧分配了 16-32MB 的内存，而一帧(可能是加载帧)的峰值内存为 32-64MB。\",\"如果您增加块大小，大分配将保留在动态堆中，而不是回退到虚拟内存。然而，该块大小可能导致内存浪费，因为这些块可能未被充分使用。\",\"提示\",\"类型树和文件缓存分配器使用动态堆分配。为了节省它们在这种算法下可能使用的内存块，您可以将类型树块大小和文件缓存块大小设置为 0。原本会使用类型树和缓存的分配将回退到主要分配器。注意，这会增加原生内存碎片的风险。有关如何设置这些块大小的信息，请参阅 自定义分配器。\"]},\"100\":{\"h\":\"桶分配器(Bucket Allocator)\",\"t\":[\"桶分配器是一种快速的无锁分配器，用于执行小型分配。通常，桶分配器用作加速小型分配的第一步，然后它们才会进入堆分配器。\",\"分配器为分配保留内存块。每个块被分成 16KB 的子部分(subsections)。这是不可配置的，并且不会出现在用户界面中。每个子部分被分成分配(allocations)。分配大小是配置的固定大小的倍数，称为粒度(granularity)。\",\"示例配置\",\"以下示例配置演示了为分配保留块的过程：\",\"Windows、Mac 和 Linux Player 的共享桶分配器(Shared Bucket Allocator)，Project Settings > Memory Settings > Main Allocator > Shared Bucket Allocator。\",\"在此设置中，总块(block) 大小(Bucket Allocator Block Size)为 4MB，分配的粒度(Bucket Allocator Granularity)为 16B。第一次分配为 16B，第二次为 32B(2*16)，然后是 48B、64B、80B、96B、112B 和 128B，总共有八个桶(Bucket Allocator BucketCount)。\",\"每个子部分包含不同数量的桶。要计算子部分中的桶数，请将子部分大小(16KB) 除以粒度大小。例如：\",\"当分配粒度为 64B 时，一个子部分中可容纳 256 个桶。\",\"当分配粒度为 16B 时，一个子部分中可容纳 1,024 个桶。\",\"开发版本和发布版本比较\",\"桶分配器会为开发版本(development build) 和发布版本生成不同的使用报告，因为在开发版本中，每个分配都有一个额外的 40B 头部。下图演示了 16B 和 64B 分配的开发版本和发布版本之间的差异：\",\"开发版本和发布版本比较\",\"头部是分配器在分配了 4MB 中的 2MB 后报告已满的原因：\",\"[ALLOC_BUCKET] Large Block size 4.0 MB Used Block count 1 Peak Allocated bytes 2.0 MB Failed Allocations. Bucket layout: 16B: 64 Subsections = 18724 buckets. Failed count: 3889 32B: 17 Subsections = 3868 buckets. Failed count: 169583 48B: 31 Subsections = 5771 buckets. Failed count: 39674 64B: 28 Subsections = 4411 buckets. Failed count: 9981 80B: 17 Subsections = 2321 buckets. Failed count: 14299 96B: 6 Subsections = 722 buckets. Failed count: 9384 112B: 44 Subsections = 4742 buckets. Failed count: 5909 128B: 49 Subsections = 4778 buckets. Failed count: 8715\",\"在同一项目的发布版本中，分配器块大小足够：\",\"[ALLOC_BUCKET] Large Block size 4.0 MB Used Block count 1 Peak Allocated bytes 3.3 MB\",\"如果桶分配器已满，分配将回退到另一个分配器。使用报告显示使用统计信息，包括失败的分配数量。如果报告显示失败计数线性增加，则很可能是在计算帧时发生的失败分配，而不是加载时。回退分配对于场景加载来说不是问题，但如果它们在计算帧时发生，则会影响性能。\",\"为了防止这些回退分配，请增加块大小，并将新块大小限制为与帧的峰值使用量匹配，而不是场景加载的峰值使用量。这可以防止块变得太大而保留大量内存，从而在运行时不可用。\",\"提示\",\"Profiler 分配器共享一个桶分配器实例。您可以在 Profiler 共享桶分配器(Shared Bucket Allocator) 中自定义此共享实例。\"]},\"101\":{\"h\":\"双线程分配器(Dual Thread Allocator)\",\"t\":[\"双线程分配器是一个包装器，它结合了 动态堆(Dynamic Heap) 和 桶(Bucket) 分配器。更具体地说，它结合了：\",\"两个动态堆分配器：一个用于主线程的无锁分配器，以及一个由所有其他线程共享的分配器，该分配器在分配和释放时锁定。Unity 使用这些分配器进行对于桶分配器来说太大的分配。动态堆分配器使用内存块。等于或大于半个块的分配会进入虚拟内存系统，而不是动态堆分配器。\",\"一个用于小型分配的桶分配器。如果桶分配器已满，分配会溢出到动态堆分配器。\",\"您可以自定义两个动态堆分配器的块大小：\",\"主分配器，带有共享线程块大小的自定义值\",\"使用报告包含分配器所有三个部分的信息。例如：\",\"[ALLOC_DEFAULT] Dual Thread Allocator Peak main deferred allocation count 135 [ALLOC_BUCKET] Large Block size 4.0 MB Used Block count 1 Peak Allocated bytes 3.3 MB [ALLOC_DEFAULT_MAIN] Peak usage frame count: [16.0 MB-32.0 MB]: 8283 frames, [32.0 MB-64.0 MB]: 1 frames Requested Block Size 16.0 MB Peak Block count 2 Peak Allocated memory 53.3 MB Peak Large allocation bytes 40.2 MB [ALLOC_DEFAULT_THREAD] Peak usage frame count: [64.0 MB-128.0 MB]: 8284 frames Requested Block Size 16.0 MB Peak Block count 2 Peak Allocated memory 78.3 MB Peak Large allocation bytes 47.3 MB\",\"提示\",\"Peak main deferred allocation count 是删除队列中的项目数。主线程必须删除它进行的任何分配。如果另一个线程删除分配，则该分配将添加到队列中。分配在队列中等待主线程删除它。然后将其计为延迟分配。\"]},\"102\":{\"h\":\"线程本地存储(TLS)栈分配器(Thread Local Storage Stack Allocator)\",\"t\":[\"每个线程都使用自己的快速栈分配器进行临时分配。这些分配速度非常快，生命周期小于一帧。分配器使用后进先出(LIFO)栈。\",\"临时分配器的默认块大小对于平台为 4MB，对于 Unity Editor 为 16MB。您可以自定义这些值。\",\"提示\",\"如果分配器使用量超过配置的块大小，Unity 会增加块大小。此增加的限制是原始大小的两倍。\",\"快速每线程临时分配器(Fast Per Thread Temporary Allocators)中的主线程块大小(Main Thread Block Size)自定义值\",\"如果线程的栈分配器已满，分配将回退到 线程安全线性分配器。少量溢出分配是可以接受的：一帧中 1 到 10 个，或加载期间几百个。然而，如果每帧数量都在增加，您可以增加块大小。\",\"使用报告中的信息可以帮助您选择适合应用程序的块大小。例如，在以下主线程使用报告中，加载峰值为 2.7MB，但其余帧低于 64KB。您可以将块大小从 4MB 减小到 64KB，并允许加载帧溢出分配：\",\"[ALLOC_TEMP_TLS] TLS Allocator StackAllocators : [ALLOC_TEMP_MAIN] Peak usage frame count: [16.0 KB-32.0 KB]: 802 frames, [32.0 KB-64.0 KB]: 424 frames, [2.0 MB-4.0 MB]: 1 frames Initial Block Size 4.0 MB Current Block Size 4.0 MB Peak Allocated Bytes 2.7 MB Overflow Count 0 [ALLOC_TEMP_Job.Worker 18]\",\"在第二个示例中，工作线程不用于大型临时分配。为了节省内存，您可以将工作线程的块大小减小到 32KB。这在多核机器上特别有用，其中每个工作线程都有自己的栈：\",\"[ALLOC_TEMP_Job.Worker 14] Initial Block Size 256.0 KB Current Block Size 256.0 KB Peak Allocated Bytes 18.6 KB Overflow Count 0\"]},\"103\":{\"h\":\"线程安全线性分配器(Thread-safe Linear Allocator)\",\"t\":[\"Unity 中的工作线程使用循环先进先出(FIFO) 算法，用于快速、无锁地分配 Job 的工作缓冲区。Job 完成后会释放缓冲区。\",\"此分配器分配内存块，然后在这些块内线性分配内存。可用块保存在池中。当一个块满时，分配器从池中获取一个新块。当分配器不再需要块中的内存时，它会清除该块，并且该块返回到可用块池中。快速清除分配以使块再次可用非常重要，因此 Job 的分配时间不应超过几帧。\",\"您可以自定义块大小。分配器根据需要最多分配 64 个块。\",\"Editor 的快速线程共享临时分配器(Fast Thread Shared Temporary Allocators)的默认值\",\"如果所有块都在使用中，或者分配对于块来说太大，分配将回退到主堆分配器，这比 Job 分配器慢得多。少量溢出分配是可以接受的：一帧中 1 到 10 个，或几百个，尤其是在加载期间。如果溢出计数每帧都在增加，您可以增加块大小以避免回退分配。然而，如果块大小增加过多(例如，为了匹配场景加载等事件中的峰值使用量)，您可能会在播放期间留下大量内存不可用。\",\"例如：\",\"[ALLOC_TEMP_JOB_4_FRAMES(JobTemp)] Initial Block Size 0.5 MB Used Block Count 64 Overflow Count(too large) 0 Overflow Count(full) 50408\",\"在此示例使用报告中，0.5MB 的块大小太小，无法容纳应用程序所需的 Job 内存，并且已满的分配器导致大量分配溢出。\",\"要检查构建的帧溢出是否足够，请运行一小段时间，然后再运行更长的时间。如果溢出计数保持稳定，则溢出是在加载期间发生的高水位标记。如果溢出计数随着运行时间的延长而增加，则构建正在处理每帧溢出。在这两种情况下，您都可以增加块大小以减少溢出，但加载期间的溢出不如每帧溢出关键。\"]},\"104\":{\"h\":\"自定义分配器\",\"t\":[\"提示\",\"并非所有平台都支持此功能。有关更多信息，请参阅 平台特定 文档。\",\"要自定义分配器设置，您可以通过 Editor UI 编辑可配置值，或将其作为 命令行参数 提供。\",\"使用 Editor\",\"选择 Project Settings > Memory Settings。\",\"选择要编辑的值旁边的锁定图标。\",\"Project Settings > Memory Settings，显示 Player 内存设置的选择\",\"提示\",\"有关可通过 Editor UI 自定义的字段，请参阅前面的各个分配器部分。\",\"使用命令行参数\",\"要查找要更改的分配器参数的名称，请检查 Editor 和 Player 启动时打印的分配器设置列表。例如，要更改主堆分配器的块大小，请使用 -memorysetup-main-allocator-block-size=<new_value>\",\"分配器参数名称及其默认值：\",\"分配器\",\"描述\",\"参数名称\",\"默认值\",\"主要分配器Main Allocators\",\"Unity 用于大多数分配的分配器。\",\"主分配器Main Allocator\",\"Unity 用于大多数分配的主要分配器。\",\"主线程块大小Main Thread Block Size\",\"专用主线程分配器的块大小。\",\"memorysetup-main-allocator-block-size\",\"16MB\",\"共享线程块大小Shared Thread Block Size\",\"共享线程分配器的块大小。\",\"memorysetup-thread-allocator-block-size\",\"16MB\",\"Gfx 分配器Gfx Allocator\",\"Unity 用于与 Gfx 系统相关的 CPU 分配的分配器。\",\"主线程块大小Main Thread Block Size\",\"专用主线程 Gfx 分配器的块大小。\",\"memorysetup-gfx-main-allocator-block-size\",\"16MB\",\"共享线程块大小Shared Thread Block Size\",\"共享线程 Gfx 分配器的块大小。\",\"memorysetup-gfx-thread-allocator-block-size\",\"16MB\",\"其他分配器Other Allocators\",\"文件缓存块大小File Cache Block Size\",\"文件缓存有自己的分配器以避免碎片。这是它的块大小。\",\"memorysetup-cache-allocator-block-size\",\"4MB\",\"类型树块大小Type Tree Block Size\",\"类型树有自己的分配器以避免由于许多小型分配而导致的碎片。这是它的块大小。\",\"memorysetup-typetree-allocator-block-size\",\"2MB\",\"共享桶分配器Shared Bucket Allocator\",\"在主要分配器之间共享的桶分配器。\",\"桶分配器粒度Bucket Allocator Granularity\",\"共享分配器中桶的步长。\",\"memorysetup-bucket-allocator-granularity\",\"16B\",\"桶分配器桶数Bucket Allocator BucketCount\",\"桶大小的数量。例如，如果值为 4，则大小为 16、32、48 和 64。\",\"memorysetup-bucket-allocator-bucket-count\",\"8\",\"桶分配器块大小Bucket Allocator Block Size\",\"用于桶的内存块大小。\",\"memorysetup-bucket-allocator-block-size\",\"Editor: 8MBPlayer: 4MB\",\"桶分配器块数Bucket Allocator Block Count\",\"要分配的最大块数。\",\"memorysetup-bucket-allocator-block-count\",\"Editor: 8Player: 1\",\"快速每线程临时分配器Fast Per Thread Temporary Allocators\",\"处理非常短生命周期分配的线程本地存储(TLS) 分配器。\",\"主线程块大小Main Thread Block Size\",\"主线程栈的初始大小。\",\"memorysetup-temp-allocator-size-main\",\"Editor: 16MBPlayer: 4MB\",\"Job Worker 块大小Job Worker Block Size\",\"Unity Job 系统中每个 Job Worker 的大小。\",\"memorysetup-temp-allocator-size-job-worker\",\"256KB\",\"后台 Job Worker 块大小Job Worker Block Size\",\"每个后台 Worker 的大小。\",\"memorysetup-temp-allocator-size-background-worker\",\"32KB\",\"预加载块大小Preload Block Size\",\"预加载管理器栈大小。\",\"memorysetup-temp-allocator-size-preload-manager\",\"Editor: 32MBPlayer: 256KB\",\"音频 Worker 块大小Audio Worker Block Size\",\"每个音频 Worker 线程的栈大小。\",\"memorysetup-temp-allocator-size-audio-worker\",\"64KB\",\"云 Worker 块大小Cloud Worker Block Size\",\"云 Worker 线程栈大小。\",\"memorysetup-temp-allocator-size-cloud-worker\",\"32KB\",\"Gfx 线程块大小Gfx Thread Blocksize\",\"主渲染线程栈大小。\",\"memorysetup-temp-allocator-size-gfx\",\"256KB\",\"GI Baking 块大小GI Baking Blocksize\",\"每个 GI Worker 线程的栈大小。\",\"memorysetup-temp-allocator-size-gi-baking-worker\",\"256KB\",\"NavMesh Worker 块大小NavMesh Worker Block Size\",\"Nav mesh Worker 线程栈大小。\",\"memorysetup-temp-allocator-size-nav-mesh-worker\",\"64KB\",\"快速线程共享临时分配器Fast Thread Shared Temporary Allocators\",\"用于线程之间共享的短生命周期分配的快速线性分配器。\",\"Job 分配器块大小Job Allocator Block Size\",\"Unity 主要用于 Job Worker 线程的循环线性线程分配器。\",\"memorysetup-job-temp-allocator-block-size\",\"2MB\",\"后台 Job 分配器块大小Background Job Allocator Block Size\",\"后台 Worker 的线性分配器，允许更长生命周期的分配。\",\"memorysetup-job-temp-allocator-block-size-background\",\"1MB\",\"低内存平台上的 Job 分配器块大小Job Allocator Block Size on low memory platforms\",\"内存小于 2GB 的平台对 Job Worker 和后台 Job 都使用此大小。\",\"memorysetup-job-temp-allocator-reduction-small-platforms\",\"256KB\",\"Profiler 分配器Profiler Allocators\",\"Unity 专门用于 Profiler 的分配器，以便它们不干扰应用程序的分配模式。\",\"Profiler 块大小Profiler Block Size\",\"Profiler 主要部分的块大小。\",\"memorysetup-profiler-allocator-block-size\",\"16MB\",\"Editor Profiler 块大小Editor Profiler Block Size\",\"Profiler 的 Editor 部分的块大小。Player 中不存在。\",\"memorysetup-profiler-editor-allocator-block-size\",\"1MB\",\"共享 Profiler 桶分配器Shared Profiler Bucket Allocator\",\"Profiler 和 Editor Profiler 分配器的共享桶分配器。低内存平台中不存在。\",\"桶分配器粒度Bucket Allocator Granularity\",\"共享分配器中桶的步长。\",\"memorysetup-profiler-bucket-allocator-granularity\",\"16B\",\"桶分配器桶数Bucket Allocator BucketCount\",\"桶大小的数量。例如，如果值为 4，则大小为 16、32、48 和 64。\",\"memorysetup-profiler-bucket-allocator-bucket-count\",\"8\",\"桶分配器块大小Bucket Allocator Block Size\",\"用于桶的内存块大小。\",\"memorysetup-profiler-bucket-allocator-block-size\",\"Editor: 32MBPlayer: 4MB\",\"桶分配器块数Bucket Allocator Block Count\",\"要分配的最大块数。\",\"memorysetup-profiler-bucket-allocator-block-count\",\"Editor: 8Player: 1\",\"提示：为了确保您的设置提高了性能，请在更改之前和之后对应用程序进行性能分析。有关更多信息，请参阅 Profiler 概述页面 和 Profiler Analyzer 的包文档。Profiler Analyzer 支持多帧比较，这对于突出分配器性能差异特别有用。您还可以查看内存使用报告。当您关闭 Player 或 Editor 时，它们可在日志中找到。要查找您的日志文件，请按照 日志文件页面 上的说明进行操作。\",\"存储和读取设置\",\"Unity 将分配器设置存储在 MemorySettings.asset 中，这些设置在构建过程中应用。这意味着新设置在每次构建时都会生效。\",\"在 Editor 中，这些设置存储在 ProjectSettings 文件夹中，并在 Unity 导入或更改 MemorySettings.asset 时更新。Editor 的新值仅在下次 Editor 启动时生效。\"]},\"105\":{\"h\":\"笔记\",\"t\":[\"内存\"]},\"106\":{\"h\":\"DrawCall 优化\",\"t\":[\"原文地址 - UnityManual\",\"要在屏幕上绘制几何体，Unity 会向图形 API 发出绘制调用(Draw Call)。绘制调用告诉图形 API 要绘制什么以及如何绘制。每个绘制调用包含图形 API 在屏幕上绘制所需的所有信息，例如关于纹理(Textures)、着色器(Shaders)和缓冲区(Buffers)的信息。绘制调用(Draw Call)可能很耗费资源，但通常为绘制调用所做的准备工作比绘制调用本身更耗费资源。\",\"绘制的一般流程为：把数据加载到显存(手机无显卡，公用内存，没这一步) -> 设置渲染状态 -> 调用 DrawCall。\",\"为了准备绘制调用，CPU 会设置资源并更改 GPU 上的内部设置。这些设置统称为渲染状态(Render State)。对渲染状态的更改（例如切换到不同的材质）是图形 API 执行的最耗费资源的操作。\",\"有一些优化策略，降低的不是 DrawCall 的次数，减少的是设置渲染状态的消耗。\",\"由于渲染状态更改很耗费资源，因此优化它们非常重要。优化渲染状态更改的主要方法是减少它们的数量。有两种方法可以做到这一点：\",\"减少绘制调用的总数。当您减少绘制调用的数量时，您也减少了它们之间的渲染状态更改的数量。\",\"以减少渲染状态更改数量的方式组织绘制调用。如果图形 API 可以使用相同的渲染状态执行多个绘制调用，则可以将绘制调用分组在一起，而不需要执行那么多渲染状态更改。\",\"优化绘制调用和渲染状态更改对您的应用程序有许多好处。主要是它提高了帧时间，但它还：\",\"减少应用程序所需的电量。对于电池供电的设备，这会降低电池耗尽的速度。它还减少了设备在运行您的应用程序时产生的热量。\",\"提高应用程序未来开发的可维护性。当您尽早优化绘制调用和渲染状态更改并将其保持在优化水平时，您可以向场景添加更多 GameObject 而不会产生大的性能开销。\",\"您可以在 Unity 中使用多种方法来优化和减少绘制调用和渲染状态更改。某些方法更适合某些场景。Unity 中可用的方法如下：\",\"GPU instancing: 同时渲染同一网格的多个副本。GPU 实例化对于绘制在场景中多次出现的几何体（例如树木或灌木）很有用。\",\"DrawCall 批处理：组合网格以减少绘制调用。Unity 提供以下类型的内置 DrawCall 批处理： \",\"静态批处理：预先组合 static GameObject 的网格。Unity 将组合数据发送到 GPU，但单独渲染组合中的每个网格。Unity 仍然可以单独剔除网格，但每个绘制调用的资源密集度较低，因为数据的状态永远不会改变。\",\"动态批处理：在 CPU 上变换网格顶点，将共享相同配置的顶点分组，并在一个绘制调用中渲染它们。如果顶点存储相同数量和类型的属性，则它们共享相同的配置。例如，position 和 normal。\",\"手动合并网格：使用 Mesh.CombineMeshes 函数手动将多个网格组合成一个网格。Unity 在单个绘制调用中渲染组合的网格，而不是每个网格一个绘制调用。\",\"SRP Batcher：如果您的项目使用可编程渲染管线 (SRP)，请使用 SRP Batcher 减少 Unity 准备和分派使用相同着色器变体的材质的绘制调用所需的 CPU 时间。\",\"优先级\",\"您可以在同一场景中使用多种绘制调用优化方法，但请注意 Unity 会按特定顺序优先考虑绘制调用优化方法。如果您将 GameObject 标记为使用多个绘制调用优化方法，Unity 会使用优先级最高的方法。唯一的例外是 SRP Batcher。当您使用 SRP Batcher 时，Unity 还支持对与 SRP Batcher 兼容的 GameObjects 进行静态批处理。Unity 按以下顺序优先考虑绘制调用优化：\",\"SRP Batcher 和静态批处理\",\"GPU instancing\",\"动态批处理\",\"如果您将 GameObject 标记为静态批处理并且 Unity 成功批处理它，Unity 会禁用该 GameObject 的 GPU instancing，即使渲染器使用实例化着色器也是如此。发生这种情况时，Inspector 窗口会显示一条警告消息，建议您禁用静态批处理。同样，如果 Unity 可以对网格使用 GPU instancing，Unity 会禁用该网格的动态批处理。\"]},\"107\":{\"h\":\"GPU 实例化\",\"t\":[\"GPU 实例化\"]},\"108\":{\"h\":\"DrawCall 批处理\",\"t\":[\"DrawCall 批处理(Draw call batching)是一种 DrawCall 优化方法，它组合网格以便 Unity 可以用更少的绘制调用渲染它们。Unity 提供两种内置的DrawCall 批处理方法：\",\"静态批处理: 对于 static GameObject，Unity 将它们组合在一起并一起渲染。\",\"动态批处理: 对于足够小的网格，这会在 CPU 上变换它们的顶点，将相似的顶点分组在一起，并在一个绘制调用中渲染它们。\",\"Unity 的内置DrawCall 批处理比手动合并网格有几个优点；最值得注意的是，Unity 仍然可以单独剔除网格。但是，它也有一些缺点；静态批处理会产生内存和存储开销，而动态批处理会产生一些 CPU 开销。\",\"要求和兼容性\",\"本节包含有关 Unity 内置DrawCall 批处理方法的渲染管线兼容性的信息。\",\"渲染管线兼容性\",\"功能\",\"内置渲染管线\",\"通用渲染管线(URP)\",\"高清渲染管线(HDRP)\",\"自定义可编程渲染管线(SRP)\",\"Static Batching\",\"是\",\"是\",\"是\",\"是\",\"Dynamic Batching\",\"是\",\"是\",\"否\",\"是\",\"使用 DrawCall 批处理\",\"以下使用信息与静态和动态批处理都相关。有关每种 DrawCall 批处理方法的特定信息，例如如何启用和使用每种方法，请参阅 静态批处理 和 动态批处理。\",\"Mesh Renderer、Trail Renderers、Line Renderers、Particle Systems 和 Sprite Renderers 支持 DrawCall 批处理。其他类型的渲染组件（包括 Skinned Mesh Renderers Cloth）不受支持。Unity 仅将相同类型的渲染器与其他渲染器批处理在一起；例如，Mesh Renderers 与 Mesh Renderers。\",\"Unity 批处理使用相同材质的 GameObject 的绘制调用。这意味着要从 DrawCall 批处理中获得最佳结果，请在尽可能多的 GameObject 之间共享材质。如果您有两个材质资源除了它们的纹理之外完全相同，您可以将纹理组合成一个更大的单一纹理。此过程称为纹理图集。有关更多信息，请参阅关于纹理图集的 Wikipedia article。当纹理位于同一图集中时，您可以使用单个材质资源。\",\"在 Built-in Render Pipeline 中，您可以使用 MaterialPropertyBlock 更改材质属性而不会破坏 DrawCall 批处理。CPU 仍然需要进行一些渲染状态更改，但使用 MaterialPropertyBlock 比使用多个材质更快。如果您的项目使用 Scriptable Render Pipeline，请不要使用 MaterialPropertyBlock，因为它们会移除材质的 SRP Batcher 兼容性。\",\"透明着色器通常要求 Unity 以从后到前的顺序渲染网格。为了批处理透明网格，Unity 首先将它们从后到前排序，然后尝试批处理它们。由于 Unity 必须从后到前渲染网格，因此它通常无法像不透明网格那样批处理那么多透明网格。\",\"Unity 无法对 Transform 组件中包含镜像的 GameObject 应用动态批处理。例如，如果一个 GameObject 的比例为 1，而另一个 GameObject 的比例为 –1，Unity 无法将它们批处理在一起。\",\"如果您无法使用 DrawCall 批处理，手动组合彼此靠近的网格可能是一个很好的替代方案。有关组合网格的更多信息，请参阅 手动合并网格。\",\"警告：当您从 C# 脚本访问共享材质属性时，请确保使用 Renderer.sharedMaterial 而不是 Renderer.material。Renderer.material 创建材质的副本并将副本分配回渲染器。这会阻止 Unity 批处理该渲染器的绘制调用。\"]},\"109\":{\"h\":\"静态批处理\",\"t\":[\"静态批处理是一种 DrawCall 批处理 方法，它组合不移动的网格以减少 DrawCall。它将组合的网格变换到世界空间并为它们构建一个共享的顶点和索引缓冲区。然后，对于可见的网格，Unity 执行一系列简单的绘制调用，每个调用之间几乎没有状态更改。静态批处理不会减少绘制调用的数量，而是减少它们之间的渲染状态更改的数量。\",\"静态批处理比 动态批处理 更高效，因为静态批处理不会在 CPU 上变换顶点。有关静态批处理的性能影响的更多信息，请参阅 Performance implications。\",\"渲染管线兼容性\",\"功能\",\"内置渲染管线\",\"通用渲染管线 (URP)\",\"高清渲染管线 (HDRP)\",\"自定义可编程渲染管线(SRP)\",\"Static Batching\",\"是\",\"是\",\"是\",\"是\",\"使用静态批处理\",\"Unity 可以在构建时和运行时执行静态批处理。作为一般规则，如果 GameObject 在构建应用程序之前存在于场景中，请使用 Editor 在构建时批处理您的 GameObject。如果您在运行时创建 GameObject 及其网格，请使用 Runtime API。\",\"当您使用运行时 API 时，您可以更改静态批处理根的变换属性。这意味着您可以移动、旋转或缩放构成静态批处理的整个网格组合。您不能更改单个网格的变换属性。\",\"要对一组 GameObject 使用静态批处理，GameObject 必须符合静态批处理的条件。除了 [使用 DrawCall 批处理] 中描述的标准外，请确保：\",\"GameObject 处于活动状态。\",\"GameObject 具有 Mesh Filter 组件，并且该组件已启用。\",\"Mesh Filter 组件引用了 Mesh。\",\"网格启用了读/写。\",\"网格的顶点数大于 0。\",\"网格尚未与其他网格组合。\",\"GameObject 具有 Mesh Renderer 组件，并且该组件已启用。\",\"Mesh Renderer 组件不使用任何着色器将 DisableBatching 标签设置为 true 的材质。\",\"您想要批处理在一起的网格使用相同的顶点属性。例如，Unity 可以批处理使用顶点位置、顶点法线和一个 UV 的网格，但不能批处理使用顶点位置、顶点法线、UV0、UV1 和顶点切线的网格。\",\"有关静态批处理的性能影响的信息，请参阅 [性能影响]。\",\"构建时的静态批处理\",\"您可以在 Editor 中启用构建时的静态批处理。\",\"要在构建时执行静态批处理：\",\"转到 Edit > Project Settings > Player。\",\"在 Other Settings 中，启用 Static Batching。\",\"在 Scene 视图或 Hierarchy 中，选择要批处理的 GameObject 并在 Inspector 中查看它。 提示：您可以同时选择多个 GameObject 以对所有它们启用静态批处理。\",\"在 GameObject 的 Static Editor Flags 中，启用 Batching Static。\",\"如果静态网格满足 [使用 DrawCall 批处理] 中描述的标准，Unity 会自动将指定的静态网格批处理到同一绘制调用中。\",\"Inspector 中 GameObject 的 Static Editor Flags 复选框。\",\"注意：如果您在构建时执行静态批处理，Unity 在运行时不会使用任何 CPU 资源来生成静态批处理的网格数据。\",\"运行时的静态批处理\",\"要在运行时批处理静态网格，Unity 提供了 StaticBatchingUtility 类。静态 StaticBatchingUtility.Combine 方法组合您传入的 GameObject 并准备它们进行静态批处理。这对于您在运行时以程序方式生成的网格特别有用。\",\"与构建时的静态批处理不同，运行时的批处理不需要您启用 Static Batching Player 设置。有关如何使用此 API 的信息，请参阅 StaticBatchingUtility。\",\"性能影响\",\"使用静态批处理需要额外的 CPU 内存来存储组合的几何体。如果多个 GameObject 使用相同的网格，Unity 会为每个 GameObject 创建网格的副本，并将每个副本插入组合的网格中。这意味着相同的几何体在组合的网格中多次出现。无论您使用 Editor 还是 Runtime API 准备 GameObject 进行静态批处理，Unity 都会这样做。如果您希望保持较小的内存占用，您可能不得不牺牲渲染性能并避免对某些 GameObject 进行静态批处理。例如，在密集的森林环境中将树木标记为静态可能会对内存产生严重影响。\",\"注意：静态批处理可以包含的顶点数量有限制。每个静态批处理最多可以包含 64000 个顶点。如果有更多，Unity 会创建另一个批处理。\"]},\"110\":{\"h\":\"动态批处理\",\"t\":[\"动态批处理是一种 DrawCall 批处理 方法，它批处理移动的 GameObject 以减少 DrawCall。动态批处理在网格和 Unity 在运行时动态生成的几何体（例如 Particle Systems）之间的工作方式不同。有关网格和动态生成的几何体之间的内部差异的信息，请参阅 [网格的动态批处理] 和 [动态生成的几何体的动态批处理]。\",\"注意：网格的动态批处理旨在优化旧低端设备的性能。在现代消费级硬件上，动态批处理在 CPU 上所做的工作可能比绘制调用的开销更大。这会对性能产生负面影响。有关更多信息，请参阅 [网格的动态批处理]。\",\"渲染管线兼容性\",\"功能\",\"内置渲染管线\",\"通用渲染管线 (URP)\",\"高清渲染管线 (HDRP)\",\"自定义可编程渲染管线(SRP)\",\"Dynamic Batching\",\"是\",\"是\",\"否\",\"是\",\"使用动态批处理\",\"Unity 始终对动态几何体（如 Particle Systems）使用动态批处理。\",\"要对网格使用动态批处理：\",\"转到 Edit > Project Settings > Player。\",\"在 Other Settings 中，启用 Dynamic Batching。\",\"如果移动的网格满足 [使用 DrawCall 批处理] 中描述的标准，Unity 会自动将它们批处理到同一绘制调用中。\",\"网格的动态批处理\",\"网格的动态批处理通过在 CPU 上而不是 GPU 上变换所有顶点来工作。这意味着动态批处理只有在变换工作比执行绘制调用更不耗费资源时才是一种优化。\",\"绘制调用的资源需求取决于许多因素，主要是图形 API。例如，在主机或现代 API（如 Apple Metal）上，绘制调用的开销通常要低得多，而且动态批处理通常不会带来性能提升。要确定在您的应用程序中使用动态批处理是否有益，请 Profiler 您的应用程序，比较启用和禁用动态批处理的情况。\",\"Unity 可以对阴影投射器使用动态批处理，即使它们的材质不同，只要 Unity 阴影通道所需的材质值相同。例如，多个箱子可以使用具有不同纹理的材质。虽然材质资源不同，但这种差异对于阴影投射器通道无关紧要，Unity 可以在阴影渲染步骤中批处理箱子 GameObject 的阴影。\",\"限制\",\"在以下情况下，Unity 要么根本无法使用动态批处理，要么只能有限地应用动态批处理：\",\"Unity 无法对包含超过 900 个顶点属性和 225 个顶点的网格应用动态批处理。这是因为网格的动态批处理每个顶点都有开销。例如，如果您的着色器使用顶点位置、顶点法线和单个 UV，那么 Unity 最多可以批处理 225 个顶点。但是，如果您的着色器使用顶点位置、顶点法线、UV0、UV1 和顶点切线，那么 Unity 只能批处理 180 个顶点。\",\"如果 GameObject 使用不同的材质实例，Unity 无法将它们批处理在一起，即使它们本质上是相同的。唯一的例外是阴影投射器渲染。\",\"具有光照贴图的 GameObject 具有额外的渲染器参数。这意味着，如果您想要批处理具有光照贴图的 GameObject，它们必须指向相同的光照贴图位置。\",\"Unity 无法完全对使用多通道着色器的 GameObject 应用动态批处理。 \",\"几乎所有 Unity 着色器在正向渲染中都支持多个灯光。为了实现这一点，它们为每个灯光处理一个额外的渲染通道。Unity 仅批处理第一个渲染通道。它无法批处理每个像素灯光的额外绘制调用。\",\"Legacy Deferred rendering path 不支持动态批处理，因为它以两个渲染通道绘制 GameObject。第一个通道是灯光预通道，第二个通道渲染 GameObject。\",\"动态生成的几何体的动态批处理\",\"以下渲染器动态生成几何体（例如粒子和线），您可以使用动态批处理进行优化：\",\"Built-in Particle Systems\",\"Line Renderers\",\"Trail Renderers\",\"动态批处理对于动态生成的几何体的工作方式与网格不同：\",\"对于每个渲染器，Unity 将所有可动态批处理的内容构建到一个大的顶点缓冲区中\",\"渲染器为批处理设置材质状态\",\"然后将顶点缓冲区绑定到 GPU\",\"对于批处理中的每个渲染器，Unity 更新顶点缓冲区中的偏移量并提交新的绘制调用\",\"这种方法类似于 Unity 为 静态批处理 提交绘制调用的方式。\"]},\"111\":{\"h\":\"手动合并网格\",\"t\":[\"您可以手动将多个网格组合成单个网格来优化 DrawCall。Unity 在单个绘制调用中渲染组合的网格，而不是每个网格一个绘制调用。在网格彼此靠近且不相对移动的情况下，此技术可以是 DrawCall 批处理 的良好替代方案。例如，对于带有许多抽屉的静态橱柜，将所有内容组合成一个网格是有意义的。\",\"警告：Unity 无法单独剔除您组合的网格。这意味着如果组合网格的一部分在屏幕上，Unity 会绘制整个组合网格。如果网格是静态的并且您希望 Unity 单独剔除它们，请改用 静态批处理。\",\"有两种主要方法可以组合网格：\",\"在创作网格时使用您的资产生成工具\",\"在 Unity 中使用 Mesh.CombineMeshes\"]},\"112\":{\"h\":\"\",\"t\":[\"可编程渲染管线 (SRP) 批处理是一种 DrawCall 优化，可显著提高使用 SRP 的应用程序的性能。SRP 批处理器减少了 Unity 准备和分派使用相同着色器变体的材质的绘制调用所需的 CPU 时间。\",\"相同 Shader(或者变体) 但是材质不相同\",\"可编程渲染管线 (SRP) 批处理器减少了 Unity 渲染使用相同着色器变体的许多材质的场景所需的 CPU 时间。\",\"渲染管线兼容性\",\"功能\",\"内置渲染管线\",\"通用渲染管线 (URP)\",\"高清渲染管线 (HDRP)\",\"自定义可编程渲染管线(SRP)\",\"SRP Batcher\",\"否\",\"是\",\"是\",\"是\",\"GameObject 兼容性\",\"在任何给定场景中，一些 GameObject 与 SRP 批处理器兼容，而另一些则不兼容。兼容的 GameObject 使用 SRP 批处理器代码路径，不兼容的 GameObject 使用标准 SRP 代码路径。有关更多信息，请参阅 [SRP 批处理器的工作原理]。\",\"GameObject 必须满足以下要求才能与 SRP 批处理器代码路径兼容：\",\"GameObject 必须包含网格或蒙皮网格。它不能是粒子。\",\"GameObject 不能使用 [MaterialPropertyBlocks]。\",\"GameObject 使用的着色器必须与 SRP 批处理器兼容。有关更多信息，请参阅 [着色器兼容性]。\",\"着色器兼容性\",\"高清渲染管线 (HDRP) 和通用渲染管线 (URP) 中的所有光照和无光照着色器都符合此要求（这些着色器的粒子版本除外）。\",\"要使自定义着色器与 SRP 批处理器兼容，它必须满足以下要求：\",\"着色器必须在名为 UnityPerDraw 的单个常量缓冲区中声明所有内置引擎属性。例如，unity_ObjectToWorld 或 unity_SHAr。\",\"着色器必须在名为 UnityPerMaterial 的单个常量缓冲区中声明所有材质属性。\",\"您可以在 Inspector 面板中检查着色器的兼容性状态。\",\"您可以在特定着色器的 Inspector 面板中检查着色器的兼容性。\",\"使用 SRP 批处理器\",\"本节包含有关如何在 Unity 的预构建可编程渲染管线中使用 SRP 批处理器的信息。\",\"在 URP 中使用 SRP 批处理器\",\"要在 URP 中激活 SRP 批处理器，请执行以下操作：\",\"在 Project 窗口中选择 URP Asset。\",\"在 URP 资源的 Inspector 中，启用 SRP Batcher。如果此选项不可见，请按照以下 [如何显示 URP 资源的其他属性] 的说明操作。\",\"如何显示 URP 资源的其他属性\",\"默认情况下，Unity 不会显示 URP 资源中的某些高级属性。要查看所有可用属性：\",\"在 URP 资源中的任何部分，单击垂直省略号图标 (⋮) 并选择 Show Additional Properties\",\"显示其他属性\",\"Unity 在当前部分显示所有可用属性。\",\"要显示所有部分中的所有其他属性：\",\"单击垂直省略号图标并选择 Show All Additional Properties。Unity 在 Preferences 窗口中打开 Core Render Pipeline 部分。\",\"在属性 Additional Properties > Visibility 中，选择 All Visible。\",\"Additional Properties > Visibility > All Visible\",\"在 HDRP 中使用 SRP 批处理器\",\"当您使用 HDRP 时，Unity 默认启用 SRP 批处理器。不建议禁用 SRP 批处理器。但是，您可以暂时禁用它以进行调试。\",\"要使用 Editor 在构建时启用和禁用 SRP 批处理器：\",\"在 Project 窗口中选择 HDRP 资源。\",\"在资源的 Inspector 中，进入 Debug mode。在 Debug 模式下，您可以看到 HDRP 资源的属性，包括 SRP Batcher 属性。\",\"选择 EnableSRP Batcher 以启用或禁用 SRP 批处理器。\",\"要在运行时启用或禁用 SRP 批处理器，请在您的 C# 代码中切换以下全局变量：\",\"GraphicsSettings.useScriptableRenderPipelineBatching = true;\",\"SRP 批处理器的工作原理\",\"传统的优化绘制调用的方法是减少它们的数量。相反，SRP 批处理器减少了绘制调用之间的渲染状态更改。为此，SRP 批处理器将一系列 bind 和 draw GPU 命令组合在一起。每个命令序列称为 SRP 批处理。\",\"绑定和绘制命令的批处理减少了绘制调用之间的 GPU 设置。\",\"要为您的渲染实现最佳性能，每个 SRP 批处理应包含尽可能多的 bind 和 draw 命令。要实现这一点，请尽可能少地使用着色器变体。您仍然可以使用任意数量的具有相同着色器的不同材质。\",\"当 Unity 在渲染循环期间检测到新材质时，CPU 会收集所有属性并将它们绑定到 GPU 的常量缓冲区中。GPU 缓冲区的数量取决于着色器如何声明其常量缓冲区。\",\"SRP 批处理器是一种低级渲染循环，它使材质数据持久保存在 GPU 内存中。如果材质内容没有更改，SRP 批处理器不会进行任何渲染状态更改。相反，SRP 批处理器使用专用代码路径在大型 GPU 缓冲区中更新 Unity 引擎属性，如下所示：\",\"SRP 批处理器渲染工作流程。SRP 批处理器使用专用代码路径在大型 GPU 缓冲区中更新 Unity 引擎属性。\",\"在这里，CPU 仅处理标记为 Per Object large buffer 的 Unity 引擎属性。所有材质都有位于 GPU 内存中的持久常量缓冲区，随时可以使用。这加快了渲染速度，因为：\",\"所有材质内容现在都持久保存在 GPU 内存中\",\"专用代码管理一个大型的每对象 GPU 常量缓冲区，用于所有每对象属性\",\"移除 GameObject 的 SRP 批处理器兼容性\",\"在某些罕见情况下，您可能需要使特定 GameObject 与 SRP 批处理器不兼容。例如，如果您想使用 GPU instancing，它与 SRP 批处理器不兼容。如果您想使用完全相同的材质渲染许多相同的网格，GPU 实例化可能比 SRP 批处理器更高效。要使用 GPU 实例化，您必须：\",\"使用 Graphics.DrawMeshInstanced\",\"手动移除 SRP 批处理器兼容性并为材质启用 GPU 实例化\",\"有两种方法可以从 GameObject 移除与 SRP 批处理器的兼容性：\",\"使着色器不兼容\",\"使渲染器不兼容\",\"提示：如果您使用 GPU 实例化而不是 SRP 批处理器，请使用 Profiler 确保 GPU 实例化对您的应用程序比 SRP 批处理器更高效。\",\"移除着色器兼容性\",\"您可以使手写和 Shader Graph 着色器与 SRP 批处理器不兼容。但是，对于 Shader Graph 着色器，如果您经常更改和重新编译 Shader Graph，使 renderer incompatible 更简单。\",\"要使 Unity 着色器与 SRP 批处理器不兼容，您需要对着色器源文件进行更改：\",\"对于手写着色器，打开着色器源文件。对于 Shader Graph 着色器，将 Shader Graph 的编译着色器源代码复制到新的着色器源文件中。在您的应用程序中使用新的着色器源文件而不是 Shader Graph。\",\"在着色器的 Properties 块中添加一个新的 material property 声明。不要在 UnityPerMaterial 常量缓冲区中声明新的材质属性。\",\"材质属性不需要做任何事情；只要有一个不在 UnityPerMaterial 常量缓冲区中的材质属性，就会使着色器与 SRP 批处理器不兼容。\",\"警告：如果您使用 Shader Graph，请注意每次编辑和重新编译 Shader Graph 时，您都必须重复此过程。\",\"移除渲染器兼容性\",\"您可以使单个渲染器与 SRP 批处理器不兼容。为此，请向渲染器添加 MaterialPropertyBlock。\",\"在 Unity Frame Debugger 中分析 SRP 批处理器\",\"您可以在 Frame Debugger 窗口中检查 SRP 批处理的状态。每个 SRP 批处理显示 Unity 使用了多少绘制调用，Unity 附加到着色器的关键字，以及 Unity 没有将该绘制调用与前一个批处理在一起的原因。\",\"要检查 SRP 批处理器批处理的状态，请执行以下操作：\",\"在 Editor 中，打开 Frame Debugger（菜单：Window > Analysis > Frame Debugger）。\",\"在 Frame Debugger 中，转到 Render Camera > Render Opaques。\",\"展开 RenderLoopNewBatcher.Draw 列表。\",\"选择要检查的 SRP Batch。\",\"在下面的示例中，原因是：Nodes have different shaders。这意味着该 SRP 批处理的着色器与前一个 SRP 批处理的着色器不同。因为 SRP 批处理器使用了不同的着色器，所以它创建了一个新的批处理。如果多个 SRP 批处理的绘制调用数量较少，通常意味着项目使用了太多的着色器变体。\",\"在 Frame Debugger 窗口中，您可以找到有关单个 SRP 批处理的详细信息，包括为什么 SRP 批处理器创建新的 SRP 批处理而不是继续现有的批处理。\",\"如果您编写自己的可编程渲染管线，而不是使用通用渲染管线或高清渲染管线，请尝试编写一个通用的多用途着色器，关键字数量最少。这是最优的，因为您可以使用任意数量的材质属性。\"]},\"113\":{\"h\":\"GPU 实例化\",\"t\":[\"原文地址 - UnityManual\",\"GPU instancing 是一种 DrawCall 优化方法，它使用相同的材质在单个绘制调用中渲染网格的多个副本。网格的每个副本称为一个实例。这对于绘制在场景中多次出现的内容很有用，例如树木或灌木。\",\"GPU 实例化在同一个绘制调用中渲染相同的网格。为了增加变化并减少重复感，每个实例可以有不同的属性，例如 Color 或 Scale。渲染多个实例的绘制调用在 Frame Debugger 中显示为 Draw Mesh (instanced)。\"]},\"114\":{\"h\":\"要求和兼容性\",\"t\":[\"本节包含有关 GPU 实例化的平台、渲染管线和 SRP Batcher 兼容性信息。\",\"平台兼容性\",\"GPU 实例化在所有平台上都可用，除了 WebGL 1.0。\",\"渲染管线兼容性\",\"功能\",\"内置渲染管线\",\"通用渲染管线 (URP)\",\"高清渲染管线 (HDRP)\",\"自定义可编程渲染管线(SRP)\",\"GPU instancing\",\"是\",\"是 (1)\",\"是 (1)\",\"是 (1)\",\"(1) 仅当着色器与 SRP Batcher 不兼容时。\",\"GPU 实例化与 SRP Batcher 不兼容。SRP Batcher 优先于 GPU 实例化。如果 GameObject 与 SRP Batcher 兼容，Unity 会使用 SRP Batcher 来渲染它，而不是 GPU 实例化。有关优化方法优先级的更多信息，请参阅 Optimization priority。\",\"如果您的项目使用 SRP Batcher 并且您想对 GameObject 使用 GPU 实例化，您可以执行以下操作之一：\",\"使用 Graphics.DrawMeshInstanced。此 API 绕过 GameObject 的使用，并使用指定的参数直接在屏幕上绘制网格。\",\"手动移除 SRP Batcher 兼容性。有关如何执行此操作的信息，请参阅 Intentionally removing compatibility。\"]},\"115\":{\"h\":\"使用 GPU 实例化\",\"t\":[\"Unity 对共享相同网格和材质的 GameObject 使用 GPU 实例化。要对网格和材质进行实例化：\",\"首先，材质的 Shader 必须支持 GPU 实例化。 \",\"Unity 的 Standard Shader 支持 GPU 实例化。\",\"所有 Surface Shaders 也支持。\",\"要为任何其他着色器添加 GPU 实例化支持，请参阅 创建支持 GPU instancing 的着色器。\",\"其次，网格必须来自以下来源(之一)，按行为分组： \",\"MeshRenderer 组件或 Graphics.RenderMesh 调用。Unity 将这些网格添加到列表中，然后检查哪些网格可以实例化。Unity 不支持 SkinnedMeshRenderers 或附加到与 SRP Batcher 兼容的 GameObject 的 MeshRenderer 组件的 GPU 实例化。\",\"Graphics.RenderMeshInstanced 或 Graphics.RenderMeshIndirect 调用。这些方法使用相同的着色器多次渲染相同的网格。对这些方法的每次调用都会发出一个单独的绘制调用。Unity 不会合并这些绘制调用。\",\"要对材质使用 GPU 实例化，请在 Inspector 中选择 Enable GPU Instancing 选项。\",\"材质 Inspector 中显示的 Enable GPU Instancing 选项。\"]},\"116\":{\"h\":\"光照\",\"t\":[\"GPU 实例化支持 Unity 的 Baked Global Illumination system。Unity Standard Shaders 和 Surface Shaders 默认支持 GPU 实例化和 Unity 的 Baked Global Illumination 系统。\",\"每个 GPU 实例支持以下来源(之一)的全局光照：\",\"任意数量的 Light Probes。\",\"一个 Lightmap。实例可以在 Lightmap 中使用多个图集区域。\",\"一个 Light Probe Proxy Volume(LPPV) 组件。您必须为包含所有实例的空间体积烘焙 LPPV。\",\"GPU 实例化自动适用于：\",\"受 Light Probes 影响的动态 Mesh Renderers。\",\"烘焙到相同 Lightmap 纹理的静态 Mesh Renderers。在此上下文中，如果 Mesh Renderer 在其 Static Editor Flags 中包含 Contribute GI，则它是静态的。\",\"要为 Graphics.DrawMeshInstanced 启用 Light Probe 渲染，请将 LightProbeUsage 参数设置为 CustomProvided 并提供包含 Probe 数据的 MaterialPropertyBlock。\",\"有关更多信息和代码示例，请参阅 LightProbes.CalculateInterpolatedLightAndOcclusionProbes。\",\"或者，您可以将 LPPV 组件引用和 LightProbeUsage.UseProxyVolume 传递给 Graphics.DrawMeshInstanced。当您这样做时，所有实例都会对 L0 和 L1 bands 的 Light Probe 数据进行采样。如果要补充 L2 数据和遮挡数据，请使用 MaterialPropertyBlock。\",\"有关更多信息，请参阅 Light Probes: Technical Information。\"]},\"117\":{\"h\":\"性能影响\",\"t\":[\"顶点数量较少的网格无法使用 GPU 实例化高效处理，因为 GPU 无法以充分利用 GPU 资源的方式分配工作。这种处理效率低下会对性能产生不利影响。开始出现效率低下的阈值取决于 GPU，但作为一般规则，不要对顶点少于 256 个的网格使用 GPU 实例化。\",\"如果您想多次渲染顶点数量较少的网格，最佳实践是创建一个包含所有网格信息的单一缓冲区，并使用它来绘制网格。\"]},\"118\":{\"h\":\"创建支持 GPU 实例化的着色器\",\"t\":[\"本页包含如何向自定义 Unity 着色器添加 GPU 实例化支持的信息。它首先解释自定义 Unity 着色器支持 GPU 实例化所需的着色器关键字、变量和函数。然后包括如何向 Surface shaders 和 vertex/fragment shaders 添加每实例数据的示例。\",\"渲染管线兼容性\",\"功能\",\"内置渲染管线\",\"通用渲染管线 (URP)\",\"高清渲染管线 (HDRP)\",\"自定义可编程渲染管线(SRP)\",\"Custom GPU instanced shaders\",\"是\",\"否\",\"否\",\"否\",\"着色器修改\",\"添加\",\"描述\",\"#pragma multi_compile_instancing\",\"生成实例化变体。这对于 fragment 和 vertex shaders 是必需的。对于 Surface Shaders 是可选的。\",\"#pragma instancing_options\",\"指定 Unity 用于实例的选项。有关可用选项开关的信息，请参阅 [Instancing_options 开关]。\",\"UNITY_VERTEX_INPUT_INSTANCE_ID\",\"在 vertex shader 输入/输出结构中定义实例 ID。要使用此宏，请启用 INSTANCING_ON 着色器关键字。否则，Unity 不会设置实例 ID。 要访问实例 ID，在 #ifdef INSTANCING_ON 块中使用 vertexInput.instanceID。如果不使用此块，变体将无法编译。\",\"UNITY_INSTANCING_BUFFER_START(bufferName)\",\"声明名为 bufferName 的每实例常量缓冲区的开始。将此宏与 UNITY_INSTANCING_BUFFER_END 一起使用，以包装您希望每个实例唯一的属性的声明。使用 UNITY_DEFINE_INSTANCED_PROP 在缓冲区中声明属性。\",\"UNITY_INSTANCING_BUFFER_END(bufferName)\",\"声明名为 bufferName 的每实例常量缓冲区的结束。将此宏与 UNITY_INSTANCING_BUFFER_START 一起使用，以包装您希望每个实例唯一的属性的声明。使用 UNITY_DEFINE_INSTANCED_PROP 在缓冲区中声明属性。\",\"UNITY_DEFINE_INSTANCED_PROP(type, propertyName)\",\"定义具有指定类型和名称的每实例着色器属性。在下面的示例中，_Color 属性是唯一的。\",\"UNITY_SETUP_INSTANCE_ID(v);\",\"允许着色器函数访问实例 ID。对于 vertex shaders，此宏在开头是必需的。对于 fragment shaders，此添加是可选的。有关示例，请参阅 Vertex Fragment Shader 示例。\",\"UNITY_TRANSFER_INSTANCE_ID(v, o);\",\"将实例 ID 从输入结构复制到 vertex shader 中的输出结构。如果您需要在 fragment shader 中访问每实例数据，请使用此宏。\",\"UNITY_ACCESS_INSTANCED_PROP(bufferName, propertyName)\",\"访问实例化常量缓冲区中的每实例着色器属性。Unity 使用实例 ID 索引到实例数据数组。bufferName 必须与包含指定属性的常量缓冲区的名称匹配。此宏为 INSTANCING_ON 和非实例化变体编译不同。\",\"当您使用多个每实例属性时，不需要在 MaterialPropertyBlock 对象中填充所有属性。此外，如果一个实例缺少属性，Unity 会从引用的材质中获取默认值。如果材质没有该属性的默认值，Unity 会将值设置为 0。不要将非实例化属性放在 MaterialPropertyBlock 中，因为这会禁用实例化。相反，为它们创建不同的材质。\",\"Instancing_options\",\"#pragma instancing_options 指令可以使用以下开关：\",\"开关\",\"描述\",\"forcemaxcount:batchSize 和 maxcount:batchSize\",\"在大多数平台上，Unity 会自动计算实例化数据数组大小。它将目标设备上的最大常量缓冲区大小除以包含所有每实例属性的结构的大小。通常，您不需要担心批处理大小。但是，某些平台需要固定数组大小。要为这些平台指定批处理大小，请使用 maxcount 选项。其他平台忽略此选项。如果要强制所有平台的批处理大小，请使用 forcemaxcount。例如，当您的项目使用 DrawMeshInstanced 发出带有 256 个实例化精灵的绘制调用时，这很有用。这两个选项的默认值为 500。\",\"assumeuniformscaling\",\"指示 Unity 假设所有实例都具有统一缩放（X、Y 和 Z 轴的缩放相同）。\",\"nolodfade\",\"使 Unity 不将 GPU 实例化应用于 LOD 淡出值。\",\"nolightprobe\",\"阻止 Unity 将 GPU 实例化应用于 Light Probe 值及其遮挡数据。如果您的项目不包含同时使用 GPU 实例化和 Light Probes 的 GameObject，将此选项设置为 ON 可以提高性能。\",\"nolightmap\",\"阻止 Unity 将 GPU 实例化应用于 lightmap 图集信息值。如果您的项目不包含同时使用 GPU 实例化和 lightmaps 的 GameObject，将此选项设置为 ON 可以提高性能。\",\"procedural:FunctionName\",\"生成一个额外的变体以与 Graphics.DrawMeshInstancedIndirect 一起使用。在 vertex shader 阶段开始时，Unity 调用冒号后指定的函数。要手动设置实例数据，请以与通常向着色器添加每实例数据相同的方式向此函数添加每实例数据。如果任何获取的实例属性包含在 fragment shader 中，Unity 也会在 fragment shader 开始时调用此函数。\"]},\"119\":{\"h\":\"使用带有 GPU 实例化的着色器变体\",\"t\":[\"默认情况下，Unity 会生成带有实例化 variants 的 Surface shaders，除非您在 #pragma 指令中指定 noinstancing。Unity 忽略在 Surface shader 中使用 #pragma multi_compile_instancing。\",\"Unity 的 Standard 和 StandardSpecular shaders 默认支持实例化，但除了变换之外没有其他每实例属性。\",\"如果您的场景中没有启用 GPU 实例化的 GameObject，则 Unity 会剥离实例化着色器变体。要覆盖剥离行为：\",\"打开 Project Settings（菜单：Edit > Project Settings）。\",\"转到 Graphics。\",\"在 Shader Stripping 部分，将 Instancing Variants 设置为 Keep All。\"]},\"120\":{\"h\":\"向 GPU 实例化着色器添加每实例属性\",\"t\":[\"默认情况下，Unity 在每个实例化绘制调用中 GPU 实例化具有不同 Transforms 的 GameObject。要向实例添加更多变化，修改着色器以添加每实例属性，例如颜色。您可以在 Surface shaders 和 vertex/fragment shaders 中执行此操作。\",\"自定义着色器不需要每实例数据，但它们确实需要一个实例 ID，因为世界矩阵需要一个才能正常工作。Surface shaders 会自动设置实例 ID，但自定义 vertex 和 fragment shaders 不会。要为自定义 vertex 和 fragment shaders 设置 ID，请在着色器开头使用 UNITY_SETUP_INSTANCE_ID。有关如何执行此操作的示例，请参阅 Vertex Fragment Shader 示例。\",\"当您声明实例化属性时，Unity 会从 GameObject 上设置的 MaterialPropertyBlock 对象中收集所有属性值到一个绘制调用中。有关如何使用 MaterialPropertyBlock 对象在运行时设置每实例数据的示例，请参阅 Changing per-instance data at runtime。\",\"向多通道着色器添加每实例数据时，请记住以下几点：\",\"如果多通道着色器有两个以上的通道，Unity 仅实例化第一个通道。这是因为 Unity 会为每个对象一起渲染后面的通道，这会强制材质更改。\",\"如果您在 Built-in Render Pipeline 中使用 Forward 渲染路径，Unity 无法高效实例化受多个灯光影响的对象。Unity 只能有效地对基础通道使用实例化，而不能对附加通道使用。有关光照通道的更多信息，请参阅有关 Forward Rendering and Pass Tags 的文档。\"]},\"121\":{\"h\":\"Surface shader 示例\",\"t\":[\"以下示例演示如何创建具有每个实例不同颜色值的实例化 Surface Shader。\",\"Shader \\\"Custom/InstancedColorSurfaceShader\\\" { Properties { _Color (\\\"Color\\\", Color) = (1,1,1,1) _MainTex (\\\"Albedo (RGB)\\\", 2D) = \\\"white\\\" {} _Glossiness (\\\"Smoothness\\\", Range(0,1)) = 0.5 _Metallic (\\\"Metallic\\\", Range(0,1)) = 0.0 } SubShader { Tags { \\\"RenderType\\\"=\\\"Opaque\\\" } LOD 200 CGPROGRAM // Uses the physically based standard lighting model with shadows enabled for all light types. #pragma surface surf Standard fullforwardshadows // Use Shader model 3.0 target #pragma target 3.0 sampler2D _MainTex; struct Input { float2 uv_MainTex; }; half _Glossiness; half _Metallic; UNITY_INSTANCING_BUFFER_START(Props) UNITY_DEFINE_INSTANCED_PROP(fixed4, _Color) UNITY_INSTANCING_BUFFER_END(Props) void surf (Input IN, inout SurfaceOutputStandard o) { fixed4 c = tex2D (_MainTex, IN.uv_MainTex) * UNITY_ACCESS_INSTANCED_PROP(Props, _Color); o.Albedo = c.rgb; o.Metallic = _Metallic; o.Smoothness = _Glossiness; o.Alpha = c.a; } ENDCG } FallBack \\\"Diffuse\\\" }\"]},\"122\":{\"h\":\"Vertex Fragment Shader 示例\",\"t\":[\"以下示例演示如何创建具有每个实例不同颜色值的实例化 Vertex 和 Fragment shader。与 Surface shader 不同，创建 Vertex 和 Fragment shader 时必须使用 UNITY_SETUP_INSTANCE_ID 手动设置实例 ID。\",\"Shader \\\"Custom/SimplestInstancedShader\\\" { Properties { _Color (\\\"Color\\\", Color) = (1, 1, 1, 1) } SubShader { Tags { \\\"RenderType\\\"=\\\"Opaque\\\" } LOD 100 Pass { CGPROGRAM #pragma vertex vert #pragma fragment frag #pragma multi_compile_instancing #include \\\"UnityCG.cginc\\\" struct appdata { float4 vertex : POSITION; UNITY_VERTEX_INPUT_INSTANCE_ID }; struct v2f { float4 vertex : SV_POSITION; UNITY_VERTEX_INPUT_INSTANCE_ID // 使用这个在 fragment shader 中访问实例属性 }; UNITY_INSTANCING_BUFFER_START(Props) UNITY_DEFINE_INSTANCED_PROP(float4, _Color) UNITY_INSTANCING_BUFFER_END(Props) v2f vert(appdata v) { v2f o; UNITY_SETUP_INSTANCE_ID(v); UNITY_TRANSFER_INSTANCE_ID(v, o); o.vertex = UnityObjectToClipPos(v.vertex); return o; } fixed4 frag(v2f i) : SV_Target { UNITY_SETUP_INSTANCE_ID(i); return UNITY_ACCESS_INSTANCED_PROP(Props, _Color); } ENDCG } } }\"]},\"123\":{\"h\":\"运行时更改每实例数据示例\",\"t\":[\"以下示例演示如何使用 MaterialPropertyBlock 对象在运行时为一组 GameObject 设置每实例数据。它将上述着色器示例中的 _Color 属性设置为随机颜色。\",\"重要：MaterialPropertyBlocks 会破坏 SRP Batcher 兼容性。\",\"using UnityEngine; public class MaterialPropertyBlockExample : MonoBehaviour { public GameObject[] objects; void Start() { MaterialPropertyBlock props = new MaterialPropertyBlock(); MeshRenderer renderer; foreach (GameObject obj in objects) { float r = Random.Range(0.0f, 1.0f); float g = Random.Range(0.0f, 1.0f); float b = Random.Range(0.0f, 1.0f); props.SetColor(\\\"_Color\\\", new Color(r, g, b)); renderer = obj.GetComponent<MeshRenderer>(); renderer.SetPropertyBlock(props); } } }\"]},\"124\":{\"h\":\"优化\",\"t\":[\"参考\",\"了解 Unity 的优化(Unity2022.3)\",\"Optimization - Unity6.1\",\"分类\",\"资源优化 \",\"资源审核\",\"纹理\",\"模型\",\"音频\",\"程序优化 \",\"内存管理\",\"垃圾回收\",\"程序集\",\"渲染优化 \",\"相机\",\"着色器\",\"纹理\",\"DrawCall\",\"DrawCall 批处理\",\"静态批处理\",\"动态批处理\",\"GPU 实例化\",\"手动合并网格\",\"SRP Batcher\",\"SRP Batcher 加速渲染性能\",\"BatchRendererGroup\"]},\"125\":{\"h\":\"SRP Batcher 加速渲染性能\",\"t\":[\"原文地址 - UnityBlog\",\"2018 年，我们推出了一种高度可定制的渲染技术，称为 可编程渲染管线(SRP)。其中包含一个新的底层引擎渲染循环 SRP Batcher，可以将 CPU 渲染速度提升 1.2 到 4 倍(具体取决于场景)。让我们看看如何最好地使用这一功能！\",\"https://youtu.be/pUM7ifjGKkM\",\"这段视频展示了 Unity 最糟糕的情况：每个对象都是动态的且使用不同的材质(颜色、纹理)。这个场景展示了许多相似的网格，但如果每个对象使用不同的网格也会得到相同的结果(因此无法使用 GPU instancing)。在 PlayStation 4 上加速约为 4 倍(本视频为 PC，Dx11)。\",\"注意：当我们说 4 倍加速时，指的是 CPU 渲染代码(\\\"RenderLoop.Draw\\\"和\\\"ShadowLoop.Draw\\\"分析器标记)。我们不是在讨论全局帧率(FPS)。\"]},\"126\":{\"h\":\"Unity 与材质\",\"t\":[\"Unity 编辑器有一个非常灵活的渲染引擎。您可以在帧的任何时间修改任何材质属性。此外，过去的渲染架构是为非恒定缓冲区(non-constant buffers)设计的，支持 DirectX9 等图形 API。然而，这些优秀功能也有一些缺点。例如，当 DrawCall 使用新材质时需要进行大量工作。因此基本上，场景中的材质越多，设置 GPU 数据所需的 CPU 资源就越多。\",\"标准 Unity 渲染工作流\",\"在内部渲染循环中，当检测到新材质时，CPU 会收集所有属性并在 GPU 内存中设置不同的常量缓冲区。GPU 缓冲区的数量取决于着色器如何声明其 CBUFFER。\"]},\"127\":{\"h\":\"SRP Batcher 工作原理\",\"t\":[\"当我们开发 SRP 技术时，必须重写一些底层引擎部分。我们看到了原生集成一些新范例(如 GPU 数据持久性)的绝佳机会。我们的目标是加速一般情况，即场景使用许多不同材质但很少着色器变体的情况。\",\"现在，底层渲染循环可以使材质数据在 GPU 内存中持久化。如果材质内容没有变化，则无需设置和上传缓冲区到 GPU。此外，我们使用专用代码路径快速更新大型 GPU 缓冲区中的内置引擎属性。现在新的流程图如下：\",\"SRP Batcher 渲染工作流\",\"这里，CPU 只处理内置引擎属性，标记为对象矩阵变换。所有材质都有位于 GPU 内存中的持久 CBUFFER，随时可用。总结一下，加速来自两个不同方面：\",\"每个材质内容现在持久保存在 GPU 内存中\",\"专用代码管理大型 per object GPU CBUFFER\",\"SRP Bacher 把同一种 shader 对应的材质球的材质，颜色放到一个缓冲区中，不用每帧设置给 GPU，每帧仅仅设置坐标、缩放、转换矩阵等变量给 GPU。 在过去的渲染架构中，Unity 采取对一个材质分配一个 CBuffer，这个 CBuffer 包括 shader 里显性的参数(自己定义的 uniform 参数)和隐性的参数(Unity 固定的 uniform modelMaterix，modelViewMartrix 等)，每一次的 DrawCall 都要更新这个 CBuffer。 在 SRP 的渲染架构中，Unity 采取了一个策略：对一个材质分配一个半 CBuffer，shader 的显性参数分配到了一个 CBuffer 里，shader 的隐性参数则是 N 个物体共享一个 CBuffer. 比如一个 shader 对应了 10 个物体，在 SRP 渲染架构中，一共分配了 11 个 CBuffer。10 个分别来村 10 个材质中的显性参数，然后分配一个大的共享 CBuffer，把这 10 个物体的 modelMatrix 这类隐性参数都放在一起。 这个策略为动静分离，材质的显性参数大部分是低频更新的，隐性部分是高频更新的。一次更新可以更新一片。 示例: 大型的共享 CBffer 和每个材质自己的 CBuffer 都有各自专门的代码进行更新，大部分情况下只需要更新大型共享 CBuffer，从而降低了一帧内的 SetPassCall 数目，和 GPUInstacing 相比，优于 ConstantBuffer 里不包含位置等信息(GPUInstance 是包含的)，仅包括了显性属性，所以一次 drawCall 无法渲染所有物体，所以 SRPBatcher 的 DrawCall 次数是没有降低的。而 GPUInstacing 需要相同的 Mesh 和材质球，条件更苛刻，但是可以降低 DrawCall。\"]},\"128\":{\"h\":\"如何启用 SRP Batcher\",\"t\":[\"您的项目必须使用轻量级渲染管线(LWRP)、高清渲染管线(HDRP)或您自己的自定义 SRP。要在 HDRP 或 LWRP 中激活 SRP Batcher，只需使用 SRP Asset Inspector 中的复选框。\",\"启用 SRP Batcher\",\"如果您想在运行时启用/禁用 SRP Batcher 以进行性能基准测试，也可以使用 C# 代码切换此全局变量：\",\"GraphicsSettings.useScriptableRenderPipelineBatching = true;\"]},\"129\":{\"h\":\"SRP Batcher 兼容性\",\"t\":[\"要使对象通过 SRP Batcher 代码路径渲染，有两个要求：\",\"对象必须是网格。不能是粒子或蒙皮网格。\",\"您必须使用与 SRP Batcher 兼容的着色器。HDRP 和 LWRP 中的所有 Lit 和 Unlit 着色器都符合此要求。\",\"要使着色器与 SRP 兼容：\",\"所有内置引擎属性必须在名为 UnityPerDraw 的单个 CBUFFER 中声明。例如 unity_ObjectToWorld 或 unity_SHAr。\",\"所有材质属性必须在名为 UnityPerMaterial 的单个 CBUFFER 中声明。\",\"您可以在 Inspector 面板中查看着色器的兼容性状态。仅当您的项目基于 SRP 时才会显示此兼容性部分。\",\"SRP Batcher 兼容性\",\"在任何给定场景中，有些对象与 SRP Batcher 兼容，有些不兼容。但场景仍能正确渲染。兼容对象将使用 SRP Batcher 代码路径，其他对象仍使用标准 SRP 代码路径。\"]},\"130\":{\"h\":\"性能分析的艺术\",\"t\":[\"SRPBatcherProfiler.cs\",\"如果您想测量特定场景中 SRP Batcher 的速度提升，可以使用 SRPBatcherProfiler.cs C# 脚本。只需将脚本添加到场景中。当此脚本运行时，您可以使用 F8 键切换覆盖显示。您还可以在播放期间使用 F9 键打开/关闭 SRP Batcher。如果在 PLAY 模式(F8)中启用覆盖，您应该会看到许多有用信息：\",\"这里，所有时间均以毫秒(ms)为单位测量。这些时间测量显示 CPU 在 Unity SRP 渲染循环中花费的时间。\",\"注意：时间测量表示一帧中所有 \\\"RenderLoop.Draw\\\" 和 \\\"Shadows.Draw\\\" 标记的累积时间，无论线程所有者是谁。当您看到 \\\"1.31ms SRP Batcher code path\\\" 时，可能 0.31ms 花费在主线程上，1ms 分布在所有图形作业上。\"]},\"131\":{\"h\":\"覆盖信息\",\"t\":[\"在此表中，您可以看到 PLAY 模式中可见覆盖的每个设置的描述，从上到下：\",\"注意：我们犹豫是否在覆盖底部添加 FPS，因为在优化时您应该非常小心 FPS 指标。首先，FPS 不是线性的，因此看到 FPS 增加 20% 并不能立即告诉您优化了多少场景。其次，FPS 是帧的全局指标。FPS(或全局帧时间)取决于渲染之外的许多其他因素，如 C# 游戏逻辑、物理、剔除等。\",\"您可以从 GitHub 上的 SRP Batcher 项目模板 获取 SRPBatcherProfiler.cs。\"]},\"132\":{\"h\":\"各种场景基准测试\",\"t\":[\"以下是 Unity 场景截图，分别关闭和打开 SRP Batcher，以查看不同情况下的加速效果。\",\"Book of the Dead，HDRP，PlayStation 4。加速 1.47 倍。请注意 FPS 没有变化，因为此场景受 GPU 限制。您在 CPU 端还有 12ms 可用于其他操作。PC 上的加速几乎相同。\",\"FPS Sample，HDRP，PC DirectX 11。加速 1.23 倍。请注意仍有 1.67ms 用于标准代码路径，因为 SRP Batcher 不兼容。在这种情况下，蒙皮网格和一些使用材质属性块的粒子。\",\"Boat Attack，LWRP，PlayStation 4。加速 2.13 倍。\"]},\"133\":{\"h\":\"支持的平台\",\"t\":[\"SRP Batcher 几乎在所有平台上都能工作。下表显示平台和所需的最低 Unity 版本。Unity 2019.2 目前处于开放 alpha阶段。\",\"关于 VR 的一些说明\",\"SRP Batcher 快速代码路径在 VR 中仅支持 SinglePassInstanced 模式。启用 VR 不会增加任何 CPU 时间(感谢 SinglePassInstanced 模式)\"]},\"134\":{\"h\":\"常见问题\",\"t\":[\"如何知道我是否以最佳方式使用 SRP Batcher？\",\"使用 SRPBatcherProfiler.cs，首先检查 SRP Batcher 是否开启。然后，查看 Standard code path 时间。这应该接近 0，所有时间都应花费在 SRP Batcher code path 上。有时，如果场景使用一些蒙皮网格或粒子，在 Standard code path 上花费一些时间是正常的。查看我们的 GitHub 上的 SRP Batcher 基准测试项目。\",\"无论 SRP Batcher 开启还是关闭，SRPBatcherProfiler 显示的时间都相似。为什么？\",\"首先，您应该检查几乎所有渲染时间是否都通过新代码路径(见上文)。如果是这样，并且数字仍然相似，那么查看 flush 数字。当 SRP Batcher 开启时，这个 flush 数字应该大幅下降。作为经验法则，除以 10 非常好，除以 2 也不错。如果 flush 计数没有大幅下降，意味着您仍然有许多着色器变体。尝试减少着色器变体的数量。如果您做了许多不同的着色器，尝试制作一个具有更多参数的 \\\"超级\\\" 着色器。然后使用许多不同的材质参数是免费的。\",\"启用 SRP Batcher 后全局 FPS 没有变化。为什么？\",\"检查以上两个问题。如果 SRPBatcherProfiler 显示 CPU Rendering time 快了两倍，而 FPS 没有变化，那么 CPU 渲染部分不是您的瓶颈。这并不意味着您不受 CPU 限制-相反，可能您使用了太多 C# 游戏逻辑或太多物理元素。无论如何，如果 CPU Rendering time 快了两倍，仍然是积极的。您可能已经注意到在顶部视频中，即使加速 3.5 倍，场景仍保持在 60FPS。这是因为我们开启了 VSYNC。SRP Batcher 确实在 CPU 端节省了 6.8ms。这些毫秒可用于其他任务。它也可以节省移动设备上的电池寿命。\"]},\"135\":{\"h\":\"如何检查 SRP Batcher 效率\",\"t\":[\"理解 SRP Batcher 上下文中的 \\\"批处理\\\" 是什么很重要。传统上，人们倾向于减少 DrawCall 数量以优化 CPU 渲染成本。真正的原因是引擎在发出绘制之前必须设置很多东西。真正的 CPU 成本来自该设置，而不是来自 GPU DrawCall 本身(这只是推送到 GPU 命令缓冲区的一些字节)。SRP Batcher 不会减少 DrawCall 数量。它只是减少 DrawCall 之间的 GPU 设置成本。\",\"您可以在以下工作流程中看到这一点：\",\"左侧是标准 SRP 渲染循环。右侧是 SRP Batcher 循环。在 SRP Batcher 上下文中，\\\"批处理\\\" 只是一系列\\\"Bind\\\"、\\\"Draw\\\"、\\\"Bind\\\"、\\\"Draw\\\"...GPU 命令。\",\"在标准 SRP 中，缓慢的 SetShaderPass 为每个新材质调用。在 SRP Batcher 上下文中，SetShaderPass 为每个新着色器变体调用。\",\"要获得最大性能，您需要尽可能保持这些批处理大。因此您需要避免任何着色器变体更改，但如果它们使用相同的着色器，可以使用任意数量的不同材质。\",\"您可以使用 Unity Frame Debugger 查看 SRP Batcher \\\"批处理\\\" 长度。每个批处理都是帧调试器中称为 \\\"SRP Batch\\\" 的事件，如下所示：\",\"参见左侧的 SRP Batch 事件。另请参见批处理大小，即 Draw Calls 数量(此处为 109)。这是一个相当高效的批处理。您还可以看到前一个批处理中断的原因(\\\"Node use different shader keywords\\\")。这意味着该批处理使用的着色器关键字与前一批处理中的关键字不同。这意味着着色器变体已更改，我们必须中断批处理。\",\"在某些场景中，某些批处理大小可能非常低，如此处所示：\",\"批处理大小仅为 2。这可能意味着您有太多不同的着色器变体。如果您正在创建自己的 SRP，请尝试编写具有最少关键字的通用\\\"超级\\\"着色器。您不必担心在 \\\"property\\\" 部分放入多少材质参数。\",\"注意：帧调试器中的 SRP Batcher 信息需要 Unity 2018.3 或更高版本。\"]},\"136\":{\"h\":\"编写自己的兼容着色器的 SRP\",\"t\":[\"注意：本节适用于编写自己的可编程渲染循环和着色器库的高级用户。LWRP 或 HDRP 用户可以跳过此部分，因为我们提供的所有着色器都已与 SRP Batcher 兼容。\",\"如果您正在编写自己的渲染循环，您的着色器必须遵循一些规则才能通过 SRP Batcher 代码路径。\",\"Per Material 变量\",\"首先，所有 Per Material 数据应在名为 UnityPerMaterial 的单个 CBUFFER 中声明。什么是 Per Material 数据？通常是您在 shader property 部分声明的所有变量。即您的艺术家可以使用材质 GUI 检查器调整的所有变量。例如，让我们看一个简单的着色器：\",\"Properties { _Color1 (\\\"Color 1\\\", Color) = (1,1,1,1) _Color2 (\\\"Color 2\\\", Color) = (1,1,1,1) } float4 _Color1; float4 _Color2;\",\"如果您编译此着色器，着色器检查器面板将显示：\",\"要解决这个问题，只需像这样声明所有 per material 数据：\",\"CBUFFER_START(UnityPerMaterial) float4 _Color1; float4 _Color2; CBUFFER_END\",\"Per Object 变量\",\"SRP Batcher 还需要一个非常特殊的名为 UnityPerDraw 的 CBUFFER。这个 CBUFFER 应包含所有 Unity 内置引擎变量。\",\"UnityPerDraw CBUFFER 中变量的声明顺序也很重要。所有变量都应遵循我们称为 Block Feature 的布局。例如，\\\"Space Position block feature\\\" 应包含所有这些变量，按此顺序：\",\"float4x4 unity_ObjectToWorld; float4x4 unity_WorldToObject; float4 unity_LODFade; float4 unity_WorldTransformParams;\",\"如果您不需要某些 block feature，可以不必声明它们。UnityPerDraw 中的所有内置引擎变量应为 float4 或 float4x4。在移动设备上，人们可能希望使用 real4(16 位编码的浮点值)来节省一些 GPU 带宽。并非所有 UnityPerDraw 变量都能使用 real4。请参考 \\\"Could be real4\\\" 列。\",\"以下是描述 UnityPerDraw CBUFFER 中所有可能 block feature 的表格：\",\"注意：如果一个 feature block 中的一个变量声明为 real4(half)，则该 feature block 的所有其他潜在变量也应声明为 real4。\",\"提示 1：始终在检查器中检查新着色器的兼容性状态。我们会检查几个潜在错误(UnityPerDraw 布局声明等)并显示为什么不兼容。\",\"提示 2：在编写自己的 SRP 着色器时，可以参考 LWRP 或 HDRP 包查看它们的 UnityPerDraw CBUFFER 声明以获取灵感。\"]},\"137\":{\"h\":\"未来\",\"t\":[\"我们仍在通过在某些渲染通道(特别是阴影和深度通道)中增加批处理大小来改进 SRP Batcher。\",\"我们还在努力添加与 SRP Batcher 一起使用的自动 GPU instancing。我们从新的 DOTS 渲染器开始，该渲染器用于我们的 MegaCity 演示。在 Unity 编辑器中的加速效果相当惊人，从 10 FPS 提升到 50 FPS。\",\"在编辑器中使用 SRP Batcher 和 DOTS 渲染器的 MegaCity。性能差异如此之大，以至于全局帧速率提高了五倍。\",\"注意：准确地说，启用 SRP Batcher 时的这种巨大加速仅限于编辑器，因为编辑器当前不使用图形作业。独立播放器模式中的加速约为 x2。\",\"编辑器中的 MegaCity。如果您能以 60hz 播放视频，您会感受到启用 SRP Batcher 时的速度提升。\",\"注意：带有 DOTS 渲染器的 SRP Batcher 仍处于实验阶段，正在积极开发中。\"]},\"138\":{\"h\":\"优化 Unity UI\",\"t\":[\"原文地址 - UnityLearn\",\"优化基于 Unity UI 的用户界面是一门艺术。本指南将讨论 Unity UI 的基本概念、底层算法和代码，以及常见问题和解决方案。\"]},\"139\":{\"h\":\"Unity UI 优化指南\",\"t\":[\"优化基于 Unity UI 的用户界面是一门艺术。硬性规则很少见；相反，必须根据系统行为仔细评估每种情况。优化任何 Unity UI 时的核心矛盾是在绘制调用和批处理成本之间取得平衡。虽然可以使用一些常识性技术来减少其中一项，但复杂的 UI 必须做出权衡。\",\"然而，与其他领域的最佳实践一样，优化 Unity UI 的尝试应从性能分析开始。在尝试优化 Unity UI 系统之前，主要任务是找到观察到的性能问题的确切原因。Unity UI 用户通常会遇到四类问题：\",\"过度的 GPU 片段着色器(fragment shader)利用率（即填充率(fill-rate)过度利用）\",\"CPU 花费过多时间重建 Canvas 批处理\",\"Canvas 批处理重建次数过多（过度脏标记(over-dirtying)）\",\"CPU 花费过多时间生成顶点（通常来自文本）\",\"原则上可以创建一个性能受限于发送到 GPU 的绘制调用数量的 Unity UI。然而在实践中，任何因绘制调用而使 GPU 过载的项目更可能是受限于填充率过度使用。\",\"本指南将讨论 Unity UI 的基本概念、底层算法和代码，以及常见问题和解决方案。它分为五个章节：\",\"Unity UI 基础 定义了 Unity UI 特有的术语，并讨论了许多用于渲染 UI 的基本过程的细节，包括批处理几何体的构建。强烈建议读者从本章开始。\",\"Unity UI 性能分析工具 讨论使用开发者可用的各种工具收集性能分析数据。\",\"填充率、Canvas 和输入 讨论提高 Unity UI 的 Canvas 和输入组件性能的方法。\",\"UI 控件 讨论 UI 文本、滚动视图和其他特定组件的优化，以及一些不适合其他地方的技巧。\",\"其他技术和技巧 讨论一些不适合其他地方的问题，包括 UI 系统中一些基本技巧和\\\"陷阱\\\"的解决方法。\",\"UI 源代码\",\"请记住，Unity UI 的 Graphic 和 Layout 组件是完全开源的。它们的源代码可以在 Unity-Technologies uGUI 中找到。\"]},\"140\":{\"h\":\"Unity UI 基础\",\"t\":[\"理解组成 Unity UI 系统的不同部分很重要。有几个基本类和组件共同构成了这个系统。本章首先定义本系列文章中使用的许多术语，然后讨论 Unity UI 几个关键系统的底层行为。\"]},\"141\":{\"h\":\"术语\",\"t\":[\"Canvas 是 Unity 原生代码(native-code)组件，用于提供分层几何体，供 Unity 的渲染系统使用，这些几何体将被绘制在游戏的世界空间中或之上。\",\"Canvas 负责将其内的几何体组合成批处理，生成适当的渲染命令并将这些命令发送到 Unity 的图形系统。所有这些都是在原生 C++ 代码中完成的，称为重新批处理(Rebatch)或批处理构建(Batch Build)。当 Canvas 包含需要重新批处理的几何体时，该 Canvas 被认为是脏(Dirty)的。\",\"Geometry(几何体) 由 Canvas Renderer 组件提供给 Canvas。\",\"子 Canvas(Sub-canvas) 只是嵌套在另一个 Canvas 组件中的 Canvas 组件。子 Canvas 将其子项与父项隔离；脏的子项不会强制父项重建其几何体，反之亦然。在某些边缘情况下这不成立，例如当父 Canvas 的变化导致子 Canvas 调整大小时。\",\"Graphic 是 Unity UI C# 库提供的一个基类。它是所有向 Canvas 系统提供可绘制几何体的 Unity UI C# 类的基类。大多数内置的 Unity UI Graphics 都是通过 MaskableGraphic 子类实现的，这允许它们通过 IMaskable 接口被遮罩。Drawable 的主要子类是 Image 和 Text，它们提供了同名的组件。\",\"Layout 组件控制 RectTransforms 的大小和位置，通常用于创建需要相对大小或内容相对定位的复杂布局。Layout 组件仅依赖于 RectTransforms，并且仅影响其关联的 RectTransforms 的属性。它们不依赖于 Graphic 类，可以独立于 Unity UI 的 Graphic 组件使用。\",\"Graphic 和 Layout 组件都依赖于 CanvasUpdateRegistry 类，该类在 Unity Editor 界面中不公开。这个类跟踪必须更新的 Layout 组件和 Graphic 组件的集合，并在它们关联的 Canvas 调用 willRenderCanvases 事件时根据需要触发更新。\",\"Layout 和 Graphic 组件的更新称为重建(Rebuild)。重建过程将在本文档后面详细讨论。\"]},\"142\":{\"h\":\"渲染细节\",\"t\":[\"在 Unity UI 中组合用户界面时，请记住 Canvas 绘制的所有几何体都将在 透明(Transparent)队列 中绘制。也就是说，Unity UI 生成的几何体将始终以 alpha 混合从后向前绘制。从性能角度来看，需要记住的重要一点是，从多边形栅格化(Rasterized)的每个像素都将被采样，即使它完全被其他不透明多边形覆盖。在移动设备上，这种高水平的过度绘制(Overdraw)会迅速超出 GPU 的填充率容量。\"]},\"143\":{\"h\":\"Canvases 批处理(Batch)构建\",\"t\":[\"批处理构建过程是 Canvas 组合表示其 UI 元素的网格并生成适当的渲染命令发送到 Unity 图形管线的过程。此过程的结果会被缓存并重用，直到 Canvas 被标记为脏，这发生在对其组成网格之一进行更改时。\",\"Canvas 使用的网格取自附加到 Canvas 但不包含在任何 Sub-canvas 中的 Canvas Renderer 组件集。\",\"计算批处理需要按深度对网格进行排序，并检查它们是否存在重叠、共享材质等。此操作是多线程的，因此其性能在不同的 CPU 架构上通常会有很大差异，尤其是在移动 SoC（通常具有少量 CPU 内核）和现代桌面 CPU（通常具有 4 个或更多内核）之间。\"]},\"144\":{\"h\":\"Graphics 重建(Rebuild)\",\"t\":[\"重建过程是重新计算 Unity UI 的 C# Graphic 组件的布局和网格的地方。这是在 CanvasUpdateRegistry 类中执行的。请记住，这是一个 C# 类，其源代码可以在 Unity-Technologies uGUI 上找到。\",\"在 CanvasUpdateRegistry 中，感兴趣的方法是 PerformUpdate。每当 Canvas 组件调用 WillRenderCanvases 事件时，就会调用此方法。此事件每帧调用一次。\",\"PerformUpdate 运行过程分为三步：\",\"通过 ICanvasElement.Rebuild 方法请求脏的 Layout 组件重建其布局。\",\"请求任何注册的 Clipping 组件（例如 Masks）剔除任何被裁剪的组件。这是通过 ClippingRegistry.Cull 完成的。\",\"请求脏的 Graphic 组件重建其图形元素。\",\"// CanvasUpdateRegistry.cs private void PerformUpdate() { UISystemProfilerApi.BeginSample(UISystemProfilerApi.SampleType.Layout); CleanInvalidItems(); m_PerformingLayoutUpdate = true; m_LayoutRebuildQueue.Sort(s_SortLayoutFunction); // 对需要 Rebuild 的 Layout 组件执行 Rebuild for (int i = 0; i <= (int)CanvasUpdate.PostLayout; i++) { UnityEngine.Profiling.Profiler.BeginSample(m_CanvasUpdateProfilerStrings[i]); for (int j = 0; j < m_LayoutRebuildQueue.Count; j++) { var rebuild = m_LayoutRebuildQueue[j]; try { if (ObjectValidForUpdate(rebuild)) rebuild.Rebuild((CanvasUpdate)i); } catch (Exception e) { Debug.LogException(e, rebuild.transform); } } UnityEngine.Profiling.Profiler.EndSample(); } for (int i = 0; i < m_LayoutRebuildQueue.Count; ++i) m_LayoutRebuildQueue[i].LayoutComplete(); m_LayoutRebuildQueue.Clear(); m_PerformingLayoutUpdate = false; UISystemProfilerApi.EndSample(UISystemProfilerApi.SampleType.Layout); UISystemProfilerApi.BeginSample(UISystemProfilerApi.SampleType.Render); // 对 Clipping 组件执行 Cull UnityEngine.Profiling.Profiler.BeginSample(m_CullingUpdateProfilerString); ClipperRegistry.instance.Cull(); UnityEngine.Profiling.Profiler.EndSample(); m_PerformingGraphicUpdate = true; // 对 Dirty 的 Graphic 执行 Rebuild for (var i = (int)CanvasUpdate.PreRender; i < (int)CanvasUpdate.MaxUpdateValue; i++) { UnityEngine.Profiling.Profiler.BeginSample(m_CanvasUpdateProfilerStrings[i]); for (var k = 0; k < m_GraphicRebuildQueue.Count; k++) { try { var element = m_GraphicRebuildQueue[k]; if (ObjectValidForUpdate(element)) element.Rebuild((CanvasUpdate)i); } catch (Exception e) { Debug.LogException(e, m_GraphicRebuildQueue[k].transform); } } UnityEngine.Profiling.Profiler.EndSample(); } for (int i = 0; i < m_GraphicRebuildQueue.Count; ++i) m_GraphicRebuildQueue[i].GraphicUpdateComplete(); m_GraphicRebuildQueue.Clear(); m_PerformingGraphicUpdate = false; UISystemProfilerApi.EndSample(UISystemProfilerApi.SampleType.Render); }\",\"对于 Layout 和 Graphic 重建，该过程分为多个部分。Layout 重建分为三步：PreLayout、Layout 和 PostLayout，而 Graphic 重建分为两步：PreRender 和 LatePreRender。\",\"public enum CanvasUpdate { Prelayout = 0, Layout = 1, PostLayout = 2, PreRender = 3, LatePreRender = 4, MaxUpdateValue = 5 }\"]},\"145\":{\"h\":\"Layout 重建\",\"t\":[\"要重新计算包含在一个或多个 Layout 组件中的组件的适当位置（以及可能的大小），需要按照其适当的层次结构顺序应用 Layouts。GameObject 层次结构中更靠近根的 Layouts 可能会改变嵌套在其内部的任何 Layouts 的位置和大小，因此必须首先计算它们。\",\"为此，Unity UI 按其在层次结构中的深度对脏的 Layout 组件列表进行排序。层次结构中较高的项目（即具有较少父 Transforms 的项目）被移到列表的前面。\",\"Layout 组件可能会改变其子对象的位置和大小，因此越靠近顶层的越应该首先计算。这里按照父节点数量进行的排序。\",\"private static int SortLayoutList(ICanvasElement x, ICanvasElement y) { Transform t1 = x.transform; Transform t2 = y.transform; return ParentCount(t1) - ParentCount(t2); }\",\"然后对排序后的 Layout 组件列表执行 Rebuild，重建布局；Rebuild 才是实际更改由 Layout 组件控制的 UI 元素的位置和大小的地方。 有关单个元素的位置如何受 Layouts 影响的更多详细信息，请参阅 Unity 手册的 UI Auto Layout 部分。\",\"// LayoutRebuilder.cs public void Rebuild(CanvasUpdate executing) { switch (executing) { case CanvasUpdate.Layout: // It's unfortunate that we'll perform the same GetComponents querys for the tree 2 times, // but each tree have to be fully iterated before going to the next action, // so reusing the results would entail storing results in a Dictionary or similar, // which is probably a bigger overhead than performing GetComponents multiple times. PerformLayoutCalculation(m_ToRebuild, e => (e as ILayoutElement).CalculateLayoutInputHorizontal()); PerformLayoutControl(m_ToRebuild, e => (e as ILayoutController).SetLayoutHorizontal()); PerformLayoutCalculation(m_ToRebuild, e => (e as ILayoutElement).CalculateLayoutInputVertical()); PerformLayoutControl(m_ToRebuild, e => (e as ILayoutController).SetLayoutVertical()); break; } }\"]},\"146\":{\"h\":\"Graphic 重建\",\"t\":[\"当 Graphic 组件被重建时，Unity UI 将控制权传递给 ICanvasElement 接口的 Rebuild 方法。Graphic 实现这一点，并在重建过程的 PreRender 阶段运行两个不同的重建步骤。\",\"如果顶点数据被标记为脏（例如当组件的 RectTransform 改变大小时），则重建网格。\",\"如果材质数据被标记为脏（例如当组件的材质或纹理改变时），则更新附加的 Canvas Renderer 的材质。\",\"public virtual void Rebuild(CanvasUpdate update) { if (canvasRenderer == null || canvasRenderer.cull) return; switch (update) { case CanvasUpdate.PreRender: if (m_VertsDirty) { UpdateGeometry(); m_VertsDirty = false; } if (m_MaterialDirty) { UpdateMaterial(); m_MaterialDirty = false; } break; } }\",\"Graphic 重建不会以任何特定顺序遍历 Graphic 组件列表，也不需要任何排序操作。\"]},\"147\":{\"h\":\"Unity UI 性能分析工具\",\"t\":[\"有几个性能分析工具可用于分析 Unity UI 的性能。关键工具是：\",\"Unity Profiler\",\"Unity Frame Debugger\",\"Xcode 的 Instruments 或 Intel VTune\",\"Xcode 的 Frame Debugger 或 Intel GPA\",\"外部工具提供方法级 CPU 分析，具有毫秒（或更好）分辨率，以及详细的绘制调用和着色器分析。设置和使用上述工具的说明超出了本指南的范围。请注意，XCode Frame Debugger 和 Instruments 仅适用于 Apple 平台的 IL2CPP 构建，因此目前只能用于分析 IOS 构建。\"]},\"148\":{\"h\":\"Unity Profiler\",\"t\":[\"Unity Profiler 的主要用途是执行比较分析：在 Unity Profiler 运行时启用和禁用 UI 元素可以快速缩小对性能问题负主要责任的 UI 层次结构部分。\",\"要分析这一点，请观察分析器输出中的 Canvas.BuildBatch 和 Canvas.SendWillRenderCanvases 行。\",\"Canvas.BuildBatch 是执行 Canvas 批处理构建过程的本机代码计算，如前所述。\",\"Canvas.SendWillRenderCanvases 包含对订阅 Canvas 组件的 willRenderCanvases 事件的 C# 脚本的调用。Unity UI 的 CanvasUpdateRegistry 类接收此事件并使用它来运行前面描述的重建过程。预计任何脏的 UI 组件都会在此时更新它们的 Canvas Renderers。\",\"注意：为了更容易看到 UI 性能的差异，通常建议禁用除 Rendering、Scripts 和 UI 之外的所有跟踪类别。这可以通过单击 CPU 使用率分析器左侧跟踪类别名称旁边的彩色框来完成。还可以通过单击并向上或向下拖动类别名称来重新排序 CPU 分析器中的类别。\",\"UI 类别是 Unity 2017.1 及更高版本中的新功能。不幸的是，UI 更新过程的部分内容没有正确分类，因此在查看 UI 曲线时要小心，因为它可能不包含所有 UI 相关调用。例如，Canvas.SendWillRenderCanvases 被归类为 UI，但 Canvas.BuildBatch 被归类为 Others 和 Rendering。\",\"在 2017.1 及更高版本中，还有一个新的 UI Profiler。默认情况下，此分析器是 Profiler 窗口中的最后一个。它由两个时间线和一个批处理查看器组成：\",\"第一个时间线显示在两个类别中花费的 CPU 时间，分别是计算布局和渲染。请注意，它存在与前面描述的相同的问题，一些 UI 功能可能未被计入。\",\"第二个时间线显示批处理、顶点的总数，并显示事件标记。在前面的屏幕截图中，您可以看到几个按钮点击事件。这些标记可以帮助您确定导致 CPU 峰值的原因。\",\"最后，UI Profiler 最有用的功能是底部的批处理查看器。左侧是所有 Canvas 的树视图，每个 Canvas 下面是由它们生成的批处理列表。列提供了有关每个 Canvas 或批处理的有趣细节，但有一个特别关键，可以更好地理解如何优化 UI，那就是 Batch Breaking Reason。\",\"此列将显示为什么所选批处理无法与前一个批处理合并。减少批处理数量是提高 UI 性能的最有效方法之一，因此了解什么会破坏批处理非常重要。\",\"如屏幕截图所示，最常见的原因之一是 UI 元素使用不同的纹理或材质。在许多情况下，这可以通过使用 sprite atlases 轻松修复。最后一列显示与批处理关联的游戏对象名称。您可以双击名称以在编辑器中选择游戏对象（当您有几个同名对象时，这特别有用）。\",\"截至 Unity 2017.3，批处理查看器仅在编辑器中工作。批处理在设备上通常应该相同，因此这仍然非常有用。如果您怀疑设备上的批处理可能不同，则可以使用接下来描述的 Frame Debugger。\"]},\"149\":{\"h\":\"Unity Frame Debugger\",\"t\":[\"Unity Frame Debugger 是减少 Unity UI 生成的绘制调用数量的有用工具。这个内置工具可以通过 Unity Editor 中的 Window 菜单访问。启用后，它将显示 Unity 生成的所有绘制调用，包括 Unity UI 生成的绘制调用。\",\"值得注意的是，帧调试器将使用为 Unity Editor 中的 Game View 生成的绘制调用更新自身，因此可以用于尝试不同的 UI 配置，甚至无需进入 Play 模式。\",\"Unity UI 绘制调用的位置取决于正在绘制的 Canvas 组件上选择的 Render Mode：\",\"Screen Space - Overlay 将出现在 Canvas.RenderOverlays 组中\",\"Screen Space - Camera 将出现在所选 Render Camera 的 Camera.Render 组中，作为 Render.TransparentGeometry 的子组\",\"World Space 将作为 Render.TransparentGeometry 的子组出现在 Canvas 可见的每个 World Space 相机中\",\"所有 UI 都可以通过 Shader: UI/Default 行识别（假设 UI 着色器尚未被自定义着色器替换）。在组或绘制调用的详细信息中。请参阅下面屏幕截图中的红色高亮框。\",\"在调整 UI 时观察这组行，可以相对简单地最大化 Canvas 将 UI 元素组合成批处理的能力。破坏批处理的最常见设计相关原因是意外重叠。\",\"所有 Unity UI 组件将其几何体生成为一系列四边形。然而，许多 UI 精灵或 UI 文本字形仅占用用于表示它们的四边形的一小部分，其余部分为空。因此，很常见的是发现 UI 的设计者无意中重叠了多个不同的四边形，这些四边形的纹理来自不同的材质，因此无法批处理。\",\"由于 Unity UI 完全在透明队列中操作，任何覆盖在不可批处理的四边形上的四边形必须在不可批处理的四边形之前绘制，因此不能与放置在不可批处理的四边形之上的其他四边形批处理。\",\"考虑三个四边形 A、B 和 C 的情况。假设所有三个四边形相互重叠，并且还假设四边形 A 和 C 使用相同的材质，而四边形 B 使用单独的材质。因此，四边形 B 不能与 A 或 C 批处理。\",\"如果层次结构中的顺序（从上到下）是 A、B、C，则 A 和 C 不能批处理，因为 B 必须绘制在 A 之上和 C 之下。但是，如果 B 放置在可批处理的四边形之前或之后，则可批处理的四边形实际上可以批处理 - B 只需要在批处理的四边形之前或之后绘制，而不是插入它们之间。\",\"有关此问题的进一步讨论，请参阅 Canvas 步骤中的 Child 顺序 部分。\"]},\"150\":{\"h\":\"Instruments & VTune\",\"t\":[\"Xcode 的 Instruments 和 Intel 的 VTune 允许在 Apple 或 Intel CPU 上对 Unity UI 重建和 Canvas 批处理计算进行极深入的分析。方法名称与上面 Unity Profiler 部分讨论的分析器标签几乎相同：\",\"Canvas::SendWillRenderCanvases 是调用 Canvas.SendWillRenderCanvases C# 方法的 C++ 父级，并控制 Unity Profiler 中的该行。它将包含用于运行重建过程的代码，如前面的步骤所述。\",\"Canvas::UpdateBatches 与 Canvas.BuildBatch 相同，但包括 Unity Profiler 标签未涵盖的额外样板代码。它运行实际的 Canvas 批处理构建过程，如上所述。\",\"当与通过 IL2CPP 构建的 Unity 应用程序一起使用时，这些工具可用于更深入地研究 Canvas::SendWillRenderCanvases 的转译 C# 代码。主要关注以下方法的成本。（注意：转译的方法名称是近似的。）\",\"IndexedSet_Sort 和 CanvasUpdateRegistry_SortLayoutList 用于在重新计算布局之前对脏的 Layout 组件列表进行排序。如上所述，这涉及计算每个 Layout 组件上方的父 Transform 数量。\",\"ClipperRegistry_Cull 调用 IClipRegion 接口的所有已注册实现者。内置实现者包括 RectMask2D，它使用 IClippable 接口。在 ClipperRegistry.Cull 调用期间，RectMask2D 组件循环遍历其层次结构中包含的所有可剪裁元素，并要求它们更新其剪裁信息。\",\"Graphic_Rebuild 将包含实际计算表示 Image、Text 或其他 Graphic 派生组件所需的网格的成本。在此之下还有其他几个方法，如 Graphic_UpdateGeometry，最值得注意的是 Text_OnPopulateMesh。\",\"当启用 Best Fit 时，Text_OnPopulateMesh 通常是一个热点。本指南后面将更详细地讨论这一点。\",\"网格修改器，如 Shadow_ModifyMesh 和 Outline_ModifyMesh，也将在此运行。计算组件投影、轮廓和其他特殊效果的成本可以通过这些方法看到。\"]},\"151\":{\"h\":\"Xcode Frame Debugger & Intel GPA\",\"t\":[\"低级帧调试工具对于分析批处理 UI 的各个部分的成本以及监视 UI 过度绘制的成本至关重要。UI 过度绘制将在本指南后面更详细地讨论。\",\"使用 Xcode Frame Debugger\",\"要测试给定 UI 是否过度压力 GPU，可以使用 Xcode 的内置 GPU 诊断工具。首先，将相关项目配置为使用 Metal 或 OpenGLES3，然后进行构建并打开生成的 Xcode 项目。某些 Xcode 版本和设备组合可能支持 OpenGLES 2 帧捕获，但不能保证它会工作。\",\"注意：在某些版本的 Xcode 上，为了使图形分析器工作，必须在 Build Scheme 中选择适当的图形 API。为此，请转到 Xcode 中的 Product 菜单，展开 Scheme 菜单项，然后选择 Edit Scheme...。选择 Run 目标并转到 Options 选项卡。将 GPU Frame Capture 选项更改为与项目使用的 API 匹配。假设 Unity 项目设置为自动选择图形 API，那么大多数现代 iPad 将默认使用 Metal。如果有疑问，请启动项目并查看 Xcode 中的调试日志。早期的一行应指示正在初始化哪个渲染路径（Metal、GLES3 或 GLES2）。\",\"在 iOS 设备上构建并运行项目。可以通过在 Xcode 的 Navigator 侧边栏中显示 Debug 窗格并单击 FPS 条目来找到 GPU 分析器。\",\"GPU 分析器中第一个感兴趣的点是屏幕中心的三个条形图，标记为 Tiler、Renderer 和 Device。其中两个：\",\"Tiler 通常是 GPU 处理几何体的压力度量，包括在顶点着色器中花费的时间。通常，高 Tiler 使用率表示顶点着色器过慢或绘制的顶点数量过多。\",\"Renderer 通常是 GPU 像素管道的压力度量。通常，高 Renderer 使用率表示应用程序超过了 GPU 的最大填充率，或者具有低效的片段着色器。\",\"Device 是整体 GPU 使用率的综合度量，包括 Tiler 和 Renderer 性能。通常可以忽略它，因为它大致跟踪 Tiler 或 Renderer 测量值中的较高者。\",\"Xcode 的 Frame Debugger 可以通过单击 GPU 分析器底部隐藏的小 Camera 图标触发。在以下屏幕截图中，它被箭头和红色框突出显示。\",\"短暂暂停后，Frame Debugger 的摘要视图应如下所示：\",\"当使用默认 UI 着色器时，由 Unity UI 系统生成的几何体的渲染成本将显示在 UI/Default 着色器通道下，假设默认 UI 着色器尚未被自定义着色器替换。在上面的屏幕截图中，可以看到此默认 UI 着色器作为 Render Pipeline UI/Default。\",\"Unity UI 仅生成四边形，因此顶点着色器不太可能给 GPU 的 tiler 管道带来压力。出现在此着色器通道中的任何问题可能是由于填充率问题。\"]},\"152\":{\"h\":\"分析分析器(Profiler)结果\",\"t\":[\"收集分析数据后，可能会得出几个结论。如果 Canvas.BuildBatch 或 Canvas::UpdateBatches 似乎使用了过多的 CPU 时间，那么可能的问题是在单个 Canvas 上有过多的 Canvas Renderer 组件。请参阅 Canvas 步骤中的拆分 Canvas 部分。\",\"如果 GPU 上绘制 UI 花费了过多时间，并且帧调试器显示片段着色器管道是瓶颈，那么 UI 可能超过了 GPU 的像素填充率。最可能的原因是 UI 过度绘制。请参阅 填充率、Canvas 和输入步骤中的修复填充率问题 部分。\",\"如果 Graphic 重建使用了过多的 CPU，如 Canvas.SendWillRenderCanvases 或 Canvas::SendWillRenderCanvases 占用了大量 CPU 时间，则需要更深入的分析。Graphic 重建过程的某些部分可能是原因。\",\"如果在 WillRenderCanvas 中大部分时间花费在 IndexedSet_Sort 或 CanvasUpdateRegistry_SortLayoutList 中，则时间用于对脏的 Layout 组件列表进行排序。考虑减少 Canvas 上的 Layout 组件数量。请参阅 用 RectTransforms 替换 Layout 和 拆分 Canvas 部分以获取可能的修复方法。\",\"如果 Text_OnPopulateMesh 似乎占用了过多时间，则问题只是文本网格的生成。请参阅 Best Fit 和 禁用 Canvas 部分以获取可能的修复方法，如果大部分被重建的文本实际上没有更改其底层字符串数据，请考虑拆分 Canvas 中的建议。\",\"如果时间花费在 Shadow_ModifyMesh 或 Outline_ModifyMesh（或任何其他 ModifyMesh 的实现）中，则问题是计算网格修改器花费了过多时间。考虑移除这些组件并通过静态图像实现其视觉效果。\",\"如果在 Canvas.SendWillRenderCanvases 中没有特定的热点，或者它似乎每帧都在运行，则问题可能是动态元素与静态元素分组在一起，并强制整个 Canvas 过于频繁地重建。请参阅拆分 Canvas 步骤。\"]},\"153\":{\"h\":\"填充率、Canvas 和输入\"},\"154\":{\"h\":\"修复填充率问题\",\"t\":[\"可以采取两种措施来减少 GPU 片段管道的压力：\",\"降低片段着色器的复杂性。有关更多详细信息，请参阅 UI 着色器和低规格设备 部分。\",\"减少必须采样的像素数量。\",\"由于 UI 着色器通常是标准化的，最常见的问题只是填充率使用过度。这通常是由于大量重叠的 UI 元素和/或有多个占据屏幕重要部分的 UI 元素。这两个问题都可能导致极高的过度绘制水平。\",\"为了缓解填充率过度使用并减少过度绘制，请考虑以下可能的修复方法。\",\"消除不可见 UI\",\"简化 UI 结构\",\"禁用不可见的相机输出\",\"大部分被遮挡的相机\",\"基于组合的 UI\",\"UI 着色器和低规格设备\"]},\"155\":{\"h\":\"消除不可见 UI\",\"t\":[\"禁用对玩家不可见的元素。最常见的适用情况是打开具有不透明背景的全屏 UI。在这种情况下，可以禁用放置在全屏 UI 下方的所有 UI 元素。\",\"最简单的方法是禁用包含不可见 UI 元素的根 GameObject 或 GameObjects。有关替代解决方案，请参阅 禁用 Canvas 部分。\",\"最后，确保没有通过将其 Alpha 设置为 0 来隐藏 UI 元素，因为该元素仍将被发送到 GPU 并可能占用宝贵的渲染时间。如果 UI 元素不需要 Graphic 组件，可以简单地移除它，射线检测仍将工作。\"]},\"156\":{\"h\":\"简化 UI 结构\",\"t\":[\"为了减少重建和渲染 UI 所需的时间，应该将 UI 对象的数量保持在尽可能低的水平。尽量多地烘焙(bake)东西。例如，不要仅仅为了改变元素的色调而使用混合的 GameObject，而是通过材质属性来完成。此外，不要创建像文件夹一样且除了组织场景之外没有其他用途的游戏对象。\"]},\"157\":{\"h\":\"禁用不可见的相机输出\",\"t\":[\"如果打开具有不透明背景的全屏 UI，世界空间相机仍将渲染 UI 后面的标准 3D 场景。渲染器不知道全屏 Unity UI 将遮挡整个 3D 场景。\",\"因此，如果打开完全全屏的 UI，禁用任何和所有被遮挡的世界空间相机将通过简单地消除渲染无用 3D 世界的工作来帮助减少 GPU 压力。\",\"如果 UI 没有覆盖整个 3D 场景，您可能希望将场景渲染到纹理一次并使用它，而不是持续渲染它。您将失去在 3D 场景中查看动画内容的可能性，但这在大多数情况下应该是可以接受的。\",\"注意：如果将 Canvas 设置为 Screen Space - Overlay，则无论场景中有多少活动相机，它都将被绘制。\"]},\"158\":{\"h\":\"大部分被遮挡的相机\",\"t\":[\"许多 \\\"全屏\\\" UI 实际上并没有遮挡整个 3D 世界，而是留下了一小部分世界可见。在这些情况下，将世界的可见部分捕获到渲染纹理中可能更优化。如果世界的可见部分被 \\\"缓存\\\" 在渲染纹理中，则可以禁用实际的世界空间相机，并且可以在 UI 屏幕后面绘制缓存的渲染纹理以提供 3D 世界的替身版本。\"]},\"159\":{\"h\":\"基于组合的 UI\",\"t\":[\"设计师通常通过组合来创建 UI - 组合和分层标准背景和元素以创建最终 UI。虽然这样做相对简单，并且对迭代非常友好，但由于 Unity UI 使用透明渲染队列，它的性能不高。\",\"考虑一个具有背景、按钮和按钮上一些文本的简单 UI。由于透明队列中的对象是从后到前排序的，在像素落在文本字形内的情况下，GPU 必须采样背景的纹理，然后是按钮的纹理，最后是文本图集的纹理，总共三个采样。随着 UI 复杂性的增加，以及更多装饰元素分层到背景上，采样次数可以迅速增加。\",\"如果发现大型 UI 受限于填充率，最好的补救措施是创建专门的 UI 精灵，将 UI 的装饰/不变元素的尽可能多合并到其背景纹理中。这减少了必须分层在一起以实现所需设计的元素数量，但这是劳动密集型的，并增加了项目纹理图集的大小。\",\"这种将创建给定 UI 所需的层叠元素数量压缩到专门的 UI 精灵上的原则也可以用于子元素。考虑一个带有滚动产品窗格的商店 UI。每个产品 UI 元素都有一个边框、背景和一些图标来表示价格、名称和其他信息。\",\"商店 UI 需要一个背景，但由于其产品在背景上滚动，产品元素不能合并到商店 UI 的背景纹理上。但是，产品 UI 元素的边框、价格、名称和其他元素可以合并到产品的背景上。根据图标的大小和数量，填充率的节省可能是相当大的。\",\"组合层叠元素有几个缺点。专用元素不能再重复使用，并且需要额外的艺术家资源来创建。添加大型新纹理可能会显著增加保存 UI 纹理所需的内存量，特别是如果 UI 纹理不是按需加载和卸载的。\"]},\"160\":{\"h\":\"UI 着色器和低规格设备\",\"t\":[\"Unity UI 使用的内置着色器包含对遮罩、裁剪和许多其他复杂操作的支持。由于这种增加的复杂性，与更简单的 Unity 2D 着色器相比，UI 着色器在 iPhone 4 等低端设备上表现不佳。\",\"如果针对低端设备的应用程序不需要遮罩、裁剪和其他 \\\"花哨\\\" 功能，可以创建一个省略未使用操作的自定义着色器，例如这个最小的 UI 着色器：\",\"Shader \\\"UI/Fast-Default\\\" { Properties { [PerRendererData] _MainTex (\\\"Sprite Texture\\\", 2D) = \\\"white\\\" {} _Color (\\\"Tint\\\", Color) = (1,1,1,1) } SubShader { Tags { \\\"Queue\\\"=\\\"Transparent\\\" \\\"IgnoreProjector\\\"=\\\"True\\\" \\\"RenderType\\\"=\\\"Transparent\\\" \\\"PreviewType\\\"=\\\"Plane\\\" \\\"CanUseSpriteAtlas\\\"=\\\"True\\\" } Cull Off Lighting Off ZWrite Off ZTest [unity_GUIZTestMode] Blend SrcAlpha OneMinusSrcAlpha Pass { CGPROGRAM #pragma vertex vert #pragma fragment frag #include \\\"UnityCG.cginc\\\" #include \\\"UnityUI.cginc\\\" struct appdata_t { float4 vertex : POSITION; float4 color : COLOR; float2 texcoord : TEXCOORD0; }; struct v2f { float4 vertex : SV_POSITION; fixed4 color : COLOR; half2 texcoord : TEXCOORD0; float4 worldPosition : TEXCOORD1; }; fixed4 _Color; fixed4 _TextureSampleAdd; v2f vert(appdata_t IN) { v2f OUT; OUT.worldPosition = IN.vertex; OUT.vertex = mul(UNITY_MATRIX_MVP, OUT.worldPosition); OUT.texcoord = IN.texcoord; #ifdef UNITY_HALF_TEXEL_OFFSET OUT.vertex.xy += (_ScreenParams.zw-1.0)*float2(-1,1); #endif OUT.color = IN.color * _Color; return OUT; } sampler2D _MainTex; fixed4 frag(v2f IN) : SV_Target { return (tex2D(_MainTex, IN.texcoord) + _TextureSampleAdd) * IN.color; } ENDCG } } }\",\"可以从 Unity2022.3.6 - Shaders(Other installs) 下载 UI-Default.shader 文件，然后对比。\"]},\"161\":{\"h\":\"UI Canvas 重建\",\"t\":[\"要显示任何 UI，UI 系统必须为屏幕上表示的每个 UI 组件构建几何体。这包括运行动态布局代码，生成表示 UI 文本字符串中字符的多边形，并将尽可能多的几何体合并到单个网格中以最小化绘制调用。这是一个多步骤的过程，在本指南开头的 基础 部分中有详细描述。\",\"Canvas 重建可能成为性能问题，主要有两个原因：\",\"如果 Canvas 上可绘制的 UI 元素数量很大，则计算批处理本身变得非常昂贵。这是因为对元素进行排序和分析的成本与 Canvas 上可绘制 UI 元素的数量呈非线性增长。\",\"如果 Canvas 频繁变脏，则可能会花费过多的时间刷新更改相对较少的 Canvas。\",\"随着 Canvas 上元素数量的增加，这两个问题都趋于变得严重。\",\"重要\",\"每当给定 Canvas 上的任何可绘制 UI 元素发生变化时，Canvas 都必须重新运行批处理构建过程。此过程会重新分析 Canvas 上的每个可绘制 UI 元素，无论它是否已更改。请注意，\\\"更改\\\" 是指影响 UI 对象外观的任何更改，包括分配给精灵渲染器的精灵、变换位置和缩放、文本网格中包含的文本等。\"]},\"162\":{\"h\":\"Child 顺序\",\"t\":[\"Unity UI 从后向前构建，对象的层次结构顺序决定了它们的排序顺序。层次结构中较早的对象被认为在层次结构中较晚的对象后面。批处理通过自上而下遍历层次结构并收集所有使用相同材质、相同纹理且没有中间层的对象来构建。\\\"中间层\\\" 是指具有不同材质的图形对象，其边界框与两个原本可批处理的对象重叠，并且放置在层次结构中两个可批处理对象之间。中间层强制批处理中断。\",\"如 Unity UI 分析工具步骤中所述，UI Profiler 和 Frame Debugger 可用于检查 UI 中的中间层。这是指一个可绘制对象插入到两个其他原本可批处理的可绘制对象之间的情况。\",\"这个问题最常发生在文本和精灵彼此靠近时：文本的边界框可以无形地与附近的精灵重叠，因为文本字形的大部分多边形是透明的。这可以通过两种方式解决：\",\"重新排序可绘制对象，使可批处理对象不被不可批处理对象插入；也就是说，将不可批处理对象移动到可批处理对象之上或之下。\",\"调整对象的位置以消除不可见的重叠空间。\",\"这两种操作都可以在 Unity Editor 中完成，同时打开并启用 Unity Frame Debugger。通过简单地观察 Unity Frame Debugger 中可见的绘制调用数量，可以找到最小化由于重叠 UI 元素而浪费的绘制调用数量的顺序和位置。\"]},\"163\":{\"h\":\"拆分 Canvas\",\"t\":[\"在除最微不足道的情况外，通常最好拆分 Canvas，可以通过将元素移动到子 Canvas 或同级 Canvas 来实现。\",\"同级 Canvas 最适合用于 UI 的某些部分必须与其他层的绘制深度分开控制的情况，例如始终在其他层之上或之下（例如教程箭头）。\",\"在大多数其他情况下，子 Canvas 更方便，因为它们从其父 Canvas 继承显示设置。\",\"虽然乍一看将 UI 细分为许多子 Canvas 似乎是最佳实践，但请记住 Canvas 系统也不会跨单独的 Canvas 组合批处理。性能良好的 UI 设计需要在最小化重建成本和最小化浪费的绘制调用之间取得平衡。\",\"一般准则\",\"由于 Canvas 在其任何组成可绘制组件发生变化时都会重新批处理，因此通常最好将任何非平凡的 Canvas 拆分为至少两个部分。此外，如果元素预计会同时更改，最好尝试将元素放在同一个 Canvas 上。一个例子可能是进度条和倒计时计时器。它们都依赖于相同的底层数据，因此需要同时更新，因此应将它们放在同一个 Canvas 上。\",\"在一个 Canvas 上，放置所有静态且不变的元素，例如背景和标签。这些元素将在 Canvas 首次显示时批处理一次，之后将不再需要重新批处理。\",\"在第二个 Canvas 上，放置所有 \\\"动态\\\" 元素——那些频繁更改的元素。这将确保此 Canvas 主要重新批处理脏元素。如果动态元素数量变得非常大，可能需要进一步将动态元素细分为一组不断变化的元素（例如，进度条、计时器读数、任何动画）和一组仅偶尔更改的元素。\",\"这在实践中实际上相当困难，尤其是在将 UI 控件封装到预制件(Prefabs)中时。许多 UI 转而选择通过将成本较高的控件拆分到 Sub-canvas 上来细分 Canvas。\",\"Unity 5.2 和优化批处理\",\"在 Unity 5.2 中，批处理代码进行了实质性重写，与 Unity 4.6、5.0 和 5.1 相比，性能显著提高。此外，在具有多个核心的设备上，Unity UI 系统将把大部分处理转移到工作线程。总的来说，Unity 5.2 减少了将 UI 积极拆分为数十个 Sub-canvases 的需求。现在，许多移动设备上的 UI 可以通过少至两三个 Canvases 来实现高性能。\"]},\"164\":{\"h\":\"Unity UI 中的输入和射线检测\",\"t\":[\"默认情况下，Unity UI 使用 Graphic Raycaster 组件处理输入事件，例如触摸事件和指针悬停事件。这通常由 Standalone Input Manager 组件处理。尽管名称如此，Standalone Input Manager 旨在成为一个 \\\"通用\\\" 输入管理系统，并将处理指针和触摸。\"]},\"165\":{\"h\":\"移动设备上错误的鼠标输入检测(5.3)\",\"t\":[\"在 Unity 5.4 之前，每个附加了 Graphic Raycaster 的活动 Canvas 将每帧运行一次射线检测以检查指针的位置，只要当前没有可用的触摸输入。这将发生在所有平台上；没有鼠标的 iOS 和 Android 设备仍将查询鼠标的位置，并尝试发现哪些 UI 元素位于该位置下方，以确定是否需要发送任何悬停事件。\",\"这是 CPU 时间的浪费，并且已经观察到消耗 Unity 应用程序 CPU 帧时间的 5% 或更多。\",\"此问题已在 Unity 5.4 中解决。从 5.4 开始，没有鼠标的设备将不会查询鼠标位置，也不会执行不必要的射线检测。\",\"如果使用早于 5.4 的 Unity 版本，强烈建议移动开发者创建自己的 Input Manager 类。这可以像复制 Unity 的 Standard Input Manager 从 Unity UI 源代码并注释掉 ProcessMouseEvent 方法以及对该方法的所有调用一样简单。\"]},\"166\":{\"h\":\"射线检测优化\",\"t\":[\"Graphic Raycaster 是一个相对简单的实现，它遍历所有将 Raycast Target 设置设置为 true 的 Graphic 组件。对于每个 Raycast Target，Raycaster 执行一组测试。如果 Raycast Target 通过了所有测试，则将其添加到命中列表中。\",\"射线检测实现细节\",\"如果 Raycast Target 处于活动状态、已启用并且被绘制（即有几何体）\",\"如果输入点位于 Raycast Target 附加到的 RectTransform 内\",\"如果 Raycast Target 具有或是一个 ICanvasRaycastFilter 组件的子级（任何深度），并且该 Raycast Filter 组件允许射线投射。\",\"然后按深度对命中 Raycast Targets 列表进行排序，过滤掉反向目标，并过滤掉渲染在相机后面（即屏幕上不可见）的元素。\",\"Graphic Raycaster 还可以将射线投射到 3D 或 2D 物理系统中，如果在 Graphic Raycaster 的 Blocking Objects 属性上设置了相应的标志。\",\"如果启用了 2D 或 3D 阻挡对象，则任何绘制在位于射线阻挡物理层上的 2D 或 3D 对象下方的 Raycast Target 也将从命中列表中消除。\",\"最后返回最终的命中列表。\",\"射线检测优化技巧\",\"鉴于所有 Raycast Target 都必须由 Graphic Raycaster 测试，最佳实践是仅在必须接收指针事件的 UI 组件上启用 Raycast Target 设置。Raycast Target 列表越小，必须遍历的层次结构越浅，每次 Raycast 测试的速度就越快。\",\"对于具有多个必须响应指针事件的可绘制 UI 对象的复合 UI 控件，例如希望其背景和文本都改变颜色的按钮，通常最好在复合 UI 控件的根部放置单个 Raycast Target。当该单个 Raycast Target 接收到指针事件时，它可以将事件转发给复合控件中每个感兴趣的组件。\",\"层次深度和射线检测过滤器\",\"每个 Graphic Raycast 在搜索射线投射过滤器时都会遍历 Transform 层次结构一直到根部。此操作的成本与层次结构的深度呈线性增长。必须测试在层次结构中附加到每个 Transform 的所有组件，以查看它们是否实现了 ICanvasRaycastFilter，因此这不是一个廉价的操作。\",\"子 Canvas 和 OverrideSorting 属性\",\"子 Canvas 上的 overrideSorting 属性将导致 Graphic Raycast 测试停止爬升变换层次结构。如果可以在不引起排序或射线检测问题的情况下启用它，则应使用它来减少射线检测层次遍历的成本。\"]},\"167\":{\"h\":\"优化 UI 控件\",\"t\":[\"特定类型的 UI 控件的优化问题。虽然大多数 UI 控件在性能方面相对相似，但有两个控件是许多在接近可发布状态的游戏中遇到的性能问题的根源。\"]},\"168\":{\"h\":\"UI 文本\",\"t\":[\"Unity 的内置 Text 组件是在 UI 中显示栅格化文本字形的便捷方式。然而，有一些行为并不为人所知，但经常作为性能热点出现。向 UI 添加文本时，请始终记住文本字形实际上是作为单个四边形渲染的，每个字符一个。这些四边形周围往往有大量的空白空间，具体取决于其形状，并且很容易以一种无意中破坏其他 UI 元素批处理的方式定位文本。\",\"文本网格重建\",\"一个主要问题是 UI 文本网格的重建。每当 UI Text 组件更改时，文本组件必须重新计算用于显示实际文本的多边形。如果文本组件或其任何父 GameObject 被简单地禁用和重新启用而不更改文本，也会发生此重新计算。\",\"此行为对于显示大量文本标签的任何 UI 都是有问题的，最常见的是排行榜或统计屏幕。由于隐藏和显示 Unity UI 的最常见方法是启用/禁用包含 UI 的 GameObject，具有大量文本组件的 UI 在显示时通常会导致不良的帧速率卡顿。\",\"有关此问题的潜在解决方法，请参阅下一步中的 禁用 Canvas 部分。\",\"动态字体和字体图集\",\"动态字体是当可显示字符集非常大或在运行时之前未知时显示文本的便捷方式。在 Unity 的实现中，这些字体根据 UI Text 组件中遇到的字符在运行时构建字形图集。\",\"每个加载的不同 Font 对象将维护自己的纹理图集，即使它与另一个字体属于同一字体系列。例如，在一个控件上使用 Arial 加粗文本，而在另一个控件上使用 Arial Bold 将产生相同的输出，但 Unity 将维护两个不同的纹理图集 - 一个用于 Arial，一个用于 Arial Bold。\",\"从性能角度来看，最重要的是要理解 Unity UI 的动态字体在字体的纹理图集中为每个大小、样式和字符的不同组合维护一个字形。也就是说，如果 UI 包含两个文本组件，都显示字母 A，那么：\",\"如果两个 Text 组件共享相同的大小，字体图集将有一个字形。\",\"如果两个 Text 组件不共享相同的大小（例如一个是 16 点，另一个是 24 点），则字体图集将包含两个不同大小的字母 A。\",\"如果一个 Text 组件是粗体而另一个不是，则字体图集将包含一个粗体 A 和一个常规 A。\",\"每当具有动态字体的 UI Text 对象遇到尚未光栅化到字体纹理图集中的字形时，字体的纹理图集必须重建。如果新字形适合当前图集，则添加它并将图集重新上传到图形设备。但是，如果当前图集太小，则系统会尝试重建图集。它分两个阶段完成此操作。\",\"首先，以相同大小重建图集，仅使用当前由活动的 UI Text 组件显示的字形。这包括父 Canvas 已启用但具有禁用 Canvas Renderers 的 UI Text 组件。如果系统成功将所有当前使用的字形放入新图集中，则光栅化该图集并且不继续第二步。\",\"其次，如果当前使用的字形集无法放入与当前图集相同大小的图集中，则通过将图集的较短维度加倍来创建更大的图集。例如，512x512 图集扩展为 512x1024 图集。\",\"由于上述算法，动态字体的图集一旦创建就只会增大。考虑到重建纹理图集的成本，必须最小化重建次数。这可以通过两种方式完成。\",\"只要可能，使用非动态字体并预先配置对所需字形集的支持。这通常适用于使用良好约束字符集（如仅拉丁/ASCII 字符）和小范围大小的 UI。\",\"如果必须支持极大范围的字符，例如整个 Unicode 集，则必须将字体设置为 Dynamic。为避免可预测的性能问题，在启动时通过 Font.RequestCharactersInTexture 用一组适当的字符初始化字体的字形图集。\",\"请注意，字体图集重建是由每个更改的 UI Text 组件单独触发的。当填充极大量的 Text 组件时，收集 Text 组件内容中的所有唯一字符并初始化字体图集可能是有利的。这将确保字形图集只需要重建一次，而不是每次遇到新字形时都重建一次。\",\"还要注意，当触发字体图集重建时，任何当前不包含在活动 UI Text 组件中的字符都不会出现在新图集中，即使它们最初是通过调用 Font.RequestCharactersInTexture 添加到图集中的。要解决此限制，请订阅 Font.textureRebuilt 委托并查询 Font.characterInfo 以确保所有所需字符保持初始化状态。\",\"Font.textureRebuilt 委托目前未记录。它是一个 单参数 Unity Event。参数是纹理被重建的字体。此事件的订阅者应遵循以下签名：\",\"public void TextureRebuiltCallback(Font rebuiltFont) { /* ... */ }\",\"专用字形渲染器\",\"对于字形已知且各字形之间位置相对固定的情况，编写自定义组件来显示这些字形的精灵要有利得多。一个例子可能是分数显示。\",\"对于分数，可显示字符来自一个已知的字形集（数字 0-9），不随地区变化，并以固定距离彼此出现。编写这种专门的数字显示系统相对简单，可以以无分配且计算、动画和显示速度明显快于 Canvas 驱动的 UI Text 组件的方式实现。\",\"后备字体和内存使用\",\"对于必须支持大字符集的应用程序，很诱人的是在字体导入器的 Font Names 字段中列出大量字体。Font Names 字段中列出的任何字体都将用作如果在主字体中找不到字形时的后备字体。后备顺序由 Font Names 字段中列出的字体顺序决定。\",\"然而，为了支持此行为，Unity 将保持 Font Names 字段中列出的所有字体加载到内存中。如果字体的字符集非常大，则后备字体消耗的内存量可能变得过多。这在包含象形字体（如日本汉字或中文字符）时最常见。\",\"Best Fit 和性能\",\"通常，UI Text 组件的 Best Fit 设置永远不应使用。\",\"Best Fit 动态调整字体大小到可以在 Text 组件的边界框内显示而不溢出的最大整数点大小，限制在可配置的最小/最大点大小范围内。然而，由于 Unity 为显示的每个不同大小的字符渲染不同的字形到字体图集中，使用 Best Fit 会迅速用许多不同大小的字形淹没图集。\",\"截至 Unity 2017.3，Best Fit 使用的大小检测不是最优的。它为测试的每个大小增量在图集中生成字形，这进一步增加了生成字体图集所需的时间。它还经常导致图集溢出，这会导致旧字形被踢出图集。由于 Best Fit 计算需要大量测试，这通常会强制字体图集在计算出适当的字体大小后至少再重建一次。此特定问题已在 Unity 5.4 中纠正，Best Fit 不会不必要地扩展字体的纹理图集，但仍然比静态大小的文本慢得多。\",\"频繁的字体图集重建会迅速降低运行时性能并导致内存碎片。设置为 Best Fit 的文本组件数量越多，这个问题变得越严重。\"]},\"169\":{\"h\":\"TextMeshPro 文本\",\"t\":[\"TextMesh Pro (TMP)是 Unity 现有文本组件（如 Text Mesh 和 UI Text）的替代品。TextMesh Pro 使用有符号距离场(SDF)作为其主要文本渲染管道，使得可以在任何点大小和分辨率下清晰地渲染文本。使用一组旨在利用 SDF 文本渲染能力的自定义着色器，TextMesh Pro 可以通过简单地更改材质属性来动态改变文本的视觉外观，以添加视觉样式，如膨胀、轮廓、软阴影、斜角、纹理、发光等，并通过创建/使用材质预设来保存和调用这些视觉样式。\",\"在 2018.1 发布之前，TextMesh Pro 作为 Asset Store 包包含在项目中。从 2018.1 开始，TextMesh Pro 将作为 Package Manager 包提供。\",\"文本网格重建\",\"与 Unity 内置的 UIText 组件非常相似，更改组件显示的文本将触发对 Canvas.SendWillRendererCanvases 和 Canvas.BuildBatch 的调用，这可能很昂贵。最小化对 TextMeshProUGUI 组件的文本字段的更改，并确保将文本经常变化的 TextMeshProUGUI 组件父级到具有自己的 Canvas 组件的父 GameObject，以确保 Canvas 重建调用尽可能高效。\",\"请注意，对于在世界空间中显示的文本，我们建议用户使用普通的 TextMeshPro 组件而不是 TextMeshProUGUI，因为在 Worldspace 中使用 Canvas 可能效率低下。直接使用 TextMeshPro 会更高效，因为它不会产生 canvas 系统开销。\",\"字体和内存使用\",\"鉴于 TMP 中没有动态字体功能，必须依赖后备字体。了解如何加载和使用后备字体对于在使用 TMP 时优化内存至关重要。\",\"TMP 中的字形发现是递归完成的 - 也就是说，当字形从 TMP 字体资源中缺失时，TMP 会遍历当前分配或活动的后备字体资源列表，从列表中的第一个后备字体开始，并通过它们自己的后备字体。如果仍然找不到所需的字形，TMP 将搜索可能分配给文本对象的任何 Sprite 资源以及分配给此 Sprite 资源的任何后备资源。如果仍然找不到所需的字形，TMP 将递归搜索 TMP 设置文件中分配的一般后备字体，然后是默认 Sprite 资源。如果仍然无法定位此字形，它将使用 TMP 设置文件中定义的 Missing Glyph Replacement 字符。\",\"TextMesh Pro 的字体资源在场景或项目中引用时加载。它们主要由 TextMeshPro 文本组件、TMP 设置以及字体资源本身作为后备字体引用。如果在 TMP 设置资源中引用了字体资源，则这些字体资源及其所有后备字体资源将在激活第一个包含 TMP 文本组件的场景时递归加载。如果引用了默认精灵表资源，它也将被加载。\",\"此外，当字体资源由给定场景中的 TextMeshPro 组件引用且尚未通过 TMP 设置加载时，则引用的字体资源及其所有后备字体资源将在组件激活后递归加载。在处理具有许多字体的项目时，特别是当可用内存是一个问题时，记住这个过程很重要。\",\"由于上述原因，在使用 TMP 时本地化项目成为一个问题，因为通过 TMP 设置预先加载所有本地化语言字体资源将对内存压力有害。如果需要本地化，我们建议仅在必要时（加载各种场景时）分配这些字体资源或后备字体，或使用 Asset Bundles 以模块化方式加载字体资源的潜在策略。\",\"当应用程序启动时，应包括一个引导步骤来验证用户的区域设置并为每个字体资源设置字体资源后备：\",\"为基础 TMP 字体资源创建 Asset Bundle（例如，每种字体的最小拉丁字形）\",\"为每种语言所需的后备 TMP 字体资源创建 Asset Bundle（例如，日语每种字体所需的 TMP 字体资源一个 Asset Bundle）\",\"在引导步骤中加载基础 Asset Bundle\",\"根据区域设置，加载具有后备字体的所需 Asset Bundle\",\"对于基础 Asset Bundle 中的每种字体，从本地化字体 Asset Bundle 分配后备字体资源\",\"继续引导游戏\",\"如果未使用图像，也可以从 TMP 设置中删除默认 Sprite 资源引用，以获得适度的额外内存节省。\",\"Best Fit 和性能\",\"再次强调，鉴于 TextMesh Pro 没有动态字体功能，上述 UGUI UIText 部分中关于 Best Fit 的问题不会发生。在 TextMesh Pro 组件上使用 Best Fit 时唯一要考虑的是使用二分搜索来找到正确的大小。使用文本自动调整大小时，最好测试最长/最大文本块的最佳点大小。一旦确定此最佳大小，在给定文本对象上禁用自动调整大小，然后手动在其他文本对象上设置此最佳点大小。这具有提高性能的优势，并避免一组文本对象使用不同的点大小，这被认为是糟糕的视觉/排版实践。\"]},\"170\":{\"h\":\"Scroll Views\",\"t\":[\"在填充率问题之后，Unity UI 的 Scroll Views 是运行时性能问题的第二大常见来源。Scroll Views 通常需要大量 UI 元素来表示其内容。有两种基本方法来填充滚动视图：\",\"用表示所有滚动视图内容所需的所有元素填充它\",\"池化元素，根据需要重新定位它们以表示可见内容\",\"这两种解决方案都有问题。\",\"第一种解决方案随着要表示的项目数量增加，实例化所有 UI 元素所需的时间也越来越长，并且还增加了重建 Scroll View 所需的时间。如果 Scroll View 中只需要少量元素，例如仅需要显示少量 Text 组件的 Scroll View，则这种方法因其简单性而受到青睐。\",\"第二种解决方案在当前 UI 和布局系统下需要大量代码才能正确实现。下面将讨论两种可能的方法。对于任何显著复杂的滚动 UI，通常需要某种池化方法来避免性能问题。\",\"尽管存在这些问题，所有方法都可以通过向 Scroll View 添加 RectMask2D 组件来改进。此组件确保位于 Scroll View 视口之外的 Scroll View 元素不包含在必须生成、排序和分析其几何形状的可绘制元素列表中。\",\"简单的 Scroll View 元素池化\",\"在保留使用 Unity 内置 Scroll View 组件的大部分便利性的同时实现对象池化的最简单方法是采用混合方法：\",\"要在 UI 中布局元素（允许布局系统正确计算 Scroll View 内容的大小并使滚动条正常工作），使用带有 Layout Element 组件的 GameObject 作为可见 UI 元素的 占位符。\",\"然后，实例化足以填充 Scroll View 可见部分的可见 UI 元素池，并将这些元素父级到定位占位符。随着 Scroll View 滚动，重用 UI 元素以显示滚动到视图中的内容。\",\"这将大大减少必须批处理的 UI 元素数量，因为批处理的成本仅基于 Canvas 内的 Canvas Renderers 数量增加，而不是 Rect Transforms 数量。\",\"简单方法的问题\",\"目前，每当任何 UI 元素被重新父级或其兄弟顺序更改时，该元素及其所有子元素都被标记为 \\\"脏\\\" 并强制重建其 Canvas。\",\"原因是 Unity 没有分离重新父级变换和更改其兄弟顺序的回调。这两个事件都会触发 OnTransformParentChanged 回调。在 Unity UI 的 Graphic 类源代码中（参见 Graphic.cs），实现了该回调并调用方法 SetAllDirty。通过将 Graphic 标记为脏，系统确保 Graphic 将在下一帧渲染之前重建其布局和顶点。\",\"可以将 Canvas 分配给 Scroll View 内每个元素的根 RectTransform，这将把重建限制在仅重新父级的元素，而不是 Scroll View 的整个内容。然而，这往往会增加渲染 Scroll View 所需的绘制调用数量。此外，如果 Scroll View 中的各个元素很复杂，由超过一打 Graphic 组件组成，特别是如果每个元素上有大量 Layout 组件，则重建它们的成本通常足够高，以至于在低端设备上会明显降低帧率。\",\"如果 Scroll View UI 元素没有可变大小，则这种完整的布局和顶点重新计算是不必要的。然而，避免此行为需要实现基于位置变化而不是父级或兄弟顺序变化的对象池化解决方案。\",\"基于位置的 Scroll View 池\",\"为了避免上述问题，可以创建一个通过简单地移动其包含的 UI 元素的 RectTransforms 来池化其对象的 Scroll View。如果它们的尺寸没有改变，这避免了需要重建移动的 RectTransforms 的内容，显著提高了 Scroll View 的性能。\",\"要实现这一点，通常最好编写 Scroll View 的自定义子类或编写自定义 Layout Group 组件。后者通常是更简单的解决方案，可以通过实现 Unity UI 的 LayoutGroup 抽象基类的子类来完成。\",\"自定义 Layout Group 可以分析底层源数据以检查必须显示多少数据元素，并适当调整 Scroll View 的 Content RectTransform 大小。然后它可以订阅 Scroll View change events 并使用这些事件相应地重新定位其可见元素。\"]},\"171\":{\"h\":\"其他 UI 优化技术和技巧\",\"t\":[\"有时就是没有干净的方法来优化 UI。本节包含一些可能有助于提高 UI 性能的建议，但有些在结构上\\\"不干净\\\"，可能难以维护，或者可能有丑陋的副作用。其他可能是 UI 中旨在简化初始开发的行为的解决方法，但也使得相对简单地创建性能问题。\"]},\"172\":{\"h\":\"基于 RectTransform 的布局\",\"t\":[\"Layout 组件相对昂贵，因为它们必须在每次被标记为脏时重新计算其子元素的大小和位置。（有关详细信息，请参阅 基础步骤中的 Graphic 重建 部分。）如果给定 Layout 中有相对少量且固定数量的元素，并且 Layout 具有相对简单的结构，则可能可以用基于 RectTransform 的布局替换 Layout。\",\"通过分配 RectTransform 的锚点，可以使 RectTransform 的位置和大小基于其父级缩放。例如，一个简单的两列布局可以通过两个 RectTransforms 实现：\",\"左列的锚点应为 X: (0, 0.5) 和 Y: (0, 1)\",\"右列的锚点应为 X: (0.5, 1) 和 Y: (0, 1)\",\"RectTransform 的大小和位置计算将由 Transform 系统本身在本机代码中驱动。这通常比依赖 Layout 系统更高效。也可以编写设置基于 RectTransform 的布局的 MonoBehaviours。然而，这是一个相对复杂的任务，超出了本指南的范围。\"]},\"173\":{\"h\":\"禁用 Canvas\",\"t\":[\"在显示或隐藏 UI 的离散部分时，通常启用或禁用 UI 根部的 GameObject。这确保禁用 UI 中的任何组件不会接收输入或 Unity 回调。\",\"然而，这也会导致 Canvas 丢弃其 VBO 数据。重新启用 Canvas 将要求 Canvas（和任何子 Canvas）运行重建和重新批处理过程。如果这种情况频繁发生，增加的 CPU 使用率可能导致应用程序的帧率卡顿。\",\"一个可能但有点 hacky 的解决方法是将要显示/隐藏的 UI 放在自己的 Canvas 或子 Canvas 上，然后仅启用/禁用此对象上的 Canvas 组件。\",\"这将导致 UI 的网格不被绘制，但它们将保留在内存中，并且它们的原始批处理将被保留。此外，UI 层次结构中不会调用任何 OnEnable 或 OnDisable 回调。\",\"但是请注意，这不会禁用隐藏 UI 中的任何 MonoBehaviours，因此这些 MonoBehaviours 仍将接收 Unity 生命周期回调，如 Update。\",\"为避免此问题，将以此方式禁用的 UI 上的 MonoBehaviours 不应直接实现 Unity 的生命周期回调，而应从 UI 根 GameObject 上的 Callback Manager MonoBehaviour 接收它们的回调。这个 Callback Manager 可以在 UI 显示/隐藏时得到通知，并可以确保根据需要传播或不传播生命周期事件。关于此 Callback Manager 模式的进一步解释超出了本指南的范围。\"]},\"174\":{\"h\":\"分配事件相机\",\"t\":[\"如果将 Canvas 设置为 World Space 或 Screen Space - Camera 模式并使用 Unity 的内置 Input Managers，则务必始终设置 Event Camera 或 Render Camera 属性。从脚本中，这始终作为 worldCamera 属性公开。\",\"如果未设置此属性，则 Unity UI 将通过查找带有 Main Camera 标签的 GameObject 上的 Camera 组件来搜索主相机。此查找将针对每个 World Space 或 Camera Space Canvas 至少发生一次。由于 GameObject.FindWithTag 已知很慢，强烈建议所有 World Space 和 Camera Space Canvas 在设计时或初始化时分配其 Camera 属性。\",\"此问题不会发生在 Overlay Canvas 上。\"]},\"175\":{\"h\":\"UI 源代码定制\",\"t\":[\"UI 系统旨在支持大量用例。这种灵活性非常棒，但也意味着一些优化无法在不破坏其他功能的情况下轻松完成。如果您最终遇到可以通过更改 C# UI 源代码来获得一些 CPU 周期的情境，则可以重新编译 UI DLL 并覆盖 Unity 附带的 DLL。\",\"但这应该只作为最后的手段，因为存在一些重要的缺点。首先，您必须找到一种方法将此新 DLL 分发给您的开发人员和构建机器。然后，每次升级 Unity 时，都必须将您的更改与新的 UI 源代码合并。在没有办法通过现有类或者编写自己的组件版本达成目的的情况下，再考虑更改源代码。\"]},\"176\":{\"h\":\"其他优化建议\",\"t\":[\"其他优化建议\"]},\"177\":{\"h\":\"Unity UI 优化建议\",\"t\":[\"原文地址 - UnityLearn\",\"本文汇集了提升 Unity UI 性能的最佳实践技巧。更多详细内容可参考 Unity 工程师 Ian Dundore 的精彩演讲 Squeezing Unity: Tips for raising performance（UI 优化部分从 23:38 开始）。\"]},\"178\":{\"h\":\"合理划分 Canvas\",\"t\":[\"问题：当 UI Canvas 上的元素发生变化时，会导致整个 Canvas 重新计算。\",\"Canvas 是 Unity UI 的基础组件。它生成代表 UI 元素的网格(Mesh)，当 UI 元素变化时需要重新生成网格(Mesh)，并向 GPU 发出绘制调用以显示 UI。\",\"网格(Mesh)生成可能很耗性能。需要批量处理 UI 元素以减少绘制调用次数(Draw Call)。由于批量生成(Batch Generation)很昂贵，我们希望只在必要时才重新生成。问题是，当 Canvas 上的元素发生变化时，整个 Canvas 都需要重新分析以确定如何最优绘制其元素。\",\"许多用户在一个 Canvas 中构建整个游戏的 UI，包含数千个元素。因此当他们改变一个元素时，可能会导致 CPU 峰值消耗数毫秒（关于为什么重建很昂贵，可参考 Ian 演讲中 24:55 处的内容）。\",\"解决方案：合理划分 Canvas。\",\"每个 Canvas 都是一个孤岛，将其上的元素与其他 Canvas 隔离。因此，划分 Canvas 是解决 Unity UI 批处理问题的主要方法。\",\"你也可以嵌套 Canvas，这样设计师可以创建大型层级化 UI 而无需考虑多个 Canvas 之间的屏幕位置关系。子 Canvas 也会将其内容与父 Canvas 和兄弟 Canvas 隔离。它们维护自己的几何体并执行自己的批处理。\",\"当使用子 Canvas 划分时，尝试根据更新频率对元素进行分组。例如，将动态元素与静态元素分开（在 29:36 处，Ian 提供了一个很好的 Canvas 智能划分示例）。\"]},\"179\":{\"h\":\"Graphic Raycaster 的最佳使用\",\"t\":[\"问题：Graphic Raycaster 的最佳使用方式\",\"Graphic Raycaster 是将输入转换为 UI 事件的组件。它将屏幕/触摸输入转换为事件，然后发送给感兴趣的 UI 元素。每个需要输入的 Canvas（包括子 Canvas）都需要一个 Graphic Raycaster。\",\"尽管名字叫 Raycaster，但 Graphic Raycaster 实际上并不进行射线检测：默认情况下，它只测试 UI 图形。它获取 Canvas 上所有对输入感兴趣的 UI 元素集合，并执行相交检查：检查输入事件发生点是否与每个 UI 元素的 RectTransform 相交，且该元素被标记为可交互。\",\"挑战在于并非所有 UI 元素都需要接收更新。\",\"解决方案：关闭静态或非交互元素的 Raycast Target。\",\"例如按钮上的文本。关闭 Raycast Target 将直接减少 Graphic Raycaster 每帧需要执行的相交检查次数。\",\"问题：在某些情况下，Graphic Raycaster 确实会进行射线检测。\",\"如果将 Canvas 的 Render Mode 设置为 Worldspace Camera 或 Screen Space Camera，你还可以设置一个 blocking mask。blocking mask 决定 Raycaster 是否会通过 2D 或 3D 物理系统投射射线，以判断是否有物理对象阻挡用户与 UI 的交互。\",\"解决方案：通过 2D 或 3D 物理系统投射射线可能很昂贵，应谨慎使用此功能。\",\"此外，通过不为非交互式 UI Canvas 添加 Graphic Raycaster 来最小化其数量，因为在这种情况下没有理由检查交互事件。\"]},\"180\":{\"h\":\"避免使用 Camera.main\",\"t\":[\"问题：World Space Canvas 需要知道交互事件应该来自哪个相机。\",\"当设置 Canvas 以 World Space 或 Screen Space 渲染时，可以指定用于为 UI 的 Graphic Raycaster 生成交互事件的 Camera。这个设置对于 Screen Space - Camera Canvas 是必需的，称为 Render Camera。\",\"然而，对于 World Space Canvas 这个设置是可选的，称为 Event Camera。\",\"如果在 World Space Canvas 上留空 Event Camera 字段，并不意味着你的 Canvas 不会接收事件。相反，它会使用游戏的主 Camera。 为了确定哪个 Camera 是主 Camera，它会访问 Camera.main 属性。\",\"根据 Unity 采用的代码路径，每个 Graphic Raycaster、每个 World Space Canvas 每帧会访问 Camera.main 7-10 次。而 Camera.main 每次被访问时都会调用 Object.FindObjectWithTag！显然，这在运行时不是好事。\",\"解决方案：避免使用 Camera.main。\",\"缓存 Camera 引用，并创建一个系统来跟踪主相机。如果使用 World Space Canvas，总是分配一个 Event Camera。不要留空这个设置！如果 Event Camera 需要改变，编写代码来更新 Event Camera 属性。\"]},\"181\":{\"h\":\"尽可能避免使用 Layout Group\",\"t\":[\"问题：每个试图标记其 Layout 为脏的 UI 元素至少会执行一次 GetComponents 调用。\",\"当布局系统中的子元素发生变化时，布局系统会被标记为脏。变化的子元素会使拥有它的 Layout System 失效。\",\"关于 Layout System：Layout System 是一组连续的 Layout Group，它们直接位于 Layout Element 之上。Layout Element 不仅仅是 Layout Element 组件：UI 图像、文本和 Scroll Rect 也都是 Layout Element。而且，Scroll Rect 也是 Layout Group。\",\"回到问题：每个标记其布局为脏的 UI 元素至少会执行一次 GetComponents 调用。这个调用会在 Layout Element 的父对象上寻找有效的 Layout Group。如果找到一个，它会继续沿着 Transform 层级向上查找，直到找不到 Layout Group 或到达层级根节点。因此，每个 Layout Group 都会为每个子 Layout Element 的脏标记过程增加一个 GetComponents 调用，使得嵌套的 Layout Group 对性能极为不利。\",\"// LayoutElement.cs protected void SetDirty() { if(!IsActive()) return; LayoutRebuilder.MarkLayoutForRebuild(transform as RectTransform); } // LayoutRebuilder.cs public static void MarkLayoutForRebuild(RectTransform rect) { if(rect == null || rect.gameObject == null) return; var comps = ListPool<Component>.Get(); bool validLayoutGroup = true; RectTransform layoutRoot = rect; var parent = layoutRoot.parent as RectTransform; while(validLayoutGroup && !(parent == null || parent.gameObject == null)) { validLayoutGroup = false; parent.GetComponents(typeof(ILayoutGroup), comps); for(int i = 0; i < comps.Count; ++i) { var cur = comps[i]; if(cur != null && cur is Behaviour && ((Behaviour)cur).isActiveAndEnabled) { validLayoutGroup = true; layoutRoot = parent; break; } } parent = parent.parent as RectTransform; } // We know the layout root is valid if it's not the same as the rect, // since we checked that above. But if they're the same we still need to check. if(layoutRoot == rect && !ValidController(layoutRoot, comps)) { ListPool<Component>.Release(comps); return; } MarkLayoutRootForRebuild(layoutRoot); ListPool<Component>.Release(comps); }\",\"解决方案：尽可能避免使用 Layout Group。\",\"使用锚点进行比例布局。对于元素数量动态变化的热门 UI，考虑编写自己的布局计算代码，并确保只在需要时使用，而不是在每次变化时都使用。\"]},\"182\":{\"h\":\"正确使用 UI 对象缓存池\",\"t\":[\"问题：以错误的方式使用 UI 对象缓存池。\",\"通常，人们通过重新设置父对象然后禁用使 UI 对象回到对象池，但这会导致不必要的脏标记。\",\"解决方案：先禁用对象，然后将其重新设置父对象添加到缓存池中。\",\"你会脏标记旧层级一次，但当你重新设置父对象时，可以避免第二次脏标记旧层级，而且根本不会脏标记新层级。如果要从池中取出对象，先重新设置父对象，然后更新数据，最后启用它。\"]},\"183\":{\"h\":\"如何隐藏 Canvas\",\"t\":[\"问题：如何隐藏 Canvas\",\"有时你想隐藏一些 UI 元素和 Canvas。如何最高效地做到这一点？\",\"解决方案：禁用 Canvas 组件本身\",\"禁用 Canvas 组件将停止 Canvas 向 GPU 发出绘制调用，因此 Canvas 将不再可见。然而，Canvas 不会丢弃其顶点缓冲区；它会保留所有网格和顶点，当你重新启用它时，不会触发重建，只会重新开始绘制它们。\",\"此外，禁用 Canvas 组件不会在 Canvas 层级上触发昂贵的 OnDisable/OnEnable 回调。只需小心禁用运行昂贵每帧代码的子组件。\"]},\"184\":{\"h\":\"在 UI 元素上优化使用 Animator\",\"t\":[\"问题：在 UI 上使用 Animator\",\"Animator 每帧都会脏标记其元素，即使动画中的值没有变化。Animator 没有无操作检查。\",\"解决方案：\",\"只在总是变化的动态元素上使用 Animator。对于很少变化或只在事件响应中短时间变化的元素，编写自己的代码或补间系统。\"]},\"185\":{\"h\":\"更多资源\",\"t\":[\"Squeezing Unity: Tips for raising performance（UI 优化部分从 23:38 开始）。\",\"Best practices: Optimizing Unity UI\",\"Unity UI Docs\",\"UI Profiler\",\"Building an easy to use menu system\"]},\"186\":{\"h\":\"Unity 中的内存管理\",\"t\":[\"原文地址 - UnityLearn\"]},\"187\":{\"h\":\"概述\",\"t\":[\"在 Unity 中进行恰当的内存管理可能具有挑战性。你需要考虑自动内存管理的细微差别，理解原生内存(native memory)和托管内存(managed memory)之间的区别，以及内存在不同平台上的行为方式。本指南的目标是为你提供必要的知识，以便在任何公开可用的平台上分析和优化内存消耗。\"]},\"188\":{\"h\":\"重要文档\",\"t\":[\"理解托管堆(managed heap)对于 Unity 中的内存管理至关重要。有关分析托管内存和如何优化内存的更多信息，请参阅 Unity 手册中 理解优化 下的 托管内存部分。\",\"Unity 中的内存\"]},\"189\":{\"h\":\"资源(Assets)\",\"t\":[\"资源(Assets)在运行时会对原生内存和托管内存产生影响。Unity 运行时引擎在用户终止应用程序之前不会将托管内存返回给操作系统以供重用。如果托管堆变得过于碎片化，它会增长，然后耗尽可用内存。由于这种不可预测的行为，了解资源如何占用托管内存至关重要：\",\"使用 Destroy(myObject) 来销毁一个 Object 并释放其内存。将对 Object 的引用设置为 null 并不会销毁它。\",\"将持久(长期)对象设置为类(classes)，将短暂(短期)对象设置为结构体(structs)。结构体不会在堆上分配，因此不会被垃圾回收(garbage-collected)。\",\"重复使用临时工作缓冲区以保持临时垃圾(temporary garbage)较低，而不是频繁分配。\",\"记住，枚举器(Enumerator)在退出之前不会清理其内存。\",\"避免 永不停止的协程(coroutines)，尤其是在分配大量托管内存时，因为协程会一直占用堆上的栈分配(stack allocations)，直到它们结束。\"]},\"190\":{\"h\":\"脚本后端(Scripting backends)\",\"t\":[\"在 iOS 和 Android 上，可以在 Player Settings 中选择 Mono 或 IL2CPP 脚本后端。要更改脚本后端，请转到 Player Settings 窗口(Edit > Project Settings > Player)，向下滚动到 Other Settings 部分，然后从 Scripting Backend 下拉菜单中选择 Mono 或 IL2CPP。\",\"注意：从 2017.3 版本开始，可以选择 IL2CPP 脚本后端或 Mono 脚本后端。然而，WebGL 和 UWP 只支持 IL2CPP。iOS 仍然支持 Mono 脚本后端以实现快速迭代，但你不能再向 Apple 提交 Mono(32 位)应用程序了。\",\"不同脚本后端的优缺点\",\"每个脚本后端都有优缺点，这应该会影响你决定哪种是适合你情况的选择：\",\"IL2CPP\",\"与 Mono 相比，代码生成得到了极大的改进。\",\"可以从头到尾在 C++ 中调试脚本代码。\",\"可以启用 引擎代码剥离(Engine code stripping) 以减小代码大小。\",\"构建时间比 Mono 长。\",\"IL2CPP 只支持 提前编译(Ahead of Time (AOT))。\",\"Mono\",\"构建时间比 IL2CPP 快。\",\"由于即时编译(Just In Time compilation (JIT))，支持更多托管库。\",\"支持运行时代码执行。\",\"必须随应用程序一起发布托管程序集(managed assemblies)(Mono 或 .NET 生成的 .dll 文件)。\",\"提示：使用 IL2CPP 来开发和发布你的项目。如果使用 IL2CPP 导致迭代时间过慢，可以在开发期间暂时切换到 Mono 脚本后端以提高迭代速度。\",\"注意：Player Settings 中的默认目标架构(target architectures)针对发布版本进行了优化。在开发期间使用此默认设置会增加你的构建时间，因为 Unity 会为每个选定的目标架构构建二进制文件，如下所示：\",\"Android Player Settings 中的默认目标架构是 armv7 和 x86，使用 IL2CPP 和 Mono 脚本后端。\",\"iOS Player Settings 中的默认架构是 armv7 和 arm64，使用 IL2CPP 脚本后端。\"]},\"191\":{\"h\":\"Unity 中的代码剥离(Code stripping)\",\"t\":[\"代码大小直接影响磁盘空间和运行时内存。重要的是要注意，Unity 会从代码库中移除任何你未使用的代码路径。Unity 在构建期间会自动剥离代码，在两个不同的级别上工作：\",\"托管代码剥离(Managed code stripping)\",\"原生代码剥离(Native code stripping)\"]},\"192\":{\"h\":\"托管代码剥离\",\"t\":[\"Unity 在 方法级别(method level) 剥离托管代码。要更改剥离级别，请转到 Player Settings 窗口，向下滚动到 Other Settings 部分，找到 Managed Stripping Level 下拉菜单并选择 Strip Assemblies。\",\"Project Settings > Player > Other Settings > Optimization > Managed Stripping Level\",\"UnityLinker 会从 中间语言(Intermediate Language (IL)) 中移除未使用的类型(类、结构体等)。即使你使用了某个类型，UnityLinker 也会移除该类型中未使用的方法。\",\"注意：虽然此功能在使用 Mono 脚本后端的构建中是可选的，但在使用 IL2CPP 脚本后端的构建中始终启用。\"]},\"193\":{\"h\":\"原生代码剥离\",\"t\":[\"Unity 在 Player Settings 中默认启用 Strip Engine Code，并启用原生代码剥离。启用 Strip Engine Code 以移除原生 Unity 引擎代码中未使用的模块和类。禁用 Strip Engine Code 以保留原生 Unity 引擎代码中的所有模块和类。\",\"注意：对于公开可用的平台，原生代码剥离仅在 iOS、WebGL 和 Android 上受支持。\",\"Unity 2017.3 及更高版本支持 Android 上的原生代码剥离；在早期版本中，Unity Android 运行时作为预链接的 .so 库发布，Unity 无法剥离。2017.3 中发布的 Android 运行时是一个静态引擎代码库，允许进行原生代码剥离。最终链接发生在构建期间，这最终导致构建时间略长。\"]},\"194\":{\"h\":\"Unity 模块剥离(Unity Module Stripping)\",\"t\":[\"注意：WebGL 是目前唯一支持剥离未使用 Unity 模块的平台。\",\"Unity 会尽最大努力消除所有未使用的 Unity 模块。这意味着如果任何场景或脚本引用了你包含在构建中的 Unity 模块中的组件，Unity 不会剥离该模块。Unity 不会剥离核心模块，例如 Camera、AssetBundle、Halo 等。\",\"在空项目中剥离 WebGL 模块\",\"移除模块可以节省大量内存。例如，Unity 中最大的模块之一是 Physics 模块，它占用了大约 5MB 的 gzipped ASM.js 代码。如果你从一个空项目中移除 Physics 模块，构建大小会从 17MB 减少到 12MB。\"]},\"195\":{\"h\":\"C# 代码剥离\",\"t\":[\"UnityLinker 遵循基本的标记清除(mark and sweep)原则，类似于垃圾回收器。UnityLinker 会构建一个包含构建中每个程序集中的每个类型和方法的映射。UnityLinker 会将许多类型和方法标记为“根”(roots)，然后 UnityLinker 会遍历类型和方法之间的依赖关系图。\",\"例如，如果一个类型的某个方法调用了另一个类型的某个方法，那么 UnityLinker 会将这个被调用的类型和方法标记为正在使用。一旦 UnityLinker 标记了所有根的依赖关系，系统会重新编织程序集，省略未标记为使用的方法或整个类型。\"]},\"196\":{\"h\":\"根(Roots)\",\"t\":[\"如果 UnityLinker 的内部类在场景中或 Resources 中的内容中使用，UnityLinker 会将它们标记为根。类似地，UnityLinker 会将用户程序集中的所有类型和方法标记为根。\",\"如果你在场景中或包含在 Resources 中的资源中直接使用其他程序集中的类型和方法，Unity 会将这些标记为根。\",\"使用 link.xml 文件将其他类型和方法标记为根。如果你的项目使用 AssetBundles，使用 BuildPlayerOption.assetBundleManifestPath 将其他类型和方法标记为根。\",\"用户程序集(User Assemblies)\",\"用户程序集是 Unity 从 Assets 文件夹中的松散代码生成的程序集。Unity 将大多数 C# 代码放在 Assembly-CSharp.dll 中；而 Unity 将 /Assets/Standard Assets/ 或 /Assets/Plugins/ 中的代码放在 Assembly-CSharp-firstpass.dll 中，这也被视为用户程序集。\",\"如果代码库中有很大一部分类型或方法未使用，你可以通过将稳定代码迁移到预构建的程序集中并允许 UnityLinker 剥离它们来节省一些二进制大小和构建时间。使用 Assembly Definition Files 将稳定代码迁移到预构建的程序集中。\"]},\"197\":{\"h\":\"泛型共享(Generic Sharing)\",\"t\":[\"对于引用类型，IL2CPP 生成的实现(C++ 代码)可以在使用引用类型的泛型之间共享。然而，IL2CPP 不会共享值类型，因为 IL2CPP 需要为每种类型单独生成代码。这会导致你的代码大小增加。\",\"一般来说，应该不会有明显的性能差异，但这取决于具体情况以及需要优化什么。类通常在堆上，而结构体在栈上(有一些例外，例如协程)。对于内存性能和使用，这很重要。使用非引用类型会导致其他问题。你必须复制使用值类型的函数参数以影响性能。有关更多信息，请参阅这篇博客文章：功能预览：Unity 2022.1 beta 中的 IL2CPP 完全泛型共享。\"]},\"198\":{\"h\":\"程序集定义文件(Assembly Definition Files)\",\"t\":[\"程序集定义文件 允许你定义自定义托管程序集，并按文件夹将用户脚本分配给它们。反过来，这会加快迭代时间，因为 Unity 只会构建那些实际受到脚本更改影响的程序集。\",\"注意：虽然多个程序集确实提供了模块化，但它们也会增加应用程序的二进制大小和运行时内存。测试表明，每个程序集可使可执行文件增加多达 4KB。\"]},\"199\":{\"h\":\"构建报告(Build Report)\",\"t\":[\"构建报告 是一个包含在 Unity 中但没有 UI 的 API。构建项目会生成一个 buildreport 文件，其中显示了最终可执行文件中剥离了什么以及为什么剥离。\",\"要预览剥离信息：\",\"构建你的项目。\",\"保持编辑器打开。\",\"连接到 http://files.unity3d.com/build-report/。\",\"注意：你可能需要 启用预览包 才能在 Package Manager 中找到此工具。\",\"构建报告工具连接到你正在运行的 Unity 编辑器，下载并呈现构建报告的详细信息。\",\"可以使用 binary2text 工具处理 Library/LatestBuild.buildreport 中生成的文件，以查看报告中的数据。Binary2text 随 Unity 一起发布，在 Mac 上位于 Unity.app/Contents/Tools/，在 Windows 上位于 Unity/Editor/Data/Tools/。\"]},\"200\":{\"h\":\"原生内存(Native memory)\",\"t\":[\"原生内存是优化应用程序的关键组成部分，因为大多数引擎代码都在常驻内存(resident memory)中。当你将代码集成到原生插件中时，你可以直接控制它，但并不总是能够控制和优化 Unity 内部系统的原生内存消耗。内部系统使用不同的缓冲区和资源，并且可能并不总是清楚这如何影响内存消耗。此步骤详细介绍了 Unity 内部系统并解释了你在原生分析器中经常看到的内存数据。\",\"Unity 使用许多不同的原生分配器和缓冲区。有些是持久的，例如常量缓冲区，而有些是动态的，例如后备缓冲区(back buffer)。以下小节描述了缓冲区及其行为。\",\"暂存区(Scratchpad)\",\"Unity 将常量存储在 4MB 的缓冲区池中，并在帧之间循环使用该池。该池在其生命周期内绑定到 GPU，并在 XCode 或 Snapdragon 等帧捕获工具中显示。\",\"块分配器(Block allocator)\",\"Unity 在某些内部系统中使用块分配器。每当 Unity 需要分配新的内存页块时，都会产生内存和 CPU 开销。通常，页的块大小足够大，以至于分配只在 Unity 第一次使用某个系统时出现。第一次分配后，页块会被重用。内部系统使用块分配器的方式存在细微差异。\",\"AssetBundles\",\"第一次加载 AssetBundle 时，需要额外的 CPU 和内存开销，因为块分配器会启动，允许 Asset Bundle 系统分配第一个内存页块。\",\"Unity 会重用 AssetBundle 系统分配的页面，但如果你想一次加载许多 AssetBundles，可能需要分配第二个或第三个块。所有这些都会一直分配，直到应用程序终止。\",\"Resources\",\"Resources 使用与其他系统共享的块分配器，因此第一次从 Resources 加载资源时没有 CPU 或内存开销(因为它在启动期间已经发生过)。\",\"环形缓冲区(Ring buffer)\",\"Unity 使用环形缓冲区将纹理推送到 GPU。你可以通过 QualitySettings.asyncUploadBufferSize 调整此异步纹理缓冲区。\",\"注意：Unity 分配环形缓冲区内存后，无法将其返回给系统。\",\"资源(Assets)\",\"资源在运行时会对原生内存和托管内存产生影响。除了托管内存，Unity 在不再需要时会将原生内存返回给操作系统。由于每个字节都很重要——尤其是在移动设备上——你可以尝试以下方法来减少原生运行时内存：\",\"从网格中移除未使用的通道。\",\"从动画中移除冗余的关键帧。\",\"在 Quality Settings 中使用 maxLOD 从构建中移除 LODGroups 中更高细节的网格。\",\"构建后检查 Editor.log，确保磁盘上每个资源的大小与其运行时内存使用量成比例。\",\"通过在 Quality Settings 的 Rendering 部分使用 Texture Quality 设置强制使用较低的纹理分辨率(通过 mipmaps)来减少上传到 GPU 内存的内存。\",\"法线贴图(Normal maps)无需与漫反射贴图(diffuse maps)大小相同(1:1)，因此你可以使用较低分辨率的法线贴图，同时仍能实现高视觉保真度并节省内存和磁盘空间。\",\"请注意，由于托管堆的严重碎片化，托管内存问题通常会超过原生内存问题。\",\"克隆材质(Cloned Materials)\",\"注意克隆材质，因为访问任何渲染器(renderer)的 material 属性会导致材质被克隆，即使没有分配任何东西。这个克隆的材质不会被垃圾回收，只有在你更改场景或调用 Resources.UnloadUnusedAssets() 时才会被清除。如果你想访问只读材质，可以使用 customRenderer.sharedMaterial。\",\"卸载场景(Unloading Scenes)\",\"调用 UnloadScene() 以销毁和卸载与场景关联的 GameObjects。\",\"注意：这不会卸载关联的资源。为了卸载资源并释放托管内存和原生内存，在场景卸载后调用 Resources.UnloadUnusedAssets()。\"]},\"201\":{\"h\":\"音频(Audio)\",\"t\":[\"虚拟声音(Virtual Voices)\",\"Unity 根据平台的 实时可听度(real time audibility) 动态地将声音设置为虚拟或真实。例如，Unity 将播放距离较远或音量较低的声音设置为虚拟，但如果这些声音靠近或变响，则会将其更改为真实声音。Audio Settings 中的默认值对于移动设备来说是很好的值。\",\"最大虚拟声音数(Max Virtual Voice Count)\",\"最大真实声音数(Max Real Voice Count)\",\"默认\",\"512\",\"32\",\"最大\",\"4095\",\"255\",\"DSP 缓冲区大小(DSP Buffer Size)\",\"Unity 使用 DSP 缓冲区大小来控制 混音器延迟(mixer latency)。底层音频系统 FMOD 定义了平台相关的 DSP 缓冲区大小。缓冲区大小影响延迟，应谨慎处理。延迟等于样本数乘以缓冲区数。缓冲区数 默认为 4。Unity 中的音频系统使用以下样本数作为 Unity 中 Audio Settings 的值：\",\"默认： \",\"iOS 和桌面：1024\",\"Android：512\",\"最佳延迟：256\",\"良好延迟：512\",\"最佳性能：1024\",\"音频导入设置(Audio Import Settings)\",\"使用正确的设置可以节省运行时内存和 CPU 性能。\",\"如果音频文件不需要立体声，请启用 Force to mono 选项。这样做会减少运行时内存和磁盘空间。这主要用于带有单声道扬声器的移动平台。\",\"较大的 AudioClip 应设置为 Streaming。Unity 5.0 及更高版本中的 Streaming 有 200KB 的开销，因此应将小于 200KB 的音频文件设置为 Compressed into Memory。\",\"对于较长的剪辑，将 AudioClip 导入为 Compressed into Memory 以节省运行时内存(如果剪辑未设置为 Streaming)。\",\"仅当你内存充足但受 CPU 性能限制时才使用 Decompress On Load，因为此选项需要大量内存。\",\"各种平台也有首选的 Compression Format 设置，以节省运行时内存和磁盘空间。要调整这些设置，请按照以下说明进行操作：\",\"对于经常播放的非常短的剪辑(例如音效)，将 Compression Format 设置为 ADPCM。ADPCM 提供固定的 3.5:1 压缩比，并且解压缩成本低廉。\",\"在 Android 上，对于较长的剪辑，使用 Vorbis。Unity 不使用硬件加速解码。\",\"在 iOS 上，对于较长的剪辑，使用 MP3 或 Vorbis。Unity 不使用硬件加速解码。\",\"MP3 或 Vorbis 需要更多资源进行解压缩，但文件大小显著减小。高质量的 MP3 需要较少的资源进行解压缩，而中低质量的这两种格式的文件解压缩所需的 CPU 时间几乎相同。\",\"提示：对于较长的循环声音，使用 Vorbis，因为它能更好地处理循环。MP3 包含预定大小的数据块，因此如果循环不是块大小的精确倍数，则 MP3 编码会添加静音，而 Vorbis 不会。\"]},\"202\":{\"h\":\"Android 内存管理(Android Memory Management)\",\"t\":[\"Android 内存管理概览 - UnityDevelopers\",\"Android 上的内存由多个进程共享。一个进程使用了多少内存乍一看并不清楚。Android 内存管理很复杂。在继续阅读之前，请参阅 Google I/O 上关于 理解 Android 内存使用 的演讲。\"]},\"203\":{\"h\":\"Android 上的分页(Paging on Android)\",\"t\":[\"分页 是一种将内存从主内存移动到辅助内存或反之亦然的方法。\",\"Android 会分页到磁盘，但不使用交换空间(swap space)进行内存分页。这使得查看总内存更加困难，尤其是在 Android 中的每个应用程序都在不同的进程中运行，并且每个进程都运行自己的 Dalvik VM 实例。\",\"分页与交换空间\",\"Android 使用分页但不利用交换空间。分页严重依赖于内存映射(mmap())文件并在需要时将内核页存储在数据中的能力。虽然这种情况不常发生，但在内存不足时分页需要丢弃内核页，并且系统会丢弃缓存页文件。Android 不会为分页出脏页(dirty pages)而交换空间，因为在移动设备上这样做会降低电池寿命并对内存造成过度磨损。\",\"板载闪存(Onboard flash)\",\"Android 设备通常配备很少的板载闪存和有限的存储空间。板载闪存主要用于存储应用程序，但实际上可以存储交换文件。板载闪存速度慢，并且访问速度通常比硬盘或闪存驱动器差。\",\"板载闪存的大小不足以有效启用交换空间。交换文件大小的基本经验法则是每 1-2GB RAM 大约 512MB。你始终可以通过修改内核 .config 文件(CONFIG_SWAP)并自己编译内核来启用交换支持，但这超出了本指南的范围。\"]},\"204\":{\"h\":\"内存消耗限制(Memory Consumption Limitations)\",\"t\":[\"在 Android 系统 激活并开始关闭进程之前，你的应用程序可以使用多少内存？不幸的是，没有简单的答案，弄清楚这一点需要使用 dumpsys、procrank 和 Android Studio 等工具进行大量分析。\",\"许多不同的因素会影响你在 Android 上测量内存消耗的能力，例如：\",\"低端、中端和高端设备的不同平台配置\",\"测试设备上的不同操作系统版本\",\"在应用程序中测量内存的不同时间点\",\"整体设备内存压力\",\"重要的是始终在代码中的同一位置，使用相同的平台配置、操作系统版本和设备内存压力来测量内存。\",\"低内存压力和高内存压力\",\"分析内存的一个好方法是确保设备有足够的可用内存(低内存压力)，同时分析应用程序的内存消耗。如果设备没有可用内存(高内存压力)，则很难获得稳定的结果。重要的是要记住，尽管你使用分析来尝试找到高内存压力的来源，但仍然存在硬物理限制。如果系统已经在抖动内存缓存，它会在分析应用程序内存时产生不稳定的结果。\"]},\"205\":{\"h\":\"Dumpsys\",\"t\":[\"如果你将映射到每个进程的所有物理 RAM 相加，然后将所有进程相加，结果将大于实际的总 RAM。使用 dumpsys，你可以获得有关每个 Java 进程的更清晰信息。dumpsys 提供的统计信息包含与应用程序内存相关的各种信息。dumpsys 是一个在设备上运行的 Android 工具，它会转储系统服务和应用程序的状态信息。dumpsys 使你可以轻松访问系统信息。\",\"以简单的字符串表示形式获取系统信息。\",\"使用转储的 CPU、RAM、电池和存储来检查应用程序如何影响整个设备。\",\"以下命令列出了 dumpsys 提供的所有服务：~$ adb shell dumpsys | grep \\\"dumpsys services\\\"\",\"你可以使用 dumpsys meminfo 在 Android 上转储系统内存。\",\"dumpsys meminfo\",\"adb 提供了许多工具来获取有关 Android 上正在运行的应用程序内存的信息。最常见和最快的方法是 adb shell dumpsys meminfo 命令。它报告有关每个 Java 进程、原生堆、二进制数据以及各种进程和系统信息的详细内存使用信息。以下命令将提供系统内存的快速概述：\",\"~$ adb shell dumpsys meminfo\",\"这会在命令行中打印以下信息，使用 Nexus 6P(2560 x 1440 像素 - Android 8.1.0 和 Unity 2018.1)。\",\"* Applications Memory Usage (in Kilobytes): * Uptime: 6815563691 Realtime: 10882940478 * * ** MEMINFO in pid 20676 [com.unity.androidtest] ** * Pss Private Private SwapPss Heap Heap Heap * Total Dirty Clean Dirty Size Alloc Free * ------ ------ ------ ------ ------ ------ ------ * Native Heap 31467 31448 0 0 51072 47261 3810 * Dalvik Heap 1872 1760 0 0 12168 7301 4867 * Dalvik Other 470 460 0 0 * Stack 492 492 0 2 * Ashmem 8 0 0 0 * Gfx dev 3846 2036 0 0 * Other dev 4 0 4 0 * .so mmap 17760 516 15908 161 * .jar mmap 4 0 4 0 * .apk mmap 243 0 0 0 * .dex mmap 116 4 112 0 * .oat mmap 6206 0 3244 0 * .art mmap 2571 716 232 22 * Other mmap 49 4 0 2 * EGL mtrack 99840 99840 0 0 * GL mtrack 64480 64480 0 0 * Unknown 1270 1264 0 14 * TOTAL 230899 203020 19504 201 63240 54562 8677 * * App Summary * Pss(KB) * ------ * Java Heap: 2708 * Native Heap: 31448 * Code: 19788 * Stack: 492 * Graphics: 166356 * Private Other: 1732 * System: 8375 * * TOTAL: 230899 TOTAL SWAP PSS: 201 * * Objects * Views: 7 ViewRootImpl: 1 * AppContexts: 2 Activities: 1 * Assets: 2 AssetManagers: 2 * Local Binders: 16 Proxy Binders: 21 * Parcel memory: 5 Parcel count: 23 * Death Recipients: 1 OpenSSL Sockets: 2 * WebViews: 0 * * SQL * MEMORY_USED: 0 * PAGECACHE_OVERFLOW: 0 MALLOC_SIZE: 0 *\",\"相比之下，使用具有完整 3D 场景和大量内容的应用程序执行相同的命令会打印以下信息：\",\"* Applications Memory Usage (in Kilobytes): * Uptime: 6823482422 Realtime: 10890859209 * * ** MEMINFO in pid 22903 [com.unity3d.androidtest] ** * Pss Private Private SwapPss Heap Heap Heap * Total Dirty Clean Dirty Size Alloc Free * ------ ------ ------ ------ ------ ------ ------ * Native Heap 304918 304900 0 0 327552 315885 11666 * Dalvik Heap 1240 1096 0 0 11858 7127 4731 * Dalvik Other 424 412 0 0 * Stack 528 528 0 1 * Ashmem 6 0 0 0 * Gfx dev 196934 132128 0 0 * Other dev 4 0 4 0 * .so mmap 23976 668 21920 199 * .apk mmap 368 0 0 0 * .dex mmap 116 4 112 0 * .oat mmap 6060 0 3768 0 * .art mmap 2774 604 332 25 * Other mmap 44 4 0 2 * EGL mtrack 21600 21600 0 0 * GL mtrack 384184 384184 0 0 * Unknown 6577 6568 0 17 * TOTAL 949997 852696 26136 244 339410 323012 16397 * * App Summary * Pss(KB) * ------ * Java Heap: 2032 * Native Heap: 304900 * Code: 26472 * Stack: 528 * Graphics: 537912 * Private Other: 6988 * System: 71165 * * TOTAL: 949997 TOTAL SWAP PSS: 244 * * Objects * Views: 7 ViewRootImpl: 1 * AppContexts: 3 Activities: 1 * Assets: 2 AssetManagers: 2 * Local Binders: 15 Proxy Binders: 20 * Parcel memory: 3 Parcel count: 14 * Death Recipients: 0 OpenSSL Sockets: 0 * WebViews: 0 * * SQL * MEMORY_USED: 0 * PAGECACHE_OVERFLOW: 0 MALLOC_SIZE: 0 *\",\"下表比较了结果并描述了详细的统计信息：\",\"区域(Area)\",\"空场景 [MB]\",\"完整场景 [MB]\",\"描述(Description)\",\"Pss(Proportional Set Size)\",\"230\",\"949\",\"比例集大小(Pss)，是内核计算的一个指标，它考虑了内存共享。系统根据使用同一页的其他进程数量的比例来缩放进程中每页 RAM 的大小。所有私有页贡献其大小的 100%，共享内存贡献 大小/(共享进程数)。例如，在两个进程之间共享的页将贡献其大小的一半给每个进程的 Pss。这样，你可以通过将所有进程的 Pss 相加来计算使用的总 RAM。比较进程之间的 Pss 可以粗略了解它们的相对权重。\",\"Private Dirty\",\"203\",\"825\",\"最有趣和最昂贵的指标是 Private Dirty，它是进程内部无法分页到磁盘的 RAM 量，因为它没有磁盘上相同数据的支持，并且系统无法与任何其他进程共享。另一种看待方式是，这是应用程序销毁时系统将回收的 RAM。回收后，它会迅速被缓存和其他用途占用，因为系统必须充分利用有限的可用内存。\",\"Native Heap\",\"51\",\"328\",\"Native Heap 表示进程自身使用的内存，例如 Unity 引擎代码、原生 C mallocs 和 Mono VM。\",\"Dalvik Heap\",\"12\",\"12\",\"Dalvik Heap 是 Dalvik VM 分配的内存，例如 Unity Java Android 代码中的变量。\",\"Dalvik Other\",\"0.4\",\"0.4\",\"Dalvik Other 是用于 JIT 和 Android GC 的内存。\",\"Clean Memory\",\"19\",\"26\",\"Android 在多个进程之间共享内存页，例如通用框架的代码。一旦页中的内存发生变化，系统必须写入并修改内存，并将内存标记为脏(dirty)。然而，干净内存是自从从磁盘加载以来没有发生变化的内存。如果发生变化，内存就会变脏。\",\"Swapped Dirty\",\"0.2\",\"0.2\",\"应用程序使用 Dirty 内存作为计算空间。Android 没有交换机制，因此脏内存也是应用程序退出时将释放的 RAM。然而，Swapped Dirty 用于一些具有重新映射能力的 Android 设备，但它们交换到 RAM 而不是闪存。在 Android 上，这类似于 Linux。ZRAM 可以压缩页面，Linux 内核将它们交换到特殊的 RAM 区域，并在需要时再次解压缩。\",\"EGL mtrack\",\"99\",\"22\",\"这是 gralloc 内存使用量。它主要是 SurfaceView 和 TextureView 的总和。它也包括帧缓冲区，因此大小取决于帧缓冲区的尺寸。支持的屏幕分辨率越大，EGL mtrack 数字越高。在此测试中，为了确保良好性能，完整场景的帧缓冲区分辨率降低了。降低帧缓冲区大小也减少了这些缓冲区所需的内存量。\",\"GL mtrack & Gfx dev\",\"69\",\"581\",\"GL 和 Gfx 是驱动程序报告的 GPU 内存，主要包括 GL 纹理大小、GL 命令缓冲区、固定的全局驱动程序 RAM 开销和着色器(Shaders)的总和。请注意，此数字不会出现在较旧的 Android 版本上。注意：客户端空间驱动程序和内核空间驱动程序共享一个内存空间。在某些 Android 版本中，这有时会被计算两次，因此 Gfx dev 比实际值大。\",\"Unknown\",\"1.3\",\"6.5\",\"Unknown 是系统无法归类到其他更具体项的任何 RAM 页。这包括原生分配或运行时元数据，由于地址空间布局随机化(Address Space Layout Randomization)，工具在收集此数据时无法识别。Private Dirty 是仅专用于你的应用程序的未知 RAM。\",\"procrank\",\"dumpsys 的另一种选择是 procrank，这是另一个有用的工具，你可以使用它来查看所有进程的内存使用情况。它按使用量从高到低列出进程的内存使用情况。每个进程报告的大小是 Vss、Rss、Pss 和 Uss。\",\"~$ adb shell procrank\",\"* PID Vss Rss Pss Uss cmdline * 890 84456K 48668K 25850K 21284K system_server * 1231 50748K 39088K 17587K 13792K com.android.launcher2 * 947 34488K 28528K 10834K 9308K com.android.wallpaper * 987 26964K 26956K 8751K 7308K com.google.process.gapps * 954 24300K 24296K 6249K 4824K com.unity.androidmemory * 888 25728K 25724K 5774K 3668K zygote * 977 24100K 24096K 5667K 4340K android.process.acore\",\"Vss - 虚拟集大小(Virtual set size)，是进程可访问的总地址空间。它显示了与进程关联的虚拟内存量。\",\"Rss - 常驻集大小(Resident Set Size)，是分配给进程的物理页数。进程之间共享的页会被多次计数。\",\"Pss - 比例集大小(Proportional Set Size)，采用 Rss 数字，但将共享页平均分配给共享进程。例如，如果三个进程共享 9MB，则每个进程在 Pss 中获得 3MB。\",\"Uss - 唯一集大小(Unique Set Size)，也称为 Private Dirty，它基本上是进程内部无法分页到磁盘的 RAM 量，因为它没有磁盘上相同数据的支持，并且不与任何其他进程共享。\",\"注意：Pss 和 Uss 与 meminfo 的报告不同。Procrank 使用不同的内核机制来收集数据，这可能导致与 meminfo 不同的结果。\",\"meminfo\",\"meminfo 命令提供了系统整体内存使用情况的摘要：\",\"~$ adb shell cat /proc/meminfo\",\"前几个数字值得讨论。\",\"* MemTotal: 2866492 kB * MemFree: 244944 kB * Buffers: 36616 kB * Cached: 937700 kB * SwapCached: 13744 kB\",\"MemTotal，是内核和用户空间可用的总内存量，通常小于实际物理 RAM，因为手机还需要内存用于 GSM、缓冲区等。\",\"MemFree，是完全未使用的 RAM 量。在 Android 上，这个数字通常非常小，因为系统会尝试始终使用所有可用内存来保持进程运行。\",\"Cached，是用于文件系统缓存等的 RAM。\",\"有关更多信息，请阅读 RAM 调查页面 和 Android 性能指南。\"]},\"206\":{\"h\":\"Android Studio\",\"t\":[\"Android Studio 除了 Android SDK 中提供的命令行工具外，还提供了一个内存分析器。与命令行工具报告类似，它也区分了托管内存和原生内存。\",\"在这种情况下，该表比较了 dumpsys meminfo 部分中的空项目与 Android Studio 中的数据。它基本上涵盖了 dumpsys meminfo 显示的 App Summary，并进行了一些补充。\",\"部分(Section)\",\"大小 [MB]\",\"区域(Area)\",\"总计 [mb]\",\"168.7\",\"所有\",\"其他 [mb]\",\"3.1\",\"Other dev + Unknown\",\"代码 [mb]\",\"28\",\"mmaps\",\"栈 [mb]\",\"0.1\",\"Stack\",\"图形 [mb]\",\"88.7\",\"Gfxdev + EGL mtrack + GL mtrack\",\"原生 [mb]\",\"40.8\",\"Native Heap\",\"Java [mb]\",\"8\",\"Dalvik Heap\"]},\"207\":{\"h\":\"插件(Plugins)\",\"t\":[\"通常，大部分内存都进入 Native Heap 部分。Dalvik Heap 与 Native Heap 部分相比很小。如果它增长，你应该调查应用程序中使用的 Android 插件。Native Heap 很难知道内存来自哪里，并且没有很好的方法可以在分析器中查看原生插件分配。获得更深入了解的一种可能解决方案是隔离和测量用于第三方集成的插件，并将它们与空项目的内存基线进行比较。\"]},\"208\":{\"h\":\"应用程序大小(Application Size)\",\"t\":[\"节省磁盘空间和运行时内存的一种方法是减小 Android 上的 .apk 或 iOS 上的 .ipa 文件的大小。资源和代码与运行时内存直接成比例，如果你能减小它们，就可以节省运行时内存。请阅读 Unity 中的代码剥离 以了解有关减小代码大小的更多信息，并阅读知识库文章 IL2CPP 构建大小优化，如果你想了解 iOS 上 IL2CPP 优化的详细信息。\"]},\"209\":{\"h\":\"Unity 中的图形(Graphics)优化\",\"t\":[\"原文地址 - UnityLearn\"]},\"210\":{\"h\":\"渲染(Rendering)\",\"t\":[\"在 Unity 中渲染图形是一项复杂的任务。如果您需要了解其工作原理的基础知识，请在阅读本教程之前参阅 Unity 的 渲染管线(Rendering Pipeline)文档。\",\"本指南解释了与渲染相关的底层概念，以及在以下领域减少 GPU 渲染工作负载的最佳实践：\",\"光照场景(Lighting Scenes)\",\"相机(Camera)\",\"纹理(Textures)\",\"多线程渲染(Multithreaded Rendering)和图形作业(Graphics Jobs)\",\"帧缓冲区(Frame Buffer)\",\"着色器(Shaders)\",\"GPU 分析(profiling)和基准测试(benchmarks)\",\"为了有效地优化图形渲染，您需要了解目标硬件的限制以及如何分析 GPU。分析有助于您检查和验证所做的优化是否有效。\",\"在进行分析时，从基准测试开始很有用。例如，基准测试可以告诉您，当光照运行时处于最佳状态时，特定 GPU 的分析结果应该是什么样的。\",\"请参阅 GFXBench 网站，其中列出了许多不同的行业标准 GPU 和显卡基准测试。该网站提供了当前市场上 GPU 的良好概述，以及它们之间的比较。\"]},\"211\":{\"h\":\"相机(Camera)\",\"t\":[\"相机(Camera) 是一个核心组件，每个 Unity 应用程序都严重依赖它。这意味着有许多选项如果管理不当，可能会导致性能低下，例如 清除(clear)、剔除(culling)和 天空盒(skybox) 选项。\"]},\"212\":{\"h\":\"清除(Clear)\",\"t\":[\"在移动设备基于瓦片(tile-based)的渲染器上，清除命令尤为重要。Unity 会处理细节，因此您只需在相机上设置 清除标志(clear flags)，并在针对移动设备时避免使用 不清除(Don’t Clear) 标志。清除命令的底层行为取决于平台和图形驱动程序，但根据您选择的清除标志，它可能会显著影响性能，因为 Unity 必须清除先前的内容、设置标志以忽略先前的内容，或者从缓冲区中读回先前的内容。但是，请勿在流式传输 GPU(即通常在台式机和游戏机中找到的类型)上执行不必要的清除。\",\"清除标志(Clear flags)\",\"在移动设备上，避免使用 Unity 的默认天空盒(恰当地命名为 Default-Skybox)，它计算成本高昂，并且在所有新场景中默认启用。要完全禁用天空盒渲染，请将 Camera.clearFlags 设置为 SolidColor。然后转到光照设置(Lighting Settings)窗口(菜单：Window > Rendering > Lighting)中的环境(Environment)选项卡，移除天空盒材质(Skybox Material)，并将环境光照(Environment Lighting)中的源(Source)设置为颜色(Color)。\",\"丢弃(Discard)和恢复缓冲区(Restore buffer)\",\"在 Adreno GPU 上使用 OpenGLES 时，Unity 只会丢弃帧缓冲区(framebuffer)以避免帧缓冲区恢复。在 PVR 和 Mali GPU 上，Unity 会清除以防止帧缓冲区恢复。\",\"在移动设备上，将内容移入或移出图形内存是资源密集型的，因为这些设备使用 共享内存(shared memory) 架构，这意味着 CPU 和 GPU 共享相同的物理内存。在基于瓦片的 GPU(如 Adreno、PowerVR 或 Apple A 系列)上，在逻辑缓冲区中加载或存储数据会占用大量的系统时间和电池电量。将内容从 共享内存(shared memory) 传输到每个瓦片的帧缓冲区部分(或从帧缓冲区传输到共享内存)是资源密集型活动的主要来源。\",\"基于瓦片的渲染(Tile-based Rendering)\",\"基于瓦片的渲染(Tile-based rendering) 将视口(viewport)分割成更小的瓦片，典型大小为 32x32px，并将这些瓦片保存在更靠近 GPU 的更快内存中。这种较小内存和真实帧缓冲区之间的复制操作可能需要一些时间，因为内存操作比算术操作慢得多。\",\"这些缓慢的内存操作是您应该避免在基于瓦片的 GPU 上每一新帧都使用 glClear(OpenGLES) 调用加载先前帧缓冲区的主要原因。通过发出 glClear 命令，您是在告诉硬件您不需要先前的缓冲区内容，因此它不需要将颜色缓冲区(color buffer)、深度缓冲区(depth buffer)和模板缓冲区(stencil buffer)从帧缓冲区复制到较小的瓦片内存中。\",\"注意：由于芯片获取信息的方式，小于 16 像素的视口在某些芯片组上可能非常慢；例如，将视口设置为 2x2 像素实际上可能比设置为 16x16 像素慢。这种减速是设备特定的，Unity 无法控制，因此对其进行分析至关重要。\",\"RenderTexture 切换(RenderTexture Switching)\",\"当您切换渲染目标时，图形驱动程序会在帧缓冲区上执行加载和存储操作。例如，如果您在连续两帧中渲染到视图的颜色缓冲区和纹理，系统会重复在共享内存和 GPU 之间传输(加载和存储)纹理的内容。\",\"帧缓冲区压缩(Framebuffer Compression)\",\"清除命令还会影响帧缓冲区的压缩，包括颜色、深度和模板缓冲区。清除整个缓冲区可以使其更紧密地压缩，从而减少驱动程序需要在 GPU 和内存之间传输的数据量，因此通过提高吞吐量可以实现更高的帧速率。在基于瓦片的架构上，清除瓦片是一项小任务，涉及在每个瓦片中设置一些位。完成后，这使得从内存中获取瓦片变得非常便宜。注意：这些优化适用于基于瓦片延迟渲染(tile-based deferred rendering)的 GPU 和流式传输 GPU。\"]},\"213\":{\"h\":\"剔除(Culling)\",\"t\":[\"剔除(Culling) 是按相机进行的，并且可能对性能产生严重影响，尤其是在同时启用多个相机时。剔除有两种类型：视锥体剔除(frustum culling)和遮挡剔除(occlusion culling)：\",\"视锥体剔除(Frustum Culling) 在每个 Unity 相机上自动执行。\",\"遮挡剔除(Occlusion culling) 由开发者控制。\",\"视锥体剔除(Frustum Culling)\",\"视锥体剔除确保相机视锥体(Camera frustum)之外的 GameObject 不被渲染，以节省渲染性能。\",\"视锥体剔除的示例。\",\"注意：视锥体剔除在 2017.1 及更高版本中已作业化(jobified)，并且 Unity 现在也首先按层(layer)进行剔除。按层剔除意味着 Unity 只剔除相机使用的层上的 GameObject，并忽略其他层上的 GameObject。之后，Unity 使用线程上的作业根据相机视锥体剔除 GameObject。\",\"遮挡剔除(Occlusion Culling)\",\"当您启用 遮挡剔除(Occlusion Culling) 时，如果相机看不到 GameObject，Unity 不会渲染它们。例如，如果门关闭且相机看不到房间，则无需渲染另一个房间。\",\"遮挡剔除的示例。\",\"如果您启用遮挡剔除，它可以显著提高性能，但会占用更多的磁盘空间和 RAM，因为 Unity Umbra 集成在构建期间烘焙遮挡数据，并且 Unity 在加载场景时需要将其从磁盘加载到 RAM。\",\"多个相机(Multiple Cameras)\",\"当您在场景中使用许多活动相机时，每个相机都有显著的固定剔除和渲染开销。由于层剔除，Unity 在 Unity 2017.1 中减少了剔除开销，但如果相机不使用 不同的层(different layer) 来组织要渲染的内容，则这不会产生任何影响。\",\"Unity CPU Profiler 在时间轴视图中显示主线程。它表明存在多个相机，并且您可以看到 Unity 为每个相机执行剔除。\",\"每层剔除距离(Per-Layer culling distances)\",\"您可以通过脚本在相机上手动设置 每层剔除距离(per-layer culling distances)。设置剔除距离对于剔除相机从给定距离查看时对场景没有贡献的小型 GameObject 非常有用。\"]},\"214\":{\"h\":\"运动矢量(Motion Vectors)\",\"t\":[\"后处理效果(Post-processing effects)，例如时间抗锯齿(Temporal Anti-aliasing)(TAA)，需要并自动启用运动矢量(Motion Vectors)。\",\"启用运动矢量会影响性能。如果不需要它们，可以通过禁用运动矢量来避免对性能的影响。\",\"当它们未自动启用时，可以使用相机组件启用或禁用运动矢量 - 通过脚本使用 Camera.depthTextureMode 或通过检查器更改相机的深度纹理模式(Depth Texture Mode)下拉菜单。\",\"您还可以在任何蒙皮网格渲染器(Skinned Mesh Renderer)组件上启用或禁用附加功能 - 蒙皮运动矢量(Skinned Motion Vectors)。\"]},\"215\":{\"h\":\"填充率(Fillrate)\",\"t\":[\"像素填充率(pixel fillrate)降低是过度绘制(overdraw)和片段着色器(fragment shader)复杂性的结果。Unity 通常将着色器实现为多个通道(pass)(绘制漫反射(diffuse)、绘制镜面反射(specular)等)。使用多个通道会导致过度绘制，其中不同的着色器多次触碰(读取/写入)相同的像素。有关更多信息，请阅读 在 Unity 游戏中优化图形渲染 教程中的填充率部分。\",\"过度绘制(Overdraw)\",\"Unity 的 帧调试器(Frame Debugger) 对于了解 Unity 如何绘制场景非常有用。注意那些用 GameObject 覆盖屏幕大面积区域的情况，因为即使 GameObject 被隐藏，Unity 也会继续绘制其后面的所有内容。这种情况的一个常见示例是在活动 3D 屏幕(例如设置或玩家库存)上调用菜单屏幕，但将其后面的 3D 场景保持活动状态。您还应该注意 Unity 多次绘制的 GameObject；例如，当多个光源触碰单个 GameObject 时，就会发生这种情况，因为 Unity 会为每个通道绘制它(请参阅 前向渲染路径(Forward Rendering Path)文档)。\",\"如上所述，UI 通常是过度绘制和填充率问题的原因。通过遵循 优化 Unity UI 指南中的提示来避免这些问题。\",\"过度绘制视图(Overdraw view)\",\"过度绘制视图允许您查看 Unity 相互绘制的对象。您可以使用 场景视图控制栏(Scene View Control Bar) 在场景视图中查看过度绘制。\",\"内置渲染管线中可以看到 Overdraw 模式，但是 SRP(URP/HDRP) 管线下，看不到 Miscellaneous(杂项) 分组(Overdraw 就在其中)。\",\"SRP 下，可以通过 Analysis > Rendering Debugger > Rendering 下的 Overdraw Mode 查看。\",\"场景视图控制栏中的过度绘制。\",\"标准着色视图中的场景。\",\"过度绘制视图中的同一场景。\",\"当您将场景视图调整到目标分辨率时，过度绘制视图效果最佳。Unity 将对象渲染为透明轮廓。随着透明度的累积，更容易发现 GameObject 相互绘制的地方。白色是最不理想的，因为一个像素被多次过度绘制，而黑色表示没有发生过度绘制。\",\"透明度(Transparency)\",\"透明度也会增加过度绘制。在最佳情况下，屏幕上的每个像素每帧只被触碰一次。\",\"Alpha 混合(Alpha Blending)\",\"您应该避免重叠的 Alpha 混合几何体(例如密集的粒子效果和全屏后处理效果)，以保持填充率较低。\",\"绘制顺序(Draw Order)\",\"Unity 不透明队列中的对象使用边界框(bounding box)(AABB 中心坐标)和深度测试(depth testing)以从前到后的顺序渲染，以最大程度地减少过度绘制。但是，Unity 以从后到前的顺序渲染透明队列中的对象，并且不执行深度测试，这使得透明队列中的对象容易受到过度绘制的影响。Unity 还根据其边界框的中心位置对透明 GameObject 进行排序。\",\"Z-测试(Z-testing)\",\"Z-测试比绘制像素更快。Unity 通过 边界框(bounding box) 执行剔除和不透明排序。因此，Unity 可能会首先绘制大型背景对象，例如天空盒或地面平面，因为边界框很大并且填充了大量像素，这些像素在被其他对象过度绘制后最终不可见。如果您看到这种情况发生，请手动将这些对象移到队列的末尾。有关更多信息，请参阅脚本 API 参考中的 Material.renderQueue。\"]},\"216\":{\"h\":\"绘制调用批处理(Draw Call Batching)\",\"t\":[\"PC 硬件可以推送大量绘制调用(draw calls)，但每个调用的开销仍然很高，足以值得尝试减少它们。然而，在移动设备上，绘制调用优化至关重要，您可以通过 绘制调用批处理(draw call batching) 来实现。\",\"您可以通过遵循以下简单规则来最大化批处理：\",\"在场景中尽可能少地使用纹理。纹理越少，所需的唯一材质(Materials)就越少，从而更容易进行批处理。此外，尽可能使用纹理图集(Texture atlases)。\",\"在检查器(Inspector)中将所有从不移动的网格(Meshes)标记为静态(Static)。Unity 在构建时将所有标记为静态的网格组合成一个大型网格。您也可以在运行时(例如，在生成由静态部分组成的程序化关卡后)使用 StaticBatchingUtility 自己生成静态批处理。\",\"始终以尽可能大的图集大小烘焙光照贴图(lightmaps)。光照贴图越少，所需的材质状态更改就越少。例如，Samsung S6/S8 可以轻松推送 4096k 光照贴图，但要注意内存占用。注意：您不需要将每个 GameObject 都包含在光照贴图中(当将 GameObject 设置为 lightmap-static 时会发生这种情况)。虽然上述建议通常是正确的 - 您应该将所有不移动的 GameObject 标记为静态 - 但您应该省略小型对象(碎石、杯子、书籍)，因为添加它们会迫使 Unity 在空间不足时创建另一个光照贴图。当您使用光照探针(Light Probes)照亮小型对象时，它们看起来会很棒。\",\"小心不要意外地实例化材质。访问 Renderer.material 会自动创建一个实例，并使该对象退出批处理。尽可能使用 Renderer.sharedMaterial代替。\",\"注意多通道着色器。尽可能在着色器中添加 noforwardadd，以防止 Unity 应用多个定向光，因为多个定向光会破坏批处理(有关更多详细信息，请参阅 编写表面着色器(Writing Surface Shaders) 文档)。\",\"在优化期间，通过使用 Profiler、内部 profiler 日志或 stats gizmo 来关注静态和动态批处理计数与总绘制调用计数。\",\"有关更多信息和提示，请阅读 Unity 文档中关于 绘制调用批处理(draw call batching) 的部分。\",\"实例化(Instancing)\",\"实例化(Instancing) 强制 Unity 使用常量缓冲区(constant buffers)，这在桌面 GPU 上效果很好，但在移动设备上速度较慢。实例化只有在大约 50-100 个网格时才开始变得有用，具体取决于底层硬件。\"]},\"217\":{\"h\":\"几何体(Geometry)\",\"t\":[\"将场景中 GameObject 的几何复杂性保持在最低限度至关重要，否则 Unity 必须向显卡推送大量顶点数据(vertex data)。200k 静态三角形是低端移动设备的保守目标。但是，这也取决于您的 GameObject 是动画的还是静态的。\",\"平台(Platform)\",\"静态几何体(Static Geometry) [百万三角形]\",\"动画蒙皮网格(Animated Skinned Meshes) [百万三角形]\",\"低端移动设备(Low-end mobile)\",\"0.2\",\"0.05\",\"高端移动设备(High-end mobile)\",\"1-5\",\"0.5-1\",\"在 Unity 中，通过拥有少量高多边形数的 GameObject 而不是大量低多边形数的 GameObject，可以获得更好的渲染性能。\",\"移除您看不到的几何体面，并且不要渲染玩家永远看不到的东西。例如，如果您永远看不到靠墙的橱柜背面，则橱柜模型不应在其背面有任何面。\",\"尽可能简化网格。根据目标平台(尤其是在移动设备上)，考虑通过高分辨率纹理添加细节以弥补低多边形几何体，可能还有视差映射(parallax mapping)和曲面细分(tessellation)。请注意并记住定期进行分析，因为这可能会影响性能，并且可能不适合或不适用于目标平台。\",\"通过将尽可能多的细节烘焙到纹理中来降低像素复杂性(每像素计算)。例如，将镜面高光烘焙到纹理中，以避免在片段着色器中计算高光。\"]},\"218\":{\"h\":\"细节级别(Level of Detail)(LOD)\",\"t\":[\"细节级别(Level Of Detail)(LOD)渲染允许您随着对象与相机的距离增加而减少渲染的三角形数量。只要对象不同时靠近相机，LOD 通过添加 LOD 组件来减轻硬件负载并提高渲染性能。它还为距离相机更远的距离组提供较低细节的网格。总共有 8 个 LOD 级别。像 Simplygon 这样的工具可以自动化 LOD 的大部分资源准备过程。\",\"静态场景(Static Scenes)\",\"当您使用用户无法移动的静态相机设置(例如在某些 VR 体验中)时，最好使用根据距离建模具有正确细节的网格，而不是为每个对象存储多个 LOD。您可以通过使用纹理的适当分辨率而不是在运行时进行 mipmapping 来对纹理应用类似的概念。应用正确的细节可以节省大量磁盘空间和一些运行时内存。\",\"高质量 LOD(High-Quality LODs)\",\"如果内存允许，您可以使用网格组合(Mesh combination)然后对结果进行 LOD。例如，一个书柜近距离由独特的部件组成，但在远处将它们合并成一个网格并进行 LOD。维护和生成高质量 LOD 需要时间和精力，即使您已经拥有最佳的几何体、材质和着色器。\",\"运行时网格组合(Runtime Mesh Combination)\",\"请注意，通常不建议在运行时组合网格，因为在网格组合时帧率可能会降低。\",\"通过编写使用 Mesh.CombineMeshes 的脚本，可以在运行时将多个网格组合成一个网格。这样做会生成一个静态网格，但可以提高性能。在最佳情况下，这将导致更少的绘制调用(可以使用 帧调试器窗口(Frame Debugger window)进行验证)。\",\"一个最佳情况的示例 - 可能获得性能提升 - 是组合使用相同非实例化材质的多个静态对象的网格。\",\"更多信息可以在 这个 Unity 手册页面 中找到。\",\"动画 LOD(Animation LODs)\",\"当您想要动画的 LOD 时，必须通过遮罩手动设置它们。\",\"这是一个示例：您有一个人类角色模型，它在较低 LOD 中不动画手指，并且不需要骨骼(rig)。\",\"只将手指放在一个遮罩中，不包括手或身体的其余部分\",\"创建另一个没有手指的遮罩，并添加身体的其余部分(包括手)\",\"在动画器(Animator)中设置两个层。基础层使用较低的 LOD(没有手指的动画)。接下来，创建一个新层，并在其设置中启用 Sync 复选框，并选择 Base Layer 作为源层。这个第二层只包含带有手指的遮罩。\",\"此设置不会读取所有动画曲线，但它确保 Unity 只加载所需的遮罩。使用同步层可以实现 LOD，尽管您需要手动设置它们。在动画层中使用 LOD 还可以节省 CPU 时间，因为动画不会以零权重评估动画剪辑。\"]},\"219\":{\"h\":\"纹理(Textures)\",\"t\":[\"纹理是 Unity 项目的重要组成部分，您需要了解纹理大小和压缩。在移动设备和游戏机上，由于运行时内存和磁盘空间有限，保持大小较低更为关键。选择正确的压缩对于将纹理缩小到合适的大小以节省内存带宽至关重要。\"]},\"220\":{\"h\":\"资源审计(Asset Auditing)\",\"t\":[\"通过自动化资源审计过程，您可以避免意外或无意中更改资源设置。AssetAuditor 在 Github 上的包涵盖了审计过程的许多方面。资源审计不仅有助于恢复纹理的性能，还可以应用于 Unity 中的多种资源类型。在 理解 Unity 中的优化 最佳实践指南中阅读更多关于 资源审计(Asset Auditing) 的信息。\"]},\"221\":{\"h\":\"纹理压缩(Texture Compression)\",\"t\":[\"正确应用 纹理压缩(Texture compression) 可以带来显著的性能优势。在较新的移动设备上，您应该优先选择 ASTC 压缩纹理格式。如果您的目标设备上没有 ASTC，请在 Android 上使用 ETC2，在 iOS 上使用 PVRTC。\",\"ASTC\",\"Unity 4.3 及更高版本提供了对 ARM 添加的 ASTC 压缩的支持。这在构建时非常有益，因为它允许 Unity 比 ETC2 或 PVRTC 更快地压缩 ASTC。在 iOS 上，ASTC 在 A8 芯片及更高版本上可用；在 Android 上，ASTC 在大多数现代芯片组上可用。\",\"Mali GPU(Mali T-760 MP8 及更高版本)需要 ASTC 压缩而不是 ETC2。\",\"如果硬件不支持 ASTC(例如，在 Adreno GPU 上)，您必须选择一个回退，例如 ETC2。有关 ASTC 的更多信息，请参阅 NVidia 文章 使用 ASTC 纹理压缩优化游戏资源。\",\"PVRTC\",\"PVRTC 是 iOS 上主要的纹理压缩格式，直到 Apple 添加了 ASTC。如果您在 Android 上使用 PVRTC，如果可能，应该将其替换为 ETC2。\",\"注意：iOS 上的 PVRTC 纹理格式和 ETC 格式(Android 4.x 设备)需要方形纹理。压缩非方形纹理时，可能会发生两种情况：\",\"如果没有 Sprite 使用该纹理，并且压缩后的内存占用小于未压缩时的内存占用，Unity 会根据 非二次幂(non-power-of-two)(NPOT)纹理缩放因子调整纹理大小。\",\"否则，Unity 不会调整纹理大小，并将其标记为未压缩。\"]},\"222\":{\"h\":\"GPU 上传(GPU Upload)\",\"t\":[\"Unity 在纹理加载完成后立即将其直接上传到 GPU，并且不会等到纹理在相机视锥体中可见。\",\"当加载线程完成加载场景或资源时，Unity 需要唤醒它们。加载发生的位置和方式取决于 Unity 版本和用于初始化加载的调用。\",\"加载行为(Load Behavior)\",\"如果您从 AssetBundles、Resources 或 Scenes 加载资源，Unity 会从预加载线程(磁盘 I/O)转到图形线程(GPU 上传)。如果您使用 Unity 5.5 或更高版本，并且启用了 图形作业(Graphics Jobs)，Unity 会直接从预加载作业转到 GPU。\",\"唤醒行为(Awake Behavior)\",\"Unity 在唤醒所有场景 GameObject 后立即在主线程上唤醒资源。如果您使用 AssetBundle.LoadAsset、Resources.Load 或 SceneManager.LoadScene 加载资源和场景，Unity 会阻塞主线程并唤醒所有资源。如果您使用这些调用的非阻塞版本(例如，AssetBundle.LoadAssetAsync)，Unity 会使用时间切片(time-slicing)来唤醒资源。\",\"内存行为(Memory Behavior)\",\"在同时加载多个纹理时，如果上传速率不够快或主线程停滞，您可以调整纹理 缓冲区(buffers)。但是，更改默认值可能会导致高内存压力。您可以在 Unity 中的内存管理 指南的 环形缓冲区(RingBuffer) 部分阅读更多关于使用时间切片唤醒时纹理缓冲区中的内存限制的信息。\",\"注意：如果 GPU 内存过载，GPU 会卸载最近最少使用的纹理，并在下次进入相机视锥体时强制 CPU 重新上传。\"]},\"223\":{\"h\":\"多线程渲染(Multithreaded Rendering)和图形作业(Graphics Jobs)\",\"t\":[\"Unity 支持多种渲染模式，具体取决于平台可用性和图形 API：\",\"单线程渲染(Singlethreaded Rendering)\",\"多线程渲染(Multithreaded Rendering)\",\"作业化渲染(Jobified Rendering)\",\"图形作业(Graphics Jobs)\",\"如果您未在 Player Settings 中选择其中一种模式，Unity 将使用单线程渲染。\"]},\"224\":{\"h\":\"单线程渲染(Singlethreaded Rendering)(单客户端，无工作线程)\",\"t\":[\"如果未启用其他模式，Unity 默认使用单线程渲染。\",\"这会导致单个客户端在执行高级渲染命令时占用主线程。\",\"单个客户端在主线程上执行所有渲染命令(RCMD)。客户端还拥有真实的图形设备 GfxDevice，并在主线程上通过底层图形 API(GCMD)执行实际渲染。这是次优的，因为您在主线程上执行的所有命令都会占用重要的帧时间，而这些时间可以用于在主线程上运行的其他子系统。\"]},\"225\":{\"h\":\"多线程渲染(Multithreaded Rendering)(单客户端，单工作线程)\",\"t\":[\"如果图形 API 允许，Unity 默认启用 多线程渲染(Multithreaded Rendering)。要禁用多线程渲染(通常用于分析目的)，请转到 Player Settings(菜单：Edit > Project Settings > Player)窗口，向下滚动并取消选中 Multithreaded Rendering 复选框。\",\"Unity 中的多线程渲染实现为单客户端、单工作线程。这通过利用 Unity 中的抽象 GfxDevice 接口来实现。不同的图形 API 实现(例如 Vulkan、Metal 和 GLES)继承自 GfxDevice。\",\"渲染线程(Renderthread)\",\"当您启用多线程渲染时，可以在本机平台分析器(例如 XCode)上的调用堆栈中找到 GfxDeviceClient 类函数。在 Unity 时间轴分析器中，它被称为 Renderthread。\",\"客户端的高级渲染代码在主线程上执行，使用渲染线程。\",\"单个客户端将所有渲染命令(RCMD)转发到渲染线程 - 一个专门用于渲染的工作线程 - 它拥有真实的图形设备 GfxDevice，并通过底层图形 API(GCMD)执行实际渲染。\",\"可用性(Availability)\",\"Unity 根据图形 API 和目标平台有条件地启用或禁用多线程渲染。下表概述了可以在哪些平台和图形 API 上启用或禁用多线程渲染。\",\"图形 API(Graphics API)\",\"iOS\",\"Android\",\"桌面(Desktop)\",\"OpenGLES 2/3\",\"不支持(Not Supported)\",\"不支持(Not Supported)\",\"不适用(N/A)\",\"Metal\",\"不适用(N/A)\",\"不适用(N/A)\",\"不适用(N/A)\",\"Vulkan\",\"不适用(N/A)\",\"可配置(Configurable)\",\"可配置(Configurable)\",\"性能注意事项(Performance Considerations)\",\"您应该尽可能启用多线程渲染，因为它通常会极大地提高性能。提示：您还应该分析多线程渲染的使用情况，并注意在非常低端的设备上可能几乎没有好处。\"]},\"226\":{\"h\":\"分析多线程渲染(Profiling Multithreaded Rendering)\",\"t\":[\"通常，您需要分析多线程渲染以提高渲染性能，并且需要禁用多线程渲染设置才能获得正确的结果(请参阅后面关于分析渲染的部分)。您还可以使用仅脚本的播放器设置 PlayerSettings.MTRendering 来更改多线程渲染。或者，在相关平台的 Player Settings 中禁用此设置(请参阅前面关于可用性的部分)。要在编辑器中禁用多线程渲染，请使用以下命令行选项：-force-gfx-direct。如果您需要启用客户端设备(例如，使用显示列表)，请改用 -force-gfx-st。\"]},\"227\":{\"h\":\"作业化渲染(Jobified Rendering)(多客户端，单工作线程)\",\"t\":[\"此渲染模式在 Unity 5.4、5.5 和 5.6 中可用，但此后已被图形作业取代。\",\"多个作业，每个作业都在自己的线程上运行，生成中间图形命令(IGCMD)。之后，类似于多线程渲染(单客户端，单工作线程)，一个工作线程处理缓冲的中间图形命令，并将图形命令(GCMD)提交给真实的图形设备 GfxDevice。\",\"这些作业具有明确定义的输入(RCMD)，因为它们可以与用户脚本代码同时运行，这可能会改变世界中任何对象的状态。作业将命令(RCMD)输出到每个线程不同的 GfxDeviceClient，并将它们写入自己的块分配缓冲区，然后由工作线程执行。\",\"注意：工作线程不会等到作业完成才开始执行其命令(IGCMD)，但它始终按照调度顺序执行它们。\"]},\"228\":{\"h\":\"图形作业(Graphics Jobs)(多客户端，无工作线程)\",\"t\":[\"Unity 默认禁用图形作业，但您可以在 Player Settings 中启用它们。多个本机命令生成线程利用支持在多个线程上以本机格式记录图形命令(GCMD)的图形 API。这消除了在将命令提交到 API 之前以自定义格式写入和读取命令的性能影响。与其他模式类似，图形作业通过调用 GfxDevice 函数生成命令。但是，由于设备现在是平台特定的，图形作业将命令直接转换为例如 DirectX 12 或 Vulkan 命令缓冲区。\",\"注意：目前，图形作业没有渲染线程来调度作业，这会在主线程上造成少量调度开销。\",\"注意：启用图形作业时，GPU 分析会自动禁用。\",\"可用性(Availability)\",\"图形作业的可用性取决于图形 API 和目标平台。下表概述了图形作业在每个平台和图形 API 上的可用性。\",\"图形 API(Graphics API)\",\"iOS\",\"Android\",\"桌面(Desktop)\",\"OpenGLES 2/3\",\"不支持(Not Supported)\",\"不支持(Not Supported)\",\"不适用(N/A)\",\"Metal\",\"不适用(N/A)\",\"不适用(N/A)\",\"不适用(N/A)\",\"Vulkan\",\"不适用(N/A)\",\"可配置(Configurable)\",\"可配置(Configurable)\",\"分析渲染(Profiling Rendering)\",\"在分析时调查渲染系统时，禁用多线程渲染、作业化作业和图形作业，以在单线程渲染模式下查看在主线程上执行的整个渲染队列。这使得测量时间并更容易查看命令队列。\",\"注意：当您在单线程渲染模式下运行以在主线程上执行所有内容时，您会获得不同的时间，因为管理其他模式的开销不会出现在分析器中。\",\"GfxThreadableDevice 函数(GfxThreadableDevice Functions)\",\"在分析时查看本机调用堆栈中的 GfxDeviceClient 函数时，它通常会添加来自 GfxThreadableDevices 类的额外虚函数。\",\"这些额外函数是 GfxDevice 函数的变体，它们接受非线程安全的数据(例如 ShaderLab\"]},\"229\":{\"h\":\"帧缓冲区(Framebuffer)\",\"t\":[\"帧缓冲区包含深度、模板和颜色缓冲区。颜色缓冲区是必不可少的部分，并且始终存在，而其他缓冲区可能存在或不存在，具体取决于您使用的图形功能。\"]},\"230\":{\"h\":\"双缓冲(Double Buffering)和 三缓冲(Triple Buffering)\",\"t\":[\"如果设备支持双缓冲或三缓冲，则图形驱动程序分别需要两个或三个帧缓冲区。\",\"使用双缓冲(并启用 VSync 时)，您的应用程序必须等到下一次垂直回扫(vertical retrace)才能开始渲染下一帧。垂直回扫以垂直刷新率发生，通常在 60-100 Hz 范围内。如果图形驱动程序支持，关闭 VSync 可以消除此延迟并提供最高的帧率。但是，它可能会导致称为撕裂(tearing)的视觉伪影。\",\"使用三缓冲时，您的应用程序在一个后备缓冲区(常规帧缓冲区)中渲染一帧。在等待翻转时，它开始在另一个后备缓冲区中渲染。结果是帧率通常高于双缓冲(并启用 VSync)且没有任何撕裂。\",\"使用多个帧缓冲区会带来图形内存影响，尤其是在高分辨率显示器上，当您的应用程序以本机分辨率(Native Resolution)运行时。\"]},\"231\":{\"h\":\"颜色缓冲区(Color Buffer)\",\"t\":[\"使用的帧缓冲区数量主要取决于图形驱动程序，每个帧缓冲区有一个颜色缓冲区。例如，当您在 Android 上使用 OpenGL ES 时，Unity 使用一个带有颜色缓冲区的 EGLWindowSurface，但 Unity 无法控制它使用多少颜色缓冲区和帧缓冲区。通常，Unity 使用三个帧缓冲区进行三缓冲，但如果设备不支持，它会回退到双缓冲并使用两个帧缓冲区，包括两个颜色缓冲区。\"]},\"232\":{\"h\":\"模板缓冲区(Stencil Buffer)和深度缓冲区(Depth Buffer)\",\"t\":[\"模板缓冲区和深度缓冲区仅在图形功能使用它们时才绑定到帧缓冲区。如果您知道您的应用程序不需要它们，则应该禁用它们，因为帧缓冲区会占用大量图形内存，具体取决于分辨率，并且创建起来资源密集。\",\"要禁用深度缓冲区和模板缓冲区，请转到 Player Settings(菜单：Edit > Project Settings > Player)窗口，选择 iOS 或 Android 选项卡，向下滚动到 Resolution and Presentation 部分，并选中 Disable Depth and Stencil* 复选框。\",\"在移动 GPU 上，深度缓冲区和模板缓冲区是两个独立的缓冲区，深度缓冲区为 24 位，模板缓冲区为 8 位。与桌面平台不同，它们没有组合在一个缓冲区中，桌面平台将缓冲区组合成一个 32 位缓冲区，其中深度缓冲区使用 24 位，模板缓冲区使用 8 位。\"]},\"233\":{\"h\":\"本机分辨率(Native Resolution)\",\"t\":[\"现代手机的显示屏分辨率非常高。本机分辨率通常远高于 1080p。即使对于现代游戏机，在不降低性能的情况下支持 1080p 也很困难。\",\"提示：控制应用程序的分辨率，甚至将其公开，以便您的用户如果想节省电池寿命可以降低分辨率。\",\"使用 Screen.SetResolution 命令降低默认分辨率并在不损失质量的情况下恢复性能。\",\"注意：将分辨率设置为本机分辨率的一半可能并不总是对视觉保真度产生积极影响。\",\"缓冲区大小(Buffer Size)\",\"计算帧缓冲区大小并比较从本机分析器获得的结果。例如，全高清屏幕的分辨率为 1920 x 1080，即 2073600 像素：\",\"将此乘以颜色通道分辨率使用的位数，得到 66355200，这是所需的内存(以位为单位)。\",\"现在将其除以 8、1024 和 1024，以获得以字节(Bytes)、千字节(Kilobytes)和兆字节(Megabytes)为单位的结果。\",\"下表提供了按分辨率和位/通道计算的内存。\",\"分辨率(Resolution)\",\"像素(Pixel)\",\"位/通道(Bits/Channel)\",\"内存 [位](Memory [Bits])\",\"内存 [MB](Memory [MB])\",\"1920 x 1080\",\"2073600\",\"32\",\"66355200\",\"7.91\",\"24\",\"49766400\",\"5.93\",\"16\",\"33177600\",\"3.96\",\"8\",\"16588800\",\"1.98\",\"1440*2960\",\"4262400\",\"32\",\"136396800\",\"16.3\",\"24\",\"102297600\",\"12.19\",\"16\",\"68198400\",\"8.13\",\"8\",\"34099200\",\"4.07\",\"在分辨率为 1440*2960 的 Samsung Galaxy S8 上运行的应用程序，在使用 32 位颜色缓冲区、24 位深度缓冲区和 8 位模板缓冲区进行三缓冲操作时，将使用 *97.68MB 的图形内存用于帧缓冲区。这些数字有助于您在 iOS(Instruments 中的 IOKit 分配)和 Android(dumpsys meminfo 中的 EGL mtrack 分配)上使用本机分析器分析内存时比较内存统计信息。\"]},\"234\":{\"h\":\"最终 Blit(Final Blit)\",\"t\":[\"在 Android 和 OpenGLES 上，Unity 创建一个带有颜色缓冲区和深度缓冲区附件的帧缓冲区对象，Unity 将其用于所有渲染。在帧结束时，Unity 将此帧缓冲区 blit 到 EGLSurface 中。从 Unity 2017.2 开始，您可以更改 Blit 类型(Blit Type)。转到 Player Settings(菜单：Edit > Project Settings > Player)窗口，选择 iOS 或 Android 选项卡，向下滚动到 Resolution and Presentation 部分，并在下拉菜单中选择 Blit 类型。\",\"在 Android 上使用 Vulkan 时，Unity 不执行最终 blit，因为这样做会通过现有的 ANativeWindow 接口与现有的 BufferQueue 组件交互，并使用 Gralloc HAL 获取数据。有关更多详细信息，请参阅官方 Android 文档。\"]},\"235\":{\"h\":\"着色器(Shaders)\"},\"236\":{\"h\":\"移动着色器(Mobile Shaders)\",\"t\":[\"在移动设备上，验证所有片段着色器是否对移动设备友好至关重要。当您使用内置着色器时，应该使用着色器的 Mobile 或 Unlit 版本。避免过度使用多通道着色器(例如，旧版镜面反射)和过度着色器通道(即，超过 2 个通道)。\",\"通道(Pass)\",\"高端移动设备 [ms](High-End Mobile [ms])\",\"低端移动设备 [ms](Low-End Mobile [ms])\",\"空(Empty)\",\"1.5\",\"3\",\"多通道*(Multipass*)\",\"-\",\"-\",\"多通道着色器(例如，泛光(bloom))的时间很大程度上取决于屏幕分辨率。将它们组合成更少的通道可以带来更好的性能。\",\"光照贴图(Lightmaps)\",\"在适当的情况下，您应该使用最基本的着色器。利用廉价的 Mobile > Unlit(Supports Lightmap)着色器来对场景进行光照贴图。\"]},\"237\":{\"h\":\"项目导入(Project Imports)\",\"t\":[\"您可以从 Graphics Settings(Edit > ProjectSettings > Graphics)中的 Always included 着色器列表中移除所有未使用的着色器。此外，您可以将着色器添加到列表中，这些着色器将在应用程序的整个生命周期中始终包含在内。提示：如果您想更精细地控制加载时间，请改用着色器变体集合(shader variant collections)；这允许您在运行时选择加载时间对性能的影响，而不是增加初始加载时间。有关更多详细信息，请参阅着色器预加载(Shader Preloading)部分。\",\"默认着色器(Default Shaders)\",\"一些 Unity 着色器默认始终包含在构建中，例如 Splash Screen、粉色错误着色器和清除屏幕。这些着色器总共占用几十千字节，而不是兆字节。要查看 Unity 在构建中包含哪些着色器，请阅读构建日志。\"]},\"238\":{\"h\":\"着色器构建报告(Shader Build Report)\",\"t\":[\"构建后，您可以在 Editor.log 中找到大型着色器的数据，其中包括着色器时间和大小，看起来类似于以下日志：\",\"Compiled shader 'TEST Standard(Specular setup)' **in** 31.23s d3d9(total **internal** programs: 482, unique: 474) d3d11(total **internal** programs: 482, unique: 466) metal(total **internal** programs: 482, unique: 480) glcore(total **internal** programs: 482, unique: 454) Compressed shader 'TEST Standard(Specular setup)' on d3d9 from 1.04MB to 0.14MB Compressed shader 'TEST Standard(Specular setup)' on d3d11 from 1.39MB to 0.12MB Compressed shader 'TEST Standard(Specular setup)' on metal from 2.56MB to 0.20MB Compressed shader 'TEST Standard(Specular setup)' on glcore from 2.04MB to 0.15MB\",\"此报告告诉您关于 Test 着色器的几件事：\",\"由于 #pragma multi_compile 和 shader_feature，着色器扩展为 482 个变体。\",\"Unity 将包含在游戏数据中的着色器压缩到大约压缩大小的总和：0.14 + 0.12 + 0.20 + 0.15 = 0.61MB\",\"在运行时，Unity 将压缩数据保留在内存中(0.61MB)，而当前使用的图形 API(例如 Metal)的数据是未压缩的，在上面的示例中将占用 2.56MB。\"]},\"239\":{\"h\":\"着色器内存(Shader Memory)\",\"t\":[\"检查日志文件显示了单个着色器的压缩磁盘大小。要确定着色器在运行时的大小，您可以使用 Unity Profiler 执行详细的内存捕获。如果您完成深度内存分析，可以检查 Shaderlab，它包括 Shaderlab 根目录下与着色器相关的所有内容，包括缓冲区、源代码和与着色器编译相关的其他分配。着色器本身有自己的对象根，Profiler 将它们列在 Shaders 下。\"]},\"240\":{\"h\":\"着色器关键字(Shader Keywords)\",\"t\":[\"着色器 关键字(keywords) 是全局的。目前，您只能使用 196 个关键字，因为 Unity 本身内部使用了 60 个。\",\"构建着色器时，可以使用下划线 _ 来禁用/启用功能，以避免占用全局关键字(例如，使用 #pragma multi_compile SUPER_FEATURE 时)。\",\"提示：使用 shader_feature 而不是 multi_compile，因为它通过剥离不需要的关键字来节省内存。\"]},\"241\":{\"h\":\"着色器变体(Shader Variants)\",\"t\":[\"着色器通常包含大量变体，这会增加构建大小，并且可能不是必需的。\",\"如果您在着色器中使用以下定义，Unity 将生成同时定义 A 和 C 的变体：\",\"#if 1 #pragma multi_compile A B #else #pragma multi_compile C D #endif\",\"Unity 在预处理步骤之前运行解析 #pragmas 以获取变体的代码。避免在着色器代码中使用 #defines。要阅读更多关于着色器变体的信息，请参阅 制作多个着色器程序变体 文档。\",\"提示：如果您不需要着色器设置(例如线性雾)，请在 Graphics Settings 中禁用它们。这会在构建时从所有着色器中移除处理这些设置的变体。\"]},\"242\":{\"h\":\"着色器变体集合(Shader Variant Collections)\",\"t\":[\"Unity 可以在应用程序加载时预加载着色器变体集合，或者您可以通过脚本加载它们。如果您通过脚本加载它们，您可以控制加载过程。有关更多信息，请参阅 优化着色器加载时间 文档。\",\"注意：如果您添加一个着色器和一个引用它的变体集合，当您预热变体集合时，Unity 会加载着色器的所有子着色器(LOD)。\"]},\"243\":{\"h\":\"着色器预加载(Shader Preloading)\",\"t\":[\"Unity 可以预加载着色器并将其保留在内存中，以便应用程序的整个生命周期使用，这使您可以控制着色器占用的内存量。此外，预加载着色器可以减少场景加载时间问题，因为您可以控制 Unity 加载着色器的时间。\"]},\"244\":{\"h\":\"内置着色器(Built-in shaders)\",\"t\":[\"移动设备上的 内置着色器(Built-in Shaders) 是针对特定用例进行泛化的。您应该从 Always Included Shader(Project Settings > Graphics) 列表中移除所有未使用的着色器。\",\"注意：当您移除图形 API 时，Unity 可以从构建中剥离着色器。转到 Player Settings(菜单：Edit > Project Settings > Player)窗口，向下滚动到 Other Settings 部分，并移除所有不需要的图形 API。Unity 仍然附带与之前相同的二进制文件，但不再使用该图形 API。这样做的好处是，禁用未使用的图形 API 会从内置资源中剥离所有特定于它的着色器，从而节省磁盘空间。\"]},\"245\":{\"h\":\"了解 Unity 中的优化\",\"t\":[\"原文地址 - UnityManual\",\"本最佳实践指南是 Unite Unity Europe 2016 讲座 移动应用程序的优化(Optimizing Mobile Applications) 的配套内容。涵盖了讲座的大部分内容，但也为感兴趣的读者额外补充了一些材料。可以通过 YouTube 观看讲座: Unite 2016: 移动应用程序的优化 (Optimizing Mobile Applications).\",\"虽然 Unite 讲座的主题是讲解优化移动端的性能，但大部分的内容也适用于非移动端。本文将采用泛用的且与平台无关的方法对性能的相关信息进行讲解。\"]},\"246\":{\"h\":\"\",\"t\":[\"实际项目中发现的许多问题都是源自无心之过：临时的 测试 更改和疲惫不堪的开发人员的误点击可能会暗地里添加性能不良的资源或更改现有资源的导入设置。\",\"对于任何大规模的项目，最好是将防止人为错误作为第一道防线。编写一小段代码来禁止将 4K 未压缩纹理添加到项目中，是相对简单的事情。\",\"但是，这种错误操作却是十分常见的. 一个 4K 的未压缩纹理会占用 60 MB 的内存。在低端移动设备(如 iPhone 4S)上，占用的内存超过大约 180–200 MB 是十分危险的。如果误添加此类纹理，就会无意中占用应用程序内存预算的三分之一到四分之一，并导致难以诊断的内存不足错误。\",\"虽然现在可以使用 5.3 版内存性能分析器来跟踪这些问题，但最好在最初就确保这些错误不可能发生.\",\"使用 AssetPostprocessor\",\"Unity Editor 中的 AssetPostprocessor 类可用于在 Unity 项目上强制执行某些最低标准。导入资源时将回调此类。要使用此类，应继承 AssetPostprocessor 并实现一个或多个 OnPreprocess 方法. 重要的方法包括:\",\"OnPreprocessTexture\",\"OnPreprocessModel\",\"OnPreprocessAnimation\",\"OnPreprocessAudio\",\"请参阅 AssetPostprocessor 的脚本参考，了解更多可能的 OnPreprocess 方法.\",\"public class ReadOnlyModelPostprocessor : AssetPostprocessor { public void OnPreprocessModel() { ModelImporter modelImporter = (ModelImporter)assetImporter; if(modelImporter.isReadable) { modelImporter.isReadable = false; modelImporter.SaveAndReimport(); } } }\",\"这是一个在项目中 AssetPostprocessor 强制执行规则的简单示例：\",\"每次将模型导入项目时，或者模型的导入设置发生更改时，都会调用此类。该代码只是检查 Read/Write enabled 标志(由 isReadable 属性表示)是否设置为 true。如果是，则强制将标志位更改为 false，然后保存并重新导入资源。\",\"请注意，调用 SaveAndReimport 会导致再次调用此代码片段！但是，因为现在已确保 isReadable 为 false，所以此代码不会产生无限的重新导入循环。\",\"此变更的原因将在下面的 \\\"模型\\\" 部分讨论。\",\"以下是较为通用的资源规则。\"]},\"247\":{\"h\":\"纹理\",\"t\":[\"禁用 read/write enabled 标志\",\"Read/Write enabled 标志使纹理在内存中保留两次：一次保存在 GPU 中，一次保存在 CPU 可寻址内存中(1)(注意: 这是因为大多数平台上从 GPU 内存回读的速度极慢。将纹理从 GPU 内存读入临时缓冲区以供 CPU 代码(例如 Texture.GetPixel)使用将是非常低效的)。在 Unity 中，默认情况下禁用此设置，但可能会无意中将其打开。\",\"只有在着色器之外操作纹理数据时(例如使用 Texture.GetPixel 和 Texture.SetPixel API 时)才需要 Read/Write Enabled，否则应尽可能避免使用它。\",\"尽可能禁用 Mipmap\",\"如果对象相对于摄像机具有相对不变的 Z 深度，则可禁用 Mipmap，这样将大约节省加载纹理所需的内存的三分之一。如果对象的 Z 深度会发生变更，则禁用 Mipmap 可能导致 GPU 上的纹理采样性能变差。\",\"通常情况下，这对于 UI 纹理以及在屏幕上以恒定大小显示的其他纹理非常有用。\",\"压缩所有纹理\",\"使用适合项目目标平台的纹理压缩格式对于节省内存至关重要。\",\"如果所选的纹理压缩格式不适合目标平台，Unity 会在加载纹理时解压缩纹理，这将消耗 CPU 时间和额外的内存。此问题在 Android 设备上最常见，因为此类平台通常因芯片组不同而支持截然不同的纹理压缩格式.\",\"实施合理的纹理大小限制\",\"虽然很简单，但也很容易忘记调整纹理大小或无意中更改纹理大小导入设置。应确定不同类型纹理的合理最大值，并通过代码强制执行这些限制规则。\",\"对于许多移动应用程序，2048x2048 或 1024x1024 足以满足纹理图集的要求，而 512x512 足以满足应用于 3D 模型的纹理的要求。\"]},\"248\":{\"h\":\"模型\",\"t\":[\"禁用 Read/Write enabled 标志\",\"模型的 Read/Write enabled 标志与纹理的上述相应标志具有相同的工作原理。但是，模型在默认情况下会启用该标志。\",\"如果项目在运行时通过脚本修改网格 (Mesh)，或者如果网格用作 MeshCollider 组件的基础，则 Unity 会要求启用此标志。如果模型未在 MeshCollider 中使用并且未被脚本操纵，请禁用此标志以节省一半模型内存。\",\"在非角色模型上禁用骨架(Animator)\",\"默认情况下，Unity 会为非角色模型导入通用骨架。如果模型在运行时实例化，则会导致添加 Animator 组件。如果模型没有通过动画系统进行动画处理，则会给动画系统增加不必要的开销，因为每帧都必须运行一次所有激活的 Animator。\",\"在非动画模型上禁用骨架可以避免自动添加 Animator 组件，并防止可能无意中向场景添加不需要的 Animator。\",\"在动画模型上启用 Optimize Game Objects 选项\",\"Optimize Game Objects 选项对动画模型有着显著的性能影响。禁用该选项后，Unity 会在每次实例化模型时创建一个大型变换层级视图来镜像模型的骨骼结构。此变换层级视图的更新成本很高，尤其是在附加了其他组件(如粒子系统或碰撞体)的情况下。它还限制了 Unity 通过多线程执行网格蒙皮和骨骼动画计算的能力。\",\"如果需要暴露模型骨骼结构上的特定位置(例如暴露模型的双手以便动态附加武器模型)，则可在 Extra Transforms 列表中将这些位置专门设为允许状态。\",\"如需了解更多详细信息，请参阅 Unity 手册的 Model Importer 页面。\",\"尽可能使用网格压缩\",\"启用网格压缩可减少用于表示模型数据不同通道的浮点数的位数。这样做可能导致精确度的轻微损失，在用于最终项目之前，美术师应评估这种不精确性的影响。\",\"在给定压缩级别中使用的具体位数在 ModelImporterMeshCompression 脚本参考中有详细说明。\",\"请注意，可对不同的通道使用不同级别的压缩，因此项目可选择仅压缩切线和法线，同时保持 UV 和顶点位置不压缩。\",\"注意网格渲染器设置\",\"将网格渲染器添加到预制件或游戏对象时，请注意组件上的设置。默认情况下，Unity 会启用阴影投射和接收、光照探针采样、反射探针采样和运动矢量计算。\",\"如果项目不需要这些功能中的一个或多个，请确保通过自动脚本关闭它们。添加网格渲染器的任何运行时代码也都需要处理这些设置。\",\"对于 2D 游戏，在启用阴影选项的情况下意外地将网格渲染器添加到场景会为渲染循环添加完整的阴影 pass。通常情况下，这是对性能的浪费。\"]},\"249\":{\"h\":\"音频\",\"t\":[\"适合平台的压缩设置\",\"应为音频启用与可用硬件匹配的压缩格式。所有 iOS 设备都包含硬件 MP3 解压器，而许多 Android 设备本身支持 Vorbis。\",\"此外，应将未压缩的音频文件导入 Unity，Unity 在构建项目时总是会重新压缩音频。无需导入压缩的音频再重新压缩，这只会降低最终音频剪辑的质量。\",\"将音频剪辑强制设置为单声道\",\"很少有移动设备实际配备立体声扬声器。在移动平台项目中，将导入的音频剪辑强制设置为单声道会使其内存消耗减半。此设置也适用于没有立体声效果的任何音频，例如大多数 UI 声音效果。\",\"降低音频比特率\",\"尽量降低音频文件的比特率，以进一步节省内存消耗和构建的项目大小，但这种情况需要咨询音频设计师。\"]},\"250\":{\"h\":\"字符串和文本\",\"t\":[\"字符串和文本的处理不当是 Unity 项目中性能问题的常见原因。在 C# 中，所有字符串均不可变。对字符串的任何操作均会导致分配一个完整的新字符串。这种操作的代价相对比较高，而且在大型字符串上、大型数据集上或紧凑循环中执行时，接连不断的重复的字符串可能发展成性能问题。\",\"此外，由于 N 个字符串连接需要分配 N–1 个中间字符串，串行连接也可能成为托管内存压力的主要原因。\",\"如果必须在紧凑循环中或每帧期间对字符串进行连接，请使用 StringBuilder 执行实际连接操作。为最大限度减少不必要的内存分配，可重复使用 StringBuilder 实例。\",\"Microsoft 整理了一份处理 C# 中的字符串的最佳做法清单，可在这里的 MSDN 网站上找到该清单：有关比较 .NET 中字符串的最佳做法.\"]},\"251\":{\"h\":\"区域约束与序数比对\",\"t\":[\"在与字符串相关的代码中经常出现的核心性能问题之一是无意间使用了缓慢的默认字符串 API。这些 API 是为商业应用程序构建的，可根据与文本字符有关的多种不同区域性和语言规则来处理字符串。\",\"使用序数比较类型大约快 10 倍，它以 C 和 C++ 程序员熟悉的方式比较字符串：简单地比较字符串的每个顺序字节，而不考虑字节表示的字符。\",\"切换至序数比对的方式非常简单，只需将 StringComparison.Ordinal 作为最终参数提供给 String.Equals:\",\"myString.Equals(otherString，StringComparison.Ordinal);\"]},\"252\":{\"h\":\"低效的内置字符串 API\",\"t\":[\"除了切换到顺序比较(ordinal comparisons)之外，某些 C# 字符串 APIs 的效率非常低。其中包括 String.Format，String.StartsWith 和 String.EndsWith。String.Format 很难替代，但是低效的字符串比较方法可以被简单地优化掉了。\",\"微软建议将 StringComparison.Ordinal 传递给任何字符串比较方法，Unity 基准测试(benchmarks)表明，与自定义实现相比，这一影响相对较小。\",\"方法\",\"100k 短字符串的时间(毫秒)\",\"String.StartsWith，默认区域\",\"137\",\"String.StartsWith，序数\",\"115\",\"String.EndsWith，默认区域\",\"542\",\"String.EndsWith，序数\",\"34\",\"自定义 StartsWith 替换\",\"4.5\",\"自定义 EndsWith 替换\",\"4.5\",\"String.StartsWith 和 String.EndsWith 均可以替换为类似于以下示例的简单的手工编码版本.\",\"public static bool CustomEndsWith(this string a，string b) { int ap = a.Length - 1; int bp = b.Length - 1; while(ap >= 0 && bp >= 0 && a [ap] == b [bp]) { ap--; bp--; } return(bp < 0); } public static bool CustomStartsWith(this string a，string b) { int aLen = a.Length; int bLen = b.Length; int ap = 0; int bp = 0; while(ap < aLen && bp < bLen && a [ap] == b [bp]){ ap++; bp++; } return(bp == bLen); }\"]},\"253\":{\"h\":\"正则表达式\",\"t\":[\"尽管正则表达式是匹配和操作字符串的强大方法，但它们可能对性能的影响极大。此外，由于 C# 库的正则表达式实现方式，即使简单的布尔值 IsMatch 查询也需要在底层分配大型瞬态数据结构。除非在初始化期间，否则这种瞬态托管内存波动都是不可接受的。\",\"如果必须使用正则表达式，强烈建议不要使用静态 Regex.Match 或 Regex.Replace 方法，这些方法会将正则表达式视为字符串参数。这些方法即时编译正则表达式，并且不缓存生成的对象。\",\"以下示例代码为无害的单行代码.\",\"Regex.Match(myString，\\\"foo\\\");\",\"但是，该代码每次执行时会产生 5 KB 的垃圾。通过简单的重构即可消除其中的大部分垃圾：\",\"var myRegExp = new Regex(\\\"foo\\\"); myRegExp.Match(myString);\",\"在本示例中，每次调用 myRegExp.Match \\\"只\\\" 产生 320 字节的垃圾。尽管这对于简单的匹配操作仍然代价高昂，但比前面的示例有了相当大的改进。\",\"因此，如果正则表达式是不变的字符串字面值，通过将正则表达式传递为正则表达式对象构造函数的第一个参数来预编译它们，可显著提高效率。 这些预编译的正则表达式之后会被重用。\"]},\"254\":{\"h\":\"XML、JSON 和其他长格式文本解析\",\"t\":[\"解析文本通常是加载期间所发生的最繁重的操作之一。在某些情况下，解析文本所花费的时间可能超过加载和实例化资源所花费的时间。\",\"此问题背后的原因取决于所使用的具体解析器。C# 的内置 XML 解析器极为灵活，但因此无法针对具体数据布局进行优化。\",\"许多第三方解析器都是基于反射构建的。尽管反射在开发过程中是绝佳选择(因为它能让解析器快速适应不断变化的数据布局)，但众所周知，它的速度非常慢。\",\"Unity 引入了采用其内置 JSONUtility API 的部分解决方案，该解决方案提供了读取/发出 JSON 的 Unity 序列化系统接口。在大多数基准测试中，它比纯 C# JSON 解析器快，但它与 Unity 序列化系统的其他接口具有相同的限制：没有额外代码的情况下，无法对许多复杂的数据类型(如字典)进行序列化(2)\",\"注意: 请参阅 ISerializationCallbackReceiver 接口，了解如何通过一种方法轻松添加必要的额外处理以便在 Unity 序列化过程中来回转换复杂数据类型。\",\"当遇到文本数据解析所引起的性能问题时，请考虑三种替代解决方案。\",\"方案 1: 在构建时解析\",\"避免文本解析成本的最佳方法是完全取消运行时文本解析。通常，这意味着通过某种构建步骤将文本数据\\\"烘焙\\\"成二进制格式。\",\"大多数选择使用该方法的开发者会将其数据移动到某种 ScriptableObject 衍生的类层级视图中，然后通过 AssetBundle 分配数据。有关使用 ScriptableObjects 的精彩讨论，请参阅 youtube 上 Richard Fine 的 Unite 2016 讲座。\",\"这种策略提供了最好的性能，但只适用于不需要动态生成的数据。它最适合游戏设计参数和其他内容。\",\"方案 2: 拆分和延迟加载\",\"第二种可行的方法是将必须解析的数据拆分为较小的数据块。拆分后，解析数据的成本可分摊到多个帧。在理想的情况下，可识别出为用户提供所需体验而需要的特定数据部分，然后只加载这些部分。\",\"举一个简单的例子：如果项目为平台游戏，则没必要将所有关卡的数据一起序列。如果将数据拆分为每个关卡的独立资源，并且将关卡划分到区域中，则可以在玩家闯关到相应位置时再解析数据。\",\"虽然这听起来不难，但实际上需要在工具编码方面投入大量精力，并可能需要重组数据结构。\",\"方案 3: 线程\",\"对于完全解析为普通 C# 对象的数据，并且不需要与 Unity APIs 进行任何交互，可以将解析操作移动到工作线程。\",\"这个选项在具有大量内核的平台上非常强大。但是，它需要仔细编程以避免产生死锁和竞争条件。\",\"注意：iOS 设备最多 2 核. 大多数 Android 设备都有 2 到 4 个。在为独立和主机构建目标构建时，这种技术更有意义。\",\"选择实现线程的项目使用内置的 C# 线程 和 线程池 类(参见 Thread Class) 来管理它们的工作线程，以及标准的 C# 同步类。\"]},\"255\":{\"h\":\"Resources 文件夹\",\"t\":[\"Resources 文件夹是 Unity 项目中许多常见问题的来源。Resources 文件夹的使用不当会使项目构建出现膨胀，导致内存消耗过高，并显著增加应用程序启动时间。\",\"这些问题在 Assets, Resources and AssetBundles 最佳实践指南中有详细介绍。请注意，参阅 资源(Resources) 章节以了解有关上述问题的更多信息。\"]},\"256\":{\"h\":\"一般优化\",\"t\":[\"有多少原因导致性能问题，就有多少种不同的方式来优化代码。通常，强烈建议开发者在尝试应用 CPU 优化之前对其应用程序进行性能分析。不过，还是存在几种普遍适用的简易 CPU 优化方式。\"]},\"257\":{\"h\":\"按 ID 寻址属性\",\"t\":[\"Unity 不使用字符串名称 对 Animator、Material 和 Shader 属性进行内部寻址。为了加快速度，所有属性名称都经过哈希处理为属性 ID，实际上正是这些 ID 用于寻址属性。\",\"因此，每当在 Animator、Material 或 Shader 上使用 Set 或 Get 方法时，请使用整数值方法而非字符串值方法。字符串方法只执行字符串哈希处理，然后将经过哈希处理的 ID 转发给整数值方法。\",\"从字符串哈希创建的属性 ID 在单次运行过程中是不变的。它们最简单的用法是为每个属性名称声明一个静态只读整数变量，然后使用整数变量代替字符串。启动期间将自动进行初始化，无需其他初始化代码。\",\"Animator.StringToHash 是用于 Animator 属性名称的对应 API，Shader.PropertyToID 是用于 Material 和 Shader 属性名称的对应 API。\"]},\"258\":{\"h\":\"使用非分配物理 API\",\"t\":[\"在 Unity 5.3 及更高版本中，引入了所有物理查询 API 的非分配版本。将 RaycastAll 调用替换为 RaycastNonAlloc，将 SphereCastAll 调用替换为 SphereCastNonAlloc，以此类推。对于 2D 应用程序，也存在所有 Physics2D 查询 API 的非分配版本。\"]},\"259\":{\"h\":\"与 UnityEngine.Object 子类进行 Null 比较\",\"t\":[\"Mono 和 IL2CPP 运行时以特定方式处理从 UnityEngine.Object 派生的类的实例。在实例上调用方法实际上是调用引擎代码，此过程必须执行查找和验证以便将脚本引用转换为对原生代码的引用。将此类型变量与 Null 进行比较的成本虽然低，但远高于与纯 C# 类进行比较的成本。因此，请避免在紧凑循环中或每帧运行的代码中进行此类 Null 比较。\"]},\"260\":{\"h\":\"矢量和四元数数学以及运算顺序\",\"t\":[\"对于位于紧凑循环中的矢量和四元数运算，请记住整数数学比浮点数学更快，而浮点数学比矢量、矩阵或四元数运算更快。\",\"因此，每当交换或关联算术允许时，请尝试最小化单个数学运算的成本:\",\"Vector3 x; int a，b; // 效率较低: 产生两次矢量乘法 Vector3 slow = a * x * b; // 效率较高: 一次整数乘法、一次矢量乘法 Vector3 fast = a * b * x;\"]},\"261\":{\"h\":\"内置 ColorUtility\",\"t\":[\"对于必须在 HTML 格式的颜色字符串 (#RRGGBBAA) 与 Unity 的原生 Color 及 Color32 格式之间进行转换的应用程序来说，使用来自 Unify Community 的脚本是很常见的做法。由于需要进行字符串操作，此脚本不但速度很慢，而且会导致大量内存分配。\",\"从 Unity 5 开始，有一个内置 ColorUtility API 可以有效执行此类转换。应优先使用内置 API.\"]},\"262\":{\"h\":\"Find 和 FindObjectOfType\",\"t\":[\"在代码中消灭 GameObject.Find 和 Object.FindObjectOfType 是一个通用的最佳实践。因为这些 APIs 需要 Unity 遍历内存中的所有游戏对象和组件，所以随着项目规模的增长，它们很快就会变得不具有性能。\",\"在单例对象的访问器对上述规则来说是个例外。全局管理器对象往往会暴露 \\\"instance\\\" 属性，并且通常在 getter 中存在 FindObjectOfType 调用以便检测单例预先存在的实例:\",\"class SomeSingleton { private SomeSingleton _instance; public SomeSingleton Instance { get { if(_instance == null) { _instance = FindObjectOfType<SomeSingleton>(); } if(_instance == null) { _instance = CreateSomeSingleton(); } return _instance; } } }\",\"虽然这种模式通常是可以接受的，但必须注意检查代码并确保调用访问器时场景中不存在单例对象。如果 getter 没有自动创建缺失单例的实例，那么寻找单例的代码经常会重复调用 FindObjectOfType(通常每帧多次发生)并且会对性能产生不良影响。\"]},\"263\":{\"h\":\"调试代码和 属性\",\"t\":[\"UnityEngine.Debug APIs 不会从非开发构建中剥离，并且在调用时会写入 log 文件。由于大多数开发人员不打算在非开发构建中写入调试信息，因此建议在自定义方法中进行仅用于开发包装，比如：\",\"public static class Logger { [Conditional(\\\"ENABLE_LOGS\\\")] public static void Debug(string logMsg) { UnityEngine.Debug.Log(logMsg); } }\",\"通过使用 [Conditional] 属性来修饰这些方法，Conditional 属性所使用的一个或多个定义将决定被修饰的方法是否包含在已编译的源代码中。\",\"如果传递给 Conditional 属性的任何定义均未被定义，则会被修饰的方法以及对被修饰方法的所有调用都会在编译中剔除。实际效果与包裹在 #if … #endif 预处理器代码块中的方法以及对该方法的所有调用的处理情况相同。\",\"有关 Conditional 属性的更多信息，请参阅 MSDN 网站: Conditional(C# 编程指南)。\"]},\"264\":{\"h\":\"特别优化\",\"t\":[\"上一部分介绍了适用于所有项目的优化，本节将详细介绍在收集性能分析数据之前不应使用的优化。可能的原因是这些优化在实现时非常耗费精力，在提高性能的同时可能会损害代码整洁性或可维护性，或者解决的可能仅仅是特定的范围内才存在的问题。\"]},\"265\":{\"h\":\"多维数组( )与交错数组( 数组的数组)\",\"t\":[\"如该 StackOverflow 文章 所述，遍历交错数组通常比遍历多维数组更高效，因为多维数组需要函数调用。\",\"注意：\",\"声明为 type[x][y] 则为数组的数组与 type[x,y] 不同.\",\"使用 ILSpy 或类似工具检查通过访问多维数组生成的 IL 即可发现此情况.\",\"在 Unity 5.3 中进行性能分析时，在三维 100x100x100 数组上进行 100 次完全顺序的迭代得出了以下时间，这些值是通过 10 遍测试获得的平均结果:\",\"数组类型\",\"总时间(100 次迭代)\",\"一维数组\",\"660 ms\",\"交错数组\",\"730 ms\",\"多维数组\",\"3470 ms\",\"根据访问多维数组与访问一维数组的成本差异，可看出额外函数调用的成本，而根据访问交错数组与访问一维数组的成本差异，可看出遍历非紧凑内存结构的成本。\",\"如上所述，额外函数调用的成本大大超过了使用非紧凑内存结构所带来的成本。\",\"如果操作对性能影响较大，建议使用一维数组。在任意其余情况下，如果需要一个具有多个维度的数组，请使用交错数组。不应使用多维数组。\"]},\"266\":{\"h\":\"粒子系统池\",\"t\":[\"对粒子系统建池时，请注意它们至少消耗 3500 字节的内存。内存消耗根据粒子系统上激活的模块数量而增加。停用粒子系统时不会释放此内存。只有销毁粒子系统时才会释放。\",\"从 Unity 5.3 开始，大多数粒子系统设置都可在运行时进行操作。对于必须汇集大量不同粒子效果的项目，将粒子系统的配置参数提取到数据载体类或结构中可能更有效。\",\"需要某种粒子效果时，\\\"通用\\\" 粒子效果池即可提供必需的粒子效果对象。然后，可将配置数据应用于对象以实现期望的图形效果。\",\"这种方案比尝试汇集给定场景中使用的粒子系统的所有可能变体和配置会更具内存使用效率，但需要大量的工程努力才能实现。\"]},\"267\":{\"h\":\"更新管理器(Update Manager)\",\"t\":[\"在内部，Unity 会跟踪感兴趣的列表中的对象的回调(例如 Update、FixedUpdate 和 LateUpdate)。这些列表以侵入式链接列表的形式进行维护，从而确保在固定时间进行列表更新。在启用或禁用 MonoBehaviour 时分别会在这些列表中添加/删除 MonoBehaviour。\",\"虽然直接将适当的回调添加到需要它们的 MonoBehaviour 十分方便，但随着回调数量的增加，这种方式将变得越来越低效。从原生代码调用托管代码回调有一个很小但很明显的开销。这会导致在调用大量每帧都执行的方法时延长帧时间，而且在实例化包含大量 MonoBehaviour 的预制件时延长实例化时间(注意：实例化成本归因于调用预制件中每个组件上的 Awake 和 OnEnable 回调时产生的性能开销)。\",\"当具有每帧回调的 MonoBehaviour 数量增长到数百或数千时，删除这些回调并将 MonoBehaviour(甚至标准 C# 对象)连接到全局管理器单例可以优化性能。然后，全局管理器单例可将 Update、LateUpdate 和其他回调分发给感兴趣的对象。这种方式的另一个好处是允许代码在回调没有操作的情况下巧妙地将回调取消订阅，从而减少每帧必须调用的大量函数。\",\"性能上最大的节约来自于消除很少执行的回调。请考虑以下伪代码：\",\"void Update() { if(!someVeryRareCondition) { return; } // … 某种操作 … }\",\"如果大量 MonoBehaviour 具有上述类似 Update 回调，则运行 Update 回调所使用的大量时间会用于原生和托管代码域之间的切换以便执行 MonoBehaviour 之后再立即退出。如果这些类仅在 someVeryRareCondition 为 true 时订阅了全局更新管理器(Update Manager)，随后又取消了订阅，则可节省 代码域切换 和稀有条件评估所需的时间。\"]},\"268\":{\"h\":\"在更新管理器中使用 C# 委托\",\"t\":[\"通常很容易想到使用普通的 C# 委托来实现这些回调。但是，C# 的委托实现方式适用于较低频率的订阅和取消订阅以及少量的回调。每次添加或删除回调时，C# 委托都会执行回调列表的完整拷贝。在单个帧期间，大型回调列表或大量回调订阅/取消订阅会导致内部 Delegate.Combine 方法性能消耗达到峰值。\",\"如果频繁发生添加/删除操作，请考虑使用专为快速插入/删除(而非委托)设计的数据结构。\"]},\"269\":{\"h\":\"加载线程控制\",\"t\":[\"Unity 允许开发者控制用于加载数据的后台线程的优先级。这一点对于尝试在后台将 AssetBundle 流式传输到磁盘时尤为重要。\",\"主线程和图形线程的优先级都是 ThreadPriority.Normal；任何具有更高优先级的线程都会抢占主线程/图形线程的资源并导致帧率不稳，而优先级较低的线程则不会。如果任何线程与主线程具有相同的优先级，则 CPU 会尝试为这些线程提供相同的时间，在多个后台线程执行繁重操作(例如 AssetBundle 解压缩)的情况下，这通常会导致帧率卡顿。\",\"目前，可在三个位置控制该优先级。\",\"首先，资源加载调用(如 Resources.LoadAsync 和 AssetBundle.LoadAssetAsync)的默认优先级来自于 Application.backgroundLoadingPriority 设置。如文档所述，此调用还限制了主线程用于集成资源的时间(注意: 大多数类型的 Unity 资源都必须\\\"集成\\\"到主线程上。集成期间将完成资源初始化并执行某些线程安全操作。这包括编写回调调用(例如 Awake 回调)的脚本。请参阅\\\"资源管理\\\"指南以了解更多详细信息，从而限制资源加载对帧时间的影响。\",\"其次，每个异步资源加载操作以及每个 UnityWebRequest 请求都返回一个 AsyncOperation 对象以监控和管理该操作。此 AsyncOperation 对象会显示 priority 属性，该属性可用于调整各个操作的优先级。\",\"最后，WWW 对象(例如从 WWW.LoadFromCacheOrDownload 调用返回的对象)会显示 threadPriority 属性。请务必注意，WWW 对象不会自动使用 Application.backgroundLoadingPriority 设置作为其默认值；WWW 对象总是被默认为 ThreadPriority.Normal。\",\"值得注意的是，用于底层系统在处理解压缩和加载数据时，不同 API 之间存在差异。Resources.LoadAsync 和 AssetBundle.LoadAssetAsync 由 Unity 的内部 PreloadManager 系统进行处理，该系统可管理自己的加载线程并执行自己的速率限制。UnityWebRequest 使用自己的专用线程池。WWW 在每次创建请求时都会生成一个全新的线程。\",\"虽然所有其他加载机制都有内置的排队系统，但 WWW 却没有。在大量经过压缩的 AssetBundle 上调用 WWW.LoadFromCacheOrDownload 会生成相同数量的线程，这些线程随后会与主线程竞争 CPU 时间。这很容易导致帧率卡顿。\",\"因此，使用 WWW 来加载和解压缩 AssetBundle 时，最佳做法是为创建的每个 WWW 对象的 threadPriority 设置适当的值。\"]},\"270\":{\"h\":\"大批量对象移动和 CullingGroup\",\"t\":[\"正如\\\"变换操作\\\"部分所述，由于需要传播更改消息，移动大型变换层级视图的 CPU 成本相对较高。但是，在实际开发环境中，通常无法将层级视图精简为少量的游戏对象。\",\"同时，在开发中最好仅运行那些能维持游戏世界可信度的行为，并去掉那些用户不会注意到的行为; 例如，在具有大量角色的场景中，较好的做法是仅对屏幕上的角色执行网格蒙皮和动画驱动的变换运动。对于屏幕上看不到的角色，消耗 CPU 时间来计算模拟它们的纯视觉元素是种浪费。\",\"使用 Unity 5.1 中首次引入的 CullingGroup API 可以很好地解决这两个问题。\",\"不要直接操作场景中的一大群游戏对象，应该对系统进行更改以操作 CullingGroup 中的一群 BoundingSphere 的 Vector3 参数。每个 BoundingSphere 充当单个游戏逻辑实体的世界空间位置的表征，并在实体移动到 CullingGroup 主摄像机的视锥体附近/内部时接收回调。然后，可使用这些回调来激活/停用特定代码或组件(例如 Animator)，从而控制那些仅应在实体可见时才需要运行的行为。\"]},\"271\":{\"h\":\"减少方法调用开销\",\"t\":[\"C# 的字符串库提供了一个绝佳的案例研究，其中说明了向简单库代码添加额外方法调用的成本。在有关内置字符串 API String.StartsWith 和 String.EndsWith 的部分中，提到了手工编码的替换比内置方法快 10–100 倍，即使关闭了不需要的区域设置强制转换时也是如此。\",\"这种性能差异的主要原因仅仅是向紧凑内循环添加额外方法调用的成本不同。调用的每个方法都必须在内存中找到该方法的地址，并将另一个帧推入栈。所有这些操作都是有成本的，但在大多数代码中，它们都小到可以忽略不计。\",\"但是，在紧凑循环中运行较小的方法时，因引入额外方法调用而增加的开销可能会变得非常显著，甚至占主导地位。\",\"请考虑以下两个简单方法.\",\"示例 1:\",\" int Accum { get; set; } Accum = 0; for(int i = 0; i < myList.Count; i++) { Accum += myList[i]; }\",\"示例 2:\",\" int accum = 0; int len = myList.Count; for(int i = 0; i < len; i++) { accum += myList[i]; }\",\"这两个方法都在 C# 通用 List<int> 中计算所有整数之和。第一个示例是更 \\\"现代的 C#\\\"，因为它使用自动生成的属性来保存其数据值。\",\"虽然从表面上看这两段代码似乎是等效的，但通过分析代码中的方法调用情况，可看出差异很明显.\",\"示例 1:\",\" int Accum { get; set; } Accum = 0; for(int i = 0; i < myList.Count; // 调用 List::getCount i++) { Accum // 调用 set_Accum += // 调用 get_Accum myList[i]; // 调用 List::get_Value }\",\"每次循环执行时都有四个方法调用:\",\"myList.Count 调用 Count 属性上的 get 方法\",\"必须调用 Accum 属性上的 get 和 set 方法\",\"通过 get 检索 Accum 的当前值，以便将其传递给加法运算\",\"通过 set 将加法运算的结果分配给 Accum\",\"[] 运算符调用列表的 get_Value 方法来检索列表特定索引位置的项值\",\"示例 2:\",\" int accum = 0; int len = myList.Count; for(int i = 0; i < len; i++) { accum += myList[i]; // 调用 List::get_Value }\",\"在第二个示例中，get_Value 调用仍然存在，但已删除所有其他方法或不再是每个循环迭代便执行一次。\",\"由于 accum 现在是原始值而不是属性，因此不需要进行方法调用来设置或检索其值。\",\"由于假设 myList.Count 在循环运行期间不变化，其访问权限已移出循环的条件语句，因此不再在每次循环迭代开始时执行它。\",\"这两个版本的执行时间显示了从这一特定代码片段中减少 75% 方法调用开销的真正优势。在现代台式机上运行 100,000 次的情况下：\",\"示例 1 需要的执行时间为 324 毫秒\",\"示例 2 需要的执行时间为 128 毫秒\",\"这里的主要问题是 Unity 执行非常少的方法内联(即使有)。即使在 IL2CPP 下，许多方法目前也不能正确内联。对于属性尤其如此。此外，虚拟方法和接口方法根本无法内联。\",\"因此，在源代码 C# 中声明的方法调用很可能最后在最终的二进制应用程序中产生方法调用。\"]},\"272\":{\"h\":\"简单属性\",\"t\":[\"为了方便开发者，Unity 为数据类型提供了许多\\\"简单\\\"常量。但是，鉴于上述情况，必须注意这些常量通常作为返回常量值的属性。\",\"Vector3.zero 的属性内容如下所示:\",\"get { return new Vector3(0,0,0); }\",\"Quaternion.identity 非常相似:\",\"get { return new Quaternion(0,0,0,1); }\",\"虽然访问这些属性的成本与它们周围的执行代码相比小的多，但它们每帧执行数千次(或更多次)时，可产生一定的影响。\",\"对于简单的原始类型，请改用 const 值。Const 值在编译时内联 - 对 const 变量的引用将替换为其值。\",\"注意：因为对 const 变量的每个引用都替换为其值，所以不建议声明长字符串或其他大型数据类型 const。否则，由于最终二进制代码中的所有重复数据，将导致不必要地增加最终二进制文件的大小。\",\"当 const 不适合时，应使用 static readonly 变量。在有些项目中，即使 Unity 的内置简单属性也替换成了 static readonly 变量，使性能略有改善。\"]},\"273\":{\"h\":\"简单方法\",\"t\":[\"简单方法比较棘手。如果能够在声明一次功能后在其他地方重用该功能，将非常有用。但是，在紧凑内部循环中，可能有必要打破美观编码规则，选择\\\"手动内联\\\"某些代码。\",\"有些方法可能需要彻底删除。例如，Quaternion.Set、Transform.Translate 或 Vector3.Scale。这些方法执行非常简单的操作，可以用简单的赋值语句替换。\",\"对于更复杂的方法，应权衡手动内联的性能提升与维护性能更高代码的长期成本之间的关系。\"]},\"274\":{\"h\":\"垃圾回收\",\"t\":[\"原文地址 - UnityManual\",\"Unity 使用 垃圾回收器(Garbage Collector) 来回收不再使用的对象的内存。当脚本尝试在托管堆(Managed Heap)上分配内存但可用堆内存不足时，Unity 会运行垃圾回收器。垃圾回收器运行时，会检查堆中的所有对象，并标记未被引用的对象。随后 Unity 会删除这些未被引用的对象，从而释放内存。\",\"垃圾回收器会以相同方式处理后续请求，直到没有足够大的空闲区域来分配所需的内存块。这种情况下，已分配的内存很可能仍有部分在使用。Unity 的脚本后端只有在存在引用变量能够定位堆中的对象时才能访问该对象。如果对内存块的所有引用都丢失（例如引用变量被重新赋值，或是局部变量超出作用域），垃圾回收器就可以重新分配该内存。\",\"为了确定哪些堆内存块不再使用，垃圾回收器会遍历所有活动引用变量，并将其引用的内存块标记为\\\"存活(live)\\\"。搜索结束后，垃圾回收器将\\\"存活(live)\\\"块之间的空间视为空闲并标记为可用。这个定位并释放未使用内存的过程称为垃圾回收（GC）。\",\"注意\",\"垃圾回收器在 WebGL 上的工作方式有所不同。更多信息请参阅 WebGL 中的内存。\",\"Unity 中的垃圾回收器有以下模式：\",\"增量式(Incremental)垃圾回收：默认启用（Project Settings > Player > Other Settings > Configuration > Use incremental GC），将垃圾回收过程分摊到多个帧中完成。\",\"禁用增量式垃圾回收：如果禁用 Use incremental GC 设置，垃圾回收器会暂停应用程序以检查和处理堆中的对象。\",\"禁用自动垃圾回收：使用 GarbageCollector.GCMode API 可完全控制 Unity 运行垃圾回收器的时机。\",\"注\",\"GarbageCollector.GCMode 有三种模式 DisabledEnabledManual，订阅 GarbageCollector.GCModeChanged 事件可在垃圾回收器模式更改时收到通知。\",\"追踪内存分配\",\"Unity 提供以下工具来追踪内存分配：\",\"Unity Profiler 的 CPU Usage 模块：提供每帧 GC Alloc 的详细信息。\",\"Unity Profiler 的 Memory 模块：逐帧显示高层次的内存使用情况。\",\"Memory Profiler 包：独立的 Unity 包，可提供应用程序特定帧的详细内存使用信息。\",\"在 CPU Usage 模块中，Hierarchy 包含 GC Alloc 列。该列显示 Unity 在特定帧的托管堆上分配的字节数。它还包括垃圾回收器管理的内存，包含 Unity 可能已分配并在后续帧中重用的内存。这意味着所有帧的 GC Alloc 总和并不等于该时间段内托管内存的实际增长量。\",\"要获取最准确的信息，应始终在目标平台上进行性能分析。Unity 编辑器的工作方式与构建版本不同，这会影响性能分析数据。例如，在编辑器中执行 GetComponent 方法总会分配内存，但在构建项目中不会。\",\"还可以使用 Profiler 的 Call Stacks 来确定内存分配发生在哪个方法中。启用 GC.Alloc 样本的完整调用堆栈跟踪后，可帮助确定垃圾回收器运行的时机和位置。\"]},\"275\":{\"h\":\"增量式垃圾回收\",\"t\":[\"增量式 垃圾回收（GC）将垃圾回收过程分摊到多个帧中完成。这是 Unity 中默认的垃圾回收行为。\",\"要启用增量式垃圾回收，打开 Player Settings 并启用 Use incremental GC。默认已启用。\",\"Unity 的垃圾回收器使用 Boehm–Demers–Weiser 垃圾回收器。默认情况下，Unity 以增量模式运行，这意味着垃圾回收器将其工作负载分摊到多个帧中，而不是停止主 CPU 线程（Stop-the-world vs. incremental vs. concurrent）来处理托管堆上的所有对象。这使得 Unity 对应用程序执行的中断时间更短，避免了垃圾回收器处理托管堆对象时的长时间中断。\",\"增量模式并不会使垃圾回收整体更快，但由于将工作负载分摊到多个帧中，GC 相关的性能峰值会减少。这些中断称为 GC 峰值，因为它们会在 Profiler 窗口的 帧时间图表中显示为大的峰值。\",\"如果禁用增量模式（Edit > Project Settings > Player > Other Settings > Configuration > Use Incremental GC），垃圾回收器在每次回收时必须检查整个堆。这称为 停止世界 垃圾回收，因为每当垃圾回收器运行时，都会暂停主 CPU 线程，直到处理完托管堆上的所有对象后才会恢复执行。这可能导致 GC 峰值影响应用程序性能。此外，该回收器是非压缩式的，意味着 Unity 不会重新分配内存中的对象来填补对象之间的空隙。\",\"重要\",\"WebGL 平台不支持增量式垃圾回收。\",\"禁用增量式垃圾回收时，每当 Unity 停止运行程序代码进行垃圾回收时都会出现 GC 峰值。根据需要处理的分配量和运行平台，这种延迟可能持续数百毫秒。\",\"这对于实时应用程序（如游戏）来说是个问题，因为当垃圾回收器暂停应用程序执行时，很难维持流畅动画所需的稳定帧率。\",\"增量式垃圾回收示例\",\"以下 Profiler 截图展示了增量式垃圾回收如何减少帧率问题：\",\"启用增量式 GC 的性能分析会话\",\"禁用增量式 GC 的性能分析会话\",\"在上方的会话中启用了 增量式 GC，应用程序保持了稳定的 60fps 帧率，因为垃圾回收器将回收操作分摊到多个帧中，并使用每帧的一小段时间（黄色 VSync 轨迹上方的深绿色边缘）。\",\"下方的会话禁用了 增量式 GC，可见明显的 GC 峰值。该峰值打断了原本流畅的 60fps 帧率，并将发生垃圾回收的帧时间推过了维持 60fps 所需的 16 毫秒限制。\",\"如果应用程序使用 垂直同步(vSyncCount) 或 Application.targetFrameRate，Unity 会根据剩余可用帧时间调整垃圾回收的时间分配。这样 Unity 可以在原本等待的时间内进行垃圾回收，从而将性能影响降至最低。\",\"注\",\"QualitySettings.vSyncCount 表示每帧之间应经过的垂直同步数。0 到 4 范围内的整数。默认设置为 1。\",\"Android 和 IOS: vSyncCount 字段始终会被忽略，因为移动设备不允许非同步渲染。请改用 Application.targetFrameRate 字段来控制帧率。\",\"Desktop 和 Web: \",\"如果 vSyncCount > 0，则忽略 Application.targetFrameRate 字段，有效帧率为显示器的原生刷新率除以 vSyncCount。如果 vSyncCount == 1，渲染将与显示器的垂直刷新率同步。\",\"如果 vSyncCount == 0，Unity 不会将渲染与垂直同步进行同步，而是使用字段 Application.targetFrameRate 来控制渲染帧的节奏。\",\"如果你在 60 赫兹的显示器上运行编辑器，并且 vSyncCount == 2，那么目标帧率就是每秒 30 帧。\",\"在 ProjectSettings 中 VSyncCount 有三个选项:\",\"Dont Sync: 0\",\"Every V Blank: 1\",\"Every Second V Blank: 2\",\"注意\",\"如果将 垂直同步计数(VSync Count) 设置为 不同步(Don’t Sync) 以外的值(在项目的 QualitySettings 中设置或通过 Application.VSync属性)，或者启用 Application.targetFrameRate 属性，Unity 会自动将每帧剩余的空闲时间用于增量式垃圾回收。\",\"要更精确地控制增量式垃圾回收行为，可以使用 Scripting.GarbageCollector 类。例如，如果不使用垂直同步或目标帧率，可自行计算帧结束前的可用时间，并将该时间提供给垃圾回收器使用。\",\"禁用增量式垃圾回收\",\"增量式垃圾回收可能会给应用程序带来问题，因为在此模式下，垃圾回收器执行的时候会划分出一个标记阶段。在标记阶段，垃圾回收器会扫描所有托管对象以确定哪些对象仍在使用、哪些可以清理。\",\"当对象间引用在多个工作片段之间不发生变化时，标记阶段效果良好。但是，当对象引用发生变化时，垃圾回收器必须在下次迭代中重新扫描这些对象。这意味着过多变化可能导致增量式垃圾回收器不堪重负，导致标记阶段因持续有新工作而无法完成。此时，垃圾回收器会回退到完整的非增量式回收。\",\"启用增量式垃圾回收时，Unity 会生成额外代码(write barriers)以在引用变更时通知垃圾回收器，使其知道是否需要重新扫描对象。这会在 变更引用 时增加一些托管代码的性能开销。\",\"要禁用增量式垃圾回收，打开 Player Settings 窗口（Edit > Project Settings > Player > Configuration）并禁用 Use Incremental GC。大多数 Unity 项目都能从增量式垃圾回收中受益，尤其是存在垃圾回收峰值的项目。但应始终使用 Profiler 验证应用程序是否符合预期。\"]},\"276\":{\"h\":\"禁用垃圾回收\",\"t\":[\"可使用 GarbageCollector.GCMode 在运行时禁用垃圾回收。这能避免 CPU 峰值，但应用程序的内存使用量不会减少，因为垃圾回收器不会回收无引用的对象。\",\"注意\",\"禁用垃圾回收需要谨慎的内存管理。如果管理不当，托管堆会持续增长直至应用程序内存耗尽，被操作系统关闭。\",\"可以使用以下 API 对自动垃圾回收进行微调：\",\"System.GC.Collect：执行完整的阻塞式垃圾回收。\",\"GarbageCollector.Mode.Disabled：完全禁用垃圾回收器。在此模式下使用 System.Gc.Collect 无效。\",\"GarbageCollector.Mode.Manual：禁用垃圾回收器的自动调用，但仍可使用 System.GC.Collect 运行完整回收。\",\"GarbageCollection.CollectIncremental：增量式 运行垃圾回收器。\",\"只应在应用程序性能关键且能计算和控制内存分配的短暂时段禁用垃圾回收，之后应立即重新启用，并经常进行性能分析以确保不会触发导致托管堆过大的额外托管分配。\",\"禁用垃圾回收器后，它不会停止应用程序以进行垃圾回收。调用 System.GC.Collect 无效且不会启动回收。为避免内存使用随时间增加，必须谨慎管理内存。理想情况下，应在禁用垃圾回收器前分配所有内存，并在禁用期间避免额外分配。\",\"最佳实践是仅为长期存在的分配禁用垃圾回收器。例如，可能需要在游戏关卡加载前分配所需的所有内存，然后禁用垃圾回收器以避免性能开销。关卡完成后释放所有内存，重新启用垃圾回收器并使用 System.GC.Collect 回收内存，再加载下一关卡。\",\"有关如何在运行时启用和禁用垃圾回收的详细信息，请参阅 GarbageCollector 脚本 API 页面。\"]},\"277\":{\"h\":\"垃圾回收最佳实践\",\"t\":[\"垃圾回收 是自动的，但这个过程需要大量的 CPU 时间。\",\"与其他编程语言（如 C++）相比，C# 的自动内存管理降低了内存泄漏和其他编程错误的风险，在 C++ 中，您必须手动跟踪和释放您分配的所有内存。\",\"自动内存管理使您可以快速、轻松且几乎没有错误地编写代码。但是，这种便利可能会对性能产生影响。要优化代码以获得最佳性能，您必须避免频繁触发 垃圾回收 的情况。本节概述了一些常见问题和工作流程，这些问题和工作流程会影响应用程序何时触发垃圾回收。\"]},\"278\":{\"h\":\"临时分配\",\"t\":[\"应用程序通常会在每一帧中将临时数据分配到 托管堆(managed heap) 中；但是，这会影响应用程序的性能。例如：\",\"如果一个程序每帧分配 1KB（千字节）的临时内存，并且它以每秒 60 帧的速度运行，那么它必须每秒分配 60KB 的临时内存。在一分钟内，这加起来就是 3.6MB 的内存可供垃圾回收器使用。\",\"每秒调用一次垃圾回收器会对性能产生负面影响。如果垃圾回收器每分钟只运行一次，它必须清理分布在数千个单独分配中的 3.6MB 内存，这可能会导致大量的垃圾回收时间。\",\"加载操作会对性能产生影响。如果您的应用程序在繁重的资源加载操作期间生成大量临时对象，并且 Unity 引用这些对象直到操作完成，那么垃圾回收器无法释放这些临时对象。这意味着托管堆需要扩展，即使 Unity 在短时间后释放了它包含的许多对象。\",\"为了解决这个问题，您应该尽量减少频繁管理的堆分配量：理想情况下，每帧 0 字节，或尽可能接近于零。\"]},\"279\":{\"h\":\"可重用对象池\",\"t\":[\"在很多情况下，您可以减少应用程序创建和销毁对象的次数，以避免产生垃圾。游戏中有某些类型的对象，例如抛射物，即使只有少量对象同时在运行，它们也可能会一遍又一遍地出现。在这种情况下，您可以重用这些对象，而不是销毁旧对象并用新对象替换它们。\",\"例如，每次发射一个抛射物时，从预制件(Prefab)实例化一个新的抛射物对象并不是最佳的。相反，您可以计算出游戏过程中可能同时存在的抛射物的最大数量，并在游戏首次进入游戏场景时实例化一个正确大小的对象数组。为此：\",\"首先将所有抛射物游戏对象(GameObject)设置为非活动状态。\",\"当发射一个抛射物时，搜索数组以找到数组中的第一个非活动抛射物，将其移动到所需位置并将游戏对象设置为活动状态。\",\"当抛射物被销毁时，再次将游戏对象设置为非活动状态。\",\"您可以使用 ObjectPool 类，它提供了这种可重用对象池技术的实现。\",\"下面的代码展示了一个基于堆栈的对象池的简单实现。如果您使用的是不包含 ObjectPool API 的旧版本 Unity，或者您想查看自定义对象池如何实现的示例，您可能会发现它很有用。\",\"using System.Collections.Generic; using UnityEngine; public class ExampleObjectPool : MonoBehaviour { public GameObject PrefabToPool; public int MaxPoolSize = 10; private Stack<GameObject> inactiveObjects = new Stack<GameObject>(); void Start() { if (PrefabToPool != null) { for (int i = 0; i < MaxPoolSize; ++i) { var newObj = Instantiate(PrefabToPool); newObj.SetActive(false); inactiveObjects.Push(newObj); } } } public GameObject GetObjectFromPool() { while (inactiveObjects.Count > 0) { var obj = inactiveObjects.Pop(); if (obj != null) { obj.SetActive(true); return obj; } else { Debug.LogWarning(\\\"Found a null object in the pool. Has some code outside the pool destroyed it?\\\"); } } Debug.LogError(\\\"All pooled objects are already in use or have been destroyed\\\"); return null; } public void ReturnObjectToPool(GameObject objectToDeactivate) { if (objectToDeactivate != null) { objectToDeactivate.SetActive(false); inactiveObjects.Push(objectToDeactivate); } } }\"]},\"280\":{\"h\":\"重复的字符串连接\",\"t\":[\"C# 中的字符串是不可变的引用类型(immutable reference types)。引用类型意味着 Unity 在托管堆上分配它们，并且它们会受到垃圾回收的影响。不可变意味着一旦创建了一个字符串，就不能更改它；任何修改字符串的尝试都会导致一个全新的字符串。因此，您应该尽可能避免创建临时字符串。\",\"考虑以下示例代码，它将一个字符串数组组合成一个字符串。每次在循环中添加一个新字符串时，结果变量的先前内容都会变得多余，并且代码会分配一个全新的字符串。\",\"// Bad C# script example: repeated string concatenations create lots of // temporary strings. using UnityEngine; public class ExampleScript : MonoBehaviour { string ConcatExample(string[] stringArray) { string result = \\\"\\\"; for (int i = 0; i < stringArray.Length; i++) { result += stringArray[i]; } return result; } }\",\"如果输入 stringArray 包含 { \\\"A\\\", \\\"B\\\", \\\"C\\\", \\\"D\\\", \\\"E\\\" }，则此方法会在堆上为以下字符串生成存储：\",\"\\\"A\\\"\",\"\\\"AB\\\"\",\"\\\"ABC\\\"\",\"\\\"ABCD\\\"\",\"\\\"ABCDE\\\"\",\"在本例中，您只需要最终的字符串，其他的都是多余的分配。输入数组中的项目越多，此方法生成的字符串就越多，每个字符串都比上一个更长。\",\"如果您需要将大量字符串连接在一起，那么您应该使用 Mono 库的 System.Text.StringBuilder 类。上面脚本的改进版本如下所示：\",\"// Good C# script example: StringBuilder avoids creating temporary strings, // and only allocates heap memory for the final result string. using UnityEngine; using System.Text; public class ExampleScript : MonoBehaviour { private StringBuilder _sb = new StringBuilder(16); string ConcatExample(string[] stringArray) { _sb.Clear(); for (int i = 0; i < stringArray.Length; i++) { _sb.Append(stringArray[i]); } return _sb.ToString(); } }\",\"除非频繁调用重复的连接（例如在每次帧更新时），否则它不会过多地降低性能。以下示例在每次调用 Update 时都会分配新的字符串，并生成垃圾回收器必须处理的连续对象流：\",\"// Bad C# script example: Converting the score value to a string every frame // and concatenating it with \\\"Score: \\\" generates strings every frame. using UnityEngine; using UnityEngine.UI; public class ExampleScript : MonoBehaviour { public Text scoreBoard; public int score; void Update() { string scoreText = \\\"Score: \\\" + score.ToString(); scoreBoard.text = scoreText; } }\",\"为了防止这种对垃圾回收的持续需求，您可以配置代码，以便仅在分数更改时才更新文本：\",\"// Better C# script example: the score conversion is only performed when the // score has changed using UnityEngine; using UnityEngine.UI; public class ExampleScript : MonoBehaviour { public Text scoreBoard; public string scoreText; public int score; public int oldScore; void Update() { if (score != oldScore) { scoreText = \\\"Score: \\\" + score.ToString(); scoreBoard.text = scoreText; oldScore = score; } } }\",\"为了进一步改进这一点，您可以将分数标题（显示 \\\"Score: \\\" 的部分）和分数显示存储在两个不同的 UI.Text 对象中，这意味着不需要字符串连接。代码仍然必须将分数转换为字符串，但这是对先前版本的改进：\",\"// Best C# script example: the score conversion is only performed when the // score has changed, and the string concatenation has been removed using UnityEngine; using UnityEngine.UI; public class ExampleScript : MonoBehaviour { public Text scoreBoardTitle; public Text scoreBoardDisplay; public string scoreText; public int score; public int oldScore; void Start() { scoreBoardTitle.text = \\\"Score: \\\"; } void Update() { if (score != oldScore) { scoreText = score.ToString(); scoreBoardDisplay.text = scoreText; oldScore = score; } } }\"]},\"281\":{\"h\":\"返回数组的函数\",\"t\":[\"有时，编写一个创建新数组、用值填充数组然后返回它的方法可能很方便。但是，如果重复调用此方法，则每次都会分配新的内存。\",\"以下示例代码展示了一个每次调用时都会创建一个数组的方法示例：\",\"// Bad C# script example: Every time the RandomList method is called it // allocates a new array using UnityEngine; using System.Collections; public class ExampleScript : MonoBehaviour { float[] RandomList(int numElements) { var result = new float[numElements]; for (int i = 0; i < numElements; i++) { result[i] = Random.value; } return result; } }\",\"避免每次都分配内存的一种方法是利用数组是引用类型这一事实。您可以修改作为参数传递给方法的数组，并且结果在方法返回后仍然存在。为此，您可以将示例代码配置如下：\",\"// Good C# script example: This version of method is passed an array to fill // with random values. The array can be cached and re-used to avoid repeated // temporary allocations using UnityEngine; using System.Collections; public class ExampleScript : MonoBehaviour { void RandomList(float[] arrayToFill) { for (int i = 0; i < arrayToFill.Length; i++) { arrayToFill[i] = Random.value; } } }\",\"此代码将数组的现有内容替换为新值。此工作流程要求调用代码执行数组的初始分配，但该函数在调用时不会生成任何新垃圾。然后，下次调用此方法时，可以重用该数组并重新填充随机数，而无需在托管堆上进行任何新的分配。\"]},\"282\":{\"h\":\"集合和数组重用\",\"t\":[\"当您使用 System.Collection 命名空间中的数组或类（例如，列表或字典）时，重用或池化分配的集合或数组是高效的。集合类公开了一个 Clear 方法，该方法消除了集合的值，但不释放分配给集合的内存。\",\"如果您想为复杂的计算分配临时“辅助”集合，这将非常有用。以下代码示例演示了这一点：\",\"// Bad C# script example. This Update method allocates a new List every frame. void Update() { List<float> nearestNeighbors = new List<float>(); findDistancesToNearestNeighbors(nearestNeighbors); nearestNeighbors.Sort(); // … use the sorted list somehow … }\",\"此示例代码每帧分配一次 nearestNeighbors 列表，以收集一组数据点。\",\"您可以将此列表从方法中提升到包含类中，这样您的代码就不需要每帧分配一个新的列表：\",\"// Good C# script example. This method re-uses the same List every frame. List<float> m_NearestNeighbors = new List<float>(); void Update() { m_NearestNeighbors.Clear(); findDistancesToNearestNeighbors(NearestNeighbors); m_NearestNeighbors.Sort(); // … use the sorted list somehow … }\",\"此示例代码在多个帧中保留并重用列表的内存。该代码仅在列表需要扩展时才分配新内存。\"]},\"283\":{\"h\":\"闭包和匿名方法\",\"t\":[\"一般来说，您应该尽可能避免在 C# 中使用闭包。您应该尽量减少在性能敏感的代码中，尤其是在逐帧执行的代码中使用匿名方法和方法引用。\",\"C# 中的方法引用是引用类型，因此它们在堆上分配。这意味着如果您将方法引用作为参数传递，则很容易创建临时分配。无论您传递的方法是匿名方法还是预定义方法，都会发生此分配。\",\"此外，当您将匿名方法转换为闭包时，将闭包传递给方法所需的内存量会大大增加。\",\"这是一个代码示例，其中需要按特定顺序对随机数列表进行排序。这使用匿名方法来控制列表的排序顺序，并且排序不会创建任何分配。\",\"// Good C# script example: using an anonymous method to sort a list. // This sorting method doesn’t create garbage List<float> listOfNumbers = getListOfRandomNumbers(); listOfNumbers.Sort((x, y) =>(int)x.CompareTo((int)(y/2)));\",\"为了使此代码段可重用，您可以将常量 2 替换为局部范围内的变量：\",\"// Bad C# script example: the anonymous method has become a closure, // and now allocates memory to store the value of desiredDivisor // every time it is called. List<float> listOfNumbers = getListOfRandomNumbers(); int desiredDivisor = getDesiredDivisor(); listOfNumbers.Sort((x, y) =>(int)x.CompareTo((int)(y/desiredDivisor)));\",\"匿名方法现在需要访问其范围之外的变量的状态，因此该方法已成为闭包。必须将 desiredDivisor 变量传递到闭包中，以便闭包的代码可以使用它。\",\"为了确保将正确的值传递到闭包中，C# 会生成一个匿名类，该类可以保留闭包需要的外部范围变量。当闭包传递给 Sort 方法时，会实例化此类的一个副本，并使用 desiredDivisor 整数的值初始化该副本。\",\"执行闭包需要实例化其生成的类的副本，并且所有类在 C# 中都是引用类型。因此，执行闭包需要在托管堆上分配一个对象。\"]},\"284\":{\"h\":\"装箱(Boxing)\",\"t\":[\"装箱(Boxing)是 Unity 项目中最常见的意外临时内存分配来源之一。当一个值类型(value-typed)的变量被自动转换为引用类型(reference type)时，就会发生这种情况。这种情况最常发生在将原始值类型变量（如 int 和 float）传递给对象类型的方法时。在为 Unity 编写 C# 代码时，应避免装箱。\",\"在此示例中，x 中的整数被装箱，以便它可以传递给 object.Equals 方法，因为对象上的 Equals 方法要求将一个对象传递给它。\",\"int x = 1; object y = new object(); y.Equals(x);\",\"C# IDE 和编译器不会发出关于装箱的警告，即使装箱会导致意外的内存分配。这是因为 C# 假设分代垃圾回收器和分配大小敏感的内存池可以有效地处理小的临时分配。\",\"虽然 Unity 的分配器确实对小分配和大分配使用不同的内存池，但 Unity 的 垃圾回收器 不是分代的，因此它无法有效地清除装箱生成的小而频繁的临时分配。\",\"识别装箱\",\"装箱在 CPU 跟踪中显示为对几个方法之一的调用，具体取决于使用的脚本后端。这些方法采用以下形式之一，其中 <example class> 是类或结构的名称，… 是许多参数：\",\"<example class>::Box(…) Box(…) <example class>_Box(…)\",\"要查找装箱，您还可以搜索反编译器或 IL 查看器的输出，例如 ReSharper 中内置的 IL 查看器工具 或 dotPeek 反编译器。IL 指令是 box。\"]},\"285\":{\"h\":\"返回数组的 Unity API\",\"t\":[\"导致意外分配数组的一个微妙原因是重复访问返回数组的 Unity API。每次访问返回数组的所有 Unity API 时，都会创建一个数组的新副本。如果您的代码访问数组值的 Unity API 的频率超过必要的频率，则可能会对性能产生不利影响。\",\"例如，以下代码不必要地为每个循环迭代创建四个顶点数组的副本。每次访问 .vertices 属性时都会发生分配。\",\"// Bad C# script example: this loop create 4 copies of the vertices array per iteration void Update() { for(int i = 0; i < mesh.vertices.Length; i++) { float x, y, z; x = mesh.vertices[i].x; y = mesh.vertices[i].y; z = mesh.vertices[i].z; // ... DoSomething(x, y, z); } }\",\"您可以将此代码重构为单个数组分配，而不管循环迭代的次数如何。为此，请配置您的代码以在循环之前捕获顶点数组：\",\"// Better C# script example: create one copy of the vertices array // and work with that void Update() { var vertices = mesh.vertices; for(int i = 0; i < vertices.Length; i++) { float x, y, z; x = vertices[i].x; y = vertices[i].y; z = vertices[i].z; // ... DoSomething(x, y, z); } }\",\"更好的一种方法是维护一个顶点列表，该列表在帧之间缓存和重用，然后使用 Mesh.GetVertices 在需要时填充它。\",\"// Best C# script example: create one copy of the vertices array // and work with that. List<Vector3> m_vertices = new List<Vector3>(); void Update() { mesh.GetVertices(m_vertices); for(int i = 0; i < m_vertices.Length; i++) { float x, y, z; x = m_vertices[i].x; y = m_vertices[i].y; z = m_vertices[i].z; // ... DoSomething(x, y, z); } }\",\"虽然一次访问属性的 CPU 性能影响不高，但在紧密循环中重复访问会创建 CPU 性能热点。重复访问会扩展托管堆。\",\"这个问题在移动设备上很常见，因为 Input.touches API 的行为与上述类似。项目也经常包含类似于以下的代码，其中每次访问 .touches 属性时都会发生分配。\",\"// Bad C# script example: Input.touches returns an array every time it’s accessed for ( int i = 0; i < Input.touches.Length; i++ ) { Touch touch = Input.touches[i]; // … }\",\"为了改进这一点，您可以配置您的代码以将数组分配提升到循环条件之外：\",\"// Better C# script example: Input.touches is only accessed once here Touch[] touches = Input.touches; for ( int i = 0; i < touches.Length; i++ ) { Touch touch = touches[i]; // … }\",\"以下代码示例将前面的示例转换为无分配的 Touch API：\",\"// BEST C# script example: Input.touchCount and Input.GetTouch don’t allocate at all. int touchCount = Input.touchCount; for ( int i = 0; i < touchCount; i++ ) { Touch touch = Input.GetTouch(i); // … }\",\"注意： 属性访问 (Input.touchCount) 仍然在循环条件之外，以节省调用属性的 get 方法的 CPU 影响。\"]},\"286\":{\"h\":\"替代的非分配 API\",\"t\":[\"一些 Unity API 具有不会导致内存分配的替代版本。您应该尽可能使用这些版本。下表显示了一小部分常见的分配 API 及其非分配替代方案。该列表并不详尽，但应指出要注意的 API 类型。\",\"分配 API\",\"非分配 API 替代方案\",\"Physics.RaycastAll\",\"Physics.RaycastNonAlloc\",\"Animator.parameters\",\"Animator.parameterCount 和 Animator.GetParameter\",\"Renderer.sharedMaterials\",\"Renderer.GetSharedMaterials\"]},\"287\":{\"h\":\"空数组重用\",\"t\":[\"一些开发团队更喜欢在数组值方法需要返回空集时返回空数组而不是 null。这种编码模式在许多托管语言中很常见，尤其是在 C# 和 Java 中。\",\"一般来说，当从方法返回零长度数组时，返回零长度数组的预分配静态实例比重复创建空数组更有效。\"]},\"288\":{\"h\":\"手动合并网格\",\"t\":[\"原文地址 - UnityManual\",\"你可以手动将多个网格(Mesh)合并为一个网格，来优化 DrawCall。Unity 会在一次 DrawCall 中渲染合并后的网格，而不是每个网格一次 DrawCall。在网格彼此靠近且相对位置不变的情况下，这种技术是 DrawCall 批处理(Batching） 的一个很好的替代方案。例如，对于一个带有许多抽屉的静态橱柜，将所有东西合并成一个网格是合理的。\",\"警告：Unity 无法单独剔除(Cull)你合并的网格。这意味着如果合并网格的一部分在屏幕上，Unity 会绘制整个合并网格。如果网格是静态的，并且你希望 Unity 单独剔除它们，请改用 静态批处理(Static Batching)。\",\"合并网格主要有两种方法：\",\"在你的资源生成工具中创作网格时进行合并。\",\"在 Unity 中使用 Mesh.CombineMeshes。\"]},\"289\":{\"h\":\"程序集\",\"t\":[\"原文地址 - UnityManual\",\"你可以创建 Assembly Definitions 和 Assembly References 资产，将你的脚本组织成程序集。\",\"程序集(assembly)是 C# 代码库，其中包含脚本定义的已编译的类和结构，并且还定义了对其他程序集的引用。有关 C# 中程序集的一般信息，请参阅 .NET 中的程序集。\",\"默认情况下，Unity 会将几乎所有的游戏脚本编译到预定义(Predefined)程序集 Assembly-CSharp.dll 中。（除此以外，Unity 还会创建 几个较小的专用预定义程序集。）\",\"Assembly-CSharp-firstpass：Standard AssetsPro Standard AssetsPlugins 文件夹中的运行时脚本。\",\"Assembly-CSharp-Editor-firstpass：Standard AssetsPro Standard Assets 和 Plugins 文件夹中的任意位置的 Editor 文件夹中的编辑器脚本。\",\"Assembly-CSharp：除特殊文件夹外，非 Editor 文件夹中的脚本。\",\"Assembly-CSharp-Editor：除特殊文件夹外，Editor 文件夹中的脚本。\",\"这种安排对于小型项目来说可以接受，但是随着项目中代码的增多，这会带来一些问题：\",\"每次你更改一个脚本，Unity 都必须重新编译所有其他脚本，这增加了迭代代码的整体编译时间。\",\"任何脚本都可以直接访问任何其他脚本中定义的类型，这可能使得重构和改进代码更加困难。\",\"所有脚本都会被所有平台编译。\",\"通过定义程序集，可以组织代码以促进模块化和可重用性。自定义程序集中的脚本不再被添加到默认程序集中，并且只能访问指定的其他程序集中的脚本。\",\"上图演示了如何将项目中的代码拆分成多个程序集。因为 Main 引用了 Stuff 并且没有反向引用，所以对 Main 中代码的更改不会影响 Stuff 中的代码。同样，因为 Library 不依赖于任何其他程序集，你可以更容易地在另一个项目中重用 Library 中的代码。\"]},\"290\":{\"h\":\"定义程序集\",\"t\":[\"要将代码组织成程序集，需要为每个程序集创建一个文件夹，并将属于该程序集的脚本移动到文件夹中。然后创建程序集定义资产并指定程序集属性。\",\"Unity 会获取包含程序集定义资产的文件夹中的所有脚本，并使用该资产定义的名称和其他设置将它们编译成一个程序集。Unity 还会将所有子文件夹中的脚本包含在同一个程序集中，除非子文件夹有自己的程序集定义或程序集引用资产。\",\"要将非子文件夹中的脚本包含在程序集中，请在非子文件夹中创建一个程序集引用资产，并将其设置为引用定义目标程序集的程序集定义资产。例如，你可以将项目中所有 Editor 文件夹中的脚本组合到它们自己的程序集中，无论这些文件夹位于何处。\",\"如果你想要访问 Package 中的 Internal 类的话，就可以通过创建程序集引用资产，来引用目标程序集，从而在编译的时候将自己的脚本编译到目标程序集，达到访问 Internal 类的目的。\",\"Unity 按照程序集的依赖关系确定的顺序来编译程序集；你无法指定程序集的编译顺序。\"]},\"291\":{\"h\":\"引用和依赖关系\",\"t\":[\"当一个类型使用另一个类型时，第一个类型 依赖于 第二个类型。当 Unity 编译一个脚本时，它必须能够访问该脚本所依赖的任何类型或其他代码。同样，当编译后的代码运行时，它必须能够访问其依赖项的编译版本。如果两个类型位于不同的程序集中，则包含依赖类型的程序集必须声明对包含其所依赖类型的程序集的引用。\",\"你可以使用程序集定义资产的选项来控制程序集之间的引用。设置包括：\",\"Auto Referenced – 预定义(Predefined)程序集(Assembly-CSharp等)是否自动引用该程序集，默认为 True。如果程序集划分合理，可以将该选项设置为 False，需要的时候手动引用。\",\"Assembly Definition References – 手动指定要引用的程序集。\",\"Override References - 如果启用的话，会多一个 Assembly References 选项，可以手动指定要引用的预编译(Precompiled)程序集(Plugin)。如果不启用的话，该程序集会自动引用所有预编译(Precompiled)程序集。\",\"No Engine References - 是否不引用 UnityEngine 程序集。如果程序集不依赖 Unity API 可以将其设置为 True。\",\"注意： 使用程序集定义创建的程序集中的类不能使用在预定义(Predefined)程序集中定义的类型。\",\"预编译(Precompiled)程序集：常见于编译为 DLL 的插件，比如某些插件不提供源码，只提供了一个编译好的 DLL。 预定义(Predefined)程序集：Unity 预定义的那几个程序集，包括：Assembly-CSharp-firstpassAssembly-CSharp-Editor-firstpassAssembly-CSharpAssembly-CSharp-Editor。\"]},\"292\":{\"h\":\"默认引用\",\"t\":[\"默认情况下，预定义(Predefined)程序集会引用所有其他程序集，包括使用程序集定义创建的程序集(1) 和作为 Plugins 添加到项目中的预编译程序集(2)。此外，你使用程序集定义资产创建的程序集会自动引用所有预编译程序集(3)：\",\"在默认设置中，预定义程序集中的类可以使用项目中任何其他程序集定义的所有类型。同样，你使用程序集定义资产创建的程序集可以使用任何预编译程序集中定义的所有类型。\",\"你可以在程序集定义资产的 Inspector 中关闭 Auto Referenced 来阻止程序集被预定义程序集引用。关闭 Auto Referenced 意味着当你更改程序集中的代码时，预定义程序集不会重新编译，但也意味着预定义程序集不能直接使用此程序集中的代码。\",\"关闭 Auto Referenced 可以加快编译速度，因为自定义程序集发生改变的时候，不再需要编译预定义程序集了。\",\"同样，你可以在 Plugin Inspector 中关闭 Auto Referenced 来阻止 Plugin 程序集被自动引用。这会影响预定义程序集和你使用程序集定义创建的程序集。\",\"当你为 Plugin 关闭 Auto Referenced 时，你可以在程序集定义资产的 Inspector 中显式引用它。启用资产的 Override References 选项并添加对 Plugin 的引用。\",\"注意： 你不能为预编译(Precompiled)程序集声明显式引用。预定义(Predefined)程序集只能使用 Auto Referenced 程序集中的代码。\"]},\"293\":{\"h\":\"循环引用\",\"t\":[\"当一个程序集引用第二个程序集，而第二个程序集又引用第一个程序集时，就存在程序集循环引用。这种程序集之间的循环引用是不允许的，并会报告错误，消息为：Assembly with cyclic references detected.\",\"通常，这种程序集之间的循环引用是由于程序集中定义的类内部存在循环引用而发生的。虽然同一程序集中类之间的循环引用在技术上没有问题，但不同程序集中类之间的循环引用是不允许的。如果你遇到循环引用错误，你必须重构你的代码以移除循环引用，或者将相互引用的类放在同一个程序集中。\"]},\"294\":{\"h\":\"创建程序集定义资产\",\"t\":[\"在 Project 窗口中，找到想要创建程序集的脚本文件夹。\",\"在该文件夹中创建一个程序集定义资产(菜单: Assets > Create > Assembly Definition)。\",\"为该资产分配一个名称。默认情况下，程序集文件使用你分配给资产的名称，但你可以在 Inspector 窗口中更改名称。\",\"Unity 会重新编译项目中的脚本以创建新的程序集。完成后，你可以更改新程序集的设置。\",\"包含程序集定义的文件夹中的脚本，包括任何子文件夹中的脚本（除非这些文件夹包含它们自己的程序集定义或引用资产）都会被编译到新的程序集中，并从它们之前的程序集中移除。\"]},\"295\":{\"h\":\"创建程序集定义引用资产\",\"t\":[\"在 Project 窗口中，找到包含你想要包含在被引用程序集中的脚本的文件夹。\",\"在该文件夹中创建一个程序集定义引用资产(菜单: Assets > Create > Assembly Definition Reference)。\",\"为资产分配名称。Unity 重新编译项目中的脚本以创建新的程序集。完成后，你可以更改新的程序集定义引用的设置。\",\"选择新的程序集定义引用资产，在 Inspector 中查看其属性。\",\"将 Assembly Definition 属性设置为引用目标程序集定义资产。\",\"点击 Apply。\",\"包含程序集定义引用资产的文件夹中的脚本，包括任何子文件夹中的脚本（除非这些文件夹包含它们自己的程序集定义或引用资产）都会被编译到被引用的程序集中，并从它们之前的程序集中移除。\"]},\"296\":{\"h\":\"创建特定平台的程序集\",\"t\":[\"创建程序集定义资产。\",\"选择新的程序集定义资产，在 Inspector 中查看其属性。\",\"勾选 Any Platform 选项并选择要排除的特定平台。或者，你可以取消勾选 Any Platform 并选择要包含的特定平台。\",\"点击 Apply。\",\"当你为某个平台构建项目时，该程序集将根据所选平台被包含（或排除）。\"]},\"297\":{\"h\":\"为 Editor 代码创建程序集\",\"t\":[\"Editor 程序集允许你将 Editor 脚本放在项目的任何位置，而不仅仅是放在名为 Editor 的顶层文件夹中。\",\"如果你不想把编辑器脚本放在 Editor 文件夹中，又需要在构建的时候排除掉，可以定义 Editor 程序集。\",\"在一个包含 Editor 脚本的文件夹中创建一个特定平台的程序集。\",\"仅包含 Editor 平台。\",\"如果你有其他包含 Editor 脚本的文件夹，请在这些文件夹中创建程序集定义引用资产并将它们设置为引用此程序集定义。\"]},\"298\":{\"h\":\"创建测试程序集\",\"t\":[\"测试程序集允许你编写测试并使用 Unity TestRunner 运行它们，同时将测试代码与应用程序发布代码分开。Unity 提供 TestRunner 作为 Test Framework package 的一部分。有关安装 Test Framework package 和创建测试程序集的说明，请参阅 Test Framework documentation。\"]},\"299\":{\"h\":\"引用另一个程序集\",\"t\":[\"要使用属于另一个程序集的 C# 类型和函数，必须在程序集定义资产中创建对该程序集的引用。\",\"选择需要引用的程序集的程序集定义，在 Inspector 中查看其属性。\",\"在 Assembly Definition References 部分，点击 + 按钮添加一个新的引用。\",\"将程序集定义资产分配给引用列表中新创建的槽位。\",\"启用 Use GUIDs 选项允许你更改被引用的程序集定义资产的文件名，而无需更新其他程序集定义中的引用以反映新名称。（请注意，如果资产文件的元数据文件被删除，或者你在 Unity 编辑器之外移动文件而没有同时移动 meta 文件，则必须重置 GUID。）\"]},\"300\":{\"h\":\"引用预编译的 Plugin 程序集\",\"t\":[\"默认情况下，项目中所有使用程序集定义创建的程序集都会自动引用所有预编译程序集。这些自动引用意味着当你更新任何一个预编译程序集时，Unity 必须重新编译你所有的程序集，即使该程序集中的代码没有被使用。为了避免这种额外的开销，你可以覆盖自动引用，并仅指定该程序集实际使用的预编译库的引用：\",\"选择需要引用的程序集的程序集定义，在 Inspector 中查看其属性。\",\"在 General 部分，启用 Override References 选项。\",\"当勾选 Override References 时，Inspector 的 Assembly References 部分变为可用。\",\"在 Assembly References 部分，点击 + 按钮添加一个新的引用。\",\"使用空槽位中的下拉列表分配对预编译程序集的引用。该列表会显示项目中适用于 Build Settings 中设置的平台的所有预编译程序集。（在 Plugin Inspector 中为预编译程序集设置平台兼容性。）\",\"点击 Apply。\",\"为你构建项目的每个平台重复此操作。\"]},\"301\":{\"h\":\"有条件地包含程序集\",\"t\":[\"你可以使用预处理器符号来控制一个程序集是否被编译并包含在构建中（包括编辑器中的 Play 模式）。你可以使用程序集定义选项中的 Define Constraints 列表指定必须定义哪些符号才能使用一个程序集：\",\"选择该程序集的程序集定义，在 Inspector 中查看其属性。\",\"在 Define Constraints 部分，点击 + 按钮向约束列表添加一个新符号。\",\"输入符号名称。你可以在名称前加上感叹号来“否定”该符号。例如，约束 !UNITY_WEBGL 表示在未定义 UNITY_WEBGL 时包含该程序集。\",\"点击 Apply。\",\"你可以使用以下符号作为约束：\",\"在 Scripting Define Symbols 设置中定义的符号，你可以在 Project Settings 的 Player 部分找到它。请注意，Scripting Define Symbols 适用于 Build Settings 中当前设置的平台。要为多个平台定义符号，你必须切换到每个平台并单独修改 Scripting Define Symbols 字段。\",\"Unity 定义的符号。请参阅 Platform dependent compilation。\",\"使用程序集定义资产的 Version Defines 部分定义的符号。\",\"在确定约束是否已满足时，不会考虑脚本中定义的符号。有关其他信息，请参阅 Define Constraints。\"]},\"302\":{\"h\":\"根据 Unity 和项目 Package 版本定义符号\",\"t\":[\"如果你需要根据项目是否使用特定版本的 Unity 或 Package 来编译程序集中的不同代码，你可以向 Version Defines 列表添加条目。此列表指定了何时定义符号的规则。对于版本号，你可以指定一个计算结果为特定版本或版本范围的逻辑表达式。\",\"选择程序集定义资产，在 Inspector 中查看其属性。\",\"在 Version Defines 部分，点击 + 按钮向列表添加一个条目。\",\"设置属性：\",\"Resource: 选择 Unity 或必须安装的 Package 或 Module，以便定义此符号。\",\"Define: 符号名称。\",\"Expression: 一个计算结果为特定版本或版本范围的表达式。规则请参阅 Version Define Expressions。\",\"Expression outcome 显示表达式计算结果为哪些版本。如果结果显示 Invalid，则表达式语法不正确。\",\"以下示例定义了符号 USE_TIMELINE_1_3（如果项目使用 Timeline 1.3）和 USE_NEW_APIS（如果项目在 Unity 2021.2.0a7 或更高版本中打开）：\",\"点击 Apply。\",\"在程序集定义中定义的符号仅在该定义创建的程序集中的脚本的作用域内。\",\"即，程序集中定义的符号仅在该程序集内的脚本中生效。\",\"请注意，你可以使用 Version Defines 列表定义的符号作为 Define Constraints。因此，你可以指定程序集仅在项目中同时安装了给定 Package 的特定版本时才应使用。\"]},\"303\":{\"h\":\"Version Define 表达式\",\"t\":[\"你可以使用表达式来指定确切的版本或版本范围。Version Define 表达式使用数学范围表示法。\",\"方括号 [] 表示范围包含端点：\",\"[1.3,3.4.1] 计算结果为 1.3.0 <= x <= 3.4.1\",\"圆括号 () 表示范围排除端点：\",\"(1.3.0,3.4) 计算结果为 1.3.0 < x < 3.4.0\",\"你可以在单个表达式中混合使用两种范围类型：\",\"[1.1,3.4) 计算结果为 1.1.0 <= x < 3.4.0\",\"(0.2.4,5.6.2-preview.2] 计算结果为 0.2.4 < x <= 5.6.2.-preview.2\",\"你可以使用方括号中的单个版本指示符来指定确切的版本：\",\"[2.4.5] 计算结果为 x = 2.4.5\",\"作为快捷方式，你可以输入单个版本而不带范围括号，以表示表达式包含该版本或更高版本：\",\"2.1.0-preview.7 计算结果为 x >= 2.1.0-preview.7\",\"注意： 表达式中不允许有空格。不支持通配符。\"]},\"304\":{\"h\":\"Unity 版本号\",\"t\":[\"当前版本的 Unity（以及所有支持程序集定义的版本）使用包含三个部分的版本指示符：MAJOR.MINOR.REVISION，例如 2017.4.25f1、2018.4.29f1 和 2019.4.7f1。\",\"MAJOR 版本是目标发布年份，例如 2017 或 2021。\",\"MINOR 版本是目标发布季度，例如 1、2、3 或 4。\",\"REVISION 指示符本身有三个部分，格式为：RRzNN，其中： \",\"RR 是一位或两位数的修订号\",\"z 是指定发布类型的字母： \",\"a = Alpha 版本\",\"b = 测试(Beta)版本\",\"f = 发布版本\",\"c = 中国发布版本(等同于 f)\",\"p = 补丁(Patch)版本\",\"x = 试验(Experimental)版本\",\"NN 是一位或两位数的增量数字\",\"发布类型指示符的比较如下：\",\"a < b < f = c < p < x\",\"换句话说，Alpha 版本 被认为早于 Beta 版本，后者早于 发布版本 或 中国发布版本。补丁(Patch)版本 总是晚于具有相同修订号的 发布版本 或 中国发布版本，而 试验(Experimental)版本 晚于任何其他发布类型。请注意，试验(Experimental)版本 末尾不使用增量数字。\",\"Unity 版本号允许在 REVISION 组件后带有后缀，例如 2019.3.0f11-Sunflower。在比较版本时，任何后缀都会被忽略。\",\"例如，以下表达式包含任何 2017 或 2018 版本的 Unity，但不包含 2019 或更高版本的任何版本：\",\"[2017,2019)\"]},\"305\":{\"h\":\"Package 和 Module 版本号\",\"t\":[\"Package 和 Module 版本指示符有四个部分，遵循 Semantic Versioning 格式：MAJOR.MINOR.PATCH-LABEL。前三个部分始终是数字，但 label 是一个字符串。预览中的 Unity packages 使用字符串 preview 或 preview.n，其中 n > 0。有关 package 版本号的更多信息，请参阅 Package Versioning。\",\"例如，以下表达式包含 MAJOR.MINOR 版本在 3.2 和 6.1 之间（含）的 package 的所有版本：\",\"[3.2,6.1]\"]},\"306\":{\"h\":\"查找脚本所属的程序集\",\"t\":[\"要识别你的 C# 脚本被编译到哪个程序集中：\",\"在 Project 窗口中选择 C# 脚本文件，在 Inspector 窗口中查看其属性。\",\"程序集文件名和程序集定义（如果存在）显示在 Inspector 的 Assembly Information 部分。\",\"在此示例中，所选脚本被编译到库文件 Unity.Timeline.Editor.dll 中，该文件由 Unity.Timeline.Editor 程序集定义资产定义。\"]},\"307\":{\"h\":\"特殊文件夹\",\"t\":[\"Unity 对待某些特殊名称文件夹中的脚本与其他文件夹中的脚本不同。但是，当你在其中一个特殊文件夹内部或其上级文件夹中创建程序集定义资产时，该文件夹会失去其特殊处理。当你使用 Editor 文件夹时，你可能会注意到这种变化，这些文件夹可能散布在你的 Project 中（取决于你如何组织代码以及你使用的 Asset Store packages）。\",\"通常，Unity 会将名为 Editor 的文件夹中的所有脚本编译到预定义的 Assembly-CSharp-Editor 程序集中，无论这些脚本位于何处。但是，如果你在一个其下有 Editor 文件夹的文件夹中创建程序集定义资产，Unity 将不再将这些 Editor 脚本放入预定义的 Editor 程序集中。相反，它们会进入由你的程序集定义创建的新程序集中——而它们可能不属于那里。要管理 Editor 文件夹，你可以在每个 Editor 文件夹中创建程序集定义或引用资产，以将这些脚本放入一个或多个 Editor 程序集中。\",\"即，如果你为一个文件夹定义了程序集，如果该文件夹的下级目录存在 Editor 文件夹，该 Editor 文件夹中的编辑器脚本不会被编译到 Assembly-CSharp-Editor 程序集，而是编译到你的程序集，这是不正确的。在创建程序集的时候，应该避免这种错误包含的情况。一般，将 Editor 和 Runtime 分开，且 Editor 文件夹不要放在子目录里。\"]},\"308\":{\"h\":\"设置设置程序集属性\",\"t\":[\"你可以使用 Assembly Attributes 设置程序集的元数据属性。按照惯例，Assembly Attributes 语句通常放在名为 AssemblyInfo.cs 的文件中。\",\"例如，以下 Assembly Attributes 指定了一些 .NET 程序集元数据值、一个 InternalsVisibleTo 属性（这对于测试很有用），以及 Unity 定义的 Preserve 属性（影响在构建项目时如何从程序集中移除未使用的代码）：\",\"[assembly: System.Reflection.AssemblyCompany(\\\"Bee Corp.\\\")] [assembly: System.Reflection.AssemblyTitle(\\\"Bee's Assembly\\\")] [assembly: System.Reflection.AssemblyCopyright(\\\"Copyright 2020.\\\")] [assembly: System.Runtime.CompilerServices.InternalsVisibleTo(\\\"UnitTestAssembly\\\")] [assembly: UnityEngine.Scripting.Preserve]\"]},\"309\":{\"h\":\"在构建脚本中获取程序集信息\",\"t\":[\"使用 UnityEditor.Compilation 命名空间中的 CompilationPipeline 类来检索为项目构建的所有程序集（包括基于程序集定义资产创建的程序集）的相关信息。\",\"例如，以下脚本使用 CompilationPipeline 类列出项目中所有的 AssembliesType.Player 程序集：\",\"using UnityEditor; using UnityEditor.Compilation; public static class AssemblyLister { [MenuItem(\\\"Tools/List Player Assemblies in Console\\\")] public static void PrintAssemblyNames() { UnityEngine.Debug.Log(\\\"== Player Assemblies ==\\\"); Assembly[] playerAssemblies = CompilationPipeline.GetAssemblies(AssembliesType.Player); foreach (var assembly in playerAssemblies) { UnityEngine.Debug.Log(assembly.name); } } }\",\"AssembliesType\",\"Editor 针对编辑器编译的程序集，包括测试程序集。\",\"Player 针对播放器编译的程序集，包括测试程序集。\",\"PlayerWithoutTestAssemblies 针对播放器编译的程序集，不包括测试程序集。\"]},\"310\":{\"h\":\"路线图\",\"t\":[\"Unity 技术全景图\",\"游戏开发路线图\"]},\"311\":{\"h\":\"Unity 技术全景图\",\"t\":[\"原文地址 - UnityLearn 中文\"]},\"312\":{\"h\":\"编程能力\",\"t\":[\"C# 编程 \",\"C# 语法 \",\"Unity 官方课程 - C# 初级编程\",\"Unity 官方课程 - C# 中级编程\",\"Unity 官方课程 - C# 知识体系构建(第二版)\",\"Unity 官方课程 - 从零开始的 Unity 魔法学堂\",\"微软官方 C#文档\",\"数据操作 \",\"Unity 官方课程 - Unity 中如何持久化存储数据？\",\"Unity 官方课程 - 数据存储 - Easy Save 教程\",\"设计模式\",\"创建型模式：工厂方法模式、抽象工厂模式、单例模式、建造者模式、原型模式\",\"结构型模式：适配器模式、装饰器模式、代理模式、外观模式、桥接模式、组合模式、享元模式\",\"行为型模式：策略模式、模版方法模式、观察者模式、迭代器模式、责任链模式、命令模式、备忘录模式、状态模式、访问者模式、中介者模式、解释器模式\",\"Unity 编程 \",\"Unity API \",\"Unity 官方课程 - Unity 开发基础课程\",\"Unity 官方课程 - 从零开始的 Unity 魔法学堂\",\"Unity 官方课程 - Unity 入门：从 0 到 0.1\",\"编辑器扩展 \",\"Unity 官方文档 - UnityEditor\",\"Unity 官方课程 - 编辑器扩展精讲\",\"游戏编程 \",\"各类框架\",\"子系统，模块\",\"热更新框架\",\"Unity 可视化编程 \",\"Bolt \",\"Unity 官方课程 - Bolt 可视化编程工具\",\"Unity 官方课程 - Bolt 三部曲系列\",\"Visual Scripting\",\"PlayerMaker\",\"XNode\"]},\"313\":{\"h\":\"引擎知识\",\"t\":[\"基本操作\",\"Unity 引擎下载、安装、激活\",\"IDE 编辑器基本使用\",\"打包\",\"Unity 社区，商城 \",\"Unity 官方文档 - 资源商店明星素材配套教程\",\"Unity 官方课程 - Unity Asset Store\",\"实操训练 \",\"Unity 官方课程 - John Lemon's Haunted Jaunt：3D 初学者\",\"Unity 官方课程 - 探索型课程：3D 游戏套件\",\"Unity 官方课程 - Ruby's Adventure：2D 初学者\",\"Unity 官方课程 - 创作者套件：RPG\",\"Unity 官方课程 - 创作者套件：益智游戏\",\"Unity 官方课程 - 卡丁车 Microgame\",\"Unity 官方课程 - FPS Microgame\",\"Unity 官方课程 - 零基础入门 GameFramwork 框架：制作一个滚动小球\",\"基础组件\",\"动画组件\",\"物理学组件\",\"寻路组件\",\"声音组件\",\"渲染组件\",\"UGUI 组件 \",\"Unity 官方文档 - Unity UI: Unity User Interface\",\"Unity 官方课程 - 深入 UGUI Mask 组件原理和性能深度优化\",\"基础资源\",\"模型\",\"材质\",\"着色器\",\"图片\",\"音频 \",\"Unity 官方文档 - 音频\",\"Unity 官方课程 - Gamer 的音乐小课堂\",\"动画 \",\"Unity 官方文档 - 动画\",\"Unity 官方课程 - 骨骼绑定的特别案例\",\"视觉渲染\",\"渲染管线 \",\"Unity 官方文档 - 渲染管线\",\"Unity 官方课程 - 高级 UNITY 创作者的通用渲染管线简介\",\"Shader \",\"Unity 官方课程 - Hi Shader\",\"Unity 官方课程 - 图形计算器在 Shader 中的应用\",\"特效\",\"常用模块\",\"TimeLine\",\"CinemaMachine\",\"Profiler\",\"Input System\"]},\"314\":{\"h\":\"网络编程\",\"t\":[\"套接字(Socket) \",\"Tcp\",\"Udp\",\"Http\",\"WebSocket\",\"网络插件 \",\"UNet\",\"photon unity networking\",\"MLAPI\",\"实操 \",\"多人联机\",\"帧同步和状态同步\",\"断点续传\"]},\"315\":{\"h\":\"版本控制\",\"t\":[\"PlasticSCM \",\"Unity 官方课程 - Unity GDC 2022 - 面向开发者多版本控制工具 Unity Plastic SCM\",\"Unity 官方课程 - 版本管理工具 - Plastic SCM 教程\",\"Unity 官方课程 - Unity 最新版本控制系统 Plastic SCM 系列课\",\"Git\",\"SVN\"]},\"316\":{\"h\":\"调试\",\"t\":[\"常见 Bug 修复\",\"断点调试\"]},\"317\":{\"h\":\"优化\",\"t\":[\"基本概念 \",\"Drawcall\",\"空间换时间\",\"资源优化 \",\"Mesh 合并\",\"MipMap\",\"合并压缩模型贴图\",\"图集\",\"程序优化 \",\"脚本优化 \",\"Unity 官方课程 - Unity ECS(一) 轻松入门\",\"Unity 官方课程 - Unity ECS(二) 小试牛刀\",\"shader 优化\",\"动态加载\",\"对象池\",\"Dots JobSystem \",\"Unity 官方课程 - DOTS 从原理到应用\",\"Unity 官方课程 - DOTS 课程系列：C# Job System 精要\",\"Unity 官方课程 - Unity GDC 2022 - Unity 编辑器中的 DOTS 创作和调试工作流\",\"Unity 官方课程 - Unity GDC 2022 - DOTS 在实际制作中的使用及未来计划\",\"渲染优化 \",\"烘培\",\"LOD\",\"遮挡剔除\",\"Batches\",\"LightProbes\",\"工具 \",\"Profiler\",\"减面工具和插件\",\"Mesh 合并工具\",\"烘焙插件\"]},\"318\":{\"h\":\"TA 技术美术\",\"t\":[\"图形学 \",\"Unity 官方课程 - 图形计算器在 Shader 中的应用\",\"Unity 官方课程 - 计算机图形学(使用 unity 实现)\",\"渲染管线 \",\"内置渲染管线 \",\"Unity 官方文档 - 渲染管线\",\"Unity 官方课程 - 高级 UNITY 创作者的通用渲染管线简介\",\"自定义渲染管线 (SRP)\",\"合并压缩模型贴图\",\"图集\",\"Shader \",\"ShaderGraph \",\"Unity 官方课程 - HDRP 高清渲染 - ShaderGraph 教程\",\"Unity 官方课程 - 大话 Unity 之 ShaderGraph 贴花系统 - Decal System 教程\",\"Amplify Shader Editor\",\"Cg/HLSL\",\"程序化建模\"]},\"319\":{\"h\":\"游戏特效\",\"t\":[\"特效设计\",\"PostProcessing\",\"VisualEffectGraph \",\"Unity 官方课程 - Visual Effect Graph 新粒子系统完整讲义\",\"Unity 官方课程 - Visual Effect Graph 系列教程 | 篝火\",\"Particle System\",\"ShaderGraph \",\"Unity 官方课程 - HDRP 高清渲染 - ShaderGraph 教程\",\"Unity 官方课程 - 大话 Unity 之 ShaderGraph 贴花系统 - Decal System 教程\",\"Amplify Shader Editor\"]},\"320\":{\"h\":\"地编\",\"t\":[\"场景快速搭建 \",\"室内\",\"室外\",\"烘焙/打光/阴影/调色等技巧 \",\"Unity 官方课程 - Unity HDRP 室外场景打光流程分享(上篇)-UE4 场景转 Unity HDRP\",\"Unity 官方课程 - Unity HDRP 室外场景打光流程分享(下篇)-白天和夜晚场景打光\",\"Unity 官方课程 - 『大话 Unity』光影烘焙\"]},\"321\":{\"h\":\"行业\",\"t\":[\"BIM \",\"Unity 官方课程 - Unity Reflect 入门教程\",\"Unity 官方课程 - PiXYZ 2020.1 入门功能介绍\",\"元宇宙\",\"VR 开发\",\"AR 开发\",\"MR 开发\",\"UnityXR\",\"数字人\",\"交互 \",\"Kinect\",\"数字孪生\",\"AI \",\"Unity ML-Agents\",\"影视渲染 \",\"Unity 官方课程 - 航天模拟 CG 的 UNITY 技术经验\",\"Unity 官方课程 - Unity 影视化实时渲染案例课之《异教徒》艺术效果揭秘\",\"Unity 官方课程 - Unity 引擎影视动画入门课程\"]},\"322\":{\"h\":\"经典插件\",\"t\":[\"Photon PUN\",\"Amplify Shader Editor\",\"AndroidRemote\",\"Final IK\",\"Behavior Designer\",\"MeshBaker\",\"Dotween\",\"PlayMaker\",\"2D Sprite Shape\",\"UI Toolkit\",\"Animation Rigging\",\"Motion Matching\",\"Unity ProBuilder\"]},\"323\":{\"h\":\"其他\",\"t\":[\"关联软件 \",\"3ds Max\",\"Maya\",\"PhotoShop\",\"Substance\",\"Houdini\",\"BIM\",\"Android、IOS\",\"平台特点\",\"打包\",\"上架流程\",\"数学\",\"角度计算\",\"插值计算\",\"向量计算\",\"四元数\",\"三维数学常用的 API\",\"贝塞尔曲线\",\"多边形计算\",\"Mesh 的顶点运算\",\"游戏设计、游戏策划\",\"游戏测试 \",\"Unity 自动化 QA\",\"Unity Test Framework\",\"资源加密，代码混淆\",\"数据库 \",\"MariaDB\",\"Redis\",\"音乐与音效 \",\"WWISE\",\"FMOD\",\"CriWare\"]},\"324\":{\"h\":\"游戏开发前端路线图\",\"t\":[\"原文地址\",\"3D Math Primer for Graphics and Game Development\",\"游戏开发文档\",\"Box2D\"]},\"325\":{\"h\":\"数学(Mathematics)\",\"t\":[\"线性代数(Linear Algebra)\",\"向量(Vector)\",\"矩阵(Matrix) \",\"Matrix Algebra and Game Programming\",\"线性变换(Linear Transformation)\",\"几何(Geometry) \",\"Geometry\",\"仿射空间(Affine Space)\",\"仿射变换(Affine Transformation) \",\"Affine Transformations\",\"方向(Orientation) \",\"四元数(Quaternion)\",\"欧拉角(Euler Angle)\",\"投影(Projection) \",\"透视投影(Perspective)\",\"正交投影(Orthogonal)\",\"曲线(Curve) \",\"样条(Spline)\",\"埃尔米特曲线(Hermite)\",\"贝塞尔曲线(Bezier)\",\"Catmull-Rom 曲线\"]},\"326\":{\"h\":\"物理(Physics)\",\"t\":[\"动力学(Dynamics) \",\"质心(Center of Mass)\",\"转动惯量(Moment of Inertia)\",\"加速度(Acceleration)\",\"关节(Joints)\",\"恢复系数(Restitution)\",\"力(Force)\",\"角速度(Angular Velocity)\",\"浮力(Buoyancy) \",\"Water interaction model for boats in video games\",\"Water interaction model for boats in video games: Part 2\",\"摩擦力(Friction)\",\"线速度(Linear Velocity)\",\"碰撞检测(Collision Detection) \",\"连续碰撞检测(CCD)\",\"粗略阶段(Broad Phase) \",\"包围体(Bounding Volume) \",\"轴对齐包围盒(Axis-Aligned Bounding Box(AABB))\",\"定向包围盒(Oriented Bounding Box(OBB))\",\"空间划分(Spatial Partitioning) \",\"排序与剪裁(Sort and Sweep) \",\"Sort, sweep, and prune: Collision detection algorithms\",\"层次包围体(Bounding Volume Hierarchy(BVH))\",\"动态包围体树(Dynamic Bounding Volume Tree(DBVT)) \",\"Dynamic Bounding Volume Hierarchies\",\"精确阶段(Narrow Phase) \",\"相交(Intersection) \",\"SAT 算法(Separating Axis Theorem) \",\"SAT(Separating Axis Theorem)\",\"EPA 算法 \",\"EPA(Expanding Polytope Algorithm)\",\"GJK 算法(Gilbert–Johnson–Keerthi)\",\"凸性(Convexity) \",\"凸体(Convex) \",\"凸包(Convex Hull)\",\"凹(Concave) \",\"凸分解(Convex Decomposition)\"]},\"327\":{\"h\":\"游戏引擎(Game Engine)\",\"t\":[\"Unity 3D\",\"虚幻引擎(Unreal Engine)\",\"Godot\",\"原生开发(Native)\"]},\"328\":{\"h\":\"编程语言(Programming Languages)\",\"t\":[\"C/C++\",\"C#\",\"Rust\",\"Python\"]},\"329\":{\"h\":\"计算机图形学(Computer Graphics)\",\"t\":[\"光线追踪(Ray Tracing)\",\"光栅化(Rasterization)\",\"图形管线(Graphics Pipeline)\",\"采样(Sampling)\",\"着色器(Shader)\",\"渲染方程(Rendering Equation)\",\"反射(Reflection) \",\"漫反射(Diffuse)\",\"镜面反射(Specular)\",\"贴图映射(Mapping) \",\"纹理贴图(Texture)\",\"凹凸贴图(Bump)\",\"视差贴图(Parallax)\",\"视差遮蔽贴图(Horizon)\",\"计算机动画(Computer Animation)\",\"色彩(Color)\",\"视觉感知(Visual Perception)\",\"时间重映射(Tone Reproduction)\",\"光照与阴影(Lighting and Shadow) \",\"阴影贴图(Shadow Map) \",\"2D\",\"Cube\",\"级联阴影(Cascaded)\",\"模板阴影(Stencil Shadow)\",\"光源类型(Light Source) \",\"定向光(Directional Light)\",\"点光源(Point Light)\",\"聚光灯(Spot Light)\",\"无限光源(Infinite Light)\",\"可见性与遮挡(Visibility and Occlusion) \",\"遮挡物(Occluder) \",\"雾效(Fog)\",\"遮挡剔除(Culling) \",\"视锥剔除(Frustum)\",\"光线遮挡(Light)\",\"阴影遮挡(Shadow)\",\"裁剪(Clipping) \",\"多边形裁剪(Polygon)\",\"多面体裁剪(Polyhedron)\"]},\"330\":{\"h\":\"图形 API(Graphics API)\",\"t\":[\"DirectX \",\"HLSL(高级着色语言) \",\"High-level shader language(HLSL)\",\"Vulkan High Level Shader Language Comparison\",\"OpenGL \",\"GLSL(OpenGL着色语言) \",\"OpenGL® and OpenGL® ES Reference Pages\",\"OpenGL ES\",\"Vulkan\",\"SPIR-V\",\"WebGL\",\"Metal\"]},\"331\":{\"h\":\"AI\",\"t\":[\"决策逻辑(Decision Making) \",\"决策树(Decision Tree) \",\"Behavior trees for AI: How they work\",\"状态机(State Machine)\",\"行为树(Behavior Tree) \",\"Open Behavior Trees\",\"模糊逻辑(Fuzzy Logic) \",\"The use of Fuzzy Logic for Artificial Intelligence in Games\",\"马尔可夫系统(Markov System) \",\"Modeling Games with Markov Chains\",\"Advanced math in game design: random walks and Markov chains in action\",\"目标导向行为(Goal Oriented Behavior) \",\"Goal-Oriented Action Planning(GOAP)\",\"移动(Movement) \",\"Analyzing Core Character Movement in 3D\",\"棋类游戏逻辑(Board Game) \",\"极小化极大算法(Minimax) \",\"Dictionary of Algorithms and Data Structures\",\"Alpha-Beta剪枝(Alpha-Beta Pruning)\",\"蒙特卡洛树搜索(Monte Carlo tree search(MCTS))\"]},\"332\":{\"h\":\"AI 学习系统(AI Learning)\",\"t\":[\"朴素贝叶斯分类器(Naive Bayes Classifier)\",\"机器学习(Decision Learning)\",\"强化学习(Reinforcements Learning)\",\"决策树学习(Decision Tree Learning)\",\"深度学习(Deep Learning)\",\"人工神经网络(Artificial Neutral Network)\"]},\"333\":{\"h\":\"高级渲染(Advanced Rendering)\",\"t\":[\"实时光线追踪(Real-Time Ray Tracing) \",\"DirectX 光线追踪(DirectX Ray Tracing)\",\"Vulkan 光线追踪(Vulkan Ray Tracing)\",\"OptiX(NVIDIA光追框架)\",\"基于物理的渲染(PBR)(Physically-Based Rendering) \",\"微表面散射(Microsurface Scattering)\",\"透明与半透明效果(Translucency and Transparency)\",\"能量守恒(Conservation of Energy)\",\"金属度(Metallicity)\"]},\"334\":{\"h\":\"配置\"},\"335\":{\"h\":\"Sidebar\",\"t\":[\"import type { SidebarOptions } from '@vuepress/theme-default' export const sidebarZh: SidebarOptions = { '/zh/guide/': [ { text: '指南', children: [ '/zh/guide/introduction.md', '/zh/guide/getting-started.md', '/zh/guide/configuration.md', '/zh/guide/page.md', '/zh/guide/markdown.md', '/zh/guide/assets.md', '/zh/guide/i18n.md', '/zh/guide/deployment.md', '/zh/guide/theme.md', '/zh/guide/plugin.md', '/zh/guide/bundler.md', '/zh/guide/migration.md', '/zh/guide/troubleshooting.md', ], }, ], '/zh/advanced/': [ { text: '深入', children: [ '/zh/advanced/architecture.md', '/zh/advanced/plugin.md', '/zh/advanced/theme.md', ], }, { text: 'Cookbook', children: [ '/zh/advanced/cookbook/README.md', '/zh/advanced/cookbook/usage-of-client-config.md', '/zh/advanced/cookbook/adding-extra-pages.md', '/zh/advanced/cookbook/making-a-theme-extendable.md', '/zh/advanced/cookbook/passing-data-to-client-code.md', '/zh/advanced/cookbook/markdown-and-vue-sfc.md', '/zh/advanced/cookbook/resolving-routes.md', ], }, ], '/zh/reference/': [ { text: '核心', collapsible: true, children: [ '/zh/reference/cli.md', '/zh/reference/config.md', '/zh/reference/frontmatter.md', '/zh/reference/components.md', '/zh/reference/plugin-api.md', '/zh/reference/theme-api.md', '/zh/reference/client-api.md', '/zh/reference/node-api.md', ], }, { text: '打包工具', children: [ '/zh/reference/bundler/vite.md', '/zh/reference/bundler/webpack.md', ], }, { text: '生态系统', children: [ { text: '默认主题', link: 'https://ecosystem.vuejs.press/zh/themes/default/', }, { text: '插件', link: 'https://ecosystem.vuejs.press/zh/plugins/', }, ], }, ], }\"]},\"336\":{\"h\":\"Navbar\",\"t\":[\"import type { NavbarOptions } from '@vuepress/theme-default' import { VERSION } from '../meta.js' export const navbarZh: NavbarOptions = [ { text: '指南', children: [ '/zh/guide/introduction.md', '/zh/guide/getting-started.md', '/zh/guide/configuration.md', '/zh/guide/page.md', '/zh/guide/markdown.md', '/zh/guide/assets.md', '/zh/guide/i18n.md', '/zh/guide/deployment.md', '/zh/guide/theme.md', '/zh/guide/plugin.md', '/zh/guide/bundler.md', '/zh/guide/migration.md', '/zh/guide/troubleshooting.md', ], }, { text: '参考', children: [ { text: '核心', children: [ '/zh/reference/cli.md', '/zh/reference/config.md', '/zh/reference/frontmatter.md', '/zh/reference/components.md', '/zh/reference/plugin-api.md', '/zh/reference/theme-api.md', '/zh/reference/client-api.md', '/zh/reference/node-api.md', ], }, { text: '打包工具', children: [ '/zh/reference/bundler/vite.md', '/zh/reference/bundler/webpack.md', ], }, { text: '生态系统', children: [ { text: '默认主题', link: 'https://ecosystem.vuejs.press/zh/themes/default/', }, { text: '插件', link: 'https://ecosystem.vuejs.press/zh/plugins/', }, ], }, ], }, { text: '了解更多', children: [ { text: '深入', children: [ '/zh/advanced/architecture.md', '/zh/advanced/plugin.md', '/zh/advanced/theme.md', { text: 'Cookbook', link: '/zh/advanced/cookbook/', }, ], }, { text: '其他资源', children: [ { text: '生态系统', link: 'https://ecosystem.vuejs.press/zh/', }, { text: '市场', link: 'https://marketplace.vuejs.press/zh/', }, { text: '贡献指南', link: 'https://github.com/vuepress/core/blob/main/CONTRIBUTING_zh.md', }, ], }, ], }, { text: `v${VERSION}`, children: [ { text: '更新日志', link: 'https://github.com/vuepress/core/blob/main/CHANGELOG.md', }, { text: 'v1.x', link: 'https://v1.vuepress.vuejs.org/zh/', }, { text: 'v0.x', link: 'https://v0.vuepress.vuejs.org/zh/', }, ], }, // TODO: remove the type assertion ] as NavbarOptions\"]},\"337\":{\"h\":\"部署\"},\"338\":{\"h\":\"项目根目录下创建\",\"t\":[\"# Node.js node_modules/ npm-debug.log # VuePress # 默认临时文件目录 .vuepress/.temp # 默认缓存目录 .vuepress/.cache # 默认构建生成的静态文件目录 .vuepress/dist # System .DS_Store Thumbs.db # Editors .vscode/ .idea/\"]},\"339\":{\"h\":\"同步到 Github\",\"t\":[\"项目需要设置为 publicGeneral/Danger Zone/Change Visibility\",\"项目需要设置为可读可写 Actions/General/Workflow permissions/Read and write permissions\",\"创建 GithubActionPages/Github Actions/Create your own\",\"会在 .github\\\\workflows\\\\ 下创建文件，命名为 docs.yml\",\"执行过一次之后，设置 Deploy From a branch，选择分支 gh-pages，目录选择根目录。\",\"最终部署页面为 https://{username}.github.io/{xxx}\",\"最好是新建一个名为 {username.github.io} 的项目，即可以直接使用 https://{Username}.github.io 网址。\",\"name: docs on: # 每当 push 到 main 分支时触发部署 push: branches: [main] # 手动触发部署 workflow_dispatch: jobs: docs: runs-on: ubuntu-latest steps: - uses: actions/checkout@v4 with: # “最近更新时间” 等 git 日志相关信息，需要拉取全部提交记录 fetch-depth: 0 - name: 设置 pnpm uses: pnpm/action-setup@v4 with: verison: 10 - name: 设置 Node.js uses: actions/setup-node@v4 with: # 选择要使用的 node 版本 node-version: 22 # 缓存 pnpm 依赖 cache: pnpm - name: 安装依赖 run: pnpm install --frozen-lockfile # 运行构建脚本 - name: 构建 VuePress 站点 run: pnpm docs:build # 查看 workflow 的文档来获取更多信息 # @see https://github.com/crazy-max/ghaction-github-pages - name: 部署到 GitHub Pages uses: crazy-max/ghaction-github-pages@v4 with: # 部署到 gh-pages 分支 target_branch: gh-pages # 部署目录为 VuePress 的默认输出目录 build_dir: docs/.vuepress/dist env: # @see https://docs.github.com/cn/actions/reference/authentication-in-a-workflow#about-the-github_token-secret GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\"]},\"340\":{\"h\":\"报错处理\",\"t\":[\"如果发现提交后没有发布成功，则 Action 执行报错，在 Github 项目的 Actions 查看报错：\",\"Error: No pnpm version is specified. Please specify it by one of the following ways: - in the GitHub Action config with the key \\\"version\\\" - in the package.json with the key \\\"packageManager\\\"\",\"需要指定 pnpm 版本\",\" - name: 设置 pnpm uses: pnpm/action-setup@v4 with: verison: 10\"]},\"341\":{\"h\":\"参考\",\"t\":[\"github-pages\",\"azure-webapps-node.yml\",\"从零开始：VuePress2 + GitHub Pages 搭建你的第一个免费博客网站\"]},\"342\":{\"h\":\"安装\",\"t\":[\"Vuepress - 安装(官网)\"]},\"343\":{\"h\":\"环境\",\"t\":[\"Node.js v18.19.0+\",\"pnpm\",\"提示\",\"npm 设置缓存路径\",\"npm config set prefix \\\"E:\\\\\\\\Program\\\\\\\\Nodejs\\\\\\\\node_global\\\\\\\\\\\" npm config set cache \\\"E:\\\\\\\\Program\\\\\\\\Nodejs\\\\\\\\node_cache\\\\\\\\\\\" npm config list\",\"npm 安装 pnpm\",\"npm install -g pnpm\"]},\"344\":{\"h\":\"创建项目\"},\"345\":{\"h\":\"通过命令行创建(推荐)\",\"t\":[\"你可以通过 create-vuepress 直接创建项目模板。\",\"会自动创建目录，配置，工作流等。\"]},\"346\":{\"h\":\"手动创建\",\"t\":[\"创建并进入一个新目录\",\"mkdir vuepress-starter cd vuepress-starter\",\"初始化项目\",\"git init pnpm init\",\"安装 VuePress\",\"# 安装 vuepress 和 vue pnpm add -D vuepress@next vue # 安装打包工具和主题 pnpm add -D @vuepress/bundler-vite@next @vuepress/theme-default@next\",\"创建 docs 目录和 docs/.vuepress 目录\",\"mkdir docs mkdir docs/.vuepress\",\"创建 VuePress 配置文件 docs/.vuepress/config.js\",\"import { viteBundler } from '@vuepress/bundler-vite' import { defaultTheme } from '@vuepress/theme-default' import { defineUserConfig } from 'vuepress' export default defineUserConfig({ bundler: viteBundler(), theme: defaultTheme(), })\",\"创建你的第一篇文档\",\"echo '# Hello VuePress' > docs/README.md\"]},\"347\":{\"h\":\"目录结构\",\"t\":[\"创建完成后，你项目的目录结构应该是这样的：\",\"├─ docs │ ├─ .vuepress │ │ └─ config.js │ └─ README.md └─ package.json\",\"docs 目录是你放置 Markdown 文件的地方，它同时也会作为 VuePress 的源文件目录。\",\"docs/.vuepress 目录，即源文件目录下的 .vuepress 目录，是放置所有和 VuePress 相关的文件的地方。当前这里只有一个配置文件。默认还会在该目录下生成临时文件、缓存文件和构建输出文件。建议你把它们添加到 .gitignore 文件中。\",\"示例 .gitignore 文件\",\"# VuePress 默认临时文件目录 .vuepress/.temp # VuePress 默认缓存目录 .vuepress/.cache # VuePress 默认构建生成的静态文件目录 .vuepress/dist\"]},\"348\":{\"h\":\"已有项目安装依赖包\",\"t\":[\"在项目已经创建，package.json 已存在，但是 node_modules 不存在的情况下，需要安装 package。\"]},\"349\":{\"h\":\"使用 VuePress\"},\"350\":{\"h\":\"启动开发服务器\",\"t\":[\"你可以在 package.json 中添加一些 scripts ：\",\"{ \\\"scripts\\\": { \\\"docs:dev\\\": \\\"vuepress dev docs\\\", \\\"docs:build\\\": \\\"vuepress build docs\\\" } }\",\"运行 docs:dev 脚本可以启动开发服务器:\",\"pnpm docs:dev\",\"VuePress 会在 http://localhost:8080 启动一个热重载的开发服务器。当你修改你的 Markdown 文件时，浏览器中的内容也会自动更新。\"]},\"351\":{\"h\":\"构建你的网站\",\"t\":[\"运行 docs:build 脚本可以构建你的网站：\",\"pnpm docs:build\",\"在 docs/.vuepress/dist 目录中可以找到构建生成的静态文件。你可以查看部署来了解如何部署你的网站。\"]},\"352\":{\"h\":\"Vuepress\",\"t\":[\"VuePress 官网\",\"VuePress 推荐主题\"]},\"353\":{\"h\":\"主题\"},\"354\":{\"h\":\"官网\",\"t\":[\"ThemeHope 官网\"]},\"355\":{\"h\":\"安装\",\"t\":[\"从头创建项目(在 <dir> 文件夹内新建项目)：\",\"pnpm create vuepress-theme-hope <dir>\",\"在已有项目中使用该主题：\",\"添加 vuepress-theme-hope 依赖。\",\"pnpm add -D vuepress-theme-hope\",\"提示\",\"pnpm add -D 安装开发依赖。\",\"安装完毕后，可以在 package.json 的开发依赖中，找到：\",\"{ \\\"devDependencies\\\": { \\\"vuepress-theme-hope\\\": \\\"2.0.0-rc.76\\\" } }\",\"在 config.js 中引入主题，更改主题设置。\",\"import { defineUserConfig } from \\\"vuepress\\\"; import { hopeTheme } from \\\"vuepress-theme-hope\\\"; export default defineUserConfig({ theme: hopeTheme({ // 此处放置主题配置 }), });\"]},\"356\":{\"h\":\"配置\"},\"357\":{\"h\":\"添加搜索框\",\"t\":[\"安装 @vuepress/plugin-slimsearch\",\"pnpm add -D @vuepress/plugin-slimsearch@next\",\"在主题选项(config.js)中配置 plugins.slimsearch。你可以将 plugins.slimsearch 设置为 true 来直接启用它，\",\"import { hopeTheme } from \\\"vuepress-theme-hope\\\"; export default { theme: hopeTheme({ plugins: { slimsearch: true, }, }), };\",\"或者将其设置为一个对象来自定义插件。\",\"import { hopeTheme } from \\\"vuepress-theme-hope\\\"; export default { theme: hopeTheme({ plugins: { slimsearch: { // ... }, }, }), };\"]},\"358\":{\"h\":\"博客模式\",\"t\":[\"启用博客模式（默认不启用），在主题选项设置中\",\"import { hopeTheme } from \\\"vuepress-theme-hope\\\"; export default { theme: hopeTheme({ plugins: { blog: true, }, }), };\",\"博客首页设置，在相关页面的 frontmatter 中，设置\",\"home: true layout: BlogHome\",\"首页关闭背景和名称\",\"--- hero: false ---\",\"文章列表\",\"如果你不希望该列表包含一些特定的文章，只需在文章的 frontmatter 中将 article 设置为 false，或者你也可以通过主题选项中的 plugins.blog.filter 自定义哪些页面是文章。\",\"如果你希望在文章列表中置顶特定文章，只需在文章的 frontmatter 中将 sticky 设置为 true。\",\"提示\",\"对于置顶文章，你可以将 sticky 设置为 number 来设置它们的顺序。数值大的文章会排列在前面。\",\"文章摘要\",\"如果你想要为文章添加摘要，你可以使用 <!-- more --> 注释来标记它。任何在此注释之前的内容会被视为摘要(推荐)。\",\"同时，如果你想设置的摘要并不是你要在文章开头展示的内容，你也可以在 Frontmatter 中通过 excerpt 选项来设置 HTML 字符串。\",\"主题按照上述规则默认自动生成摘要，如果你只想让主题展示你指定的摘要或在 Frontmatter 中设置的描述，请在主题选项中设置 plugins.blog.excerptLength: 0。\",\"分类与标签\",\"只需要在页面 frontmatter 中设置 category 数组，并设置一个或多个文章所属的分类。\",\"只需要在页面的 frontmatter 中设置 tag，并设置一个或多个文章所属的标签。\",\"--- tag: - HTML - Web ---\",\"星标\",\"你可以通过在 frontmatter 中设置 star 为 true 星标一个文章。\",\"任何星标的文章都会显示在博客主页侧边栏的文章栏目中。可以将 star 设置为 number 来设置它们的顺序。数值大的文章会排列在前面。\"]},\"359\":{\"h\":\"图标\",\"t\":[\"主题支持直接使用 fontawesome 中的图标。需要修改图标资产模式(默认 iconify)：\",\"import { hopeTheme } from \\\"vuepress-theme-hope\\\"; export default { theme: hopeTheme({ plugins: { icon: { // 关键词: \\\"iconify\\\", \\\"fontawesome\\\", \\\"fontawesome-with-brands\\\" assets: \\\"fontawesome\\\", }, }, }), };\",\"在 Markdown 中\",\"使用 home 图标 ::home:: 修改颜色 blue ::home /blue::\",\"实际效果\",\"在配置中，设置图标：\",\"页面: 在 frontmatter 中设置 icon\",\"此图标将用于路径导航、页面标题、导航栏生成项、侧边栏生成项、页面导航等。\",\"导航栏: 在导航栏项中设置 icon 选项\",\"侧边栏: 在侧边栏项中设置 icon 选项\"]},\"360\":{\"h\":\"导航栏\",\"t\":[\"字符串格式\",\"配置导航栏最简单的方式，是依次填入需要展示的页面文件的路径，这样导航栏的文字、图标和链接会自动通过对应文件生成。\",\"import { defineUserConfig } from \\\"vuepress\\\"; import { hopeTheme } from \\\"vuepress-theme-hope\\\"; export default defineUserConfig({ theme: hopeTheme({ navbar: [\\\"/guide/README.md\\\", \\\"/config/README.md\\\", \\\"/faq.md\\\"], }), });\",\"示例 1 - 主题官网文档导航栏：\",\"import { navbar } from \\\"docs-shared\\\"; export const zhNavbarConfig = navbar([ \\\"/zh/get-started/\\\", \\\"/zh/guide/\\\", \\\"/zh/config/\\\", \\\"/zh/faq/\\\", \\\"/zh/demo/\\\", { text: \\\"项目\\\", icon: \\\"circle-info\\\", prefix: \\\"/zh/\\\", children: [ { text: \\\"教程\\\", icon: \\\"signs-post\\\", prefix: \\\"cookbook/\\\", children: [\\\"markdown/\\\", \\\"vuepress/\\\"], }, { text: \\\"项目\\\", children: [\\\"changelog\\\", \\\"contribution\\\"], }, ], }, ]);\",\"提示\",\"我们推荐你省略 .md 扩展名，以 / 结尾的路径会被推断为 /README.md。\",\"对象格式\",\"text: 项目文字\",\"link: 项目链接\",\"icon: 项目图标 (可选)\",\"activeMatch: 项目激活匹配 (可选)，支持正则字符串。\",\"参考\",\"ThemeHope - Navbar\"]},\"361\":{\"h\":\"侧边栏\",\"t\":[\"多个侧边栏：通过 路径前缀: 配置 为不同的页面组显示不同的侧边栏。\",\"目录结构\",\". ├─ README.md ├─ contact.md ├─ about.md ├─ foo/ │ ├─ README.md │ ├─ one.md │ └─ two.md └─ bar/ ├─ README.md ├─ three.md └─ four.md\",\"sidebar: { \\\"/foo/\\\": [ \\\"\\\" \\\"one\\\", \\\"two\\\", ], \\\"/bar/\\\": [ \\\"\\\" , \\\"three\\\", \\\"four\\\", ], // fallback \\\"/\\\": [ \\\"\\\", \\\"contact\\\", \\\"about\\\", ], },\",\"根据文件结构自动生成侧边栏：\",\"sidebar: { \\\"/foo/\\\": \\\"structure\\\", \\\"/bar/\\\": \\\"structure\\\", // fallback \\\"/\\\": [ \\\"\\\", \\\"contact\\\", \\\"about\\\", ], },\",\"示例1 - 主题官网文档侧边栏\",\"import { sidebar } from \\\"docs-shared\\\"; export const zhSidebarConfig = sidebar({ \\\"/zh/\\\": [ \\\"\\\", \\\"get-started/\\\", { text: \\\"指南\\\", icon: \\\"lightbulb\\\", prefix: \\\"guide/\\\", children: [ \\\"intro/\\\", \\\"interface/\\\", \\\"layout/\\\", \\\"markdown/\\\", \\\"feature/\\\", \\\"blog/\\\", \\\"customize/\\\", \\\"advanced/\\\", ], }, { text: \\\"配置\\\", icon: \\\"gears\\\", prefix: \\\"config/\\\", children: [ \\\"intro\\\", \\\"i18n\\\", \\\"theme/\\\", \\\"plugins/\\\", \\\"frontmatter/\\\", \\\"style\\\", ], }, { text: \\\"教程\\\", icon: \\\"signs-post\\\", prefix: \\\"cookbook/\\\", children: [\\\"markdown/\\\", \\\"vuepress/\\\"], }, \\\"demo/\\\", \\\"faq/\\\", \\\"changelog\\\", \\\"contribution\\\", ], \\\"/zh/get-started/\\\": \\\"structure\\\", \\\"/zh/guide/\\\": \\\"structure\\\", \\\"/zh/config/\\\": \\\"structure\\\", \\\"/zh/cookbook/\\\": \\\"structure\\\", \\\"/zh/demo/\\\": \\\"structure\\\", \\\"/zh/faq/\\\": \\\"structure\\\", });\",\"在页面的 Frontmatter 中通过 index 控制是否显示在侧边栏，通过 order 控制顺序。\"]},\"362\":{\"h\":\"页脚\",\"t\":[\"默认是隐藏的，需要开启。通过 footer 设置全局页脚。\",\"提示\",\"也可以在页面 frontmatter 中配置 footer，copyright 和 license 字段，指定特定页面的页脚内容。\",\"import { hopeTheme } from \\\"vuepress-theme-hope\\\" export default hopeTheme({ footer: \\\"Copyright © 2024 Mr.Chen\\\", displayFooter: true });\"]},\"363\":{\"h\":\"页面信息\",\"t\":[\"页面信息默认全局启用，同时支持页面配置。\",\"条目\",\"对应内容\",\"页面 frontmatter 值\",\"主题设置的配置项\",\"\\\"Author\\\"\",\"作者\",\"author\",\"author\",\"\\\"Date\\\"\",\"写作日期\",\"date\",\"N/A\",\"\\\"Original\\\"\",\"是否原创\",\"isOriginal\",\"N/A\",\"\\\"Category\\\"\",\"分类\",\"category\",\"N/A\",\"\\\"Tag\\\"\",\"标签\",\"tag\",\"N/A\",\"\\\"ReadingTime\\\"\",\"预计阅读时间\",\"N/A(自动生成)\",\"N/A\",\"\\\"Word\\\"\",\"字数\",\"N/A(自动生成)\",\"N/A\",\"\\\"PageView\\\"\",\"访问量\",\"pageview (仅 Waline 可用)\",\"plugins.comment.pageview\"]},\"364\":{\"h\":\"页面元数据\",\"t\":[\"主题通过 @vuepress/plugin-git 插件在页面底部显示页面的最后更新时间与贡献者，并提供了“编辑此页”按钮的支持。\",\"主题同时根据侧边栏配置提供上一页和下一页的导航按钮。\",\"编辑此页链接\",\"你可以通过在主题选项中设置如下项目，来自动为每个页面生成编辑此页链接:\",\"docsRepo: 文档仓库地址，默认同主题选项中的 repo\",\"docsDir: 文档在仓库中的目录，默认为根目录\",\"docsBranch: 文档存放的分支，默认为 \\\"main\\\"\",\"显示控制\",\"如果你想要全局禁用这些项目的显示，请在主题选项中，将以下对应项目设置为 false。你也可以在 Frontmatter 中设置这些项目来启用/禁用指定页面:\",\"lastUpdated: 是否显示页面最后更新时间\",\"contributors: 是否显示页面贡献者\",\"editLink: 是否展示编辑此页链接\",\"changelog: 是否显示变更日志\"]},\"365\":{\"h\":\"\",\"t\":[\"title: 当前页面内容标题，默认为 Markdown 文件中的第一个 h1 标签内容。\",\"date: 写作时间，格式: YYYY-MM-DD 或 YYYY-MM-DD hh:mm:ss\",\"description: 页面的描述。会覆盖站点配置中的 description 配置项。\",\"icon: 当前页面图标的 FontClass 或文件路径 (建议填写)。\",\"category: string | string[]，分类。\",\"tag: string | string[]，标签。\",\"article: boolean，是否将该文章添加至文章列表中。\",\"sticky: boolean | number，是否在列表中置顶。当填入数字时，数字越大，排名越靠前。\",\"star: boolean | number，是否标为星标文章。当填入数字时，数字越大，排名越靠前。\"]},\"366\":{\"h\":\"\",\"t\":[\"提示容器，可用字段 importantinfonotetipwarningcaution 自定义标题details 自定义标题\",\":::important 重要提示。 :::\",\"重要\",\"important\",\"相关信息\",\"info\",\"注\",\"note\",\"提示\",\"tip\",\"注意\",\"warning\",\"自定义标题\",\"caution 自定义标题\",\"自定义标题\",\"details 自定义标题\"]},\"367\":{\"h\":\"代码块\",\"t\":[\"默认显示行号，手动禁用行号(:no-line-numbers)，手动启用行号(:line-numbers)\",\"[ALLOC_TEMP_JOB_4_FRAMES(JobTemp)] Initial Block Size 0.5 MB Used Block Count 64 Overflow Count(too large) 0 Overflow Count(full) 50408\",\"行高亮，按照范围 {5-8}，多个单行 {4,7,9}，或者组合使用 {4,7-13,16,23-27,40}\",\"import { defaultTheme } from \\\"@vuepress/theme-default\\\"; import { defineUserConfig } from \\\"vuepress\\\"; export default defineUserConfig({ title: \\\"你好， VuePress\\\", theme: defaultTheme({ logo: \\\"https://vuejs.org/images/logo.png\\\", }), });\",\"代码标题，title\",\".vuepress/config.ts\",\"import { defaultTheme } from \\\"@vuepress/theme-default\\\"; import { defineUserConfig } from \\\"vuepress\\\"; export default defineUserConfig({ title: \\\"你好， VuePress\\\", theme: defaultTheme({ logo: \\\"https://vuejs.org/images/logo.png\\\", }), });\"]},\"368\":{\"h\":\"源码剖析\",\"t\":[\"C# 源码剖析。\"]},\"369\":{\"h\":\"List\",\"t\":[\"源码\",\"private T[] _items; public int Capacity { get { Contract.Ensures(Contract.Result<int>() >= 0); return _items.Length; } set { if (value < _size) { ThrowHelper.ThrowArgumentOutOfRangeException(ExceptionArgument.value, ExceptionResource.ArgumentOutOfRange_SmallCapacity); } Contract.EndContractBlock(); if (value != _items.Length) { if (value > 0) { T[] newItems = new T[value]; if (_size > 0) { Array.Copy(_items, 0, newItems, 0, _size); } _items = newItems; } else { _items = _emptyArray; } } } } public void Add(T item) { if (_size == _items.Length) EnsureCapacity(_size + 1); _items[_size++] = item; _version++; } private void EnsureCapacity(int min) { if (_items.Length < min) { int newCapacity = _items.Length == 0? _defaultCapacity : _items.Length * 2; // Allow the list to grow to maximum possible capacity (~2G elements) before encountering overflow. // Note that this check works even when _items.Length overflowed thanks to the (uint) cast if ((uint)newCapacity > Array.MaxArrayLength) newCapacity = Array.MaxArrayLength; if (newCapacity < min) newCapacity = min; Capacity = newCapacity; } } public void RemoveAt(int index) { if ((uint)index >= (uint)_size) { ThrowHelper.ThrowArgumentOutOfRangeException(); } Contract.EndContractBlock(); _size--; if (index < _size) { Array.Copy(_items, index + 1, _items, index, _size - index); } _items[_size] = default(T); _version++; }\",\"List 内部是用数组实现的，而非链表。\",\"List 扩容是以指数级提升的(4,8,16,32,64)，每次扩容的时候都会使用创建一个新的数组，然后使用 Array.Copy 复制数据。\",\"Remove 的时候也是同理，会使用 Array.Copy 对数组进行覆盖。\",\"List的 Add、Insert、IndexOf、Remove 接口都是没有做过任何形式优化的，使用的都是顺序迭代的方式，如果过于频繁使用，效率就会降低，也会造成不少内存的冗余，使得垃圾回收(GC)时要承担更多的压力。\",\"List 代码是线程不安全的，它并没有对多线程做任何加锁或其他同步操作。由于并发情况下无法判断 _size++ 的执行顺序，因此当我们在多线程间使用 List 时应加上安全机制。最后，List 并不是高效的组件，真实情况是，它比数组的效率还要差，它只是一个兼容性比较强的组件而已，好用但效率并不高。\"]},\"370\":{\"h\":\"第二章：C# 技术要点\"},\"371\":{\"h\":\"Unity3D 中 C# 的底层原理\",\"t\":[\".Net Framework：一个基于 Windows 平台的 .Net 开发框架，无法跨平台。\",\".Net：之前的 .Net Core，一个跨平台、开源的 .NET 实现。\",\".NET Standard：.Net 标准，是一组规范，为了解决 .NET 生态系统在不同实现（如 .NET Framework、.NET Core 等）之间的兼容性问题。\",\"Mono：一个开源、跨平台的 .Net 实现。\",\"IL/CIL：一种与特定硬件平台和操作系统无关的中间表示形式，C# 源代码不会直接编译为本地机器码，而是先编译成中间语言(IL)。\",\"CLR：CLR 公共语言运行时(Common Language Runtime)。\",\"JIT：即时编译，当 .NET 应用程序启动时，公共语言运行时(CLR)会加载程序集，并将其中的 IL 代码实时编译成本地机器码，这个过程就是即时编译（Just-In-Time Compilation）。JIT 编译器会根据目标平台的特性生成优化后的机器码，以提高执行效率。\",\"AOT：提前编译(Ahead-of-Time Compilation)，它是一种与即时编译(JIT)相对的编译方式，在程序运行之前就将代码编译成本地机器码，而非在运行时进行编译。从 .NET 6 开始，也支持对应用进行 AOT 发布，通过 dotnet publish 命令并指定相应的参数，可以生成 AOT 编译的应用。\",\"IL2CPP：将 IL 代码转换为 C++ 代码。修改版本的 Mono 维护成本大，版权受限，运行效率不高。IL2CPP 有自己的虚拟机，但是不执行 JIT 或者翻译任何代码，只用于内存管理。\",\"托管代码：C# 代码生成的 IL 编码我们称为托管代码，由虚拟机的 JIT 编译执行，依赖于 .Net 运行时，其中的对象无须手动释放，它们由 GC 管理。\",\"非托管代码：不依赖于 .Net 运行时，C/C++ 或 C# 中以不安全类型写的代码，虚拟机无法跟踪到这类代码对象，需要手动管理内存分配和释放。\",\"IL2CPP 的工作原理\",\"将 Unity Scripting API 代码编译为常规 .NET DLL（托管程序集）。\",\"应用托管字节码剥离。此步骤可显著减小构建的游戏大小。\",\"将所有托管程序集转换为标准 C++ 代码。\",\"使用本机平台编译器编译生成的 C++ 代码和 IL2CPP 的运行时部分。\",\"将代码链接到可执行文件或 DLL，具体取决于目标平台。\",\"使用 IL2CPP 构建项目时所采取的自动步骤的图表\"]},\"372\":{\"h\":\"List 源码剖析\",\"t\":[\"List 源码剖析\"]},\"373\":{\"h\":\"Dictionary 源码剖析\"},\"374\":{\"h\":\"参考\",\"t\":[\"Unity 主程手记记录摘要\"]},\"375\":{\"h\":\"Unity3D 高级编程：主程手记\"},\"376\":{\"h\":\"第三章：数据表与程序\"},\"377\":{\"h\":\"多语言\",\"t\":[\"文字数据从一开始就应该放在表里。多语言表设计，KEY-VALUE，选择 int-string 还是 string-string。\",\"string str = LanguageMgr.GetTextString(12); string str = LanguageMgr.GetTextString(\\\"FightWin\\\");\",\"对于数字做 KEY，随着代码的增多，文字量的增多，对应数字 Key 值也增多，我们更难识别这句话代表什么，调试起来会很麻烦。\",\"对于字符串做 KEY，用一个字符串去获取另一个字符串，需要双份内存。而且用字符串查找字符串的效率也不高。\",\"采用与数据配置表列的对齐方式一样的办法，我们可以通过文字表格自动生成一个类，用变量的形式去记录文字的 ID，通过文字表生成数据表，同时生成数据定义类，使用变量去代表数字。\",\"class LanguageKey{ public const BattleSceneFightAllianceWin = 1; public const BattleSceneFightAllianceLose = 2; } // 获取文本 string str = LanguageMgr.GetTextString(LanguageKey.BattleSceneFightAllianceWin);\",\"文字与变量的数字依次对应，既解决了用数字做 Key 值不够形象的问题，又解决了字符串做 Key 值太多冗余的问题。\",\"多国语言，多传入一个参数\",\"string str = LanguageMgr.GetTextString(LanguageKey.BattleSceneFightAllianceWin, Language,Chinese);\",\"提示\",\"对于多语言，每种语言一张表。或者每一列表示一种语言。如果把所有数据表的数据都集中在一个数据文件里，那么游戏在加载数据表时，就需要在一瞬间集中处理，导致CPU阻塞时间过长，发生游戏卡顿现象，这样做并不合理。\",\"参考导表工具\",\"Luban\"]},\"378\":{\"h\":\"第四章：用户界面\",\"t\":[\"UGUI FairyGUI\"]},\"379\":{\"h\":\"UGUI 系统的原理及其组件使用\",\"t\":[\"UGUI 是在 3D 网格下建立起来的 UI 系统，它的每个可显示的元素都是通过3D模型网格的形式构建起来的。当UI系统被实例化时，UGUI系统首先要做的就是构建网格。\",\"Unity3D 在制作一个图元，或者一个按钮，或者一个背景时，都会先构建一个方形网格，再将图片放入网格中。可以理解为构建了一个3D模型，用一个网格绑定一个材质球，材质球里存放要显示的图片。\",\"UGUI 将一部分相同类型的图片集合起来合成一张图，然后将拥有相同图片、相同着色器的材质球指向同一个材质球，并且把分散开的模型网格合并起来，这样就生成几个大网格和几个不同图集的材质球，以及少许整张的图集，节省了很多材质球、图片、网格的渲染。这就是我们常常在UI系统制作中提到的图集概念，它把很多张图片放置在一张图集上，使得大量的图片和材质球不需要重复绘制，只要改变模型顶点上的UV和颜色即可。\",\"UGUI 只把相同层级的元素，以及相同层级上的拥有相同材质球参数的进行合并处理。合并成一个网格，就相当于是一个静止的模型，如果移动了任何元素，或者销毁了任何元素，或者改变了任何元素的参数，原来合并的网格就不符合新的要求了，于是UGUI系统就会销毁这个网格，并重新构建一个。\",\"UGUI系统在制作完成后，性能优劣差距很多时候都会出现在这里，我们要想方设法合并更多的元素，减少重构网格的次数，以达到更少的性能开销目的。\",\"Canvas\",\"Canvas 组件做的事情就是合并 Canvas 上的元素。合并的规则为，在同一个Canvas里，将相同层级、相同材质球的元素进行合并，从而减少 drawcall。\",\"提示\",\"相同层级并不是指 Gameobject 上的节点层级，而是覆盖层级。Canvas 里如果两个元素重叠，则可以认为它们是上下层关系。同一层级上的 UI 元素是不会重叠的。\",\"Image/RawImage\",\"Image组件仅能展示图集中的图元，但展示的图元可以参与合并，而RawImage组件能展示单张图片，但无法参与合并。\",\"Mask/RectMask2D\",\"两个组件主要是在剔除的方法上有所区别，其中Mask组件使用顶点重构的方式剔除矩形区域外的部分，而RectMask2D组件则采用着色器的剔除方式，每个元素都有自己的材质球实例和实例参数。\"]},\"380\":{\"h\":\"第一章：软件架构\"},\"381\":{\"h\":\"架构的好坏\",\"t\":[\"架构的好坏可从以下几个方面进行评估：\",\"承载力：一个架构能承载多少个逻辑系统，程序员彼此工作的模块耦合度是否依然能保持原来的设计要求，能够承载多少个程序员共同开发，共同开发的效率又如何。对于服务器来说，当前架构能承受多少人同时访问，能承载的日均访问量是多少。对于客户端来说，能显示多少UI元素，可渲染多少模型（包括同屏渲染和非同屏渲染）。\",\"可扩展性：架构能适应不同类型的需求，可添加不同类型的系统、不同功能的子系统。可扩展性的关键在于，是否能在添加新的子系统后不影响或者尽可能少影响其他子系统的运作。\",\"易用性：易用性决定了架构的整体开发效率，程序员容易上手，子系统容易对接，开发效率自然就高。精力和注意力都可以集中在子系统的设计和编码上，这才能让各系统各尽其职，将效率发挥到极致。\",\"可伸缩性：从客户端的角度，伸缩力体现在是否既能适应大型项目上，如上百人协同开发一个复杂系统，也能适应小项目上，如1～3人小团队的快速开发环境，即小成本小作品的快速迭代。\",\"容错性以及错误的感知力：从客户端角度，容错性包括当程序发生错误时，是否同样能够继续保持运行而不崩溃；当这个页面程序出错时，是否依然能够运行其他程序而不闪退或崩溃。同时所有出现的程序错误，都能及时地记录下来并发送到后台，存储为错误日志，便于开发人员及时得到详细的错误信息，能够根据错误信息快速找出问题所在。\"]},\"382\":{\"h\":\"架构中的思维方式\",\"t\":[\"架构设计中最重要的能力是什么，我会毫不犹豫回答是抽象能力。\",\"分层思维：构建一套复杂系统时，我们把整个系统划分成若干个层次，每一层专注解决某个领域的问题，并向上提供服务。这样的抽象做法，让复杂的事务变得更加清晰、有序。\",\"分治思维：对于一个无法一次解决的大问题，我们先把大问题分解成若干个子问题，如果子问题还无法解决，则继续分解成子子问题，直到可以直接解决为止，这就是分解(divide)的过程；然后将子子问题的解组合成子问题的解，再将子问题的解组合成原问题的解，这就是组合(combine)的过程。\",\"演化思维：在软件系统的整个生命周期中，前期的设计和开发大致占三分，在后面的七分时间里，架构师需要根据用户的反馈对架构进行不断的调整。借助用户的反馈和进化的力量，推动架构的持续演进，这就是演化式架构思维。\"]},\"383\":{\"h\":\"Unity3D 分层设计\",\"t\":[\"架构分层\",\"分层后再分治\",\"网络层设计\",\"不同游戏类型的需要的模块和层级不同。\",\"在游戏项目中，最常用的是数据表、网络层、UI层、常用库这几个模块。\",\"如果项目是单机的策略类游戏，可能就没有很多角色上的东西，而多了很多2D动画行为控制上的需求。这时在进行层级划分时，就可以把注意力重点放在2D动画行为控制、UI框架、数据管理、资源管理及AI上。\",\"如果项目是以3D人物角色为主的网络游戏，则应有地形地图、角色行为控制等内容，此外，还需要一套角色技能、特效、动画编辑工具等。\",\"网络游戏项目前期我们会对网络这块内容进行决策，确定是TCP-Socket、UDP还是Web形式的HTTP。\",\"3D MMRPG的难度主要集中在了解角色技能动画、AI、地图、物理模拟上。\",\"对各个模块进行分解拆分。\",\"数据表：EXL导为二进制文件、JSON或其他格式，读取接口和解析接口的定义。\",\"UI层：确定是使用NGUI还是UGUI，并针对界面基类、界面管理、输入事件封装进行选择，且自定义通用组件基类和各类通用组件。\",\"外部资源管理：确定是否使用AssetBundle，是否对AssetBundle资源进行分类，是否依赖AssetBundle资源间的关系，是否加载与释放AssetBundle的管理，是否加密AssetBundle。\",\"AI层：确定是使用状态机还是行为树或者其他，以及状态机或行为树接口的实现、AI可视化工具、AI扩展接口。\",\"地形地图：包括地图是2D的还是3D的，场景编辑器的结构是否需要网络合并，场景内的大小物件区别对待，大地形在游戏里如何显示，是否要划分区块。\",\"寻路与网格：确定是使用A星算法还是跳点算法或者其他算法；是使用网格栅格还是三角网格；是使用长距离寻路的解决方案还是地图数据管理。\",\"常用库：包括时间函数、数学函数、数字变量加密封装、坐标转换函数、Debug调试工具、各大逻辑系统通用工具等。\",\"角色行为控制：包括人物移动处理方案、摄像机的碰撞检测、动画特效编辑器、技能编辑器、行为流的建立。\",\"2D动画控制：包括动画组件封装、2D动画的制作流程、2D图合并为图集。\"]},\"384\":{\"h\":\"内存\",\"t\":[\"Unity 中的内存\",\"Unity 中的内存管理\",\"Unity 中的垃圾回收\",\"浅谈 Unity 内存管理 - 高川\",\"揭秘 Unity 的黑盒世界 - 底层原理浅谈之内存篇 - 高川\"]},\"385\":{\"h\":\"揭秘 Unity 的黑盒世界 - 底层原理浅谈之内存篇\",\"t\":[\"揭秘 Unity 的黑盒世界 - 底层原理浅谈 - 内存\",\"https://mp.weixin.qq.com/s/IUK_USRmXInnY1nr2_MRcw\"]},\"386\":{\"h\":\"浅谈 Unity 内存管理(2019) - 高川\",\"t\":[\"浅谈 Unity 内存管理 - Bilibili\"]},\"387\":{\"h\":\"1. 什么是内存\",\"t\":[\"内存分为物理内存、虚拟内存。\",\"关于物理内存\",\"CPU 访问内存是一个慢速过程。\",\"CPU 在需要访问内存时，先是访问自己的缓存(L1Cache、L2Cache……)，当全部 Miss 之后，CPU 会去主内存拿一段完整的指令到 CPU 的缓存中。因此，我们需要尽可能保证 CPU 的指令是连续的，防止 CPU 过多地与主内存之间的内存交换产生 IO。\",\"Unity 为了处理上述问题，减少 Cache Miss ，推出了 ECS 和 DOTS，把分散的内存数据变成整块、连续的数据。\",\"关于虚拟内存\",\"电脑在物理内存不够的时候，操作系统会把一些不用的数据(DeadMemory)交换到硬盘上，称之为内存交换。\",\"但是手机是不做内存交换的，一是因为移动设备的硬盘 IO 速度比 PC 慢很多，二是因为移动设备的硬盘可擦写次数更少；因此手机如果做内存交换一是慢，而是减少设备寿命看，所以 Android 机上没有做内存交换。IOS 可以把不活跃的内存进行压缩，使得实际可用的内存更多，而安卓没有这个能力。\",\"提示\",\"在 Android 上，存储器(Storage)不像在其他 Linux 实现上那样用于交换空间，因为频繁写入可能导致这种内存出现损耗，并缩短存储媒介的使用寿命。但是在 RAM 上有一小块 zRAM，zRAM 是用于交换空间的 RAM 分区。所有数据在放入 zRAM 时都会进行压缩，然后在从 zRAM 向外复制时进行解压缩。这部分 RAM 会随着页面进出 zRAM 而增大或缩小。设备制造商可以设置 zRAM 大小上限。参考文章 - Android 进程间的内存分配。\",\"关于移动设备和 PC\",\"移动设备(手机)与 PC 的区别在于，手机没有独立显卡、独立显存。手机上无论是 CPU 还是 GPU 都是共用一个缓存，而且手机的内存更小、缓存级数更少、大小更小。台式机的三级缓存大约 8~16M，而手机只有 2M。\",\"综上，手机上的内存，不论从哪个角度看，都是比 PC 要小很多的。所以，手机上更容易出现内存不够的问题。\"]},\"388\":{\"h\":\"2. Android 内存管理\",\"t\":[\"Android 是基于 Linux 开发的，所以 Android 的内存管理和 Linux 很相似。\",\"Android 的内存管理基本单位是 Page(页)，一般是 4k 一个 Page。内存的回收和分配都是以 Page 为单位进行操作，也就是 4k。Android 内存分用户态和内核态两个部分，内核态的内存是用户严格不能访问的。\",\"低内存终止守护程序(Low Memory Killer(LMK))\",\"Android 有两种处理内存不足情况的主要机制：内核交换守护程序和低内存终止守护程序。\",\"LMK 使用一个名为 oom_adj_score 的“内存不足”分值来确定正在运行的进程的优先级，以此决定要终止的进程。最高得分的进程最先被终止。后台应用最先被终止，系统进程最后被终止。下表列出了从高到低的 LMK 评分类别。评分最高的类别，即第一行中的项目将最先被终止：\",\"参考\",\"低内存终止守护程序(Low Memory Killer(LMK)) - AndroidDevelopers\",\"低内存终止守护程序 - AndroidSource\",\"内存指标\",\"常驻内存大小(Resident Set Size(Rss))：应用使用的共享和非共享页面(Page)的数量。\",\"你当前的 APP 所应用到的所有内存。除了你自己的 APP 所使用的内存之外，你调用的各种服务、共用库所产生的内存都会统计到 RSS 之中。\",\"按比例分摊的内存大小(Proportional Set Size(PSS))：应用使用的非共享页面的数量加上共享页面的均匀分摊数量(例如，如果三个进程共享 3 MB，每个进程的 PSS 为 1 MB)。\",\"与 RSS 不同的是，PSS 会把公共库所使用的内存平摊到所有调用这个库的 APP 上。(可能你自己的应用没有申请很多内存，但是你的调用的某个公共库已经有了很大的内存分配，平摊下来就会导致你自己的 APP 的 PSS 虚高。)\",\"独占内存大小(Unique Set Size(USS))：应用使用的非共享页面数量(不包括共享页面)\",\"只有此 APP 所使用的内存，剔除掉公共库的内存分配。我们在实际工作中更多要做的是对 USS 的优化，有时也会注意一下 PSS。\",\"参考\",\"[Unity 中的内存管理之 Android 内存管理 - UnityLearn](./../Optimization/Unity%20 中的内存管理.md#android-内存管理-android-memory-management)\"]},\"389\":{\"h\":\"3. Unity 内存\",\"t\":[\"Unity 是一个 C++ 引擎，底层代码完全由 C++ 写成，通过 Wrapper 提供给用户 API。用户代码会转换为 CPP 代码(IL2CPP)。VM 仍然存在(IL2CPP VM)，VM 主要为了跨平台。\",\"Unity 内存分为 Native Memory 和 Managed Memory (托管内存)。值得注意的是，在 Editor 下和在 Runtime 下 Unity 的内存分配是完全不同的。不但分配内存的大小会有不同，统计看到的内存大小不同，甚至是内存分配时机和方式也不同。\",\"比如一个 AssetBundle，在编辑器下是你一打开 Unity 就开始加载进内存，而在 Runtime 下则是你使用时才会加载，如果不读取，是不会进内存的。(Unity2019 之后做了一些 Asset 导入优化，不使用的资源就不会导入)。因为 Editor 不注重 Runtime 的表现，更注重编辑器中编辑时的流畅。\",\"但如果游戏庞大到几十个 G，如果第一次打开项目，会消耗很多时间，有的大的会几天，甚至到一周。\",\"Unity 的内存还可以分为引擎管理的内存和用户管理器的内存两类。引擎管理的内存一般开发者是访问不到的，而用户管理的内存才是使用者需要关系和优先考虑的。\",\"还有一个 Unity 监测不到的内存：用户分配的 Native 内存是 Unity 的 Profile 工具监测不到。例如:\",\"自己写的 Native 插件(C++ 插件)， Unity 无法分析已经编译过的 C++ 是如何去分配和使用内存的。\",\"Lua 完全由自己管理内存，Unity 无法统计到内部的使用情况。\"]},\"390\":{\"h\":\"4. Native 内存\",\"t\":[\"Unity 重载了所有分配内存的操作符(C++ alloc、new)，使用这些重载的时候，会需要一个额外的 Memory Label (Profiler-shaderlab-object-memory-detail-snapshot，里面的名字就是 label：指当前内存要分配到哪一个类型池里面)。\",\"使用重载过的分配符去分配内存时，Allocator 会根据你的 memory label 分配到不同 Allocator 池里面，每个 Allocator 池 单独做自己的跟踪。因此当我们去 Runtime get memory label 下面的池时就可以问 Allocator，里面有多少东西 多少兆。\",\"Allocator 在 NewAsRoot (Memory “island”(没听清)) 中生成。在这个 Memory Root 下面会有很多子内存：shader：当我们加载一个 Shader 进内存的时候，会生成一个 Shader 的 root。Shader 底下有很多数据：sub shader、Pass 等会作为 memory “island” (root) 的成员去依次分配。因此当我们最后统计 Runtime 的时候，我们会统计 Root，而不会统计成员，因为太多了没法统计。\",\"因为是 C++ 的，因此当我们 delete、free 一个内存的时候会立刻返回内存给系统，与托管内存堆不一样。\"]},\"391\":{\"h\":\"Scene\",\"t\":[\"Unity 是一个 C++ 引擎，所有实体最终都会反映在 C++ 上，而不是托管堆里面。因此当我们实例化一个 GameObject 的时候，在 Unity 底层会构建一个或多个 Object 来存储这个 GameObject 的信息，例如很多 Components。因此当 Scene 有过多 GameObject 的时候，Native 内存就会显著上升。\",\"当我们看 Profiler，发现 Native 内存大量上升的时候，应先去检查 Scene。\"]},\"392\":{\"h\":\"Audio\",\"t\":[\"DSP Buffer ：相当于音频的缓冲。\",\"当一个声音要播放的时候，它需要向 CPU 去发送指令——我要播放声音。但如果声音的数据量非常小，就会造成频繁地向 CPU 发送指令，会造成 I\\\\O。\",\"当 Unity 用到 FMOD 声音引擎时(Unity 底层也用到 FMOD)，会有一个 Buffer，当 Buffer 填充满了，才会向 CPU 发送“我要播放声音”的指令。\",\"DSP buffer 会导致两种问题： \",\"如果(设置的) buffer 过大，会导致声音的延迟。要填充满 buffer 是要很多声音数据的，但声音数据又没这么大，因此会导致一定的声音延迟。\",\"如果 DSP buffer 太小，会导致 CPU 负担上升，满了就发，消耗增加。\",\"Foce to Mono : 强制单声道\",\"当两个声道完全相同时可以 Force To Mono，可以节省一半的内存。\",\"在导入声音的时候有一个设置，很多音效师为了声音质量，会把声音设为双声道。但 95% 的声音，左右声道放的是完全一样的数据。这导致了 1M 的声音会变成 2M，体现在包体里和内存里。因此一般对于声音不是很敏感的游戏，会建议改成 Force to mono，强制单声道。\",\"Format\",\"例如 IOS 对 MP3 有硬解支持的，所以 MP3 的解析会快很多(Android 没有)。\",\"Compressiont Format\",\"声音文件在内存的存在形态(解压的、压缩的等)。\"]},\"393\":{\"h\":\"Code Size\",\"t\":[\"代码也是需要加载进内存的，使用时要注意减少模板泛型的滥用。因为模板泛型在编译成 C++时，会把同样的代码排列组合都编译一边，导致 Code Size 大幅上升。 可以参考 Memory Management in Unity：https://learn.unity.com/tutorial/memory-management-in-unity 3.IL2CPP & Mono 的 Generic Sharing 部分。\",\"参考\",\"[Unity 中的内存管理中的泛型共享部分](./../Optimization/Unity%20 中的内存管理.md#泛型共享-generic-sharing)\"]},\"394\":{\"h\":\"AssetBundle\",\"t\":[\"TypeTree\",\"Unity 的每一种类型都有很多数据结构的改变，为了对此做兼容，Unity 会在生成数据类型序列化的时候，顺便会生成 TypeTree：当前我这一个版本里用到了哪些变量，对应的数据类型是什么。在反序列化的时候，会根据 TypeTree 来进行反序列化。\",\"如果上一个版本的类型在这个版本中没有，TypeTree 就没有它，因此不会碰到它。\",\"如果要用一个新的类型，但在这个版本中不存在，会用一个默认值来序列化，从而保证了不会在不同的版本序列化中出错，这个就是 TypeTree 的作用。\",\"Build AssetBundle 中有开关可以关掉 TypeTree。当你确认当前 AssetBundle 的使用和 Build Unity 的版本一模一样，这时候可以把 TypeTree 关掉。例如如果用同样的 Unity 打出来的 AssetBundle 和 APP，TypeTree 则完全可以关掉。\",\"TypeTree 好处： \",\"内存减少。TypeTree 本身是数据，也要占内存。\",\"包大小会减少，因为 TypeTree 会序列化到 AssetBundle 包中，以便读取。\",\"Build 和运行时会变快。源代码中可以看到，因为每一次 Serialize 东西的时候，如果发现需要 Serialize TypeTree，则会 Serialize 两次： \",\"第一次先把 TypeTree Serialize 出来\",\"第二次把实际的东西 Serialize 出来\",\"反序列化也会做同样的事情，1. TypeTree 反序列化，2. 实际的东西反序列化。\",\"当你确定你当前的 AssetBundle 和你的 Unity 是同一个版本的时候，就可以关掉 TypeTree。关掉 TypeTree 之后可以减少内存大小、包大小、加快运行速度。\",\"压缩方式：使用 Lz4，而不是 Lzma\",\"Lz4 (https://docs.unity3d.com/Documentation/ScriptReference/BuildCompression.LZ4.html) \",\"LZ4HC \\\"Chunk Based\\\" Compression. 非常快\",\"和 Lzma 相比，平均压缩比率差 30%。也就是说会导致包体大一点，但是(作者说)速度能快 10 倍以上。\",\"Lzma (https://docs.unity3d.com/2019.3/Documentation/ScriptReference/BuildCompression.LZMA.html) \",\"Lzma 基本上就不要用了，因为解压和读取速度上都会比较慢。还会占大量内存。 \",\"因为是 Steam based 而不是 Chunk Based 的，因此需要一次全解压\",\"Chunk Based 可以一块一块解压，如果发现一个文件在第 5-10 块，那么 LZ4 会依次将 第 5 6 7 8 9 10 块分别解压出来，每次(chunk 的)解压会重用之前的内存，来减少内存的峰值。\",\"中国版 Unity 中有基于 LZ4 的 Addressables( AssetBundle) 加密，只支持 LZ4。https://mp.weixin.qq.com/s/s9lQyunpRPJZnnaLSb9qOQ\",\"Size & Count\",\"AssetBundle 包打多大是很玄学的问题，但每一个 Asset 打一个 Bundle 这样不太好。\",\"有一种减图片大小的方式，把 png 的头都剔除出来。因为头的色板是通用的，而数据不通用。AssetBundle 也一样，一部分是它的头，一部分是实际打包的部分。因此如果每个 Asset 都打 Bundle 会导致 AssetBundle 的头比数据还要大。\",\"官方的建议是每个 AssetBundle 包大概 1M~2M 左右大小，考虑的是网络带宽。但现在 5G 的时候，可以考虑适当把包体加大。还是要看实际用户的情况。\"]},\"395\":{\"h\":\"Resources 文件夹\",\"t\":[\"不要使用，除非在 debug 的时候\",\"Resource 和 AssetBundle 一样，也有头来索引。Resource 在打进包的时候会做一个红黑树，来帮助 Resource 来检索资源在什么位置，\",\"如果 Resource 非常大，那么红黑树也会非常大。\",\"红黑树是不可卸载的。在刚开始游戏的时候就会加载进内存中，会持续对游戏造成内存压力。\",\"会极大拖慢游戏的启动时间。因为红黑树没加载完，游戏不能启动。\"]},\"396\":{\"h\":\"Texture\",\"t\":[\"Upload Buffer：和声音的 DSP Buffer 很像，设置填充满多大之后再推向 CPU/GPU。\",\"Read/Write : 不使用就关闭它。\",\"Texture 没必要就不要开 read and write。正常 Texture 读进内存，解析完了，放到 upload buffer 里后，内存里的就会 delete 掉。\",\"但如果检测到你开了 r/w 就不会 delete 了，就会在显存和内存中各一份。\",\"Mip Map : 像 UI 这些不需要的就关闭它，可以省大量内存。。\"]},\"397\":{\"h\":\"Mesh\",\"t\":[\"Read/Write :同上 Texture\",\"Compression:虽然写的是压缩，但实际效果并不一定有用，有些版本 Compression 开了不如不开，内存占用可能更严重，具体需要自己试。\"]},\"398\":{\"h\":\"5. Managed(托管)内存\"},\"399\":{\"h\":\"VM 内存池\",\"t\":[\"Mono 虚拟机的内存池，实际上 VM 是会返回给操作系统。返还条件是什么？\",\"GC 不会把内存直接返还给系统\",\"内存也是以 Block 来管理的。当一个 Block 连续六次 GC 没有被访问到，这块内存才会被返还到系统。(mono runtime 基本看不到，IL2cpp runtime 可能会看到多一点)\",\"不会频繁地分配内存，而是一次分配一大块。\"]},\"400\":{\"h\":\"GC 机制\",\"t\":[\"Unity 的 GC 机制是 Boehm 内存回收，是不分代的，非压缩式的。(之所以是使用 Boehm 是因为 Unity 和 Mono 的一些历史原因，以及目前 Unity 主要精力放在 IL2CPP 上面)\",\"GC 机制考量\",\"Throughput(回收能力)：一次回收，会回收多少内存\",\"Pause times(暂停时长)：进行回收的时候，对主线程的影响有多大\",\"Fragmentation(碎片化)：回收内存后，会对整体回收内存池的贡献有多少\",\"Mutator overhead(额外消耗)：回收本身有 overhead，要做很多统计、标记的工作\",\"Scalability(可扩展性)：扩展到多核、多线程会不会有 bug\",\"Protability(可移植性)：不同平台是否可以使用\"]},\"401\":{\"h\":\"BOEHM\",\"t\":[\"Non-generational(不分代的) \",\"分代是指：大块内存、小内存、超小内存是分在不同内存区域来进行管理的。还有长久内存，当有一个内存很久没动的时候会移到长久内存区域中，从而省出内存给更频繁分配的内存。\",\"Non-compacting(非压缩式) \",\"当有内存被回收的时候，如果会压缩内存会把上图空的地方重新排布。Unity 的 BOEHM 不会！它是非压缩式的。空着就空着，下次要用了再填进去。\",\"历史原因：Unity 和 Mono 合作上，Mono 并不是一直开源免费的，因此 Unity 选择不升级 Mono，与实际 Mono 版本有差距。\",\"下一代 GC \",\"Incremental GC(渐进式 GC) \",\"如果我们要进行一次 GC，主线程被迫要停下来，遍历所有 GC Memory “island”(没听清)，来决定哪些 GC 可以回收。\",\"Incremental GC 把暂停主线程的事分帧做了。一点一点分析，主线程不会有峰值。总体 GC 时间不变，但会改善 GC 对主线程的卡顿影响。\",\"SGen 或者升级 Boehm？ \",\"SGen 是分代的，能避免内存碎片化问题，调动策略，速度较快\",\"IL2CPP \",\"现在 IL2CPP 的 GC 机制是 Unity 自己重新写的，是升级版的 Boehm\"]},\"402\":{\"h\":\"Memory fragmentation 内存碎片化\",\"t\":[\"为了防止内存碎片化(Memory Fragmentation)，在做加载的时候，应先加载大内存的资源，再加载小内存的资源(因为 Bohem 没有内存压缩)，这样可以保证最大限度地利用内存。\",\"为什么内存下降了，但总体内存池还是上升了？ \",\"因为内存太大了，内存池没地方放它，虽然有很多内存可用。(内存已被严重碎片化)\",\"当开发者大量加载小内存，使用释放*N，例如配置表、巨大数组，GC 会涨一大截。\",\"建议先操作大内存，再操作小内存，以保证内存以最大效率被重复利用。\"]},\"403\":{\"h\":\"Zombie Memory(僵尸内存)\",\"t\":[\"内存泄露说法是不对的，内存只是没有任何人能够管理到，但实际上内存没有被泄露，一直在内存池中，被 zombie 掉了，这种叫 Zombie 内存。\",\"无用内容 \",\"Coding 时候或者团队配合的时候有问题，加载了一个东西进来，结果从头到尾只用了一次。\",\"有些开发者写了队列调度策略，但是策略写的不好，导致一些他觉得会被释放的东西，没有被释放掉。\",\"找是否有活跃度实际上并不高的内存。\",\"没有释放\",\"通过代码管理和性能工具分析，查看各个资源的引用\"]},\"404\":{\"h\":\"最佳实践\",\"t\":[\"Don't Null it, but Destroy it(显式用 Destory，别用 Null)\",\"Class VS Struct\",\"Pool In Pool(池中池) \",\"VM 本身有内存池，但建议开发者对高频使用的小部件，自己建一个内存池。例如 UI、粒子系统、子弹等。\",\"Closures and anonymous methods(闭包和匿名函数) \",\"如果看 IL，所有匿名函数和闭包会 new 成一个 class，因此所有变量和要 new 的东西都是要占内存的。这样会导致协程。 \",\"有些开发者会在游戏开始启用一个协程，直到游戏结束才释放，这是错误的。\",\"只要协程不被释放掉，所有内存都会在内存里。\",\"Coroutines(协程) \",\"可看做闭包和匿名函数的一个特例，只要不被释放，里面所有引用的所有内存都会存在。\",\"最佳实践：用的时候生产一个，不用的时候 Destroy 掉。\",\"Configurations(配置表) \",\"不要把整个配置表都扔进去，是否能通过啥来切分下配置表。\",\"Singleton：慎用，游戏一开始到游戏死掉，一直在内存中。\",\"内存及性能工具 \",\"中国增强版功能介绍(之)性能测试工具 UPR - BiliBili\",\"参考\",\"Boehm-Demers-Weiser 垃圾回收器\"]},\"405\":{\"h\":\"\",\"t\":[\"404 Not Found\"]},\"406\":{\"h\":\"Books\"}},\"dirtCount\":0,\"index\":[[\"慎用\",{\"1\":{\"404\":1}}],[\"别用\",{\"1\":{\"404\":1}}],[\"僵尸内存\",{\"0\":{\"403\":1}}],[\"巨大数组\",{\"1\":{\"402\":1}}],[\"巨大的\",{\"1\":{\"58\":1}}],[\"渐进式\",{\"1\":{\"401\":1}}],[\"历史原因\",{\"1\":{\"401\":1}}],[\"历史版本\",{\"1\":{\"19\":1}}],[\"额外消耗\",{\"1\":{\"400\":1}}],[\"额外函数调用的成本大大超过了使用非紧凑内存结构所带来的成本\",{\"1\":{\"265\":1}}],[\"碎片化\",{\"1\":{\"400\":1}}],[\"碎石\",{\"1\":{\"216\":1}}],[\"返还条件是什么\",{\"1\":{\"399\":1}}],[\"返回零长度数组的预分配静态实例比重复创建空数组更有效\",{\"1\":{\"287\":1}}],[\"返回数组的\",{\"0\":{\"285\":1}}],[\"返回数组的函数\",{\"0\":{\"281\":1}}],[\"返回的是一个\",{\"1\":{\"60\":1}}],[\"返回\",{\"1\":{\"44\":1}}],[\"了\",{\"1\":{\"396\":1}}],[\"了解更多\",{\"1\":{\"336\":1}}],[\"了解更多可能的\",{\"1\":{\"246\":1}}],[\"了解如何通过一种方法轻松添加必要的额外处理以便在\",{\"1\":{\"254\":1}}],[\"了解如何加载和使用后备字体对于在使用\",{\"1\":{\"169\":1}}],[\"了解资源如何占用托管内存至关重要\",{\"1\":{\"189\":1}}],[\"了解它会很有用\",{\"1\":{\"96\":1}}],[\"了解\",{\"0\":{\"245\":1},\"1\":{\"90\":1,\"96\":1,\"124\":1}}],[\"了解你可能面对的\",{\"1\":{\"61\":1}}],[\"掉了\",{\"1\":{\"403\":1}}],[\"掉\",{\"1\":{\"396\":1,\"404\":1}}],[\"掉帧\",{\"0\":{\"41\":1}}],[\"速度较快\",{\"1\":{\"401\":1}}],[\"速度能快\",{\"1\":{\"394\":1}}],[\"速度比\",{\"1\":{\"387\":1}}],[\"出来\",{\"1\":{\"394\":2}}],[\"出现在此着色器通道中的任何问题可能是由于填充率问题\",{\"1\":{\"151\":1}}],[\"好处\",{\"1\":{\"394\":1}}],[\"好用但效率并不高\",{\"1\":{\"369\":1}}],[\"顺便会生成\",{\"1\":{\"394\":1}}],[\"顺序\",{\"0\":{\"162\":1},\"1\":{\"79\":1,\"149\":1}}],[\"体现在包体里和内存里\",{\"1\":{\"392\":1}}],[\"体验中\",{\"1\":{\"218\":1}}],[\"满了就发\",{\"1\":{\"392\":1}}],[\"负担上升\",{\"1\":{\"392\":1}}],[\"负责将其内的几何体组合成批处理\",{\"1\":{\"141\":1}}],[\"负责数据\",{\"1\":{\"85\":1}}],[\"负责显示\",{\"1\":{\"85\":1}}],[\"负责维护玩家当前的任务列表\",{\"1\":{\"56\":1}}],[\"负责维护一个\",{\"1\":{\"56\":1}}],[\"负责执行这些\",{\"1\":{\"47\":1}}],[\"负责更新所有带\",{\"1\":{\"46\":1}}],[\"负责处理具有特定组件组合的\",{\"1\":{\"46\":1}}],[\"负责业务逻辑和数据绑定\",{\"1\":{\"85\":1}}],[\"负责业务逻辑\",{\"1\":{\"44\":1}}],[\"填充满了\",{\"1\":{\"392\":1}}],[\"填充率的节省可能是相当大的\",{\"1\":{\"159\":1}}],[\"填充率\",{\"0\":{\"153\":1,\"215\":1},\"1\":{\"139\":1,\"152\":1}}],[\"去发送指令\",{\"1\":{\"392\":1}}],[\"底下有很多数据\",{\"1\":{\"390\":1}}],[\"底层也用到\",{\"1\":{\"392\":1}}],[\"底层会构建一个或多个\",{\"1\":{\"391\":1}}],[\"底层代码完全由\",{\"1\":{\"389\":1}}],[\"底层音频系统\",{\"1\":{\"201\":1}}],[\"底层算法和代码\",{\"1\":{\"138\":1,\"139\":1}}],[\"底层渲染循环可以使材质数据在\",{\"1\":{\"127\":1}}],[\"底层引擎原理以及技术领导力\",{\"1\":{\"73\":1}}],[\"底层\",{\"1\":{\"66\":1}}],[\"底层的理解\",{\"1\":{\"60\":1}}],[\"底层的实现\",{\"1\":{\"60\":1}}],[\"底层原理浅谈\",{\"1\":{\"385\":1}}],[\"底层原理浅谈之内存篇\",{\"0\":{\"385\":1},\"1\":{\"384\":1}}],[\"底层原理\",{\"1\":{\"40\":1,\"53\":1}}],[\"监测不到的内存\",{\"1\":{\"389\":1}}],[\"统计看到的内存大小不同\",{\"1\":{\"389\":1}}],[\"统一的日志管理\",{\"1\":{\"91\":1}}],[\"统一收集到一个\",{\"1\":{\"58\":1}}],[\"独占内存大小\",{\"1\":{\"388\":1}}],[\"独立显存\",{\"1\":{\"387\":1}}],[\"独立的\",{\"1\":{\"274\":1}}],[\"独立播放器模式中的加速约为\",{\"1\":{\"137\":1}}],[\"独立于\",{\"1\":{\"75\":1}}],[\"评分最高的类别\",{\"1\":{\"388\":1}}],[\"评分类别\",{\"1\":{\"388\":1}}],[\"评论结构\",{\"1\":{\"77\":1}}],[\"评论应该怎么写\",{\"1\":{\"77\":1}}],[\"综上\",{\"1\":{\"387\":1}}],[\"台式机的三级缓存大约\",{\"1\":{\"387\":1}}],[\"慢很多\",{\"1\":{\"387\":1}}],[\"称之为内存交换\",{\"1\":{\"387\":1}}],[\"称为重新批处理\",{\"1\":{\"141\":1}}],[\"称为\",{\"1\":{\"125\":1,\"180\":2}}],[\"称为粒度\",{\"1\":{\"100\":1}}],[\"称为原生内存\",{\"1\":{\"96\":1}}],[\"电脑在物理内存不够的时候\",{\"1\":{\"387\":1}}],[\"电池和存储来检查应用程序如何影响整个设备\",{\"1\":{\"205\":1}}],[\"揭秘\",{\"0\":{\"385\":1},\"1\":{\"384\":1,\"385\":1}}],[\"浅谈\",{\"0\":{\"386\":1},\"1\":{\"384\":1,\"386\":1}}],[\"摄像机的碰撞检测\",{\"1\":{\"383\":1}}],[\"摄像机如何还原深度信息\",{\"1\":{\"93\":1}}],[\"界面管理\",{\"1\":{\"383\":1}}],[\"界面中不公开\",{\"1\":{\"141\":1}}],[\"推出了\",{\"1\":{\"387\":1}}],[\"推动架构的持续演进\",{\"1\":{\"382\":1}}],[\"推荐主题\",{\"1\":{\"352\":1}}],[\"推荐\",{\"0\":{\"345\":1},\"1\":{\"12\":1,\"358\":1}}],[\"借助用户的反馈和进化的力量\",{\"1\":{\"382\":1}}],[\"便于开发人员及时得到详细的错误信息\",{\"1\":{\"381\":1}}],[\"便于热更新\",{\"1\":{\"65\":1}}],[\"容错性包括当程序发生错误时\",{\"1\":{\"381\":1}}],[\"容错性以及错误的感知力\",{\"1\":{\"381\":1}}],[\"容易导致内存泄漏\",{\"1\":{\"60\":1}}],[\"伸缩力体现在是否既能适应大型项目上\",{\"1\":{\"381\":1}}],[\"共用库所产生的内存都会统计到\",{\"1\":{\"388\":1}}],[\"共同开发的效率又如何\",{\"1\":{\"381\":1}}],[\"共享相同的物理内存\",{\"1\":{\"212\":1}}],[\"共享内存\",{\"1\":{\"212\":2}}],[\"共享内存贡献\",{\"1\":{\"205\":1}}],[\"共享进程数\",{\"1\":{\"205\":1}}],[\"共享\",{\"1\":{\"104\":1}}],[\"共享分配器中桶的步长\",{\"1\":{\"104\":2}}],[\"共享线程\",{\"1\":{\"104\":1}}],[\"共享线程分配器的块大小\",{\"1\":{\"104\":1}}],[\"共享线程块大小shared\",{\"1\":{\"104\":2}}],[\"共享桶分配器shared\",{\"1\":{\"104\":1}}],[\"共享桶分配器\",{\"1\":{\"100\":1}}],[\"共享材质等\",{\"1\":{\"143\":1}}],[\"共享材质\",{\"1\":{\"83\":1}}],[\"共享与引用\",{\"1\":{\"56\":1}}],[\"共享数据\",{\"1\":{\"45\":1}}],[\"承载力\",{\"1\":{\"381\":1}}],[\"于是ugui系统就会销毁这个网格\",{\"1\":{\"379\":1}}],[\"既解决了用数字做\",{\"1\":{\"377\":1}}],[\"既然\",{\"1\":{\"55\":1}}],[\"公共语言运行时\",{\"1\":{\"371\":2}}],[\"公用内存\",{\"1\":{\"106\":1}}],[\"扩容是以指数级提升的\",{\"1\":{\"369\":1}}],[\"扩展到多核\",{\"1\":{\"400\":1}}],[\"扩展名\",{\"1\":{\"360\":1}}],[\"扩展性和性能维度来思考问题\",{\"1\":{\"92\":1}}],[\"扩展困难\",{\"1\":{\"50\":1}}],[\"~2g\",{\"1\":{\"369\":1}}],[\"~$\",{\"1\":{\"205\":4}}],[\"©\",{\"1\":{\"362\":1}}],[\"路径前缀\",{\"1\":{\"361\":1}}],[\"路线图\",{\"0\":{\"310\":1}}],[\"侧边栏\",{\"0\":{\"361\":1},\"1\":{\"359\":1}}],[\"侧边栏生成项\",{\"1\":{\"359\":1}}],[\"侧边栏中显示\",{\"1\":{\"151\":1}}],[\"星标一个文章\",{\"1\":{\"358\":1}}],[\"星标\",{\"1\":{\"358\":1}}],[\"博客首页设置\",{\"1\":{\"358\":1}}],[\"博客模式\",{\"0\":{\"358\":1}}],[\"└─\",{\"1\":{\"347\":3,\"361\":3}}],[\"│\",{\"1\":{\"347\":4,\"361\":3}}],[\"├─\",{\"1\":{\"347\":2,\"361\":8}}],[\"搭建你的第一个免费博客网站\",{\"1\":{\"341\":1}}],[\"报错处理\",{\"0\":{\"340\":1}}],[\"站点\",{\"1\":{\"339\":1}}],[\"部署目录为\",{\"1\":{\"339\":1}}],[\"部署到\",{\"1\":{\"339\":2}}],[\"部署\",{\"0\":{\"337\":1}}],[\"部分定义的符号\",{\"1\":{\"301\":1}}],[\"部分找到它\",{\"1\":{\"301\":1}}],[\"部分变为可用\",{\"1\":{\"300\":1}}],[\"部分所述\",{\"1\":{\"270\":1}}],[\"部分讨论\",{\"1\":{\"246\":1}}],[\"部分讨论的分析器标签几乎相同\",{\"1\":{\"150\":1}}],[\"部分阅读更多关于使用时间切片唤醒时纹理缓冲区中的内存限制的信息\",{\"1\":{\"222\":1}}],[\"部分相比很小\",{\"1\":{\"207\":1}}],[\"部分使用\",{\"1\":{\"200\":1}}],[\"部分中的空项目与\",{\"1\":{\"206\":1}}],[\"部分中关于\",{\"1\":{\"169\":1}}],[\"部分中有详细描述\",{\"1\":{\"161\":1}}],[\"部分中介绍\",{\"1\":{\"98\":1}}],[\"部分以获取可能的修复方法\",{\"1\":{\"152\":2}}],[\"部分声明的所有变量\",{\"1\":{\"136\":1}}],[\"部分放入多少材质参数\",{\"1\":{\"135\":1}}],[\"部分的块大小\",{\"1\":{\"104\":1}}],[\"部分\",{\"1\":{\"96\":1,\"112\":1,\"119\":1,\"145\":1,\"149\":1,\"152\":2,\"154\":1,\"155\":1,\"168\":1,\"172\":1,\"190\":1,\"192\":1,\"206\":1,\"207\":1,\"232\":1,\"234\":1,\"237\":1,\"244\":1,\"299\":1,\"300\":2,\"301\":1,\"302\":1,\"306\":1,\"393\":1}}],[\"`\",{\"1\":{\"336\":1}}],[\"`v$\",{\"1\":{\"336\":1}}],[\"贡献指南\",{\"1\":{\"336\":1}}],[\"市场\",{\"1\":{\"336\":1}}],[\"金属度\",{\"1\":{\"333\":1}}],[\"能避免内存碎片化问题\",{\"1\":{\"401\":1}}],[\"能够根据错误信息快速找出问题所在\",{\"1\":{\"381\":1}}],[\"能够承载多少个程序员共同开发\",{\"1\":{\"381\":1}}],[\"能显示多少ui元素\",{\"1\":{\"381\":1}}],[\"能承载的日均访问量是多少\",{\"1\":{\"381\":1}}],[\"能量守恒\",{\"1\":{\"333\":1}}],[\"能让你在面试中更加从容自信\",{\"1\":{\"61\":1}}],[\"微表面散射\",{\"1\":{\"333\":1}}],[\"微软官方\",{\"1\":{\"312\":1}}],[\"微软建议将\",{\"1\":{\"252\":1}}],[\"机上没有做内存交换\",{\"1\":{\"387\":1}}],[\"机器学习\",{\"1\":{\"332\":1}}],[\"机制考量\",{\"1\":{\"400\":1}}],[\"机制是\",{\"1\":{\"400\":1,\"401\":1}}],[\"机制\",{\"0\":{\"400\":1}}],[\"机制及优化\",{\"1\":{\"66\":1}}],[\"机制与优化\",{\"1\":{\"61\":1}}],[\"朴素贝叶斯分类器\",{\"1\":{\"332\":1}}],[\"蒙特卡洛树搜索\",{\"1\":{\"331\":1}}],[\"蒙皮运动矢量\",{\"1\":{\"214\":1}}],[\"蒙皮网格和一些使用材质属性块的粒子\",{\"1\":{\"132\":1}}],[\"棋类游戏逻辑\",{\"1\":{\"331\":1}}],[\"马尔可夫系统\",{\"1\":{\"331\":1}}],[\"决策树学习\",{\"1\":{\"332\":1}}],[\"决策树\",{\"1\":{\"331\":1}}],[\"决策逻辑\",{\"1\":{\"331\":1}}],[\"决定\",{\"1\":{\"179\":1}}],[\"裁剪\",{\"1\":{\"329\":1}}],[\"裁剪和其他\",{\"1\":{\"160\":1}}],[\"裁剪和许多其他复杂操作的支持\",{\"1\":{\"160\":1}}],[\"雾效\",{\"1\":{\"329\":1}}],[\"聚光灯\",{\"1\":{\"329\":1}}],[\"级联阴影\",{\"1\":{\"329\":1}}],[\"级别\",{\"1\":{\"218\":1}}],[\"级别的并发执行\",{\"1\":{\"80\":1}}],[\"色彩\",{\"1\":{\"329\":1}}],[\"色值查询预览\",{\"1\":{\"30\":1}}],[\"镜面反射\",{\"1\":{\"329\":1}}],[\"漫反射\",{\"1\":{\"329\":1}}],[\"凹凸贴图\",{\"1\":{\"329\":1}}],[\"凹\",{\"1\":{\"326\":1}}],[\"凸分解\",{\"1\":{\"326\":1}}],[\"凸包\",{\"1\":{\"326\":1}}],[\"凸体\",{\"1\":{\"326\":1}}],[\"凸性\",{\"1\":{\"326\":1}}],[\"轴对齐包围盒\",{\"1\":{\"326\":1}}],[\"轴的缩放相同\",{\"1\":{\"118\":1}}],[\"粗略阶段\",{\"1\":{\"326\":1}}],[\"摩擦力\",{\"1\":{\"326\":1}}],[\"浮力\",{\"1\":{\"326\":1}}],[\"力\",{\"1\":{\"326\":1}}],[\"力的施加会不均匀\",{\"1\":{\"60\":1}}],[\"恢复系数\",{\"1\":{\"326\":1}}],[\"质心\",{\"1\":{\"326\":1}}],[\"埃尔米特曲线\",{\"1\":{\"325\":1}}],[\"曲线\",{\"1\":{\"325\":2}}],[\"曲线时要小心\",{\"1\":{\"148\":1}}],[\"透视投影\",{\"1\":{\"325\":1}}],[\"透明与半透明效果\",{\"1\":{\"333\":1}}],[\"透明度也会增加过度绘制\",{\"1\":{\"215\":1}}],[\"透明度\",{\"1\":{\"215\":1}}],[\"透明\",{\"1\":{\"142\":1}}],[\"透明着色器通常要求\",{\"1\":{\"108\":1}}],[\"透明和统一\",{\"1\":{\"58\":1}}],[\"投影\",{\"1\":{\"325\":1}}],[\"欧拉角\",{\"1\":{\"325\":1}}],[\"欧拉角与万向节死锁\",{\"1\":{\"20\":1}}],[\"仿射变换\",{\"1\":{\"325\":1}}],[\"仿射空间\",{\"1\":{\"325\":1}}],[\"线速度\",{\"1\":{\"326\":1}}],[\"线性变换\",{\"1\":{\"325\":1}}],[\"线性代数\",{\"1\":{\"325\":1}}],[\"线程的循环线性线程分配器\",{\"1\":{\"104\":1}}],[\"线程的栈大小\",{\"1\":{\"104\":2}}],[\"线程块大小gfx\",{\"1\":{\"104\":1}}],[\"线程栈大小\",{\"1\":{\"104\":2}}],[\"线程安全线性分配器\",{\"0\":{\"103\":1},\"1\":{\"102\":1}}],[\"线程安全线性\",{\"1\":{\"98\":1}}],[\"线程本地存储\",{\"0\":{\"102\":1},\"1\":{\"98\":1}}],[\"线程是\",{\"1\":{\"80\":1}}],[\"线程池\",{\"1\":{\"57\":1,\"254\":1}}],[\"线程\",{\"1\":{\"49\":2,\"254\":2,\"275\":2}}],[\"音乐与音效\",{\"1\":{\"323\":1}}],[\"音频导入设置\",{\"1\":{\"201\":1}}],[\"音频\",{\"0\":{\"201\":1,\"249\":1},\"1\":{\"104\":1,\"124\":1,\"313\":2}}],[\"贝塞尔曲线\",{\"1\":{\"323\":1,\"325\":1}}],[\"贝壳\",{\"1\":{\"30\":1}}],[\"角色行为控制\",{\"1\":{\"383\":1}}],[\"角色行为控制等内容\",{\"1\":{\"383\":1}}],[\"角色ai\",{\"1\":{\"85\":1}}],[\"角速度\",{\"1\":{\"326\":1}}],[\"角度计算\",{\"1\":{\"323\":1}}],[\"经典插件\",{\"0\":{\"322\":1}}],[\"经过了哪些坐标空间的转换\",{\"1\":{\"93\":1}}],[\"经过几十年的发展\",{\"1\":{\"57\":1}}],[\"艺术效果揭秘\",{\"1\":{\"321\":1}}],[\"航天模拟\",{\"1\":{\"321\":1}}],[\"影视化实时渲染案例课之\",{\"1\":{\"321\":1}}],[\"影视渲染\",{\"1\":{\"321\":1}}],[\"影响在构建项目时如何从程序集中移除未使用的代码\",{\"1\":{\"308\":1}}],[\"影响\",{\"1\":{\"285\":1}}],[\"影响的更多详细信息\",{\"1\":{\"145\":1}}],[\"影响的动态\",{\"1\":{\"116\":1}}],[\"元宇宙\",{\"1\":{\"321\":1}}],[\"元素是不会重叠的\",{\"1\":{\"379\":1}}],[\"元素上优化使用\",{\"0\":{\"184\":1}}],[\"元素至少会执行一次\",{\"1\":{\"181\":2}}],[\"元素都需要接收更新\",{\"1\":{\"179\":1}}],[\"元素都有一个边框\",{\"1\":{\"159\":1}}],[\"元素集合\",{\"1\":{\"179\":1}}],[\"元素以减少绘制调用次数\",{\"1\":{\"178\":1}}],[\"元素以显示滚动到视图中的内容\",{\"1\":{\"170\":1}}],[\"元素变化时需要重新生成网格\",{\"1\":{\"178\":1}}],[\"元素没有可变大小\",{\"1\":{\"170\":1}}],[\"元素被重新父级或其兄弟顺序更改时\",{\"1\":{\"170\":1}}],[\"元素数量\",{\"1\":{\"170\":1}}],[\"元素数量很大\",{\"1\":{\"161\":1}}],[\"元素池\",{\"1\":{\"170\":1}}],[\"元素池化\",{\"1\":{\"170\":1}}],[\"元素不包含在必须生成\",{\"1\":{\"170\":1}}],[\"元素不需要\",{\"1\":{\"155\":1}}],[\"元素所需的时间也越来越长\",{\"1\":{\"170\":1}}],[\"元素来表示其内容\",{\"1\":{\"170\":1}}],[\"元素批处理的方式定位文本\",{\"1\":{\"168\":1}}],[\"元素位于该位置下方\",{\"1\":{\"165\":1}}],[\"元素而浪费的绘制调用数量的顺序和位置\",{\"1\":{\"162\":1}}],[\"元素发生变化时\",{\"1\":{\"161\":1}}],[\"元素\",{\"1\":{\"154\":1,\"155\":2,\"161\":1,\"163\":1,\"179\":1}}],[\"元素和\",{\"1\":{\"154\":1,\"183\":1}}],[\"元素组合成批处理的能力\",{\"1\":{\"149\":1}}],[\"元素使用不同的纹理或材质\",{\"1\":{\"148\":1}}],[\"元素可以快速缩小对性能问题负主要责任的\",{\"1\":{\"148\":1}}],[\"元素的网格\",{\"1\":{\"178\":1}}],[\"元素的网格并生成适当的渲染命令发送到\",{\"1\":{\"143\":1}}],[\"元素的\",{\"1\":{\"170\":2,\"179\":1}}],[\"元素的数量呈非线性增长\",{\"1\":{\"161\":1}}],[\"元素的边框\",{\"1\":{\"159\":1}}],[\"元素的根\",{\"1\":{\"155\":1}}],[\"元素的位置和大小的地方\",{\"1\":{\"145\":1}}],[\"光线遮挡\",{\"1\":{\"329\":1}}],[\"光线追踪\",{\"1\":{\"329\":1,\"333\":2}}],[\"光源类型\",{\"1\":{\"329\":1}}],[\"光栅化\",{\"1\":{\"329\":1}}],[\"光影烘焙\",{\"1\":{\"320\":1}}],[\"光照与阴影\",{\"1\":{\"329\":1}}],[\"光照探针采样\",{\"1\":{\"248\":1}}],[\"光照贴图\",{\"1\":{\"216\":1,\"236\":1}}],[\"光照贴图越少\",{\"1\":{\"216\":1}}],[\"光照场景\",{\"1\":{\"210\":1}}],[\"光照\",{\"0\":{\"116\":1}}],[\"白天和夜晚场景打光\",{\"1\":{\"320\":1}}],[\"白色是最不理想的\",{\"1\":{\"215\":1}}],[\"阴影遮挡\",{\"1\":{\"329\":1}}],[\"阴影贴图\",{\"1\":{\"329\":1}}],[\"阴影\",{\"1\":{\"320\":1}}],[\"阴影通道所需的材质值相同\",{\"1\":{\"110\":1}}],[\"室外场景打光流程分享\",{\"1\":{\"320\":2}}],[\"室外\",{\"1\":{\"320\":1}}],[\"室内\",{\"1\":{\"320\":1}}],[\"篝火\",{\"1\":{\"319\":1}}],[\"贴花系统\",{\"1\":{\"318\":1,\"319\":1}}],[\"贴图映射\",{\"1\":{\"329\":1}}],[\"贴图\",{\"1\":{\"58\":1}}],[\"烘培\",{\"1\":{\"317\":1}}],[\"烘焙插件\",{\"1\":{\"317\":1}}],[\"烘焙\",{\"1\":{\"254\":1,\"320\":1}}],[\"烘焙到相同\",{\"1\":{\"116\":1}}],[\"精力和注意力都可以集中在子系统的设计和编码上\",{\"1\":{\"381\":1}}],[\"精确阶段\",{\"1\":{\"326\":1}}],[\"精要\",{\"1\":{\"317\":1}}],[\"精灵上的原则也可以用于子元素\",{\"1\":{\"159\":1}}],[\"精灵\",{\"1\":{\"159\":1}}],[\"精灵或\",{\"1\":{\"149\":1}}],[\"课程系列\",{\"1\":{\"317\":1}}],[\"断点调试\",{\"1\":{\"316\":1}}],[\"断点续传\",{\"1\":{\"314\":1}}],[\"套接字\",{\"1\":{\"314\":1}}],[\"骨骼绑定的特别案例\",{\"1\":{\"313\":1}}],[\"寻路与网格\",{\"1\":{\"383\":1}}],[\"寻路组件\",{\"1\":{\"313\":1}}],[\"寻址属性\",{\"0\":{\"257\":1}}],[\"寻址\",{\"1\":{\"76\":1}}],[\"卡丁车\",{\"1\":{\"313\":1}}],[\"卡顿\",{\"1\":{\"41\":2,\"55\":1,\"74\":1}}],[\"卡顿还是\",{\"1\":{\"41\":1}}],[\"益智游戏\",{\"1\":{\"313\":1}}],[\"创作和调试工作流\",{\"1\":{\"317\":1}}],[\"创作者的通用渲染管线简介\",{\"1\":{\"313\":1,\"318\":1}}],[\"创作者套件\",{\"1\":{\"313\":2}}],[\"创建完成后\",{\"1\":{\"347\":1}}],[\"创建你的第一篇文档\",{\"1\":{\"346\":1}}],[\"创建并进入一个新目录\",{\"1\":{\"346\":1}}],[\"创建项目\",{\"0\":{\"344\":1}}],[\"创建型模式\",{\"1\":{\"312\":1}}],[\"创建测试程序集\",{\"0\":{\"298\":1}}],[\"创建特定平台的程序集\",{\"0\":{\"296\":1}}],[\"创建程序集定义引用资产\",{\"0\":{\"295\":1}}],[\"创建程序集定义资产\",{\"0\":{\"294\":1},\"1\":{\"296\":1}}],[\"创建另一个没有手指的遮罩\",{\"1\":{\"218\":1}}],[\"创建支持\",{\"0\":{\"118\":1},\"1\":{\"115\":1}}],[\"创建网格的副本\",{\"1\":{\"109\":1}}],[\"创建材质的副本并将副本分配回渲染器\",{\"1\":{\"108\":1}}],[\"创建对象时\",{\"1\":{\"97\":1}}],[\"创建一个带有颜色缓冲区和深度缓冲区附件的帧缓冲区对象\",{\"1\":{\"234\":1}}],[\"创建一个新层\",{\"1\":{\"218\":1}}],[\"创建一个\",{\"1\":{\"75\":1}}],[\"创建的\",{\"1\":{\"58\":1}}],[\"创建\",{\"1\":{\"45\":1,\"75\":1,\"122\":1,\"339\":1,\"346\":2}}],[\"探索型课程\",{\"1\":{\"313\":1}}],[\"商城\",{\"1\":{\"313\":1}}],[\"商店\",{\"1\":{\"56\":1,\"159\":1}}],[\"社区\",{\"1\":{\"313\":1}}],[\"激活\",{\"1\":{\"313\":1}}],[\"激活并开始关闭进程之前\",{\"1\":{\"204\":1}}],[\"各大逻辑系统通用工具等\",{\"1\":{\"383\":1}}],[\"各类框架\",{\"1\":{\"312\":1}}],[\"各种平台也有首选的\",{\"1\":{\"201\":1}}],[\"各种场景基准测试\",{\"0\":{\"132\":1}}],[\"入门功能介绍\",{\"1\":{\"321\":1}}],[\"入门教程\",{\"1\":{\"321\":1}}],[\"入门\",{\"1\":{\"312\":1}}],[\"备忘录模式\",{\"1\":{\"312\":1}}],[\"责任链模式\",{\"1\":{\"312\":1}}],[\"迭代器模式\",{\"1\":{\"312\":1}}],[\"迭代器的实现原理\",{\"1\":{\"72\":1}}],[\"策略模式\",{\"1\":{\"312\":1}}],[\"策划或设计师可配置\",{\"1\":{\"75\":1}}],[\"策划\",{\"1\":{\"56\":1}}],[\"享元模式\",{\"1\":{\"312\":1}}],[\"桥接模式\",{\"1\":{\"312\":1}}],[\"外部资源管理\",{\"1\":{\"383\":1}}],[\"外部工具提供方法级\",{\"1\":{\"147\":1}}],[\"外观模式\",{\"1\":{\"312\":1}}],[\"抽象工厂模式\",{\"1\":{\"312\":1}}],[\"抽象基类的子类来完成\",{\"1\":{\"170\":1}}],[\"魔法学堂\",{\"1\":{\"312\":2}}],[\"初学者\",{\"1\":{\"313\":2}}],[\"初级编程\",{\"1\":{\"312\":1}}],[\"初始化项目\",{\"1\":{\"346\":1}}],[\"初始化\",{\"1\":{\"79\":1}}],[\"含\",{\"1\":{\"305\":1}}],[\"遵循\",{\"1\":{\"305\":1}}],[\"遵循基本的标记清除\",{\"1\":{\"195\":1}}],[\"末尾不使用增量数字\",{\"1\":{\"304\":1}}],[\"晚于任何其他发布类型\",{\"1\":{\"304\":1}}],[\"晚期更新\",{\"1\":{\"79\":1}}],[\"试验\",{\"1\":{\"304\":3}}],[\"补丁\",{\"1\":{\"304\":2}}],[\"圆括号\",{\"1\":{\"303\":1}}],[\"符号名称\",{\"1\":{\"302\":1}}],[\"约束\",{\"1\":{\"301\":1}}],[\"又解决了字符串做\",{\"1\":{\"377\":1}}],[\"又需要在构建的时候排除掉\",{\"1\":{\"297\":1}}],[\"又能提升初级\",{\"1\":{\"77\":1}}],[\"又能低耦合地交互\",{\"1\":{\"56\":1}}],[\"勾选\",{\"1\":{\"296\":1}}],[\"达到访问\",{\"1\":{\"290\":1}}],[\"替代方案\",{\"1\":{\"286\":1}}],[\"替代的非分配\",{\"0\":{\"286\":1}}],[\"替换为局部范围内的变量\",{\"1\":{\"283\":1}}],[\"替换\",{\"1\":{\"152\":1,\"252\":2}}],[\"跟踪中显示为对几个方法之一的调用\",{\"1\":{\"284\":1}}],[\"识别装箱\",{\"1\":{\"284\":1}}],[\"匿名方法现在需要访问其范围之外的变量的状态\",{\"1\":{\"283\":1}}],[\"辅助\",{\"1\":{\"282\":1}}],[\"理想情况下\",{\"1\":{\"276\":1,\"278\":1}}],[\"理解优化\",{\"1\":{\"188\":1}}],[\"理解托管堆\",{\"1\":{\"188\":1}}],[\"理解原生内存\",{\"1\":{\"187\":1}}],[\"理解组成\",{\"1\":{\"140\":1}}],[\"理解\",{\"1\":{\"75\":2,\"135\":1,\"202\":1,\"220\":1}}],[\"验证应用程序是否符合预期\",{\"1\":{\"275\":1}}],[\"验证所有片段着色器是否对移动设备友好至关重要\",{\"1\":{\"236\":1}}],[\"赫兹的显示器上运行编辑器\",{\"1\":{\"275\":1}}],[\"垂直同步计数\",{\"1\":{\"275\":1}}],[\"垂直同步\",{\"1\":{\"275\":1}}],[\"垂直回扫以垂直刷新率发生\",{\"1\":{\"230\":1}}],[\"轨迹上方的深绿色边缘\",{\"1\":{\"275\":1}}],[\"黄色\",{\"1\":{\"275\":1}}],[\"截图展示了增量式垃圾回收如何减少帧率问题\",{\"1\":{\"275\":1}}],[\"截至\",{\"1\":{\"148\":1,\"168\":1}}],[\"停止运行程序代码进行垃圾回收时都会出现\",{\"1\":{\"275\":1}}],[\"停止世界\",{\"1\":{\"275\":1}}],[\"停用特定代码或组件\",{\"1\":{\"270\":1}}],[\"停用粒子系统时不会释放此内存\",{\"1\":{\"266\":1}}],[\"样条\",{\"1\":{\"325\":1}}],[\"样本的完整调用堆栈跟踪后\",{\"1\":{\"274\":1}}],[\"样式和字符的不同组合维护一个字形\",{\"1\":{\"168\":1}}],[\"逐帧显示高层次的内存使用情况\",{\"1\":{\"274\":1}}],[\"订阅\",{\"1\":{\"274\":1}}],[\"检索\",{\"1\":{\"271\":1}}],[\"检查日志文件显示了单个着色器的压缩磁盘大小\",{\"1\":{\"239\":1}}],[\"检查输入事件发生点是否与每个\",{\"1\":{\"179\":1}}],[\"检查器调整的所有变量\",{\"1\":{\"136\":1}}],[\"检查以上两个问题\",{\"1\":{\"134\":1}}],[\"检查当前激活任务的\",{\"1\":{\"56\":1}}],[\"检查是否有不该有的堆内存分配\",{\"1\":{\"55\":1}}],[\"检查是否有复杂的算法\",{\"1\":{\"41\":1}}],[\"检查\",{\"1\":{\"41\":2,\"56\":1}}],[\"却没有\",{\"1\":{\"269\":1}}],[\"流式传输到磁盘时尤为重要\",{\"1\":{\"269\":1}}],[\"取决于你如何组织代码以及你使用的\",{\"1\":{\"307\":1}}],[\"取决于渲染之外的许多其他因素\",{\"1\":{\"131\":1}}],[\"取消订阅会导致内部\",{\"1\":{\"268\":1}}],[\"某种操作\",{\"1\":{\"267\":1}}],[\"某些代码\",{\"1\":{\"273\":1}}],[\"某些\",{\"1\":{\"151\":1,\"252\":1}}],[\"某些批处理大小可能非常低\",{\"1\":{\"135\":1}}],[\"某些平台需要固定数组大小\",{\"1\":{\"118\":1}}],[\"某些方法更适合某些场景\",{\"1\":{\"106\":1}}],[\"十分方便\",{\"1\":{\"267\":1}}],[\"删除操作\",{\"1\":{\"268\":1}}],[\"删除这些回调并将\",{\"1\":{\"267\":1}}],[\"删除\",{\"1\":{\"267\":1,\"268\":1}}],[\"粒子效果池即可提供必需的粒子效果对象\",{\"1\":{\"266\":1}}],[\"粒子系统\",{\"1\":{\"404\":1}}],[\"粒子系统池\",{\"0\":{\"266\":1}}],[\"粒子系统有自己的合批方式\",{\"1\":{\"58\":1}}],[\"遍测试获得的平均结果\",{\"1\":{\"265\":1}}],[\"遍历所有\",{\"1\":{\"401\":1}}],[\"遍历交错数组通常比遍历多维数组更高效\",{\"1\":{\"265\":1}}],[\"遍历内存中的所有游戏对象和组件\",{\"1\":{\"262\":1}}],[\"遍历非泛型集合\",{\"1\":{\"74\":1}}],[\"遍历\",{\"1\":{\"46\":1}}],[\"矩阵\",{\"1\":{\"325\":1}}],[\"矩阵或四元数运算更快\",{\"1\":{\"260\":1}}],[\"矩阵计算器\",{\"1\":{\"30\":1}}],[\"矢量和四元数数学以及运算顺序\",{\"0\":{\"260\":1}}],[\"派生的类的实例\",{\"1\":{\"259\":1}}],[\"派生组件所需的网格的成本\",{\"1\":{\"150\":1}}],[\"章节以了解有关上述问题的更多信息\",{\"1\":{\"255\":1}}],[\"核\",{\"1\":{\"254\":1}}],[\"核心拥有自己的内存管理系统\",{\"1\":{\"96\":1}}],[\"核心知识与引擎特性\",{\"0\":{\"78\":1}}],[\"核心痛点\",{\"1\":{\"76\":1}}],[\"核心是性能\",{\"1\":{\"75\":1}}],[\"核心是减少堆分配\",{\"1\":{\"42\":1}}],[\"核心区别\",{\"1\":{\"62\":1,\"67\":1}}],[\"核心概念\",{\"0\":{\"62\":1}}],[\"核心面试问题\",{\"1\":{\"61\":1,\"66\":1}}],[\"核心管理器\",{\"1\":{\"56\":1}}],[\"核心工作\",{\"1\":{\"51\":2}}],[\"核心\",{\"1\":{\"46\":1,\"96\":1,\"335\":1,\"336\":1}}],[\"核心价值\",{\"1\":{\"45\":1}}],[\"核心思想是让\",{\"1\":{\"43\":1}}],[\"举一个简单的例子\",{\"1\":{\"254\":1}}],[\"举例\",{\"1\":{\"55\":1}}],[\"衍生的类层级视图中\",{\"1\":{\"254\":1}}],[\"均可以替换为类似于以下示例的简单的手工编码版本\",{\"1\":{\"252\":1}}],[\"毫秒限制\",{\"1\":{\"275\":1}}],[\"毫秒\",{\"1\":{\"252\":1,\"271\":2}}],[\"串行连接也可能成为托管内存压力的主要原因\",{\"1\":{\"250\":1}}],[\"声音文件在内存的存在形态\",{\"1\":{\"392\":1}}],[\"声音引擎时\",{\"1\":{\"392\":1}}],[\"声音组件\",{\"1\":{\"313\":1}}],[\"声音效果\",{\"1\":{\"249\":1}}],[\"声明为\",{\"1\":{\"265\":1}}],[\"声明以获取灵感\",{\"1\":{\"136\":1}}],[\"声明名为\",{\"1\":{\"118\":2}}],[\"声明\",{\"1\":{\"112\":1}}],[\"美术师应评估这种不精确性的影响\",{\"1\":{\"248\":1}}],[\"足以满足应用于\",{\"1\":{\"247\":1}}],[\"足以满足纹理图集的要求\",{\"1\":{\"247\":1}}],[\"足以值得尝试减少它们\",{\"1\":{\"216\":1}}],[\"版权受限\",{\"1\":{\"371\":1}}],[\"版内存性能分析器来跟踪这些问题\",{\"1\":{\"246\":1}}],[\"版本有差距\",{\"1\":{\"401\":1}}],[\"版本管理工具\",{\"1\":{\"315\":1}}],[\"版本控制\",{\"0\":{\"315\":1}}],[\"版本在\",{\"1\":{\"305\":1}}],[\"版本指示符有四个部分\",{\"1\":{\"305\":1}}],[\"版本的\",{\"1\":{\"304\":1}}],[\"版本是目标发布季度\",{\"1\":{\"304\":1}}],[\"版本是目标发布年份\",{\"1\":{\"304\":1}}],[\"版本号的更多信息\",{\"1\":{\"305\":1}}],[\"版本号允许在\",{\"1\":{\"304\":1}}],[\"版本号\",{\"0\":{\"304\":1,\"305\":1}}],[\"版本定义符号\",{\"0\":{\"302\":1}}],[\"版本和用于初始化加载的调用\",{\"1\":{\"222\":1}}],[\"版本和设备组合可能支持\",{\"1\":{\"151\":1}}],[\"版本中\",{\"1\":{\"205\":1}}],[\"版本上\",{\"1\":{\"205\":1}}],[\"版本开始\",{\"1\":{\"190\":1}}],[\"版本\",{\"1\":{\"133\":1,\"165\":1,\"236\":1,\"304\":9,\"339\":1,\"340\":1}}],[\"版本校验\",{\"1\":{\"84\":1}}],[\"临时的\",{\"1\":{\"246\":1}}],[\"临时分配器的默认块大小对于平台为\",{\"1\":{\"102\":1}}],[\"临时分配\",{\"0\":{\"278\":1},\"1\":{\"98\":1}}],[\"观看讲座\",{\"1\":{\"245\":1}}],[\"观察者\",{\"1\":{\"85\":1}}],[\"观察者模式\",{\"1\":{\"60\":1,\"312\":1}}],[\"涵盖了讲座的大部分内容\",{\"1\":{\"245\":1}}],[\"涵盖了最常被问到的\",{\"1\":{\"73\":1}}],[\"讲座的主题是讲解优化移动端的性能\",{\"1\":{\"245\":1}}],[\"讲座\",{\"1\":{\"245\":1,\"254\":1}}],[\"制作一个滚动小球\",{\"1\":{\"313\":1}}],[\"制作多个着色器程序变体\",{\"1\":{\"241\":1}}],[\"制作行为树插件\",{\"1\":{\"22\":1}}],[\"粉色错误着色器和清除屏幕\",{\"1\":{\"237\":1}}],[\"利用廉价的\",{\"1\":{\"236\":1}}],[\"利用率\",{\"1\":{\"139\":1}}],[\"泛光\",{\"1\":{\"236\":1}}],[\"泛型共享\",{\"0\":{\"197\":1},\"1\":{\"393\":1}}],[\"泛型\",{\"1\":{\"96\":1}}],[\"泛型优化\",{\"1\":{\"57\":1,\"76\":1}}],[\"旧版镜面反射\",{\"1\":{\"236\":1}}],[\"千字节\",{\"1\":{\"233\":1,\"278\":1}}],[\"得到\",{\"1\":{\"233\":1}}],[\"全局管理器单例可将\",{\"1\":{\"267\":1}}],[\"全局管理器对象往往会暴露\",{\"1\":{\"262\":1}}],[\"全高清屏幕的分辨率为\",{\"1\":{\"233\":1}}],[\"全屏\",{\"1\":{\"158\":1}}],[\"范围内的整数\",{\"1\":{\"275\":1}}],[\"范围内\",{\"1\":{\"230\":1}}],[\"双缓冲\",{\"0\":{\"230\":1}}],[\"双线程分配器是一个包装器\",{\"1\":{\"101\":1}}],[\"双线程分配器\",{\"0\":{\"101\":1}}],[\"双线程\",{\"1\":{\"98\":1}}],[\"桌面平台将缓冲区组合成一个\",{\"1\":{\"232\":1}}],[\"桌面\",{\"1\":{\"225\":1,\"228\":1}}],[\"唤醒行为\",{\"1\":{\"222\":1}}],[\"磁盘\",{\"1\":{\"222\":1}}],[\"芯片及更高版本上可用\",{\"1\":{\"221\":1}}],[\"维护成本大\",{\"1\":{\"371\":1}}],[\"维护和生成高质量\",{\"1\":{\"218\":1}}],[\"维护性\",{\"1\":{\"92\":1}}],[\"像\",{\"1\":{\"218\":1,\"396\":1}}],[\"像素填充率\",{\"1\":{\"215\":1}}],[\"像素慢\",{\"1\":{\"212\":1}}],[\"像素实际上可能比设置为\",{\"1\":{\"212\":1}}],[\"像素的视口在某些芯片组上可能非常慢\",{\"1\":{\"212\":1}}],[\"像素\",{\"1\":{\"205\":1,\"233\":2}}],[\"像素管道的压力度量\",{\"1\":{\"151\":1}}],[\"像素着色器\",{\"0\":{\"51\":1},\"1\":{\"51\":1}}],[\"百万三角形\",{\"1\":{\"217\":2}}],[\"小内存\",{\"1\":{\"401\":1}}],[\"小试牛刀\",{\"1\":{\"317\":1}}],[\"小心不要意外地实例化材质\",{\"1\":{\"216\":1}}],[\"小于\",{\"1\":{\"212\":1}}],[\"照亮小型对象时\",{\"1\":{\"216\":1}}],[\"杯子\",{\"1\":{\"216\":1}}],[\"边界框\",{\"1\":{\"215\":1}}],[\"覆盖屏幕大面积区域的情况\",{\"1\":{\"215\":1}}],[\"覆盖信息\",{\"0\":{\"131\":1}}],[\"教程\",{\"1\":{\"312\":1,\"315\":1,\"318\":2,\"319\":2,\"360\":1,\"361\":1}}],[\"教程中的填充率部分\",{\"1\":{\"215\":1}}],[\"教你打造自己的\",{\"1\":{\"22\":1}}],[\"涉及在每个瓦片中设置一些位\",{\"1\":{\"212\":1}}],[\"典型大小为\",{\"1\":{\"212\":1}}],[\"丢弃\",{\"1\":{\"212\":1}}],[\"丢弃其\",{\"1\":{\"173\":1}}],[\"恰当地命名为\",{\"1\":{\"212\":1}}],[\"天空盒\",{\"1\":{\"211\":1}}],[\"天然适合\",{\"1\":{\"75\":1}}],[\"清除瓦片是一项小任务\",{\"1\":{\"212\":1}}],[\"清除整个缓冲区可以使其更紧密地压缩\",{\"1\":{\"212\":1}}],[\"清除命令还会影响帧缓冲区的压缩\",{\"1\":{\"212\":1}}],[\"清除命令的底层行为取决于平台和图形驱动程序\",{\"1\":{\"212\":1}}],[\"清除命令尤为重要\",{\"1\":{\"212\":1}}],[\"清除标志\",{\"1\":{\"212\":2}}],[\"清除\",{\"0\":{\"212\":1},\"1\":{\"211\":1}}],[\"清晰的逻辑表达和解决实际问题的能力\",{\"1\":{\"66\":1}}],[\"清晰解释\",{\"1\":{\"60\":1}}],[\"就不会\",{\"1\":{\"396\":1}}],[\"就不能更改它\",{\"1\":{\"280\":1}}],[\"就没有它\",{\"1\":{\"394\":1}}],[\"就开始加载进内存\",{\"1\":{\"389\":1}}],[\"就相当于是一个静止的模型\",{\"1\":{\"379\":1}}],[\"就需要在一瞬间集中处理\",{\"1\":{\"377\":1}}],[\"就存在程序集循环引用\",{\"1\":{\"293\":1}}],[\"就可以关掉\",{\"1\":{\"394\":1}}],[\"就可以把注意力重点放在2d动画行为控制\",{\"1\":{\"383\":1}}],[\"就可以通过创建程序集引用资产\",{\"1\":{\"290\":1}}],[\"就可以节省运行时内存\",{\"1\":{\"208\":1}}],[\"就有多少种不同的方式来优化代码\",{\"1\":{\"256\":1}}],[\"就越少\",{\"1\":{\"216\":1}}],[\"就在其中\",{\"1\":{\"215\":1}}],[\"就会在显存和内存中各一份\",{\"1\":{\"396\":1}}],[\"就会造成频繁地向\",{\"1\":{\"392\":1}}],[\"就会无意中占用应用程序内存预算的三分之一到四分之一\",{\"1\":{\"246\":1}}],[\"就会发生这种情况\",{\"1\":{\"215\":1,\"284\":1}}],[\"就会调用此方法\",{\"1\":{\"144\":1}}],[\"就会使着色器与\",{\"1\":{\"112\":1}}],[\"节省了很多材质球\",{\"1\":{\"379\":1}}],[\"节省磁盘空间和运行时内存的一种方法是减小\",{\"1\":{\"208\":1}}],[\"节点\",{\"1\":{\"17\":2}}],[\"唯一集大小\",{\"1\":{\"205\":1}}],[\"唯一的例外是阴影投射器渲染\",{\"1\":{\"110\":1}}],[\"唯一的例外是\",{\"1\":{\"106\":1}}],[\"干净内存是自从从磁盘加载以来没有发生变化的内存\",{\"1\":{\"205\":1}}],[\"表示范围排除端点\",{\"1\":{\"303\":1}}],[\"表示范围包含端点\",{\"1\":{\"303\":1}}],[\"表示在未定义\",{\"1\":{\"301\":1}}],[\"表示每帧之间应经过的垂直同步数\",{\"1\":{\"275\":1}}],[\"表示进程自身使用的内存\",{\"1\":{\"205\":1}}],[\"表明\",{\"1\":{\"252\":1}}],[\"表达式中不允许有空格\",{\"1\":{\"303\":1}}],[\"表达式使用数学范围表示法\",{\"1\":{\"303\":1}}],[\"表达式\",{\"0\":{\"303\":1},\"1\":{\"74\":1}}],[\"表达式和闭包\",{\"1\":{\"42\":1}}],[\"量\",{\"1\":{\"205\":3}}],[\"量化模型\",{\"1\":{\"17\":1}}],[\"|\",{\"1\":{\"205\":1,\"319\":1,\"365\":4}}],[\"||\",{\"1\":{\"146\":1,\"181\":2}}],[\"整数的值初始化该副本\",{\"1\":{\"283\":1}}],[\"整理了一份处理\",{\"1\":{\"250\":1}}],[\"整体设备内存压力\",{\"1\":{\"204\":1}}],[\"整个\",{\"1\":{\"178\":1}}],[\"弄清楚这一点需要使用\",{\"1\":{\"204\":1}}],[\"交换到硬盘上\",{\"1\":{\"387\":1}}],[\"交换文件大小的基本经验法则是每\",{\"1\":{\"203\":1}}],[\"交错数组\",{\"1\":{\"265\":1}}],[\"交互\",{\"1\":{\"321\":1}}],[\"交互原理\",{\"1\":{\"26\":1}}],[\"交互之配置\",{\"1\":{\"26\":1}}],[\"板载闪存的大小不足以有效启用交换空间\",{\"1\":{\"203\":1}}],[\"板载闪存速度慢\",{\"1\":{\"203\":1}}],[\"板载闪存主要用于存储应用程序\",{\"1\":{\"203\":1}}],[\"板载闪存\",{\"1\":{\"203\":1}}],[\"压缩方式\",{\"1\":{\"394\":1}}],[\"压缩的等\",{\"1\":{\"392\":1}}],[\"压缩的支持\",{\"1\":{\"221\":1}}],[\"压缩所有纹理\",{\"1\":{\"247\":1}}],[\"压缩非方形纹理时\",{\"1\":{\"221\":1}}],[\"压缩而不是\",{\"1\":{\"221\":1}}],[\"压缩纹理格式\",{\"1\":{\"221\":1}}],[\"压缩比\",{\"1\":{\"201\":1}}],[\"压力\",{\"1\":{\"75\":2,\"157\":1}}],[\"压力的性能敏感处\",{\"1\":{\"63\":1}}],[\"较好的做法是仅对屏幕上的角色执行网格蒙皮和动画驱动的变换运动\",{\"1\":{\"270\":1}}],[\"较大的\",{\"1\":{\"201\":1}}],[\"较低\",{\"1\":{\"189\":1}}],[\"较低的平台上的全屏\",{\"1\":{\"97\":1}}],[\"良好延迟\",{\"1\":{\"201\":1}}],[\"延迟等于样本数乘以缓冲区数\",{\"1\":{\"201\":1}}],[\"延迟补偿\",{\"1\":{\"87\":2}}],[\"混合几何体\",{\"1\":{\"215\":1}}],[\"混合\",{\"1\":{\"215\":1}}],[\"混合从后向前绘制\",{\"1\":{\"142\":1}}],[\"混音器延迟\",{\"1\":{\"201\":1}}],[\"克隆材质\",{\"1\":{\"200\":1}}],[\"环境\",{\"0\":{\"343\":1}}],[\"环境配置与代码调试\",{\"1\":{\"19\":1}}],[\"环形缓冲区\",{\"1\":{\"200\":1,\"222\":1}}],[\"页脚\",{\"0\":{\"362\":1}}],[\"页面的描述\",{\"1\":{\"365\":1}}],[\"页面元数据\",{\"0\":{\"364\":1}}],[\"页面信息默认全局启用\",{\"1\":{\"363\":1}}],[\"页面信息\",{\"0\":{\"363\":1}}],[\"页面导航等\",{\"1\":{\"359\":1}}],[\"页面标题\",{\"1\":{\"359\":1}}],[\"页面\",{\"1\":{\"248\":1,\"276\":1,\"359\":1,\"363\":1}}],[\"页\",{\"1\":{\"205\":1,\"388\":1}}],[\"页块会被重用\",{\"1\":{\"200\":1}}],[\"页的块大小足够大\",{\"1\":{\"200\":1}}],[\"暂存区\",{\"1\":{\"200\":1}}],[\"暂停时长\",{\"1\":{\"400\":1}}],[\"暂停\",{\"1\":{\"55\":1}}],[\"剥离它们来节省一些二进制大小和构建时间\",{\"1\":{\"196\":1}}],[\"剥离托管代码\",{\"1\":{\"192\":1}}],[\"省略未标记为使用的方法或整个类型\",{\"1\":{\"195\":1}}],[\"库的\",{\"1\":{\"280\":1}}],[\"库的正则表达式实现方式\",{\"1\":{\"253\":1}}],[\"库发布\",{\"1\":{\"193\":1}}],[\"库提供的一个基类\",{\"1\":{\"141\":1}}],[\"位模板缓冲区进行三缓冲操作时\",{\"1\":{\"233\":1}}],[\"位深度缓冲区和\",{\"1\":{\"233\":1}}],[\"位颜色缓冲区\",{\"1\":{\"233\":1}}],[\"位缓冲区\",{\"1\":{\"232\":1}}],[\"位\",{\"1\":{\"190\":1,\"232\":4,\"233\":2}}],[\"位编码的浮点值\",{\"1\":{\"136\":1}}],[\"永不停止的协程\",{\"1\":{\"189\":1}}],[\"枚举器\",{\"1\":{\"189\":1}}],[\"短字符串的时间\",{\"1\":{\"252\":1}}],[\"短期\",{\"1\":{\"189\":1}}],[\"短暂暂停后\",{\"1\":{\"151\":1}}],[\"先是访问自己的缓存\",{\"1\":{\"387\":1}}],[\"先重新设置父对象\",{\"1\":{\"182\":1}}],[\"先禁用对象\",{\"1\":{\"182\":1}}],[\"先肯定\",{\"1\":{\"60\":1}}],[\"失效\",{\"1\":{\"181\":1}}],[\"布局系统会被标记为脏\",{\"1\":{\"181\":1}}],[\"布局声明等\",{\"1\":{\"136\":1}}],[\"次的情况下\",{\"1\":{\"271\":1}}],[\"次迭代\",{\"1\":{\"265\":1}}],[\"次完全顺序的迭代得出了以下时间\",{\"1\":{\"265\":1}}],[\"次\",{\"1\":{\"180\":1}}],[\"次数是没有降低的\",{\"1\":{\"127\":1}}],[\"挑战在于并非所有\",{\"1\":{\"179\":1}}],[\"触摸输入转换为事件\",{\"1\":{\"179\":1}}],[\"触发器\",{\"1\":{\"62\":1,\"67\":1}}],[\"智能划分示例\",{\"1\":{\"178\":1}}],[\"划分时\",{\"1\":{\"178\":1}}],[\"划分\",{\"1\":{\"178\":1}}],[\"隔离\",{\"1\":{\"178\":2}}],[\"演化思维\",{\"1\":{\"382\":1}}],[\"演讲中\",{\"1\":{\"178\":1}}],[\"演示\",{\"1\":{\"137\":1}}],[\"附带的\",{\"1\":{\"175\":1}}],[\"附加到的\",{\"1\":{\"166\":1}}],[\"附加到着色器的关键字\",{\"1\":{\"112\":1}}],[\"周期的情境\",{\"1\":{\"175\":1}}],[\"至少发生一次\",{\"1\":{\"174\":1}}],[\"放到\",{\"1\":{\"396\":1}}],[\"放在自己的\",{\"1\":{\"173\":1}}],[\"放置所有\",{\"1\":{\"163\":1}}],[\"放置所有静态且不变的元素\",{\"1\":{\"163\":1}}],[\"放置在可批处理的四边形之前或之后\",{\"1\":{\"149\":1}}],[\"放置目录\",{\"1\":{\"17\":1}}],[\"隐藏时得到通知\",{\"1\":{\"173\":1}}],[\"隐藏的\",{\"1\":{\"173\":1}}],[\"隐性部分是高频更新的\",{\"1\":{\"127\":1}}],[\"超小内存是分在不同内存区域来进行管理的\",{\"1\":{\"401\":1}}],[\"超过\",{\"1\":{\"236\":1}}],[\"超出了本指南的范围\",{\"1\":{\"172\":1}}],[\"超级\",{\"1\":{\"134\":1,\"135\":1}}],[\"右列的锚点应为\",{\"1\":{\"172\":1}}],[\"右侧是\",{\"1\":{\"135\":1}}],[\"左右大小\",{\"1\":{\"394\":1}}],[\"左右声道放的是完全一样的数据\",{\"1\":{\"392\":1}}],[\"左列的锚点应为\",{\"1\":{\"172\":1}}],[\"左侧是所有\",{\"1\":{\"148\":1}}],[\"左侧是标准\",{\"1\":{\"135\":1}}],[\"显式用\",{\"1\":{\"404\":1}}],[\"显然\",{\"1\":{\"180\":1}}],[\"显著提高了\",{\"1\":{\"170\":1}}],[\"显示控制\",{\"1\":{\"364\":1}}],[\"显示在\",{\"1\":{\"306\":1}}],[\"显示表达式计算结果为哪些版本\",{\"1\":{\"302\":1}}],[\"显示的\",{\"1\":{\"206\":1}}],[\"显示的时间都相似\",{\"1\":{\"134\":1}}],[\"显示其他属性\",{\"1\":{\"112\":1}}],[\"显示\",{\"1\":{\"55\":1,\"59\":1,\"74\":1,\"104\":1,\"134\":1,\"173\":1,\"280\":1}}],[\"脏\",{\"1\":{\"170\":1}}],[\"脏的子项不会强制父项重建其几何体\",{\"1\":{\"141\":1}}],[\"滚动\",{\"1\":{\"170\":1}}],[\"滚动视图和其他特定组件的优化\",{\"1\":{\"139\":1}}],[\"池中池\",{\"1\":{\"404\":1}}],[\"池里面\",{\"1\":{\"390\":1}}],[\"池\",{\"1\":{\"170\":1,\"390\":1}}],[\"池化元素\",{\"1\":{\"170\":1}}],[\"池的一部分\",{\"1\":{\"97\":1}}],[\"继承自\",{\"1\":{\"225\":1}}],[\"继承显示设置\",{\"1\":{\"163\":1}}],[\"继续引导游戏\",{\"1\":{\"169\":1}}],[\"鉴于上述情况\",{\"1\":{\"272\":1}}],[\"鉴于\",{\"1\":{\"169\":2}}],[\"鉴于所有\",{\"1\":{\"166\":1}}],[\"直接创建项目模板\",{\"1\":{\"345\":1}}],[\"直接使用\",{\"1\":{\"169\":1}}],[\"直到游戏结束才释放\",{\"1\":{\"404\":1}}],[\"直到可以直接解决为止\",{\"1\":{\"382\":1}}],[\"直到处理完托管堆上的所有对象后才会恢复执行\",{\"1\":{\"275\":1}}],[\"直到没有足够大的空闲区域来分配所需的内存块\",{\"1\":{\"274\":1}}],[\"直到应用程序终止\",{\"1\":{\"200\":1}}],[\"直到它们结束\",{\"1\":{\"189\":1}}],[\"直到它完成\",{\"1\":{\"97\":1}}],[\"直到找不到\",{\"1\":{\"181\":1}}],[\"直到\",{\"1\":{\"143\":1,\"221\":1}}],[\"斜角\",{\"1\":{\"169\":1}}],[\"轮廓\",{\"1\":{\"169\":1}}],[\"轮廓和其他特殊效果的成本可以通过这些方法看到\",{\"1\":{\"150\":1}}],[\"现代的\",{\"1\":{\"271\":1}}],[\"现代手机的显示屏分辨率非常高\",{\"1\":{\"233\":1}}],[\"现有文本组件\",{\"1\":{\"169\":1}}],[\"现在是原始值而不是属性\",{\"1\":{\"271\":1}}],[\"现在将其除以\",{\"1\":{\"233\":1}}],[\"现在也首先按层\",{\"1\":{\"213\":1}}],[\"现在新的流程图如下\",{\"1\":{\"127\":1}}],[\"现在\",{\"1\":{\"127\":1,\"163\":1,\"401\":1}}],[\"现在对\",{\"1\":{\"42\":1}}],[\"现在称为\",{\"1\":{\"41\":1}}],[\"驱动的\",{\"1\":{\"168\":1}}],[\"集合\",{\"1\":{\"282\":1}}],[\"集合类公开了一个\",{\"1\":{\"282\":1}}],[\"集合和数组重用\",{\"0\":{\"282\":1}}],[\"集合操作\",{\"1\":{\"81\":1}}],[\"集成期间将完成资源初始化并执行某些线程安全操作\",{\"1\":{\"269\":1}}],[\"集成\",{\"1\":{\"269\":1}}],[\"集成在构建期间烘焙遮挡数据\",{\"1\":{\"213\":1}}],[\"集\",{\"1\":{\"168\":1}}],[\"另一种看待方式是\",{\"1\":{\"205\":1}}],[\"另一个是\",{\"1\":{\"168\":1}}],[\"另请参见批处理大小\",{\"1\":{\"135\":1}}],[\"点光源\",{\"1\":{\"329\":1}}],[\"点击\",{\"1\":{\"295\":1,\"296\":1,\"299\":1,\"300\":2,\"301\":2,\"302\":2}}],[\"点\",{\"1\":{\"168\":2}}],[\"接连不断的重复的字符串可能发展成性能问题\",{\"1\":{\"250\":1}}],[\"接下来\",{\"1\":{\"218\":1}}],[\"接收它们的回调\",{\"1\":{\"173\":1}}],[\"接收到指针事件时\",{\"1\":{\"166\":1}}],[\"接口都是没有做过任何形式优化的\",{\"1\":{\"369\":1}}],[\"接口与现有的\",{\"1\":{\"234\":1}}],[\"接口来实现\",{\"1\":{\"225\":1}}],[\"接口的所有已注册实现者\",{\"1\":{\"150\":1}}],[\"接口的\",{\"1\":{\"146\":1}}],[\"接口被遮罩\",{\"1\":{\"141\":1}}],[\"接口\",{\"1\":{\"56\":1,\"150\":1,\"254\":1}}],[\"阻挡对象\",{\"1\":{\"166\":1}}],[\"阻止\",{\"1\":{\"118\":2}}],[\"射线检测实现细节\",{\"1\":{\"166\":1}}],[\"射线检测优化技巧\",{\"1\":{\"166\":1}}],[\"射线检测优化\",{\"0\":{\"166\":1}}],[\"射线检测仍将工作\",{\"1\":{\"155\":1}}],[\"尽可能禁用\",{\"1\":{\"247\":1}}],[\"尽可能简化网格\",{\"1\":{\"217\":1}}],[\"尽可能在着色器中添加\",{\"1\":{\"216\":1}}],[\"尽可能使用网格压缩\",{\"1\":{\"248\":1}}],[\"尽可能使用\",{\"1\":{\"216\":1}}],[\"尽可能使用纹理图集\",{\"1\":{\"216\":1}}],[\"尽可能避免使用\",{\"0\":{\"181\":1},\"1\":{\"181\":1}}],[\"尽管反射在开发过程中是绝佳选择\",{\"1\":{\"254\":1}}],[\"尽管这对于简单的匹配操作仍然代价高昂\",{\"1\":{\"253\":1}}],[\"尽管正则表达式是匹配和操作字符串的强大方法\",{\"1\":{\"253\":1}}],[\"尽管您需要手动设置它们\",{\"1\":{\"218\":1}}],[\"尽管你使用分析来尝试找到高内存压力的来源\",{\"1\":{\"204\":1}}],[\"尽管名字叫\",{\"1\":{\"179\":1}}],[\"尽管名称如此\",{\"1\":{\"164\":1}}],[\"尽管存在这些问题\",{\"1\":{\"170\":1}}],[\"尽量降低音频文件的比特率\",{\"1\":{\"249\":1}}],[\"尽量多地烘焙\",{\"1\":{\"156\":1}}],[\"尽量用事件或委托替代\",{\"1\":{\"74\":1}}],[\"尽量使用\",{\"1\":{\"41\":1}}],[\"积极拆分为数十个\",{\"1\":{\"163\":1}}],[\"细节级别\",{\"0\":{\"218\":1},\"1\":{\"218\":1}}],[\"细节层次\",{\"1\":{\"52\":1}}],[\"细分为许多子\",{\"1\":{\"163\":1}}],[\"频繁的字体图集重建会迅速降低运行时性能并导致内存碎片\",{\"1\":{\"168\":1}}],[\"频繁变脏\",{\"1\":{\"161\":1}}],[\"频率\",{\"1\":{\"74\":1}}],[\"花哨\",{\"1\":{\"160\":1}}],[\"花费了过多时间\",{\"1\":{\"152\":1}}],[\"花费过多时间生成顶点\",{\"1\":{\"139\":1}}],[\"花费过多时间重建\",{\"1\":{\"139\":1}}],[\"花费在主线程上\",{\"1\":{\"130\":1}}],[\"名称和其他元素可以合并到产品的背景上\",{\"1\":{\"159\":1}}],[\"名称和其他信息\",{\"1\":{\"159\":1}}],[\"价格\",{\"1\":{\"159\":1}}],[\"产品\",{\"1\":{\"159\":1}}],[\"产品元素不能合并到商店\",{\"1\":{\"159\":1}}],[\"产生两次矢量乘法\",{\"1\":{\"260\":1}}],[\"产生\",{\"1\":{\"53\":1,\"253\":1}}],[\"东西的时候\",{\"1\":{\"394\":1}}],[\"东西\",{\"1\":{\"156\":1}}],[\"修复\",{\"1\":{\"316\":1}}],[\"修复填充率问题\",{\"0\":{\"154\":1}}],[\"修改版本的\",{\"1\":{\"371\":1}}],[\"修改颜色\",{\"1\":{\"359\":1}}],[\"修改着色器以添加每实例属性\",{\"1\":{\"120\":1}}],[\"修改方式\",{\"1\":{\"68\":1}}],[\"步骤\",{\"1\":{\"152\":1}}],[\"步骤中的拆分\",{\"1\":{\"152\":1}}],[\"步骤中的\",{\"1\":{\"149\":1}}],[\"似乎是最佳实践\",{\"1\":{\"163\":1}}],[\"似乎占用了过多时间\",{\"1\":{\"152\":1}}],[\"似乎使用了过多的\",{\"1\":{\"152\":1}}],[\"拆分后\",{\"1\":{\"254\":1}}],[\"拆分和延迟加载\",{\"1\":{\"254\":1}}],[\"拆分为至少两个部分\",{\"1\":{\"163\":1}}],[\"拆分\",{\"0\":{\"163\":1},\"1\":{\"152\":1}}],[\"拆箱\",{\"1\":{\"81\":1}}],[\"管线下\",{\"1\":{\"215\":1}}],[\"管道带来压力\",{\"1\":{\"151\":1}}],[\"管理器\",{\"1\":{\"85\":1}}],[\"管理与卸载\",{\"1\":{\"66\":1}}],[\"管理\",{\"1\":{\"44\":1,\"371\":1}}],[\"管理窗口的打开和关闭顺序\",{\"1\":{\"44\":1}}],[\"测量值中的较高者\",{\"1\":{\"151\":1}}],[\"测试程序集允许你编写测试并使用\",{\"1\":{\"298\":1}}],[\"测试比绘制像素更快\",{\"1\":{\"215\":1}}],[\"测试设备上的不同操作系统版本\",{\"1\":{\"204\":1}}],[\"测试表明\",{\"1\":{\"198\":1}}],[\"测试停止爬升变换层次结构\",{\"1\":{\"166\":1}}],[\"测试的速度就越快\",{\"1\":{\"166\":1}}],[\"测试\",{\"0\":{\"93\":1},\"1\":{\"166\":1,\"215\":1,\"246\":1,\"304\":1}}],[\"测试码\",{\"1\":{\"30\":1}}],[\"条目\",{\"1\":{\"363\":1}}],[\"条目来找到\",{\"1\":{\"151\":1}}],[\"条件更苛刻\",{\"1\":{\"127\":1}}],[\"窗格并单击\",{\"1\":{\"151\":1}}],[\"窗口的\",{\"1\":{\"275\":1}}],[\"窗口\",{\"1\":{\"190\":1,\"192\":1,\"212\":1,\"225\":1,\"232\":1,\"234\":1,\"244\":1,\"275\":1}}],[\"窗口中查看其属性\",{\"1\":{\"306\":1}}],[\"窗口中更改名称\",{\"1\":{\"294\":1}}],[\"窗口中的最后一个\",{\"1\":{\"148\":1}}],[\"窗口中\",{\"1\":{\"112\":1,\"294\":1,\"295\":1}}],[\"窗口中检查\",{\"1\":{\"112\":1}}],[\"窗口中打开\",{\"1\":{\"112\":1}}],[\"窗口中选择\",{\"1\":{\"112\":2,\"306\":1}}],[\"窗口会显示一条警告消息\",{\"1\":{\"106\":1}}],[\"窗口修改这些\",{\"1\":{\"45\":1,\"56\":1}}],[\"窗口栈\",{\"1\":{\"44\":1}}],[\"早期的一行应指示正在初始化哪个渲染路径\",{\"1\":{\"151\":1}}],[\"匹配\",{\"1\":{\"151\":1}}],[\"诊断工具\",{\"1\":{\"151\":1}}],[\"父级\",{\"1\":{\"150\":1}}],[\"考虑的是网络带宽\",{\"1\":{\"394\":1}}],[\"考虑以下示例代码\",{\"1\":{\"280\":1}}],[\"考虑通过高分辨率纹理添加细节以弥补低多边形几何体\",{\"1\":{\"217\":1}}],[\"考虑编写自己的布局计算代码\",{\"1\":{\"181\":1}}],[\"考虑到重建纹理图集的成本\",{\"1\":{\"168\":1}}],[\"考虑一个带有滚动产品窗格的商店\",{\"1\":{\"159\":1}}],[\"考虑一个具有背景\",{\"1\":{\"159\":1}}],[\"考虑移除这些组件并通过静态图像实现其视觉效果\",{\"1\":{\"152\":1}}],[\"考虑减少\",{\"1\":{\"152\":1}}],[\"考虑三个四边形\",{\"1\":{\"149\":1}}],[\"考察原理与深入理解\",{\"0\":{\"76\":1}}],[\"考察可维护性和扩展性\",{\"0\":{\"75\":1}}],[\"考察方向\",{\"1\":{\"66\":1}}],[\"考察候选人是否具备从cpu\",{\"1\":{\"60\":1}}],[\"考察点\",{\"1\":{\"60\":10}}],[\"考察对\",{\"1\":{\"46\":1}}],[\"考察你的分析流程\",{\"1\":{\"41\":1}}],[\"许多方法目前也不能正确内联\",{\"1\":{\"271\":1}}],[\"许多第三方解析器都是基于反射构建的\",{\"1\":{\"254\":1}}],[\"许多不同的因素会影响你在\",{\"1\":{\"204\":1}}],[\"许多用户在一个\",{\"1\":{\"178\":1}}],[\"许多移动设备上的\",{\"1\":{\"163\":1}}],[\"许多\",{\"1\":{\"149\":1,\"158\":1,\"163\":1}}],[\"破坏批处理的最常见设计相关原因是意外重叠\",{\"1\":{\"149\":1}}],[\"破解软件下载\",{\"1\":{\"30\":1}}],[\"甚至到一周\",{\"1\":{\"389\":1}}],[\"甚至是内存分配时机和方式也不同\",{\"1\":{\"389\":1}}],[\"甚至占主导地位\",{\"1\":{\"271\":1}}],[\"甚至标准\",{\"1\":{\"267\":1}}],[\"甚至将其公开\",{\"1\":{\"233\":1}}],[\"甚至无需进入\",{\"1\":{\"149\":1}}],[\"甚至不更新\",{\"1\":{\"55\":1}}],[\"行高亮\",{\"1\":{\"367\":1}}],[\"行为流的建立\",{\"1\":{\"383\":1}}],[\"行为树\",{\"1\":{\"331\":1}}],[\"行为型模式\",{\"1\":{\"312\":1}}],[\"行业\",{\"0\":{\"321\":1}}],[\"行识别\",{\"1\":{\"149\":1}}],[\"行\",{\"1\":{\"148\":1}}],[\"行动\",{\"1\":{\"72\":1,\"92\":1}}],[\"阶段运行两个不同的重建步骤\",{\"1\":{\"146\":1}}],[\"阶段开始时\",{\"1\":{\"118\":1}}],[\"才会向\",{\"1\":{\"392\":1}}],[\"才需要\",{\"1\":{\"247\":1}}],[\"才能开始渲染下一帧\",{\"1\":{\"230\":1}}],[\"才能在\",{\"1\":{\"199\":1}}],[\"才能既解决问题\",{\"1\":{\"77\":1}}],[\"才是实际更改由\",{\"1\":{\"145\":1}}],[\"<dir>\",{\"1\":{\"355\":2}}],[\"<example\",{\"1\":{\"284\":3}}],[\"<\",{\"1\":{\"144\":5,\"181\":1,\"252\":3,\"271\":4,\"279\":1,\"280\":2,\"281\":2,\"285\":6,\"303\":4,\"304\":4,\"358\":1,\"369\":4}}],[\"<=\",{\"1\":{\"144\":1,\"303\":4}}],[\"感兴趣的方法是\",{\"1\":{\"144\":1}}],[\"感谢\",{\"1\":{\"133\":1}}],[\"构建一套复杂系统时\",{\"1\":{\"382\":1}}],[\"构建项目时所采取的自动步骤的图表\",{\"1\":{\"371\":1}}],[\"构建项目会生成一个\",{\"1\":{\"199\":1}}],[\"构建你的网站\",{\"0\":{\"351\":1}}],[\"构建你的项目\",{\"1\":{\"199\":1}}],[\"构建着色器时\",{\"1\":{\"240\":1}}],[\"构建后\",{\"1\":{\"238\":1}}],[\"构建后检查\",{\"1\":{\"200\":1}}],[\"构建大小优化\",{\"1\":{\"208\":1}}],[\"构建大小会从\",{\"1\":{\"194\":1}}],[\"构建报告工具连接到你正在运行的\",{\"1\":{\"199\":1}}],[\"构建报告\",{\"0\":{\"199\":1},\"1\":{\"199\":1}}],[\"构建时间比\",{\"1\":{\"190\":2}}],[\"构建时的静态批处理\",{\"1\":{\"109\":1}}],[\"构建的\",{\"1\":{\"150\":1}}],[\"构建\",{\"0\":{\"143\":1},\"1\":{\"147\":2,\"339\":1}}],[\"队列\",{\"1\":{\"142\":1}}],[\"队列之前就被天空盒覆盖\",{\"1\":{\"60\":1}}],[\"子弹等\",{\"1\":{\"404\":1}}],[\"子系统容易对接\",{\"1\":{\"381\":1}}],[\"子系统\",{\"1\":{\"312\":1}}],[\"子系统和插件\",{\"1\":{\"96\":1}}],[\"子类进行\",{\"0\":{\"259\":1}}],[\"子类实现的\",{\"1\":{\"141\":1}}],[\"子\",{\"1\":{\"141\":2,\"163\":1,\"166\":2,\"178\":1}}],[\"由虚拟机的\",{\"1\":{\"371\":1}}],[\"由开发者控制\",{\"1\":{\"213\":1}}],[\"由超过一打\",{\"1\":{\"170\":1}}],[\"由\",{\"1\":{\"141\":1,\"151\":1,\"246\":1,\"269\":1}}],[\"由于并发情况下无法判断\",{\"1\":{\"369\":1}}],[\"由于最终二进制代码中的所有重复数据\",{\"1\":{\"272\":1}}],[\"由于假设\",{\"1\":{\"271\":1}}],[\"由于需要传播更改消息\",{\"1\":{\"270\":1}}],[\"由于需要进行字符串操作\",{\"1\":{\"261\":1}}],[\"由于大多数开发人员不打算在非开发构建中写入调试信息\",{\"1\":{\"263\":1}}],[\"由于设备现在是平台特定的\",{\"1\":{\"228\":1}}],[\"由于运行时内存和磁盘空间有限\",{\"1\":{\"219\":1}}],[\"由于层剔除\",{\"1\":{\"213\":1}}],[\"由于芯片获取信息的方式\",{\"1\":{\"212\":1}}],[\"由于地址空间布局随机化\",{\"1\":{\"205\":1}}],[\"由于托管堆的严重碎片化\",{\"1\":{\"200\":1}}],[\"由于托管内存系统使用\",{\"1\":{\"96\":1}}],[\"由于每个字节都很重要\",{\"1\":{\"200\":1}}],[\"由于即时编译\",{\"1\":{\"190\":1}}],[\"由于这种不可预测的行为\",{\"1\":{\"189\":1}}],[\"由于这种增加的复杂性\",{\"1\":{\"160\":1}}],[\"由于批量生成\",{\"1\":{\"178\":1}}],[\"由于上述原因\",{\"1\":{\"169\":1}}],[\"由于上述算法\",{\"1\":{\"168\":1}}],[\"由于隐藏和显示\",{\"1\":{\"168\":1}}],[\"由于透明队列中的对象是从后到前排序的\",{\"1\":{\"159\":1}}],[\"由于\",{\"1\":{\"108\":1,\"149\":1,\"154\":1,\"163\":1,\"168\":2,\"174\":1,\"238\":1,\"250\":1,\"253\":1,\"271\":1}}],[\"由于渲染状态更改很耗费资源\",{\"1\":{\"106\":1}}],[\"由于没有足够的连续空间\",{\"1\":{\"97\":1}}],[\"由于数据和逻辑分离\",{\"1\":{\"46\":1}}],[\"供\",{\"1\":{\"141\":1}}],[\"供策划直接编辑\",{\"1\":{\"75\":1}}],[\"术语\",{\"0\":{\"141\":1}}],[\"源码\",{\"1\":{\"369\":1}}],[\"源码剖析\",{\"0\":{\"368\":1,\"372\":1,\"373\":1},\"1\":{\"368\":1,\"372\":1}}],[\"源码分析\",{\"1\":{\"26\":1}}],[\"源代码中可以看到\",{\"1\":{\"394\":1}}],[\"源代码不会直接编译为本地机器码\",{\"1\":{\"371\":1}}],[\"源代码和与着色器编译相关的其他分配\",{\"1\":{\"239\":1}}],[\"源代码合并\",{\"1\":{\"175\":1}}],[\"源代码来获得一些\",{\"1\":{\"175\":1}}],[\"源代码定制\",{\"0\":{\"175\":1}}],[\"源代码并注释掉\",{\"1\":{\"165\":1}}],[\"源代码\",{\"1\":{\"139\":1}}],[\"陷阱\",{\"1\":{\"139\":1}}],[\"控件在性能方面相对相似\",{\"1\":{\"167\":1}}],[\"控件的优化问题\",{\"1\":{\"167\":1}}],[\"控件的根部放置单个\",{\"1\":{\"166\":1}}],[\"控件封装到预制件\",{\"1\":{\"163\":1}}],[\"控件\",{\"0\":{\"167\":1},\"1\":{\"139\":1,\"166\":1}}],[\"控制顺序\",{\"1\":{\"361\":1}}],[\"控制是否显示在侧边栏\",{\"1\":{\"361\":1}}],[\"控制应用程序的分辨率\",{\"1\":{\"233\":1}}],[\"控制\",{\"1\":{\"74\":1}}],[\"片段管道的压力\",{\"1\":{\"154\":1}}],[\"片段着色器\",{\"1\":{\"139\":1}}],[\"片元\",{\"0\":{\"51\":1},\"1\":{\"51\":1}}],[\"片元着色器\",{\"1\":{\"41\":1,\"76\":1}}],[\"虽然有很多内存可用\",{\"1\":{\"402\":1}}],[\"虽然写的是压缩\",{\"1\":{\"397\":1}}],[\"虽然同一程序集中类之间的循环引用在技术上没有问题\",{\"1\":{\"293\":1}}],[\"虽然一次访问属性的\",{\"1\":{\"285\":1}}],[\"虽然访问这些属性的成本与它们周围的执行代码相比小的多\",{\"1\":{\"272\":1}}],[\"虽然从表面上看这两段代码似乎是等效的\",{\"1\":{\"271\":1}}],[\"虽然所有其他加载机制都有内置的排队系统\",{\"1\":{\"269\":1}}],[\"虽然直接将适当的回调添加到需要它们的\",{\"1\":{\"267\":1}}],[\"虽然很简单\",{\"1\":{\"247\":1}}],[\"虽然现在可以使用\",{\"1\":{\"246\":1}}],[\"虽然\",{\"1\":{\"245\":1,\"284\":1}}],[\"虽然上述建议通常是正确的\",{\"1\":{\"216\":1}}],[\"虽然这种模式通常是可以接受的\",{\"1\":{\"262\":1}}],[\"虽然这种情况不常发生\",{\"1\":{\"203\":1}}],[\"虽然这听起来不难\",{\"1\":{\"254\":1}}],[\"虽然这样做相对简单\",{\"1\":{\"159\":1}}],[\"虽然多个程序集确实提供了模块化\",{\"1\":{\"198\":1}}],[\"虽然此功能在使用\",{\"1\":{\"192\":1}}],[\"虽然大多数\",{\"1\":{\"167\":1}}],[\"虽然乍一看将\",{\"1\":{\"163\":1}}],[\"虽然可以使用一些常识性技术来减少其中一项\",{\"1\":{\"139\":1}}],[\"虽然材质资源不同\",{\"1\":{\"110\":1}}],[\"硬件可以推送大量绘制调用\",{\"1\":{\"216\":1}}],[\"硬性规则很少见\",{\"1\":{\"139\":1}}],[\"硬核\",{\"0\":{\"55\":1}}],[\"仍将接收\",{\"1\":{\"173\":1}}],[\"仍处于实验阶段\",{\"1\":{\"137\":1}}],[\"仍然存在\",{\"1\":{\"389\":1}}],[\"仍然在循环条件之外\",{\"1\":{\"285\":1}}],[\"仍然附带与之前相同的二进制文件\",{\"1\":{\"244\":1}}],[\"仍然支持\",{\"1\":{\"190\":1}}],[\"仍然是积极的\",{\"1\":{\"134\":1}}],[\"仍然需要进行一些渲染状态更改\",{\"1\":{\"108\":1}}],[\"仍然可以单独剔除网格\",{\"1\":{\"106\":1,\"108\":1}}],[\"仍然没有足够的连续空间来容纳请求的内存量\",{\"1\":{\"97\":1}}],[\"播放视频\",{\"1\":{\"137\":1}}],[\"播放动画\",{\"1\":{\"57\":1}}],[\"播放动画时等待\",{\"1\":{\"49\":1}}],[\"准确地说\",{\"1\":{\"137\":1}}],[\"准备\",{\"1\":{\"109\":1}}],[\"准备和分派使用相同着色器变体的材质的绘制调用所需的\",{\"1\":{\"106\":1,\"112\":1}}],[\"准备几个你如何在实际项目中解决具体技术难题\",{\"1\":{\"72\":1}}],[\"准备一些你如何在实际项目中解决具体技术难题或进行性能优化的案例\",{\"1\":{\"66\":1}}],[\"准备数据给\",{\"1\":{\"55\":1}}],[\"准备好你最得意的项目\",{\"1\":{\"53\":1}}],[\"列提供了有关每个\",{\"1\":{\"148\":1}}],[\"列\",{\"1\":{\"136\":1,\"274\":1}}],[\"列表定义的符号作为\",{\"1\":{\"302\":1}}],[\"列表添加条目\",{\"1\":{\"302\":1}}],[\"列表指定必须定义哪些符号才能使用一个程序集\",{\"1\":{\"301\":1}}],[\"列表或字典\",{\"1\":{\"282\":1}}],[\"列表中将这些位置专门设为允许状态\",{\"1\":{\"248\":1}}],[\"列表中移除所有未使用的着色器\",{\"1\":{\"244\":1}}],[\"列表越小\",{\"1\":{\"166\":1}}],[\"列表进行排序\",{\"1\":{\"166\":1}}],[\"列表\",{\"1\":{\"46\":1,\"112\":1,\"282\":1}}],[\"信息需要\",{\"1\":{\"135\":1}}],[\"尝试根据更新频率对元素进行分组\",{\"1\":{\"178\":1}}],[\"尝试制作一个具有更多参数的\",{\"1\":{\"134\":1}}],[\"尝试减少着色器变体的数量\",{\"1\":{\"134\":1}}],[\"尝试进行意译\",{\"1\":{\"14\":1}}],[\"意味着当你更改程序集中的代码时\",{\"1\":{\"292\":1}}],[\"意味着\",{\"1\":{\"275\":1}}],[\"意味着您仍然有许多着色器变体\",{\"1\":{\"134\":1}}],[\"意义\",{\"1\":{\"76\":1}}],[\"计时器读数\",{\"1\":{\"163\":1}}],[\"计数没有大幅下降\",{\"1\":{\"134\":1}}],[\"计算结果为\",{\"1\":{\"303\":6}}],[\"计算帧缓冲区大小并比较从本机分析器获得的结果\",{\"1\":{\"233\":1}}],[\"计算需要大量测试\",{\"1\":{\"168\":1}}],[\"计算组件投影\",{\"1\":{\"150\":1}}],[\"计算批处理需要按深度对网格进行排序\",{\"1\":{\"143\":1}}],[\"计算完成后\",{\"1\":{\"57\":1}}],[\"计算该像素的最终颜色\",{\"1\":{\"51\":1}}],[\"计算颜色\",{\"1\":{\"51\":1}}],[\"计算机动画\",{\"1\":{\"329\":1}}],[\"计算机图形学\",{\"0\":{\"329\":1},\"1\":{\"318\":1}}],[\"计算机图形学与混合现实研讨会\",{\"1\":{\"30\":1}}],[\"计算机组成原理\",{\"1\":{\"30\":1}}],[\"见上文\",{\"1\":{\"134\":1}}],[\"目录中可以找到构建生成的静态文件\",{\"1\":{\"351\":1}}],[\"目录是你放置\",{\"1\":{\"347\":1}}],[\"目录结构\",{\"0\":{\"347\":1},\"1\":{\"361\":1}}],[\"目录\",{\"1\":{\"346\":1,\"347\":2}}],[\"目录和\",{\"1\":{\"346\":1}}],[\"目录选择根目录\",{\"1\":{\"339\":1}}],[\"目前\",{\"1\":{\"170\":1,\"228\":1,\"240\":1,\"269\":1}}],[\"目前处于开放\",{\"1\":{\"133\":1}}],[\"目标导向行为\",{\"1\":{\"331\":1}}],[\"目标并转到\",{\"1\":{\"151\":1}}],[\"目标不是\",{\"1\":{\"59\":1}}],[\"目标\",{\"1\":{\"44\":1}}],[\"端节省了\",{\"1\":{\"134\":1}}],[\"端还有\",{\"1\":{\"132\":1}}],[\"端的全平台优化\",{\"1\":{\"50\":1}}],[\"获取文本\",{\"1\":{\"377\":1}}],[\"获取数据\",{\"1\":{\"234\":1}}],[\"获取\",{\"1\":{\"131\":1}}],[\"获得更深入了解的一种可能解决方案是隔离和测量用于第三方集成的插件\",{\"1\":{\"207\":1}}],[\"获得一个稀有物品\",{\"1\":{\"60\":1}}],[\"获得物品\",{\"1\":{\"44\":1}}],[\"增加的\",{\"1\":{\"173\":1}}],[\"增加\",{\"1\":{\"131\":1}}],[\"增量模式并不会使垃圾回收整体更快\",{\"1\":{\"275\":1}}],[\"增量式垃圾回收可能会给应用程序带来问题\",{\"1\":{\"275\":1}}],[\"增量式垃圾回收示例\",{\"1\":{\"275\":1}}],[\"增量式垃圾回收\",{\"0\":{\"275\":1}}],[\"增量式\",{\"1\":{\"274\":1,\"275\":3,\"276\":1}}],[\"增量\",{\"1\":{\"42\":1,\"55\":2,\"74\":1}}],[\"键打开\",{\"1\":{\"130\":1}}],[\"键切换覆盖显示\",{\"1\":{\"130\":1}}],[\"禁用指定页面\",{\"1\":{\"364\":1}}],[\"禁用垃圾回收器后\",{\"1\":{\"276\":1}}],[\"禁用垃圾回收器的自动调用\",{\"1\":{\"276\":1}}],[\"禁用垃圾回收需要谨慎的内存管理\",{\"1\":{\"276\":1}}],[\"禁用垃圾回收\",{\"0\":{\"276\":1}}],[\"禁用增量式\",{\"1\":{\"275\":1}}],[\"禁用增量式垃圾回收时\",{\"1\":{\"275\":1}}],[\"禁用增量式垃圾回收\",{\"1\":{\"274\":1,\"275\":1}}],[\"禁用自动垃圾回收\",{\"1\":{\"274\":1}}],[\"禁用该选项后\",{\"1\":{\"248\":1}}],[\"禁用未使用的图形\",{\"1\":{\"244\":1}}],[\"禁用多线程渲染\",{\"1\":{\"228\":1}}],[\"禁用此对象上的\",{\"1\":{\"173\":1}}],[\"禁用包含\",{\"1\":{\"168\":1}}],[\"禁用任何和所有被遮挡的世界空间相机将通过简单地消除渲染无用\",{\"1\":{\"157\":1}}],[\"禁用对玩家不可见的元素\",{\"1\":{\"155\":1}}],[\"禁用不可见的相机输出\",{\"0\":{\"157\":1},\"1\":{\"154\":1}}],[\"禁用\",{\"0\":{\"173\":1},\"1\":{\"128\":1,\"152\":1,\"155\":1,\"168\":1,\"183\":3,\"193\":1,\"247\":1,\"248\":1}}],[\"固定的全局驱动程序\",{\"1\":{\"205\":1}}],[\"固定的\",{\"1\":{\"127\":1}}],[\"固定大小无锁分配器\",{\"1\":{\"98\":1}}],[\"采用与数据配置表列的对齐方式一样的办法\",{\"1\":{\"377\":1}}],[\"采用\",{\"1\":{\"205\":1}}],[\"采用的代码路径\",{\"1\":{\"180\":1}}],[\"采取了一个策略\",{\"1\":{\"127\":1}}],[\"采取对一个材质分配一个\",{\"1\":{\"127\":1}}],[\"采样次数可以迅速增加\",{\"1\":{\"159\":1}}],[\"采样\",{\"1\":{\"96\":1,\"329\":1}}],[\"缩放\",{\"1\":{\"127\":1}}],[\"倍以上\",{\"1\":{\"394\":1}}],[\"倍加速时\",{\"1\":{\"125\":1}}],[\"倍\",{\"1\":{\"125\":2,\"132\":3,\"134\":1,\"251\":1,\"271\":1}}],[\"年\",{\"1\":{\"125\":1}}],[\"程序员容易上手\",{\"1\":{\"381\":1}}],[\"程序员彼此工作的模块耦合度是否依然能保持原来的设计要求\",{\"1\":{\"381\":1}}],[\"程序员熟悉的方式比较字符串\",{\"1\":{\"251\":1}}],[\"程序化建模\",{\"1\":{\"318\":1}}],[\"程序集元数据值\",{\"1\":{\"308\":1}}],[\"程序集定义资产定义\",{\"1\":{\"306\":1}}],[\"程序集定义文件\",{\"0\":{\"198\":1},\"1\":{\"198\":1}}],[\"程序集文件名和程序集定义\",{\"1\":{\"306\":1}}],[\"程序集文件使用你分配给资产的名称\",{\"1\":{\"294\":1}}],[\"程序集允许你将\",{\"1\":{\"297\":1}}],[\"程序集中\",{\"1\":{\"307\":3}}],[\"程序集中定义的符号仅在该程序集内的脚本中生效\",{\"1\":{\"302\":1}}],[\"程序集中定义的类型\",{\"1\":{\"291\":1}}],[\"程序集中的代码\",{\"1\":{\"292\":1}}],[\"程序集只能使用\",{\"1\":{\"292\":1}}],[\"程序集声明显式引用\",{\"1\":{\"292\":1}}],[\"程序集被自动引用\",{\"1\":{\"292\":1}}],[\"程序集会引用所有其他程序集\",{\"1\":{\"292\":1}}],[\"程序集\",{\"0\":{\"289\":1,\"300\":1},\"1\":{\"124\":1,\"289\":2,\"291\":6,\"297\":1,\"307\":1,\"309\":1}}],[\"程序优化\",{\"1\":{\"124\":1,\"317\":1}}],[\"忽略在\",{\"1\":{\"119\":1}}],[\"值太多冗余的问题\",{\"1\":{\"377\":1}}],[\"值不够形象的问题\",{\"1\":{\"377\":1}}],[\"值也增多\",{\"1\":{\"377\":1}}],[\"值在编译时内联\",{\"1\":{\"272\":1}}],[\"值\",{\"1\":{\"272\":1,\"363\":1}}],[\"值得注意的是\",{\"1\":{\"149\":1,\"269\":1,\"389\":1}}],[\"值及其遮挡数据\",{\"1\":{\"118\":1}}],[\"值类型和引用类型\",{\"1\":{\"97\":1}}],[\"值类型和引用类型的区别\",{\"1\":{\"93\":1}}],[\"值类型赋值\",{\"1\":{\"93\":1}}],[\"值类型在赋值或作为参数传递时是传递副本\",{\"1\":{\"68\":1}}],[\"值类型在赋值或传递参数时是传递副本\",{\"1\":{\"63\":1}}],[\"值类型通常分配在栈\",{\"1\":{\"63\":1,\"68\":1}}],[\"值类型与引用类型\",{\"1\":{\"61\":1,\"66\":1}}],[\"值类型\",{\"1\":{\"48\":1,\"60\":1,\"75\":1,\"97\":1}}],[\"淡出值\",{\"1\":{\"118\":1}}],[\"yyyy\",{\"1\":{\"365\":2}}],[\"yml\",{\"1\":{\"339\":1,\"341\":1}}],[\"your\",{\"1\":{\"339\":1}}],[\"youtube\",{\"1\":{\"245\":1,\"254\":1}}],[\"youtu\",{\"1\":{\"125\":1}}],[\"y\",{\"1\":{\"118\":1,\"145\":2,\"172\":2,\"265\":2,\"283\":4,\"284\":2,\"285\":12}}],[\"yield\",{\"1\":{\"41\":1,\"49\":1,\"57\":1,\"60\":3,\"74\":1,\"80\":1,\"81\":2}}],[\"假设分代垃圾回收器和分配大小敏感的内存池可以有效地处理小的临时分配\",{\"1\":{\"284\":1}}],[\"假设默认\",{\"1\":{\"151\":1}}],[\"假设所有三个四边形相互重叠\",{\"1\":{\"149\":1}}],[\"假设所有实例都具有统一缩放\",{\"1\":{\"118\":1}}],[\"假设\",{\"1\":{\"149\":1,\"151\":1}}],[\"假如说有个需求\",{\"1\":{\"93\":1}}],[\"索引到实例数据数组\",{\"1\":{\"118\":1}}],[\"访问内存是一个慢速过程\",{\"1\":{\"387\":1}}],[\"访问量\",{\"1\":{\"363\":1}}],[\"访问者模式\",{\"1\":{\"312\":1}}],[\"访问\",{\"1\":{\"216\":1}}],[\"访问实例化常量缓冲区中的每实例着色器属性\",{\"1\":{\"118\":1}}],[\"访问连续内存\",{\"1\":{\"46\":1}}],[\"添加搜索框\",{\"0\":{\"357\":1}}],[\"添加到项目中的预编译程序集\",{\"1\":{\"292\":1}}],[\"添加到图集中的\",{\"1\":{\"168\":1}}],[\"添加网格渲染器的任何运行时代码也都需要处理这些设置\",{\"1\":{\"248\":1}}],[\"添加了\",{\"1\":{\"221\":1}}],[\"添加的\",{\"1\":{\"221\":1}}],[\"添加文本时\",{\"1\":{\"168\":1}}],[\"添加大型新纹理可能会显著增加保存\",{\"1\":{\"159\":1}}],[\"添加\",{\"1\":{\"118\":1,\"170\":1,\"179\":1,\"355\":1}}],[\"添加每实例数据的示例\",{\"1\":{\"118\":1}}],[\"受限于填充率\",{\"1\":{\"159\":1}}],[\"受限制\",{\"1\":{\"47\":1}}],[\"受\",{\"1\":{\"116\":1}}],[\"选项来设置\",{\"1\":{\"358\":1}}],[\"选项允许你更改被引用的程序集定义资产的文件名\",{\"1\":{\"299\":1}}],[\"选项并选择要排除的特定平台\",{\"1\":{\"296\":1}}],[\"选项并添加对\",{\"1\":{\"292\":1}}],[\"选项对动画模型有着显著的性能影响\",{\"1\":{\"248\":1}}],[\"选项更改为与项目使用的\",{\"1\":{\"151\":1}}],[\"选项卡\",{\"1\":{\"151\":1,\"212\":1,\"232\":1,\"234\":1}}],[\"选项\",{\"1\":{\"115\":2,\"118\":1,\"201\":1,\"211\":1,\"248\":1,\"291\":1,\"300\":1,\"359\":2}}],[\"选择不升级\",{\"1\":{\"401\":1}}],[\"选择分支\",{\"1\":{\"339\":1}}],[\"选择程序集定义资产\",{\"1\":{\"302\":1}}],[\"选择该程序集的程序集定义\",{\"1\":{\"301\":1}}],[\"选择需要引用的程序集的程序集定义\",{\"1\":{\"299\":1,\"300\":1}}],[\"选择新的程序集定义资产\",{\"1\":{\"296\":1}}],[\"选择新的程序集定义引用资产\",{\"1\":{\"295\":1}}],[\"选择实现线程的项目使用内置的\",{\"1\":{\"254\":1}}],[\"选择正确的压缩对于将纹理缩小到合适的大小以节省内存带宽至关重要\",{\"1\":{\"219\":1}}],[\"选择要使用的\",{\"1\":{\"339\":1}}],[\"选择要检查的\",{\"1\":{\"112\":1}}],[\"选择要批处理的\",{\"1\":{\"109\":1}}],[\"选择要编辑的值旁边的锁定图标\",{\"1\":{\"104\":1}}],[\"选择\",{\"1\":{\"75\":1,\"104\":1,\"112\":2,\"151\":1,\"232\":1,\"234\":1,\"273\":1,\"302\":1,\"377\":1}}],[\"选择哪种技术\",{\"1\":{\"60\":1}}],[\"选择场景\",{\"1\":{\"57\":1}}],[\"绕过\",{\"1\":{\"114\":1}}],[\"展开\",{\"1\":{\"112\":1,\"151\":1}}],[\"展示你的问题分析能力\",{\"1\":{\"72\":1}}],[\"展示你的问题分析能力和设计思路\",{\"1\":{\"66\":1}}],[\"菜单项\",{\"1\":{\"151\":1}}],[\"菜单访问\",{\"1\":{\"149\":1}}],[\"菜单\",{\"1\":{\"112\":1,\"119\":1,\"151\":1,\"212\":1,\"225\":1,\"232\":1,\"234\":1,\"244\":1,\"294\":1,\"295\":1}}],[\"随后\",{\"1\":{\"274\":1}}],[\"随后又取消了订阅\",{\"1\":{\"267\":1}}],[\"随\",{\"1\":{\"199\":1}}],[\"随着代码的增多\",{\"1\":{\"377\":1}}],[\"随着透明度的累积\",{\"1\":{\"215\":1}}],[\"随着\",{\"1\":{\"159\":1,\"161\":1,\"170\":1}}],[\"随时可用\",{\"1\":{\"127\":1}}],[\"随时可以使用\",{\"1\":{\"112\":1}}],[\"随渲染帧率变化\",{\"1\":{\"60\":1}}],[\"绑定和绘制命令的批处理减少了绘制调用之间的\",{\"1\":{\"112\":1}}],[\"绑定之代码编辑器\",{\"1\":{\"19\":1}}],[\"进内存的时候\",{\"1\":{\"390\":1}}],[\"进程间的内存分配\",{\"1\":{\"387\":1}}],[\"进程之间共享的页会被多次计数\",{\"1\":{\"205\":1}}],[\"进程\",{\"1\":{\"205\":1}}],[\"进程的更清晰信息\",{\"1\":{\"205\":1}}],[\"进度条\",{\"1\":{\"163\":1}}],[\"进入\",{\"1\":{\"112\":1}}],[\"进行回收的时候\",{\"1\":{\"400\":1}}],[\"进行比较的成本虽然低\",{\"1\":{\"259\":1}}],[\"进行任何交互\",{\"1\":{\"254\":1}}],[\"进行序列化\",{\"1\":{\"254\":1}}],[\"进行验证\",{\"1\":{\"218\":1}}],[\"进行排序\",{\"1\":{\"215\":1}}],[\"进行剔除\",{\"1\":{\"213\":1}}],[\"进行内存分页\",{\"1\":{\"203\":1}}],[\"进行静态批处理\",{\"1\":{\"106\":1,\"109\":2}}],[\"进行分配\",{\"1\":{\"99\":1}}],[\"进行分析\",{\"1\":{\"41\":1}}],[\"进行大规模并行计算\",{\"1\":{\"75\":1}}],[\"进行性能优化或设计复杂系统的案例\",{\"1\":{\"72\":1}}],[\"进行性能分析\",{\"1\":{\"22\":1}}],[\"进行异步加载\",{\"1\":{\"65\":1,\"70\":1}}],[\"进行交流\",{\"1\":{\"60\":1}}],[\"⋮\",{\"1\":{\"112\":1}}],[\"面向开发者多版本控制工具\",{\"1\":{\"315\":1}}],[\"面板中查看着色器的兼容性状态\",{\"1\":{\"129\":1}}],[\"面板中检查着色器的兼容性\",{\"1\":{\"112\":1}}],[\"面板中检查着色器的兼容性状态\",{\"1\":{\"112\":1}}],[\"面试常见问题与回答\",{\"1\":{\"93\":1}}],[\"面试中\",{\"1\":{\"92\":1}}],[\"面试中经常考察的几个技术方向及核心问题\",{\"1\":{\"61\":1}}],[\"面试准备建议\",{\"0\":{\"72\":1}}],[\"面试备考建议\",{\"0\":{\"66\":1}}],[\"面试问题\",{\"1\":{\"74\":1,\"75\":1,\"76\":1,\"77\":1}}],[\"面试问题清单\",{\"1\":{\"61\":1}}],[\"面试问题并做好准备\",{\"1\":{\"61\":1}}],[\"面试题与答案\",{\"0\":{\"54\":1}}],[\"面试官期望看到的不仅仅是技术点的罗列\",{\"1\":{\"92\":1}}],[\"面试官不只想听\",{\"1\":{\"66\":1,\"72\":1}}],[\"面试官想听的\",{\"1\":{\"48\":1}}],[\"面试官会着重考察你定位和解决性能问题的能力\",{\"1\":{\"40\":1}}],[\"面试官会期望你不仅精通\",{\"1\":{\"40\":1}}],[\"面试\",{\"1\":{\"40\":1,\"53\":1}}],[\"单独做自己的跟踪\",{\"1\":{\"390\":1}}],[\"单独剔除它们\",{\"1\":{\"111\":1,\"288\":1}}],[\"单个客户端将所有渲染命令\",{\"1\":{\"225\":1}}],[\"单个客户端在主线程上执行所有渲染命令\",{\"1\":{\"224\":1}}],[\"单工作线程\",{\"0\":{\"225\":1,\"227\":1},\"1\":{\"225\":1,\"227\":1}}],[\"单客户端\",{\"0\":{\"224\":1,\"225\":1},\"1\":{\"227\":1}}],[\"单线程渲染\",{\"0\":{\"224\":1},\"1\":{\"223\":1}}],[\"单参数\",{\"1\":{\"168\":1}}],[\"单击垂直省略号图标并选择\",{\"1\":{\"112\":1}}],[\"单击垂直省略号图标\",{\"1\":{\"112\":1}}],[\"单例模式\",{\"1\":{\"312\":1}}],[\"单例\",{\"1\":{\"85\":1}}],[\"几何\",{\"1\":{\"325\":1}}],[\"几何体\",{\"0\":{\"217\":1},\"1\":{\"141\":1}}],[\"几何体提交\",{\"1\":{\"74\":1}}],[\"几个较小的专用预定义程序集\",{\"1\":{\"289\":1}}],[\"几个关键系统的底层行为\",{\"1\":{\"140\":1}}],[\"几乎在所有平台上都能工作\",{\"1\":{\"133\":1}}],[\"几乎所有\",{\"1\":{\"110\":1}}],[\"始终以尽可能大的图集大小烘焙光照贴图\",{\"1\":{\"216\":1}}],[\"始终在检查器中检查新着色器的兼容性状态\",{\"1\":{\"136\":1}}],[\"始终对动态几何体\",{\"1\":{\"110\":1}}],[\"始终运行在主线程上\",{\"1\":{\"49\":1}}],[\"写成\",{\"1\":{\"389\":1}}],[\"写作时间\",{\"1\":{\"365\":1}}],[\"写作日期\",{\"1\":{\"363\":1}}],[\"写入\",{\"1\":{\"215\":1}}],[\"写\",{\"1\":{\"109\":1}}],[\"具有不会导致内存分配的替代版本\",{\"1\":{\"286\":1}}],[\"具有上述类似\",{\"1\":{\"267\":1}}],[\"具有相对简单的结构\",{\"1\":{\"172\":1}}],[\"具有大量文本组件的\",{\"1\":{\"168\":1}}],[\"具有或是一个\",{\"1\":{\"166\":1}}],[\"具有毫秒\",{\"1\":{\"147\":1}}],[\"具有额外的渲染器参数\",{\"1\":{\"110\":1}}],[\"具有光照贴图的\",{\"1\":{\"110\":1}}],[\"具有\",{\"1\":{\"109\":2}}],[\"具体需要自己试\",{\"1\":{\"397\":1}}],[\"具体取决于目标平台\",{\"1\":{\"371\":1}}],[\"具体取决于使用的脚本后端\",{\"1\":{\"284\":1}}],[\"具体取决于分辨率\",{\"1\":{\"232\":1}}],[\"具体取决于您使用的图形功能\",{\"1\":{\"229\":1}}],[\"具体取决于平台可用性和图形\",{\"1\":{\"223\":1}}],[\"具体取决于底层硬件\",{\"1\":{\"216\":1}}],[\"具体取决于其形状\",{\"1\":{\"168\":1}}],[\"具体取决于场景\",{\"1\":{\"125\":1}}],[\"具体\",{\"1\":{\"52\":1}}],[\"处\",{\"1\":{\"178\":1}}],[\"处的内容\",{\"1\":{\"178\":1}}],[\"处于活动状态\",{\"1\":{\"109\":1,\"166\":1}}],[\"处理几何体的压力度量\",{\"1\":{\"151\":1}}],[\"处理非常短生命周期分配的线程本地存储\",{\"1\":{\"104\":1}}],[\"处理\",{\"1\":{\"49\":1}}],[\"旋转或缩放构成静态批处理的整个网格组合\",{\"1\":{\"109\":1}}],[\"警告\",{\"1\":{\"108\":1,\"111\":1,\"112\":1,\"288\":1}}],[\"否定\",{\"1\":{\"301\":1}}],[\"否则它不会过多地降低性能\",{\"1\":{\"280\":1}}],[\"否则这种瞬态托管内存波动都是不可接受的\",{\"1\":{\"253\":1}}],[\"否则应尽可能避免使用它\",{\"1\":{\"247\":1}}],[\"否则\",{\"1\":{\"118\":1,\"217\":1,\"221\":1,\"272\":1}}],[\"否则会导致资源丢失\",{\"1\":{\"70\":1}}],[\"否\",{\"1\":{\"108\":1,\"110\":1,\"112\":1,\"118\":3}}],[\"函数的变体\",{\"1\":{\"228\":1}}],[\"函数时\",{\"1\":{\"228\":1}}],[\"函数\",{\"1\":{\"228\":1}}],[\"函数生成命令\",{\"1\":{\"228\":1}}],[\"函数手动将多个网格组合成一个网格\",{\"1\":{\"106\":1}}],[\"函数写错\",{\"1\":{\"60\":1}}],[\"批处理问题的主要方法\",{\"1\":{\"178\":1}}],[\"批处理代码进行了实质性重写\",{\"1\":{\"163\":1}}],[\"批处理通过自上而下遍历层次结构并收集所有使用相同材质\",{\"1\":{\"162\":1}}],[\"批处理计算进行极深入的分析\",{\"1\":{\"150\":1}}],[\"批处理在设备上通常应该相同\",{\"1\":{\"148\":1}}],[\"批处理查看器仅在编辑器中工作\",{\"1\":{\"148\":1}}],[\"批处理构建过程\",{\"1\":{\"150\":1}}],[\"批处理构建过程的本机代码计算\",{\"1\":{\"148\":1}}],[\"批处理构建过程是\",{\"1\":{\"143\":1}}],[\"批处理重建次数过多\",{\"1\":{\"139\":1}}],[\"批处理大小仅为\",{\"1\":{\"135\":1}}],[\"批处理而不是继续现有的批处理\",{\"1\":{\"112\":1}}],[\"批处理的详细信息\",{\"1\":{\"112\":1}}],[\"批处理的绘制调用数量较少\",{\"1\":{\"112\":1}}],[\"批处理的着色器不同\",{\"1\":{\"112\":1}}],[\"批处理的着色器与前一个\",{\"1\":{\"112\":1}}],[\"批处理的状态\",{\"1\":{\"112\":1}}],[\"批处理显示\",{\"1\":{\"112\":1}}],[\"批处理应包含尽可能多的\",{\"1\":{\"112\":1}}],[\"批处理器创建新的\",{\"1\":{\"112\":1}}],[\"批处理器使用了不同的着色器\",{\"1\":{\"112\":1}}],[\"批处理器使用专用代码路径在大型\",{\"1\":{\"112\":2}}],[\"批处理器批处理的状态\",{\"1\":{\"112\":1}}],[\"批处理器更高效\",{\"1\":{\"112\":2}}],[\"批处理器不兼容\",{\"1\":{\"112\":6}}],[\"批处理器不会进行任何渲染状态更改\",{\"1\":{\"112\":1}}],[\"批处理器渲染工作流程\",{\"1\":{\"112\":1}}],[\"批处理器是一种低级渲染循环\",{\"1\":{\"112\":1}}],[\"批处理器将一系列\",{\"1\":{\"112\":1}}],[\"批处理器的兼容性\",{\"1\":{\"112\":1}}],[\"批处理器的信息\",{\"1\":{\"112\":1}}],[\"批处理器的工作原理\",{\"1\":{\"112\":2}}],[\"批处理器\",{\"1\":{\"112\":11}}],[\"批处理器代码路径兼容\",{\"1\":{\"112\":1}}],[\"批处理器代码路径\",{\"1\":{\"112\":1}}],[\"批处理器兼容性并为材质启用\",{\"1\":{\"112\":1}}],[\"批处理器兼容性\",{\"1\":{\"112\":1}}],[\"批处理器兼容\",{\"1\":{\"112\":3}}],[\"批处理器减少了绘制调用之间的渲染状态更改\",{\"1\":{\"112\":1}}],[\"批处理器减少了\",{\"1\":{\"112\":2}}],[\"批处理是一种\",{\"1\":{\"112\":1}}],[\"批处理该渲染器的绘制调用\",{\"1\":{\"108\":1}}],[\"批处理中获得最佳结果\",{\"1\":{\"108\":1}}],[\"批处理使用相同材质的\",{\"1\":{\"108\":1}}],[\"批处理比手动合并网格有几个优点\",{\"1\":{\"108\":1}}],[\"批处理方法的特定信息\",{\"1\":{\"108\":1}}],[\"批处理方法的渲染管线兼容性的信息\",{\"1\":{\"108\":1}}],[\"批处理方法\",{\"1\":{\"108\":1}}],[\"批处理\",{\"0\":{\"108\":1,\"143\":1},\"1\":{\"106\":2,\"108\":5,\"109\":3,\"110\":2,\"111\":1,\"112\":1,\"124\":1,\"135\":3,\"139\":1,\"149\":1,\"288\":1}}],[\"没必要就不要开\",{\"1\":{\"396\":1}}],[\"没听清\",{\"1\":{\"390\":1,\"401\":1}}],[\"没这一步\",{\"1\":{\"106\":1}}],[\"没有释放\",{\"1\":{\"403\":1}}],[\"没有被释放掉\",{\"1\":{\"403\":1}}],[\"没有被访问到\",{\"1\":{\"399\":1}}],[\"没有内存压缩\",{\"1\":{\"402\":1}}],[\"没有\",{\"1\":{\"392\":1}}],[\"没有自动创建缺失单例的实例\",{\"1\":{\"262\":1}}],[\"没有额外代码的情况下\",{\"1\":{\"254\":1}}],[\"没有手指的动画\",{\"1\":{\"218\":1}}],[\"没有交换机制\",{\"1\":{\"205\":1}}],[\"没有简单的答案\",{\"1\":{\"204\":1}}],[\"没有无操作检查\",{\"1\":{\"184\":1}}],[\"没有分离重新父级变换和更改其兄弟顺序的回调\",{\"1\":{\"170\":1}}],[\"没有动态字体功能\",{\"1\":{\"169\":1}}],[\"没有鼠标的设备将不会查询鼠标位置\",{\"1\":{\"165\":1}}],[\"没有鼠标的\",{\"1\":{\"165\":1}}],[\"没有覆盖整个\",{\"1\":{\"157\":1}}],[\"没有变化\",{\"1\":{\"132\":1,\"134\":2}}],[\"没有将该绘制调用与前一个批处理在一起的原因\",{\"1\":{\"112\":1}}],[\"没有包含该物体的\",{\"1\":{\"60\":1}}],[\"没有启用\",{\"1\":{\"55\":1}}],[\"没有方法\",{\"1\":{\"46\":1}}],[\"没有标准答案\",{\"1\":{\"44\":1}}],[\"笔记\",{\"0\":{\"105\":1}}],[\"笔记网站\",{\"1\":{\"30\":1}}],[\"概述\",{\"0\":{\"187\":1}}],[\"概述页面\",{\"1\":{\"104\":1}}],[\"概念\",{\"1\":{\"64\":1}}],[\"云\",{\"1\":{\"104\":2}}],[\"云风的github\",{\"1\":{\"30\":1}}],[\"云风的blog\",{\"1\":{\"30\":1}}],[\"预计阅读时间\",{\"1\":{\"363\":1}}],[\"预计任何脏的\",{\"1\":{\"148\":1}}],[\"预览中的\",{\"1\":{\"305\":1}}],[\"预编译\",{\"1\":{\"291\":1}}],[\"预定义程序集不会重新编译\",{\"1\":{\"292\":1}}],[\"预定义程序集中的类可以使用项目中任何其他程序集定义的所有类型\",{\"1\":{\"292\":1}}],[\"预定义的那几个程序集\",{\"1\":{\"291\":1}}],[\"预定义\",{\"1\":{\"291\":2,\"292\":2}}],[\"预处理器代码块中的方法以及对该方法的所有调用的处理情况相同\",{\"1\":{\"263\":1}}],[\"预先组合\",{\"1\":{\"106\":1}}],[\"预加载着色器可以减少场景加载时间问题\",{\"1\":{\"243\":1}}],[\"预加载管理器栈大小\",{\"1\":{\"104\":1}}],[\"预加载块大小preload\",{\"1\":{\"104\":1}}],[\"预制件\",{\"1\":{\"61\":1,\"66\":1}}],[\"启动一个热重载的开发服务器\",{\"1\":{\"350\":1}}],[\"启动开发服务器\",{\"0\":{\"350\":1}}],[\"启动期间将自动进行初始化\",{\"1\":{\"257\":1}}],[\"启动时生效\",{\"1\":{\"104\":1}}],[\"启动时打印的分配器设置列表\",{\"1\":{\"104\":1}}],[\"启用博客模式\",{\"1\":{\"358\":1}}],[\"启用资产的\",{\"1\":{\"292\":1}}],[\"启用增量式垃圾回收时\",{\"1\":{\"275\":1}}],[\"启用增量式\",{\"1\":{\"275\":1}}],[\"启用网格压缩可减少用于表示模型数据不同通道的浮点数的位数\",{\"1\":{\"248\":1}}],[\"启用功能\",{\"1\":{\"240\":1}}],[\"启用图形作业时\",{\"1\":{\"228\":1}}],[\"启用运动矢量会影响性能\",{\"1\":{\"214\":1}}],[\"启用预览包\",{\"1\":{\"199\":1}}],[\"启用后\",{\"1\":{\"149\":1}}],[\"启用\",{\"1\":{\"74\":1,\"109\":2,\"110\":1,\"112\":1,\"116\":1,\"128\":1,\"133\":1,\"134\":1,\"137\":1,\"193\":1,\"274\":1,\"299\":1,\"300\":1}}],[\"到主线程上\",{\"1\":{\"269\":1}}],[\"到\",{\"1\":{\"102\":1,\"103\":1,\"125\":1,\"234\":1,\"254\":1,\"275\":1,\"312\":1,\"339\":1}}],[\"少量溢出分配是可以接受的\",{\"1\":{\"102\":1,\"103\":1}}],[\"带有\",{\"1\":{\"137\":1}}],[\"带有共享线程块大小的自定义值\",{\"1\":{\"101\":1}}],[\"带宽\",{\"1\":{\"136\":1}}],[\"带来负担\",{\"1\":{\"63\":1}}],[\"带来了\",{\"1\":{\"60\":1}}],[\"带来的\",{\"1\":{\"41\":1}}],[\"两次\",{\"1\":{\"394\":1}}],[\"两个组件主要是在剔除的方法上有所区别\",{\"1\":{\"379\":1}}],[\"两个动态堆分配器\",{\"1\":{\"101\":1}}],[\"两级隔离适配\",{\"1\":{\"98\":1}}],[\"头部是分配器在分配了\",{\"1\":{\"100\":1}}],[\"头部\",{\"1\":{\"100\":1}}],[\"个中间字符串\",{\"1\":{\"250\":1}}],[\"个字符串连接需要分配\",{\"1\":{\"250\":1}}],[\"个关键字\",{\"1\":{\"240\":1}}],[\"个变体\",{\"1\":{\"238\":1}}],[\"个通道\",{\"1\":{\"236\":1}}],[\"个网格时才开始变得有用\",{\"1\":{\"216\":1}}],[\"个或更多内核\",{\"1\":{\"143\":1}}],[\"个材质中的显性参数\",{\"1\":{\"127\":1}}],[\"个分别来村\",{\"1\":{\"127\":1}}],[\"个物体的\",{\"1\":{\"127\":1}}],[\"个物体\",{\"1\":{\"127\":1}}],[\"个物体共享一个\",{\"1\":{\"127\":1}}],[\"个实例化精灵的绘制调用时\",{\"1\":{\"118\":1}}],[\"个的网格使用\",{\"1\":{\"117\":1}}],[\"个顶点的网格应用动态批处理\",{\"1\":{\"110\":1}}],[\"个顶点属性和\",{\"1\":{\"110\":1}}],[\"个顶点\",{\"1\":{\"109\":1,\"110\":2}}],[\"个块\",{\"1\":{\"103\":1}}],[\"个\",{\"1\":{\"102\":1,\"103\":1,\"127\":1,\"218\":1,\"240\":1,\"254\":1}}],[\"个桶\",{\"1\":{\"100\":2}}],[\"个苹果\",{\"1\":{\"56\":3}}],[\"自己建一个内存池\",{\"1\":{\"404\":1}}],[\"自己重新写的\",{\"1\":{\"401\":1}}],[\"自己写的\",{\"1\":{\"389\":1}}],[\"自己生成静态批处理\",{\"1\":{\"216\":1}}],[\"自己定义的\",{\"1\":{\"127\":1}}],[\"自定义标题\",{\"1\":{\"366\":5}}],[\"自定义标题details\",{\"1\":{\"366\":1}}],[\"自定义哪些页面是文章\",{\"1\":{\"358\":1}}],[\"自定义渲染管线\",{\"1\":{\"318\":1}}],[\"自定义程序集中的脚本不再被添加到默认程序集中\",{\"1\":{\"289\":1}}],[\"自定义\",{\"1\":{\"170\":1,\"252\":2}}],[\"自定义着色器不需要每实例数据\",{\"1\":{\"120\":1}}],[\"自定义可编程渲染管线\",{\"1\":{\"108\":1,\"109\":1,\"110\":1,\"112\":1,\"114\":1,\"118\":1}}],[\"自定义的字段\",{\"1\":{\"104\":1}}],[\"自定义值\",{\"1\":{\"102\":1}}],[\"自定义分配器\",{\"0\":{\"104\":1},\"1\":{\"99\":1}}],[\"自动生成\",{\"1\":{\"363\":2}}],[\"自动化\",{\"1\":{\"323\":1}}],[\"自动管理的内存区域\",{\"1\":{\"97\":2}}],[\"自动内存管理使您可以快速\",{\"1\":{\"277\":1}}],[\"自动内存管理比显式分配\",{\"1\":{\"97\":1}}],[\"自动内存管理\",{\"1\":{\"97\":1}}],[\"自动控制的内存区域\",{\"1\":{\"96\":1}}],[\"自动依赖管理\",{\"1\":{\"76\":1}}],[\"自动将其从池中移除并销毁\",{\"1\":{\"69\":1}}],[\"自动将满足条件的小型网格物体\",{\"1\":{\"64\":1,\"69\":1}}],[\"自动处理\",{\"1\":{\"41\":1}}],[\"未压缩纹理添加到项目中\",{\"1\":{\"246\":1}}],[\"未来\",{\"0\":{\"137\":1}}],[\"未在\",{\"1\":{\"99\":1}}],[\"未保留的内存\",{\"1\":{\"97\":1}}],[\"块分别解压出来\",{\"1\":{\"394\":1}}],[\"块分配器\",{\"1\":{\"200\":1}}],[\"块\",{\"1\":{\"394\":1}}],[\"块之间的空间视为空闲并标记为可用\",{\"1\":{\"274\":1}}],[\"块中使用\",{\"1\":{\"118\":1}}],[\"块中添加一个新的\",{\"1\":{\"112\":1}}],[\"块中分配\",{\"1\":{\"99\":1}}],[\"块大小editor\",{\"1\":{\"104\":1}}],[\"块大小profiler\",{\"1\":{\"104\":1}}],[\"块大小navmesh\",{\"1\":{\"104\":1}}],[\"块大小gi\",{\"1\":{\"104\":1}}],[\"块大小cloud\",{\"1\":{\"104\":1}}],[\"块大小audio\",{\"1\":{\"104\":1}}],[\"块大小job\",{\"1\":{\"104\":2}}],[\"块大小设置为\",{\"1\":{\"99\":1}}],[\"块内\",{\"1\":{\"58\":1}}],[\"半个块或更大的分配对于动态堆分配器来说太大\",{\"1\":{\"99\":1}}],[\"半透明物体的渲染顺序\",{\"1\":{\"93\":1}}],[\"前期的设计和开发大致占三分\",{\"1\":{\"382\":1}}],[\"前三个部分始终是数字\",{\"1\":{\"305\":1}}],[\"前向渲染路径\",{\"1\":{\"215\":1}}],[\"前几个数字值得讨论\",{\"1\":{\"205\":1}}],[\"前提是您使用了\",{\"1\":{\"98\":1}}],[\"前置任务\",{\"1\":{\"56\":1}}],[\"桶大小的数量\",{\"1\":{\"104\":2}}],[\"桶分配器shared\",{\"1\":{\"104\":1}}],[\"桶分配器块数bucket\",{\"1\":{\"104\":2}}],[\"桶分配器块大小bucket\",{\"1\":{\"104\":2}}],[\"桶分配器桶数bucket\",{\"1\":{\"104\":2}}],[\"桶分配器粒度bucket\",{\"1\":{\"104\":2}}],[\"桶分配器会为开发版本\",{\"1\":{\"100\":1}}],[\"桶分配器用作加速小型分配的第一步\",{\"1\":{\"100\":1}}],[\"桶分配器是一种快速的无锁分配器\",{\"1\":{\"100\":1}}],[\"桶分配器\",{\"0\":{\"100\":1}}],[\"桶\",{\"1\":{\"98\":1,\"101\":1}}],[\"持久的\",{\"1\":{\"98\":1}}],[\"期间避免这样做\",{\"1\":{\"97\":1}}],[\"仅\",{\"1\":{\"363\":1}}],[\"仅包含\",{\"1\":{\"297\":1}}],[\"仅包括了显性属性\",{\"1\":{\"127\":1}}],[\"仅使用当前由活动的\",{\"1\":{\"168\":1}}],[\"仅生成四边形\",{\"1\":{\"151\":1}}],[\"仅适用于\",{\"1\":{\"147\":1}}],[\"仅当你内存充足但受\",{\"1\":{\"201\":1}}],[\"仅当您的项目基于\",{\"1\":{\"129\":1}}],[\"仅当着色器与\",{\"1\":{\"114\":1}}],[\"仅实例化第一个通道\",{\"1\":{\"120\":1}}],[\"仅处理标记为\",{\"1\":{\"112\":1}}],[\"仅批处理第一个渲染通道\",{\"1\":{\"110\":1}}],[\"仅将相同类型的渲染器与其他渲染器批处理在一起\",{\"1\":{\"108\":1}}],[\"仅在\",{\"1\":{\"98\":1}}],[\"仅在手动和场景更改时触发\",{\"1\":{\"97\":1}}],[\"仅用于简单配置\",{\"1\":{\"88\":1}}],[\"堆的意外扩展可能会带来问题\",{\"1\":{\"97\":1}}],[\"堆扩展的具体量取决于平台\",{\"1\":{\"97\":1}}],[\"堆是\",{\"1\":{\"97\":1}}],[\"间隙\",{\"1\":{\"97\":2}}],[\"间接访问原生内存\",{\"1\":{\"96\":1}}],[\"已存在\",{\"1\":{\"348\":1}}],[\"已有项目安装依赖包\",{\"0\":{\"348\":1}}],[\"已分配的内存很可能仍有部分在使用\",{\"1\":{\"274\":1}}],[\"已分配两个块\",{\"1\":{\"99\":1}}],[\"已知很慢\",{\"1\":{\"174\":1}}],[\"已启用但具有禁用\",{\"1\":{\"168\":1}}],[\"已启用并且被绘制\",{\"1\":{\"166\":1}}],[\"已释放对象两侧的对象可能仍在被使用\",{\"1\":{\"97\":1}}],[\"已经包含了\",{\"1\":{\"17\":1}}],[\"释放的空间是其他内存段之间的\",{\"1\":{\"97\":1}}],[\"释放对象时\",{\"1\":{\"97\":1}}],[\"释放需要更少的编码工作\",{\"1\":{\"97\":1}}],[\"标志与纹理的上述相应标志具有相同的工作原理\",{\"1\":{\"248\":1}}],[\"标志使纹理在内存中保留两次\",{\"1\":{\"247\":1}}],[\"标志\",{\"1\":{\"212\":1,\"246\":1,\"247\":1,\"248\":1}}],[\"标签内容\",{\"1\":{\"365\":1}}],[\"标签\",{\"1\":{\"363\":1,\"365\":1}}],[\"标签的\",{\"1\":{\"174\":1}}],[\"标签未涵盖的额外样板代码\",{\"1\":{\"150\":1}}],[\"标签设置为\",{\"1\":{\"109\":1}}],[\"标准着色视图中的场景\",{\"1\":{\"215\":1}}],[\"标准\",{\"1\":{\"126\":1,\"371\":1}}],[\"标注\",{\"1\":{\"97\":4}}],[\"标记的工作\",{\"1\":{\"400\":1}}],[\"标记的累积时间\",{\"1\":{\"130\":1}}],[\"标记阶段效果良好\",{\"1\":{\"275\":1}}],[\"标记了所有根的依赖关系\",{\"1\":{\"195\":1}}],[\"标记为静态\",{\"1\":{\"216\":2}}],[\"标记为静态批处理并且\",{\"1\":{\"106\":1}}],[\"标记为脏\",{\"1\":{\"170\":1}}],[\"标记为\",{\"1\":{\"151\":1}}],[\"标记为对象矩阵变换\",{\"1\":{\"127\":1}}],[\"标记为使用多个绘制调用优化方法\",{\"1\":{\"106\":1}}],[\"标记\",{\"1\":{\"96\":1}}],[\"蓝色框表示\",{\"1\":{\"97\":1}}],[\"熟悉值类型和引用类型非常重要\",{\"1\":{\"97\":1}}],[\"然而在实践中\",{\"1\":{\"139\":1}}],[\"然而\",{\"1\":{\"97\":3,\"98\":1,\"99\":1,\"102\":1,\"103\":1,\"126\":1,\"139\":1,\"149\":1,\"168\":3,\"170\":2,\"172\":1,\"173\":1,\"180\":1,\"183\":1,\"190\":1,\"197\":1,\"205\":2,\"216\":1}}],[\"然后在从\",{\"1\":{\"387\":1}}],[\"然后在这些块内线性分配内存\",{\"1\":{\"103\":1}}],[\"然后创建程序集定义资产并指定程序集属性\",{\"1\":{\"290\":1}}],[\"然后禁用垃圾回收器以避免性能开销\",{\"1\":{\"276\":1}}],[\"然后使用\",{\"1\":{\"285\":1,\"369\":1}}],[\"然后使用整数变量代替字符串\",{\"1\":{\"257\":1}}],[\"然后使用许多不同的材质参数是免费的\",{\"1\":{\"134\":1}}],[\"然后只加载这些部分\",{\"1\":{\"254\":1}}],[\"然后通过\",{\"1\":{\"254\":1}}],[\"然后保存并重新导入资源\",{\"1\":{\"246\":1}}],[\"然后由工作线程执行\",{\"1\":{\"227\":1}}],[\"然后转到光照设置\",{\"1\":{\"212\":1}}],[\"然后从\",{\"1\":{\"190\":1}}],[\"然后耗尽可用内存\",{\"1\":{\"189\":1}}],[\"然后更新数据\",{\"1\":{\"182\":1}}],[\"然后发送给感兴趣的\",{\"1\":{\"179\":1}}],[\"然后仅启用\",{\"1\":{\"173\":1}}],[\"然后它可以订阅\",{\"1\":{\"170\":1}}],[\"然后它们才会进入堆分配器\",{\"1\":{\"100\":1}}],[\"然后手动在其他文本对象上设置此最佳点大小\",{\"1\":{\"169\":1}}],[\"然后按深度对命中\",{\"1\":{\"166\":1}}],[\"然后对结果进行\",{\"1\":{\"218\":1}}],[\"然后对比\",{\"1\":{\"160\":1}}],[\"然后对排序后的\",{\"1\":{\"145\":1}}],[\"然后选择\",{\"1\":{\"151\":1}}],[\"然后进行构建并打开生成的\",{\"1\":{\"151\":1}}],[\"然后讨论\",{\"1\":{\"140\":1}}],[\"然后分配一个大的共享\",{\"1\":{\"127\":1}}],[\"然后包括如何向\",{\"1\":{\"118\":1}}],[\"然后检查哪些网格可以实例化\",{\"1\":{\"115\":1}}],[\"然后将子子问题的解组合成子问题的解\",{\"1\":{\"382\":1}}],[\"然后将拥有相同图片\",{\"1\":{\"379\":1}}],[\"然后将经过哈希处理的\",{\"1\":{\"257\":1}}],[\"然后将所有进程相加\",{\"1\":{\"205\":1}}],[\"然后将其重新设置父对象添加到缓存池中\",{\"1\":{\"182\":1}}],[\"然后将其计为延迟分配\",{\"1\":{\"101\":1}}],[\"然后将顶点缓冲区绑定到\",{\"1\":{\"110\":1}}],[\"然后尝试批处理它们\",{\"1\":{\"108\":1}}],[\"然后再运行更长的时间\",{\"1\":{\"103\":1}}],[\"然后再提出问题\",{\"1\":{\"59\":1}}],[\"然后是默认\",{\"1\":{\"169\":1}}],[\"然后是按钮的纹理\",{\"1\":{\"159\":1}}],[\"然后是\",{\"1\":{\"100\":1}}],[\"然后内存从未被释放\",{\"1\":{\"97\":1}}],[\"然后\",{\"1\":{\"57\":1,\"109\":1,\"134\":1,\"170\":1,\"175\":1,\"195\":1,\"266\":1,\"267\":1,\"270\":1,\"281\":1}}],[\"然后释放它们\",{\"1\":{\"42\":1}}],[\"该文件夹会失去其特殊处理\",{\"1\":{\"307\":1}}],[\"该文件由\",{\"1\":{\"306\":1}}],[\"该符号\",{\"1\":{\"301\":1}}],[\"该程序集将根据所选平台被包含\",{\"1\":{\"296\":1}}],[\"该程序集会自动引用所有预编译\",{\"1\":{\"291\":1}}],[\"该列表会显示项目中适用于\",{\"1\":{\"300\":1}}],[\"该列表并不详尽\",{\"1\":{\"286\":1}}],[\"该列表在帧之间缓存和重用\",{\"1\":{\"285\":1}}],[\"该列显示\",{\"1\":{\"274\":1}}],[\"该类可以保留闭包需要的外部范围变量\",{\"1\":{\"283\":1}}],[\"该类在\",{\"1\":{\"141\":1}}],[\"该方法消除了集合的值\",{\"1\":{\"282\":1}}],[\"该峰值打断了原本流畅的\",{\"1\":{\"275\":1}}],[\"该回收器是非压缩式的\",{\"1\":{\"275\":1}}],[\"该系统可管理自己的加载线程并执行自己的速率限制\",{\"1\":{\"269\":1}}],[\"该属性可用于调整各个操作的优先级\",{\"1\":{\"269\":1}}],[\"该解决方案提供了读取\",{\"1\":{\"254\":1}}],[\"该代码仅在列表需要扩展时才分配新内存\",{\"1\":{\"282\":1}}],[\"该代码每次执行时会产生\",{\"1\":{\"253\":1}}],[\"该代码只是检查\",{\"1\":{\"246\":1}}],[\"该网站提供了当前市场上\",{\"1\":{\"210\":1}}],[\"该表比较了\",{\"1\":{\"206\":1}}],[\"该池在其生命周期内绑定到\",{\"1\":{\"200\":1}}],[\"该元素及其所有子元素都被标记为\",{\"1\":{\"170\":1}}],[\"该过程分为多个部分\",{\"1\":{\"144\":1}}],[\"该\",{\"1\":{\"141\":1,\"307\":1}}],[\"该渲染器用于我们的\",{\"1\":{\"137\":1}}],[\"该分配器在分配和释放时锁定\",{\"1\":{\"101\":1}}],[\"该块大小可能导致内存浪费\",{\"1\":{\"99\":1}}],[\"该数据结构称为调用栈\",{\"1\":{\"97\":1}}],[\"该如何同步修改\",{\"1\":{\"93\":1}}],[\"执行报错\",{\"1\":{\"340\":1}}],[\"执行过一次之后\",{\"1\":{\"339\":1}}],[\"执行闭包需要在托管堆上分配一个对象\",{\"1\":{\"283\":1}}],[\"执行闭包需要实例化其生成的类的副本\",{\"1\":{\"283\":1}}],[\"执行完整的阻塞式垃圾回收\",{\"1\":{\"276\":1}}],[\"执行完毕后同一帧调用\",{\"1\":{\"67\":1}}],[\"执行非常少的方法内联\",{\"1\":{\"271\":1}}],[\"执行实际连接操作\",{\"1\":{\"250\":1}}],[\"执行实际渲染\",{\"1\":{\"224\":1,\"225\":1}}],[\"执行详细的内存捕获\",{\"1\":{\"239\":1}}],[\"执行剔除和不透明排序\",{\"1\":{\"215\":1}}],[\"执行一组测试\",{\"1\":{\"166\":1}}],[\"执行一系列简单的绘制调用\",{\"1\":{\"109\":1}}],[\"执行\",{\"1\":{\"144\":1}}],[\"执行的最耗费资源的操作\",{\"1\":{\"106\":1}}],[\"执行其他工作\",{\"1\":{\"97\":1}}],[\"此步骤可显著减小构建的游戏大小\",{\"1\":{\"371\":1}}],[\"此步骤详细介绍了\",{\"1\":{\"200\":1}}],[\"此图标将用于路径导航\",{\"1\":{\"359\":1}}],[\"此处放置主题配置\",{\"1\":{\"355\":1}}],[\"此处为\",{\"1\":{\"135\":1}}],[\"此列表指定了何时定义符号的规则\",{\"1\":{\"302\":1}}],[\"此列将显示为什么所选批处理无法与前一个批处理合并\",{\"1\":{\"148\":1}}],[\"此示例代码在多个帧中保留并重用列表的内存\",{\"1\":{\"282\":1}}],[\"此示例代码每帧分配一次\",{\"1\":{\"282\":1}}],[\"此工作流程要求调用代码执行数组的初始分配\",{\"1\":{\"281\":1}}],[\"此代码将数组的现有内容替换为新值\",{\"1\":{\"281\":1}}],[\"此方法生成的字符串就越多\",{\"1\":{\"280\":1}}],[\"此时\",{\"1\":{\"275\":1}}],[\"此调用还限制了主线程用于集成资源的时间\",{\"1\":{\"269\":1}}],[\"此脚本不但速度很慢\",{\"1\":{\"261\":1}}],[\"此设置也适用于没有立体声效果的任何音频\",{\"1\":{\"249\":1}}],[\"此设置不会读取所有动画曲线\",{\"1\":{\"218\":1}}],[\"此变换层级视图的更新成本很高\",{\"1\":{\"248\":1}}],[\"此变更的原因将在下面的\",{\"1\":{\"246\":1}}],[\"此报告告诉您关于\",{\"1\":{\"238\":1}}],[\"此渲染模式在\",{\"1\":{\"227\":1}}],[\"此数字不会出现在较旧的\",{\"1\":{\"205\":1}}],[\"此问题背后的原因取决于所使用的具体解析器\",{\"1\":{\"254\":1}}],[\"此问题在\",{\"1\":{\"247\":1}}],[\"此问题不会发生在\",{\"1\":{\"174\":1}}],[\"此问题已在\",{\"1\":{\"165\":1}}],[\"此查找将针对每个\",{\"1\":{\"174\":1}}],[\"此组件确保位于\",{\"1\":{\"170\":1}}],[\"此特定问题已在\",{\"1\":{\"168\":1}}],[\"此事件的订阅者应遵循以下签名\",{\"1\":{\"168\":1}}],[\"此事件每帧调用一次\",{\"1\":{\"144\":1}}],[\"此行为对于显示大量文本标签的任何\",{\"1\":{\"168\":1}}],[\"此操作的成本与层次结构的深度呈线性增长\",{\"1\":{\"166\":1}}],[\"此操作是多线程的\",{\"1\":{\"143\":1}}],[\"此分析器是\",{\"1\":{\"148\":1}}],[\"此分配器分配内存块\",{\"1\":{\"103\":1}}],[\"此过程必须执行查找和验证以便将脚本引用转换为对原生代码的引用\",{\"1\":{\"259\":1}}],[\"此过程会重新分析\",{\"1\":{\"161\":1}}],[\"此过程的结果会被缓存并重用\",{\"1\":{\"143\":1}}],[\"此过程称为纹理图集\",{\"1\":{\"108\":1}}],[\"此宏为\",{\"1\":{\"118\":1}}],[\"此宏在开头是必需的\",{\"1\":{\"118\":1}}],[\"此添加是可选的\",{\"1\":{\"118\":1}}],[\"此\",{\"1\":{\"114\":1,\"269\":1}}],[\"此技术可以是\",{\"1\":{\"111\":1}}],[\"此增加的限制是原始大小的两倍\",{\"1\":{\"102\":1}}],[\"此内存管理过程会影响运行时性能\",{\"1\":{\"97\":1}}],[\"此内存管理系统还保护内存访问\",{\"1\":{\"97\":1}}],[\"此外\",{\"1\":{\"65\":1,\"118\":1,\"126\":1,\"127\":1,\"156\":1,\"163\":2,\"169\":1,\"170\":1,\"173\":1,\"179\":1,\"183\":1,\"216\":1,\"237\":1,\"243\":1,\"249\":1,\"250\":1,\"253\":1,\"271\":1,\"275\":1,\"283\":1,\"292\":1,\"383\":1}}],[\"虚高\",{\"1\":{\"388\":1}}],[\"虚幻引擎\",{\"1\":{\"327\":1}}],[\"虚幻引擎学习资源汇总\",{\"1\":{\"23\":1}}],[\"虚拟内存\",{\"1\":{\"387\":1}}],[\"虚拟方法和接口方法根本无法内联\",{\"1\":{\"271\":1}}],[\"虚拟集大小\",{\"1\":{\"205\":1}}],[\"虚拟声音\",{\"1\":{\"201\":1}}],[\"虚拟机的内存池\",{\"1\":{\"399\":1}}],[\"虚拟机无法跟踪到这类代码对象\",{\"1\":{\"371\":1}}],[\"虚拟机\",{\"1\":{\"97\":1}}],[\"反编译器\",{\"1\":{\"284\":1}}],[\"反过来\",{\"1\":{\"198\":1}}],[\"反之亦然\",{\"1\":{\"141\":1}}],[\"反射探针采样和运动矢量计算\",{\"1\":{\"248\":1}}],[\"反射\",{\"1\":{\"96\":1,\"329\":1}}],[\"反序列化也会做同样的事情\",{\"1\":{\"394\":1}}],[\"反序列化\",{\"1\":{\"57\":1,\"394\":1}}],[\"您只需要最终的字符串\",{\"1\":{\"280\":1}}],[\"您只能使用\",{\"1\":{\"240\":1}}],[\"您会获得不同的时间\",{\"1\":{\"228\":1}}],[\"您会感受到启用\",{\"1\":{\"137\":1}}],[\"您有一个人类角色模型\",{\"1\":{\"218\":1}}],[\"您也可以在运行时\",{\"1\":{\"216\":1}}],[\"您也减少了它们之间的渲染状态更改的数量\",{\"1\":{\"106\":1}}],[\"您还应该分析多线程渲染的使用情况\",{\"1\":{\"225\":1}}],[\"您还应该注意\",{\"1\":{\"215\":1}}],[\"您还可以搜索反编译器或\",{\"1\":{\"284\":1}}],[\"您还可以使用仅脚本的播放器设置\",{\"1\":{\"226\":1}}],[\"您还可以在任何蒙皮网格渲染器\",{\"1\":{\"214\":1}}],[\"您还可以在播放期间使用\",{\"1\":{\"130\":1}}],[\"您还可以看到前一个批处理中断的原因\",{\"1\":{\"135\":1}}],[\"您还可以查看内存使用报告\",{\"1\":{\"104\":1}}],[\"您还可以通过更改\",{\"1\":{\"96\":1}}],[\"您是在告诉硬件您不需要先前的缓冲区内容\",{\"1\":{\"212\":1}}],[\"您将失去在\",{\"1\":{\"157\":1}}],[\"您需要分析多线程渲染以提高渲染性能\",{\"1\":{\"226\":1}}],[\"您需要了解纹理大小和压缩\",{\"1\":{\"219\":1}}],[\"您需要了解目标硬件的限制以及如何分析\",{\"1\":{\"210\":1}}],[\"您需要尽可能保持这些批处理大\",{\"1\":{\"135\":1}}],[\"您需要对着色器源文件进行更改\",{\"1\":{\"112\":1}}],[\"您在\",{\"1\":{\"132\":1}}],[\"您的着色器必须遵循一些规则才能通过\",{\"1\":{\"136\":1}}],[\"您的项目必须使用轻量级渲染管线\",{\"1\":{\"128\":1}}],[\"您的应用程序在一个后备缓冲区\",{\"1\":{\"230\":1}}],[\"您的应用程序必须等到下一次垂直回扫\",{\"1\":{\"230\":1}}],[\"您的应用程序\",{\"1\":{\"110\":1}}],[\"您都必须重复此过程\",{\"1\":{\"112\":1}}],[\"您都可以增加块大小以减少溢出\",{\"1\":{\"103\":1}}],[\"您必须避免频繁触发\",{\"1\":{\"277\":1}}],[\"您必须手动跟踪和释放您分配的所有内存\",{\"1\":{\"277\":1}}],[\"您必须选择一个回退\",{\"1\":{\"221\":1}}],[\"您必须找到一种方法将此新\",{\"1\":{\"175\":1}}],[\"您必须使用与\",{\"1\":{\"129\":1}}],[\"您必须为包含所有实例的空间体积烘焙\",{\"1\":{\"116\":1}}],[\"您必须\",{\"1\":{\"112\":1}}],[\"您仍然可以使用任意数量的具有相同着色器的不同材质\",{\"1\":{\"112\":1}}],[\"您想要批处理在一起的网格使用相同的顶点属性\",{\"1\":{\"109\":1}}],[\"您不必担心在\",{\"1\":{\"135\":1}}],[\"您不能更改单个网格的变换属性\",{\"1\":{\"109\":1}}],[\"您不需要将每个\",{\"1\":{\"216\":1}}],[\"您不需要担心批处理大小\",{\"1\":{\"118\":1}}],[\"您不需要与\",{\"1\":{\"96\":1}}],[\"您不需要操作原生\",{\"1\":{\"96\":1}}],[\"您可能会发现它很有用\",{\"1\":{\"279\":1}}],[\"您可能会在播放期间留下大量内存不可用\",{\"1\":{\"103\":1}}],[\"您可能希望将场景渲染到纹理一次并使用它\",{\"1\":{\"157\":1}}],[\"您可能希望在\",{\"1\":{\"97\":1}}],[\"您可能已经注意到在顶部视频中\",{\"1\":{\"134\":1}}],[\"您可能需要使特定\",{\"1\":{\"112\":1}}],[\"您可能不得不牺牲渲染性能并避免对某些\",{\"1\":{\"109\":1}}],[\"您可以配置您的代码以将数组分配提升到循环条件之外\",{\"1\":{\"285\":1}}],[\"您可以配置代码\",{\"1\":{\"280\":1}}],[\"您可以修改作为参数传递给方法的数组\",{\"1\":{\"281\":1}}],[\"您可以计算出游戏过程中可能同时存在的抛射物的最大数量\",{\"1\":{\"279\":1}}],[\"您可以重用这些对象\",{\"1\":{\"279\":1}}],[\"您可以减少应用程序创建和销毁对象的次数\",{\"1\":{\"279\":1}}],[\"您可以控制加载过程\",{\"1\":{\"242\":1}}],[\"您可以更改\",{\"1\":{\"234\":1}}],[\"您可以更改静态批处理根的变换属性\",{\"1\":{\"109\":1}}],[\"您可以调整纹理\",{\"1\":{\"222\":1}}],[\"您可以避免意外或无意中更改资源设置\",{\"1\":{\"220\":1}}],[\"您可以双击名称以在编辑器中选择游戏对象\",{\"1\":{\"148\":1}}],[\"您可以从\",{\"1\":{\"131\":1,\"237\":1}}],[\"您可以执行以下操作之一\",{\"1\":{\"114\":1}}],[\"您可以找到有关单个\",{\"1\":{\"112\":1}}],[\"您可以使单个渲染器与\",{\"1\":{\"112\":1}}],[\"您可以使手写和\",{\"1\":{\"112\":1}}],[\"您可以使用网格组合\",{\"1\":{\"218\":1}}],[\"您可以使用动态批处理进行优化\",{\"1\":{\"110\":1}}],[\"您可以使用单个材质资源\",{\"1\":{\"108\":1}}],[\"您可以使用\",{\"1\":{\"96\":2,\"108\":1,\"130\":1,\"135\":1,\"215\":1,\"239\":1,\"279\":1}}],[\"您可以看到几个按钮点击事件\",{\"1\":{\"148\":1}}],[\"您可以看到\",{\"1\":{\"112\":1,\"131\":1}}],[\"您可以暂时禁用它以进行调试\",{\"1\":{\"112\":1}}],[\"您可以手动将多个网格组合成单个网格来优化\",{\"1\":{\"111\":1}}],[\"您可以同时选择多个\",{\"1\":{\"109\":1}}],[\"您可以向场景添加更多\",{\"1\":{\"106\":1}}],[\"您可以通过使用纹理的适当分辨率而不是在运行时进行\",{\"1\":{\"218\":1}}],[\"您可以通过遵循以下简单规则来最大化批处理\",{\"1\":{\"216\":1}}],[\"您可以通过脚本在相机上手动设置\",{\"1\":{\"213\":1}}],[\"您可以通过\",{\"1\":{\"104\":1,\"216\":1}}],[\"您可以将此代码重构为单个数组分配\",{\"1\":{\"285\":1}}],[\"您可以将此列表从方法中提升到包含类中\",{\"1\":{\"282\":1}}],[\"您可以将常量\",{\"1\":{\"283\":1}}],[\"您可以将示例代码配置如下\",{\"1\":{\"281\":1}}],[\"您可以将分数标题\",{\"1\":{\"280\":1}}],[\"您可以将着色器添加到列表中\",{\"1\":{\"237\":1}}],[\"您可以将\",{\"1\":{\"116\":1}}],[\"您可以将纹理组合成一个更大的单一纹理\",{\"1\":{\"108\":1}}],[\"您可以将工作线程的块大小减小到\",{\"1\":{\"102\":1}}],[\"您可以将块大小从\",{\"1\":{\"102\":1}}],[\"您可以将类型树块大小和文件缓存块大小设置为\",{\"1\":{\"99\":1}}],[\"您可以增加块大小以避免回退分配\",{\"1\":{\"103\":1}}],[\"您可以增加块大小\",{\"1\":{\"102\":1}}],[\"您可以在以下工作流程中看到这一点\",{\"1\":{\"135\":1}}],[\"您可以在帧的任何时间修改任何材质属性\",{\"1\":{\"126\":1}}],[\"您可以在特定着色器的\",{\"1\":{\"112\":1}}],[\"您可以在同一场景中使用多种绘制调用优化方法\",{\"1\":{\"106\":1}}],[\"您可以在\",{\"1\":{\"100\":1,\"106\":1,\"109\":1,\"112\":2,\"120\":1,\"129\":1,\"222\":1,\"238\":1}}],[\"您可以自定义块大小\",{\"1\":{\"103\":1}}],[\"您可以自定义这些值\",{\"1\":{\"102\":1}}],[\"您可以自定义两个动态堆分配器的块大小\",{\"1\":{\"101\":1}}],[\"您可以自定义\",{\"1\":{\"98\":1,\"99\":1}}],[\"您应该尽量减少在性能敏感的代码中\",{\"1\":{\"283\":1}}],[\"您应该尽量减少频繁管理的堆分配量\",{\"1\":{\"278\":1}}],[\"您应该尽可能使用这些版本\",{\"1\":{\"286\":1}}],[\"您应该尽可能避免在\",{\"1\":{\"283\":1}}],[\"您应该尽可能避免创建临时字符串\",{\"1\":{\"280\":1}}],[\"您应该尽可能启用多线程渲染\",{\"1\":{\"225\":1}}],[\"您应该从\",{\"1\":{\"244\":1}}],[\"您应该使用最基本的着色器\",{\"1\":{\"236\":1}}],[\"您应该优先选择\",{\"1\":{\"221\":1}}],[\"您应该将所有不移动的\",{\"1\":{\"216\":1}}],[\"您应该避免重叠的\",{\"1\":{\"215\":1}}],[\"您应该检查几乎所有渲染时间是否都通过新代码路径\",{\"1\":{\"134\":1}}],[\"您应该会看到许多有用信息\",{\"1\":{\"130\":1}}],[\"您应该对对象调用\",{\"1\":{\"97\":1}}],[\"您应该注意以下几点\",{\"1\":{\"97\":1}}],[\"您无法直接访问或修改此内存类型\",{\"1\":{\"96\":1}}],[\"您希望我针对上述某个类别\",{\"1\":{\"92\":1}}],[\"托管程序集\",{\"1\":{\"371\":1}}],[\"托管代码\",{\"1\":{\"371\":1}}],[\"托管代码剥离\",{\"0\":{\"192\":1},\"1\":{\"191\":1}}],[\"托管代码中所有非空\",{\"1\":{\"97\":1}}],[\"托管\",{\"0\":{\"398\":1},\"1\":{\"97\":1}}],[\"托管堆会持续增长直至应用程序内存耗尽\",{\"1\":{\"276\":1}}],[\"托管堆在\",{\"1\":{\"98\":1}}],[\"托管堆扩展注意事项\",{\"1\":{\"97\":1}}],[\"托管堆也找不到足够大的连续内存块来分配给该分配\",{\"1\":{\"97\":1}}],[\"托管堆是\",{\"1\":{\"97\":1}}],[\"托管堆概述\",{\"1\":{\"97\":1}}],[\"托管堆\",{\"1\":{\"96\":1,\"97\":1,\"278\":1}}],[\"托管内存问题通常会超过原生内存问题\",{\"1\":{\"200\":1}}],[\"托管内存部分\",{\"1\":{\"188\":1}}],[\"托管内存系统的优点在于它管理内存的释放\",{\"1\":{\"97\":1}}],[\"托管内存\",{\"0\":{\"97\":1},\"1\":{\"96\":3,\"98\":1,\"389\":1}}],[\"托管对象由gc管理\",{\"1\":{\"60\":1}}],[\"旨在成为一个\",{\"1\":{\"164\":1}}],[\"旨在帮助希望提高应用程序内存性能的读者\",{\"1\":{\"96\":1}}],[\"旨在利用现代\",{\"1\":{\"75\":1}}],[\"红黑树是不可卸载的\",{\"1\":{\"395\":1}}],[\"红黑树\",{\"1\":{\"93\":1}}],[\"红点系统怎么实现\",{\"1\":{\"93\":1}}],[\"何为内存对齐\",{\"1\":{\"93\":1}}],[\"哪些可以清理\",{\"1\":{\"275\":1}}],[\"哪些部分\",{\"1\":{\"93\":1}}],[\"哪个好\",{\"1\":{\"93\":1}}],[\"材质球里存放要显示的图片\",{\"1\":{\"379\":1}}],[\"材质和着色器\",{\"1\":{\"218\":1}}],[\"材质的显性参数大部分是低频更新的\",{\"1\":{\"127\":1}}],[\"材质的\",{\"1\":{\"115\":1}}],[\"材质属性不需要做任何事情\",{\"1\":{\"112\":1}}],[\"材质\",{\"1\":{\"93\":1,\"115\":1,\"313\":1}}],[\"颜色缓冲区\",{\"0\":{\"231\":1}}],[\"颜色缓冲区是必不可少的部分\",{\"1\":{\"229\":1}}],[\"颜色放到一个缓冲区中\",{\"1\":{\"127\":1}}],[\"颜色\",{\"1\":{\"93\":1,\"125\":1}}],[\"颜色等\",{\"1\":{\"43\":1}}],[\"怎么做\",{\"1\":{\"92\":1,\"93\":1}}],[\"记录关键操作序列和状态快照\",{\"1\":{\"91\":1}}],[\"记住这个过程很重要\",{\"1\":{\"169\":1}}],[\"记住\",{\"1\":{\"66\":1,\"189\":1}}],[\"复制数据\",{\"1\":{\"369\":1}}],[\"复选框\",{\"1\":{\"109\":1,\"218\":1,\"225\":1,\"232\":1}}],[\"复现\",{\"1\":{\"91\":1}}],[\"复杂性的结果\",{\"1\":{\"215\":1}}],[\"复杂性的增加\",{\"1\":{\"159\":1}}],[\"复杂的循环\",{\"1\":{\"55\":1}}],[\"复杂的计算\",{\"1\":{\"51\":1}}],[\"复杂光照\",{\"1\":{\"51\":1}}],[\"日语每种字体所需的\",{\"1\":{\"169\":1}}],[\"日志相关信息\",{\"1\":{\"339\":1}}],[\"日志或\",{\"1\":{\"216\":1}}],[\"日志文件页面\",{\"1\":{\"98\":1,\"104\":1}}],[\"日志系统\",{\"1\":{\"91\":1}}],[\"日常备忘\",{\"0\":{\"30\":1}}],[\"95\",{\"1\":{\"392\":1}}],[\"954\",{\"1\":{\"205\":1}}],[\"97\",{\"1\":{\"233\":1}}],[\"977\",{\"1\":{\"205\":1}}],[\"98\",{\"1\":{\"233\":1}}],[\"987\",{\"1\":{\"205\":1}}],[\"96\",{\"1\":{\"233\":1}}],[\"96b\",{\"1\":{\"100\":2}}],[\"91\",{\"1\":{\"233\":1}}],[\"9mb\",{\"1\":{\"205\":1}}],[\"93\",{\"1\":{\"233\":1}}],[\"937700\",{\"1\":{\"205\":1}}],[\"9308k\",{\"1\":{\"205\":1}}],[\"9384\",{\"1\":{\"100\":1}}],[\"947\",{\"1\":{\"205\":1}}],[\"949\",{\"1\":{\"205\":1}}],[\"949997\",{\"1\":{\"205\":2}}],[\"99\",{\"1\":{\"205\":1}}],[\"99840\",{\"1\":{\"205\":2}}],[\"9981\",{\"1\":{\"100\":1}}],[\"9\",{\"0\":{\"90\":1},\"1\":{\"168\":1,\"367\":1,\"394\":1}}],[\"900\",{\"1\":{\"64\":1,\"110\":1}}],[\"四元数\",{\"1\":{\"323\":1,\"325\":1}}],[\"四边形\",{\"1\":{\"149\":1}}],[\"四\",{\"0\":{\"89\":1}}],[\"四叉树\",{\"1\":{\"71\":1,\"93\":1}}],[\"四叉树等空间划分算法\",{\"1\":{\"66\":1}}],[\"防止\",{\"1\":{\"387\":1}}],[\"防止篡改\",{\"1\":{\"88\":1}}],[\"防止在特定峰值下创建过多对象\",{\"1\":{\"69\":1}}],[\"哈希值\",{\"1\":{\"88\":1}}],[\"校验和\",{\"1\":{\"88\":1}}],[\"校验完整性的过程\",{\"1\":{\"84\":1}}],[\"加快运行速度\",{\"1\":{\"394\":1}}],[\"加粗文本\",{\"1\":{\"168\":1}}],[\"加速度\",{\"1\":{\"326\":1}}],[\"加速\",{\"1\":{\"132\":3}}],[\"加速来自两个不同方面\",{\"1\":{\"127\":1}}],[\"加速渲染性能\",{\"0\":{\"125\":1},\"1\":{\"124\":1}}],[\"加上空闲的\",{\"1\":{\"97\":1}}],[\"加密\",{\"1\":{\"88\":1,\"394\":1}}],[\"加载了一个东西进来\",{\"1\":{\"403\":1}}],[\"加载操作会对性能产生影响\",{\"1\":{\"278\":1}}],[\"加载线程控制\",{\"0\":{\"269\":1}}],[\"加载着色器的时间\",{\"1\":{\"243\":1}}],[\"加载资源和场景\",{\"1\":{\"222\":1}}],[\"加载资源\",{\"1\":{\"222\":1}}],[\"加载资源时没有\",{\"1\":{\"200\":1}}],[\"加载行为\",{\"1\":{\"222\":1}}],[\"加载发生的位置和方式取决于\",{\"1\":{\"222\":1}}],[\"加载和存储\",{\"1\":{\"212\":1}}],[\"加载和卸载时需要注意什么\",{\"1\":{\"65\":1,\"70\":1}}],[\"加载具有后备字体的所需\",{\"1\":{\"169\":1}}],[\"加载各种场景时\",{\"1\":{\"169\":1}}],[\"加载峰值为\",{\"1\":{\"102\":1}}],[\"加载\",{\"1\":{\"65\":1,\"70\":1,\"84\":2}}],[\"加载m时\",{\"1\":{\"60\":1}}],[\"加载遮罩\",{\"1\":{\"44\":1}}],[\"安全性\",{\"1\":{\"88\":1}}],[\"安装完毕后\",{\"1\":{\"355\":1}}],[\"安装开发依赖\",{\"1\":{\"355\":1}}],[\"安装打包工具和主题\",{\"1\":{\"346\":1}}],[\"安装依赖\",{\"1\":{\"339\":1}}],[\"安装\",{\"0\":{\"39\":1,\"342\":1,\"355\":1},\"1\":{\"313\":1,\"342\":1,\"343\":1,\"346\":2,\"357\":1}}],[\"安装面向开发人员的\",{\"1\":{\"24\":1}}],[\"序数\",{\"1\":{\"252\":2}}],[\"序列化过程中来回转换复杂数据类型\",{\"1\":{\"254\":1}}],[\"序列化系统的其他接口具有相同的限制\",{\"1\":{\"254\":1}}],[\"序列化系统接口\",{\"1\":{\"254\":1}}],[\"序列化\",{\"1\":{\"88\":1}}],[\"序号\",{\"1\":{\"74\":1,\"75\":1,\"76\":1,\"77\":1}}],[\"服务端回滚\",{\"1\":{\"87\":1}}],[\"三维数学常用的\",{\"1\":{\"323\":1}}],[\"三部曲系列\",{\"1\":{\"312\":1}}],[\"三缓冲\",{\"0\":{\"230\":1}}],[\"三\",{\"0\":{\"86\":1}}],[\"二是因为移动设备的硬盘可擦写次数更少\",{\"1\":{\"387\":1}}],[\"二进制数据以及各种进程和系统信息的详细内存使用信息\",{\"1\":{\"205\":1}}],[\"二叉树的基本结构\",{\"1\":{\"93\":1}}],[\"二叉树的原理和实现\",{\"1\":{\"93\":1}}],[\"二\",{\"0\":{\"82\":1},\"1\":{\"317\":1}}],[\"改变大小时\",{\"1\":{\"146\":1}}],[\"改变会导致重绘\",{\"1\":{\"93\":1}}],[\"改为\",{\"1\":{\"81\":1}}],[\"改用\",{\"1\":{\"63\":1,\"68\":1}}],[\"动力学\",{\"1\":{\"326\":1}}],[\"动静分离\",{\"1\":{\"93\":1}}],[\"动画特效编辑器\",{\"1\":{\"383\":1}}],[\"动画编辑工具等\",{\"1\":{\"383\":1}}],[\"动画组件\",{\"1\":{\"313\":1}}],[\"动画蒙皮网格\",{\"1\":{\"217\":1}}],[\"动画和显示速度明显快于\",{\"1\":{\"168\":1}}],[\"动画\",{\"1\":{\"80\":1,\"218\":1,\"313\":2}}],[\"动态包围体树\",{\"1\":{\"326\":1}}],[\"动态加载\",{\"1\":{\"317\":1}}],[\"动态地将声音设置为虚拟或真实\",{\"1\":{\"201\":1}}],[\"动态地加载和执行\",{\"1\":{\"65\":1}}],[\"动态调整字体大小到可以在\",{\"1\":{\"168\":1}}],[\"动态字体的图集一旦创建就只会增大\",{\"1\":{\"168\":1}}],[\"动态字体是当可显示字符集非常大或在运行时之前未知时显示文本的便捷方式\",{\"1\":{\"168\":1}}],[\"动态字体和字体图集\",{\"1\":{\"168\":1}}],[\"动态\",{\"1\":{\"163\":1}}],[\"动态生成的几何体的动态批处理\",{\"1\":{\"110\":2}}],[\"动态堆分配器使用内存块\",{\"1\":{\"101\":1}}],[\"动态堆分配器的示例使用报告\",{\"1\":{\"99\":1}}],[\"动态堆分配器是主要的堆分配器\",{\"1\":{\"99\":1}}],[\"动态堆分配器\",{\"0\":{\"99\":1}}],[\"动态堆\",{\"1\":{\"98\":1,\"101\":1}}],[\"动态图集\",{\"1\":{\"93\":1}}],[\"动态物体\",{\"1\":{\"83\":1}}],[\"动态物体能否共享材质以触发动态合批\",{\"1\":{\"55\":1}}],[\"动态回收机制\",{\"1\":{\"69\":1}}],[\"动态批处理对于动态生成的几何体的工作方式与网格不同\",{\"1\":{\"110\":1}}],[\"动态批处理在\",{\"1\":{\"110\":1}}],[\"动态批处理在网格和\",{\"1\":{\"110\":1}}],[\"动态批处理是一种\",{\"1\":{\"110\":1}}],[\"动态批处理\",{\"0\":{\"110\":1},\"1\":{\"64\":1,\"69\":1,\"106\":2,\"108\":2,\"109\":1,\"124\":1}}],[\"动态合并\",{\"1\":{\"43\":1}}],[\"动态合批\",{\"1\":{\"43\":1}}],[\"销毁\",{\"1\":{\"79\":1}}],[\"销毁时自动停止\",{\"1\":{\"57\":1}}],[\"$\",{\"1\":{\"79\":10,\"339\":1}}],[\"回收本身有\",{\"1\":{\"400\":1}}],[\"回收能力\",{\"1\":{\"400\":1}}],[\"回收内存后\",{\"1\":{\"400\":1}}],[\"回收内存\",{\"1\":{\"276\":1}}],[\"回收后\",{\"1\":{\"205\":1}}],[\"回到问题\",{\"1\":{\"181\":1}}],[\"回调所使用的大量时间会用于原生和托管代码域之间的切换以便执行\",{\"1\":{\"267\":1}}],[\"回调时产生的性能开销\",{\"1\":{\"267\":1}}],[\"回调\",{\"1\":{\"170\":1,\"173\":2,\"183\":1,\"267\":1,\"269\":1}}],[\"回调地狱\",{\"1\":{\"49\":1}}],[\"回退分配对于场景加载来说不是问题\",{\"1\":{\"100\":1}}],[\"回答要点\",{\"1\":{\"79\":1,\"80\":1,\"81\":1,\"83\":1,\"84\":1,\"85\":1,\"87\":1,\"88\":1,\"90\":1,\"91\":1}}],[\"丰富的实战经验\",{\"1\":{\"77\":1}}],[\"太小\",{\"1\":{\"392\":1}}],[\"太棒了\",{\"1\":{\"77\":1}}],[\"太多了\",{\"1\":{\"55\":1}}],[\"做得很好\",{\"1\":{\"77\":1}}],[\"肯定\",{\"1\":{\"77\":1}}],[\"沟通原则\",{\"1\":{\"77\":1}}],[\"沟通方式\",{\"1\":{\"60\":1}}],[\"软阴影\",{\"1\":{\"169\":1}}],[\"软技能与领导力\",{\"0\":{\"77\":1}}],[\"软件架构\",{\"0\":{\"380\":1}}],[\"软件\",{\"0\":{\"33\":1}}],[\"往往是\",{\"1\":{\"76\":1}}],[\"屏幕上的每个像素每帧只被触碰一次\",{\"1\":{\"215\":1}}],[\"屏幕上的像素数量远多于顶点数量\",{\"1\":{\"76\":1}}],[\"屏幕\",{\"1\":{\"215\":1}}],[\"屏幕后面绘制缓存的渲染纹理以提供\",{\"1\":{\"158\":1}}],[\"屏幕坐标等\",{\"1\":{\"61\":1}}],[\"职责\",{\"1\":{\"76\":1}}],[\"职位不仅意味着\",{\"1\":{\"54\":1}}],[\"转动惯量\",{\"1\":{\"326\":1}}],[\"转发给整数值方法\",{\"1\":{\"257\":1}}],[\"转发到渲染线程\",{\"1\":{\"225\":1}}],[\"转而选择通过将成本较高的控件拆分到\",{\"1\":{\"163\":1}}],[\"转译的方法名称是近似的\",{\"1\":{\"150\":1}}],[\"转到图形线程\",{\"1\":{\"222\":1}}],[\"转到\",{\"1\":{\"109\":1,\"110\":1,\"112\":1,\"119\":1,\"234\":1,\"244\":1}}],[\"转移情况\",{\"1\":{\"76\":1}}],[\"转移到\",{\"1\":{\"76\":2}}],[\"转换矩阵等变量给\",{\"1\":{\"127\":1}}],[\"转换为\",{\"1\":{\"76\":1}}],[\"转换为引用类型\",{\"1\":{\"48\":1}}],[\"转换\",{\"1\":{\"57\":1}}],[\"转换到世界空间\",{\"1\":{\"51\":1}}],[\"着色器预加载\",{\"0\":{\"243\":1}}],[\"着色器变体集合\",{\"0\":{\"242\":1}}],[\"着色器变体\",{\"0\":{\"241\":1}}],[\"着色器本身有自己的对象根\",{\"1\":{\"239\":1}}],[\"着色器内存\",{\"0\":{\"239\":1}}],[\"着色器扩展为\",{\"1\":{\"238\":1}}],[\"着色器的几件事\",{\"1\":{\"238\":1}}],[\"着色器构建报告\",{\"0\":{\"238\":1}}],[\"着色器默认始终包含在构建中\",{\"1\":{\"237\":1}}],[\"着色器列表中移除所有未使用的着色器\",{\"1\":{\"237\":1}}],[\"着色器来对场景进行光照贴图\",{\"1\":{\"236\":1}}],[\"着色器在\",{\"1\":{\"160\":1}}],[\"着色器在正向渲染中都支持多个灯光\",{\"1\":{\"110\":1}}],[\"着色器相比\",{\"1\":{\"160\":1}}],[\"着色器通常包含大量变体\",{\"1\":{\"241\":1}}],[\"着色器通常是标准化的\",{\"1\":{\"154\":1}}],[\"着色器通道下\",{\"1\":{\"151\":1}}],[\"着色器和低规格设备\",{\"0\":{\"160\":1},\"1\":{\"154\":2}}],[\"着色器作为\",{\"1\":{\"151\":1}}],[\"着色器尚未被自定义着色器替换\",{\"1\":{\"149\":1,\"151\":1}}],[\"着色器时\",{\"1\":{\"136\":1,\"151\":1}}],[\"着色器检查器面板将显示\",{\"1\":{\"136\":1}}],[\"着色器都符合此要求\",{\"1\":{\"129\":1}}],[\"着色器关键字\",{\"0\":{\"240\":1},\"1\":{\"118\":1}}],[\"着色器修改\",{\"1\":{\"118\":1}}],[\"着色器支持\",{\"1\":{\"118\":1}}],[\"着色器添加\",{\"1\":{\"118\":1}}],[\"着色器与\",{\"1\":{\"112\":2}}],[\"着色器必须在名为\",{\"1\":{\"112\":2}}],[\"着色器兼容性\",{\"1\":{\"112\":2}}],[\"着色器\",{\"0\":{\"235\":1},\"1\":{\"76\":1,\"106\":1,\"112\":2,\"124\":1,\"134\":1,\"135\":1,\"160\":1,\"210\":1,\"240\":1,\"313\":1,\"329\":1}}],[\"因引入额外方法调用而增加的开销可能会变得非常显著\",{\"1\":{\"271\":1}}],[\"因此所有变量和要\",{\"1\":{\"404\":1}}],[\"因此如果每个\",{\"1\":{\"394\":1}}],[\"因此如果循环不是块大小的精确倍数\",{\"1\":{\"201\":1}}],[\"因此需要一次全解压\",{\"1\":{\"394\":1}}],[\"因此需要同时更新\",{\"1\":{\"163\":1}}],[\"因此一般对于声音不是很敏感的游戏\",{\"1\":{\"392\":1}}],[\"因此会导致一定的声音延迟\",{\"1\":{\"392\":1}}],[\"因此手机如果做内存交换一是慢\",{\"1\":{\"387\":1}}],[\"因此当\",{\"1\":{\"391\":1}}],[\"因此当我们实例化一个\",{\"1\":{\"391\":1}}],[\"因此当我们\",{\"1\":{\"390\":1}}],[\"因此当我们最后统计\",{\"1\":{\"390\":1}}],[\"因此当我们去\",{\"1\":{\"390\":1}}],[\"因此当我们在多线程间使用\",{\"1\":{\"369\":1}}],[\"因此当他们改变一个元素时\",{\"1\":{\"178\":1}}],[\"因此该方法已成为闭包\",{\"1\":{\"283\":1}}],[\"因此建议在自定义方法中进行仅用于开发包装\",{\"1\":{\"263\":1}}],[\"因此项目可选择仅压缩切线和法线\",{\"1\":{\"248\":1}}],[\"因此通过提高吞吐量可以实现更高的帧速率\",{\"1\":{\"212\":1}}],[\"因此通常最好将任何非平凡的\",{\"1\":{\"163\":1}}],[\"因此对其进行分析至关重要\",{\"1\":{\"212\":1}}],[\"因此它无法有效地清除装箱生成的小而频繁的临时分配\",{\"1\":{\"284\":1}}],[\"因此它们在堆上分配\",{\"1\":{\"283\":1}}],[\"因此它不需要将颜色缓冲区\",{\"1\":{\"212\":1}}],[\"因此它通常无法像不透明网格那样批处理那么多透明网格\",{\"1\":{\"108\":1}}],[\"因此大小取决于帧缓冲区的尺寸\",{\"1\":{\"205\":1}}],[\"因此脏内存也是应用程序退出时将释放的\",{\"1\":{\"205\":1}}],[\"因此应将小于\",{\"1\":{\"201\":1}}],[\"因此应将它们放在同一个\",{\"1\":{\"163\":1}}],[\"因此你可以使用较低分辨率的法线贴图\",{\"1\":{\"200\":1}}],[\"因此第一次从\",{\"1\":{\"200\":1}}],[\"因此不会碰到它\",{\"1\":{\"394\":1}}],[\"因此不会被垃圾回收\",{\"1\":{\"189\":1}}],[\"因此不再在每次循环迭代开始时执行它\",{\"1\":{\"271\":1}}],[\"因此不需要进行方法调用来设置或检索其值\",{\"1\":{\"271\":1}}],[\"因此不能与放置在不可批处理的四边形之上的其他四边形批处理\",{\"1\":{\"149\":1}}],[\"因此这些\",{\"1\":{\"173\":1}}],[\"因此这不是一个廉价的操作\",{\"1\":{\"166\":1}}],[\"因此这仍然非常有用\",{\"1\":{\"148\":1}}],[\"因此顶点着色器不太可能给\",{\"1\":{\"151\":1}}],[\"因此无法批处理\",{\"1\":{\"149\":1}}],[\"因此无法使用\",{\"1\":{\"125\":1}}],[\"因此可以用于尝试不同的\",{\"1\":{\"149\":1}}],[\"因此了解什么会破坏批处理非常重要\",{\"1\":{\"148\":1}}],[\"因此在查看\",{\"1\":{\"148\":1}}],[\"因此目前只能用于分析\",{\"1\":{\"147\":1}}],[\"因此越靠近顶层的越应该首先计算\",{\"1\":{\"145\":1}}],[\"因此必须首先计算它们\",{\"1\":{\"145\":1}}],[\"因此其性能在不同的\",{\"1\":{\"143\":1}}],[\"因此您只需在相机上设置\",{\"1\":{\"212\":1}}],[\"因此您需要避免任何着色器变体更改\",{\"1\":{\"135\":1}}],[\"因此您无需通过代码手动请求释放内存\",{\"1\":{\"97\":1}}],[\"因此看到\",{\"1\":{\"131\":1}}],[\"因此基本上\",{\"1\":{\"126\":1}}],[\"因此优化它们非常重要\",{\"1\":{\"106\":1}}],[\"因此适用于不同的分配\",{\"1\":{\"98\":1}}],[\"因此\",{\"1\":{\"96\":1,\"97\":1,\"103\":1,\"149\":2,\"157\":1,\"178\":1,\"181\":1,\"183\":1,\"205\":1,\"215\":1,\"253\":1,\"257\":1,\"259\":1,\"260\":1,\"269\":1,\"271\":1,\"280\":1,\"283\":1,\"302\":1,\"387\":1,\"401\":1}}],[\"因其不允许\",{\"1\":{\"76\":1}}],[\"因为内存太大了\",{\"1\":{\"402\":1}}],[\"因为内存操作比算术操作慢得多\",{\"1\":{\"212\":1}}],[\"因为红黑树没加载完\",{\"1\":{\"395\":1}}],[\"因为头的色板是通用的\",{\"1\":{\"394\":1}}],[\"因为解压和读取速度上都会比较慢\",{\"1\":{\"394\":1}}],[\"因为模板泛型在编译成\",{\"1\":{\"393\":1}}],[\"因为是\",{\"1\":{\"390\":1,\"394\":1}}],[\"因为太多了没法统计\",{\"1\":{\"390\":1}}],[\"因为频繁写入可能导致这种内存出现损耗\",{\"1\":{\"387\":1}}],[\"因为自定义程序集发生改变的时候\",{\"1\":{\"292\":1}}],[\"因为垃圾回收器不会回收无引用的对象\",{\"1\":{\"276\":1}}],[\"因为垃圾回收器将回收操作分摊到多个帧中\",{\"1\":{\"275\":1}}],[\"因为移动设备不允许非同步渲染\",{\"1\":{\"275\":1}}],[\"因为当垃圾回收器暂停应用程序执行时\",{\"1\":{\"275\":1}}],[\"因为每一次\",{\"1\":{\"394\":1}}],[\"因为每当垃圾回收器运行时\",{\"1\":{\"275\":1}}],[\"因为每帧都必须运行一次所有激活的\",{\"1\":{\"248\":1}}],[\"因为对象上的\",{\"1\":{\"284\":1}}],[\"因为对\",{\"1\":{\"272\":1}}],[\"因为多维数组需要函数调用\",{\"1\":{\"265\":1}}],[\"因为多个定向光会破坏批处理\",{\"1\":{\"216\":1}}],[\"因为现在已确保\",{\"1\":{\"246\":1}}],[\"因为帧缓冲区会占用大量图形内存\",{\"1\":{\"232\":1}}],[\"因为管理其他模式的开销不会出现在分析器中\",{\"1\":{\"228\":1}}],[\"因为您可以控制\",{\"1\":{\"243\":1}}],[\"因为您可以使用任意数量的材质属性\",{\"1\":{\"112\":1}}],[\"因为您在主线程上执行的所有命令都会占用重要的帧时间\",{\"1\":{\"224\":1}}],[\"因为动画不会以零权重评估动画剪辑\",{\"1\":{\"218\":1}}],[\"因为添加它们会迫使\",{\"1\":{\"216\":1}}],[\"因为边界框很大并且填充了大量像素\",{\"1\":{\"215\":1}}],[\"因为一个像素被多次过度绘制\",{\"1\":{\"215\":1}}],[\"因为即使\",{\"1\":{\"215\":1}}],[\"因为系统会尝试始终使用所有可用内存来保持进程运行\",{\"1\":{\"205\":1}}],[\"因为系统必须充分利用有限的可用内存\",{\"1\":{\"205\":1}}],[\"因为手机还需要内存用于\",{\"1\":{\"205\":1}}],[\"因为此类平台通常因芯片组不同而支持截然不同的纹理压缩格式\",{\"1\":{\"247\":1}}],[\"因为此选项需要大量内存\",{\"1\":{\"201\":1}}],[\"因为此场景受\",{\"1\":{\"132\":1}}],[\"因为访问任何渲染器\",{\"1\":{\"200\":1}}],[\"因为块分配器会启动\",{\"1\":{\"200\":1}}],[\"因为大多数引擎代码都在常驻内存\",{\"1\":{\"200\":1}}],[\"因为协程会一直占用堆上的栈分配\",{\"1\":{\"189\":1}}],[\"因为存在一些重要的缺点\",{\"1\":{\"175\":1}}],[\"因为批处理的成本仅基于\",{\"1\":{\"170\":1}}],[\"因为通过\",{\"1\":{\"169\":1}}],[\"因为文本字形的大部分多边形是透明的\",{\"1\":{\"162\":1}}],[\"因为该元素仍将被发送到\",{\"1\":{\"155\":1}}],[\"因为编辑器当前不使用图形作业\",{\"1\":{\"137\":1}}],[\"因为我们提供的所有着色器都已与\",{\"1\":{\"136\":1}}],[\"因为在此模式下\",{\"1\":{\"275\":1}}],[\"因为在网格组合时帧率可能会降低\",{\"1\":{\"218\":1}}],[\"因为在移动设备上这样做会降低电池寿命并对内存造成过度磨损\",{\"1\":{\"203\":1}}],[\"因为在这种情况下没有理由检查交互事件\",{\"1\":{\"179\":1}}],[\"因为在\",{\"1\":{\"169\":1}}],[\"因为在优化时您应该非常小心\",{\"1\":{\"131\":1}}],[\"因为在开发版本中\",{\"1\":{\"100\":1}}],[\"因为世界矩阵需要一个才能正常工作\",{\"1\":{\"120\":1}}],[\"因为这样做会通过现有的\",{\"1\":{\"234\":1}}],[\"因为这可能会影响性能\",{\"1\":{\"217\":1}}],[\"因为这些\",{\"1\":{\"262\":1}}],[\"因为这些设备使用\",{\"1\":{\"212\":1}}],[\"因为这些块可能未被充分使用\",{\"1\":{\"99\":1}}],[\"因为这会禁用实例化\",{\"1\":{\"118\":1}}],[\"因为静态批处理不会在\",{\"1\":{\"109\":1}}],[\"因为数据的状态永远不会改变\",{\"1\":{\"106\":1}}],[\"因为分配托管内存对\",{\"1\":{\"97\":1}}],[\"因为它使用自动生成的属性来保存其数据值\",{\"1\":{\"271\":1}}],[\"因为它能让解析器快速适应不断变化的数据布局\",{\"1\":{\"254\":1}}],[\"因为它能更好地处理循环\",{\"1\":{\"201\":1}}],[\"因为它通过剥离不需要的关键字来节省内存\",{\"1\":{\"240\":1}}],[\"因为它通常会极大地提高性能\",{\"1\":{\"225\":1}}],[\"因为它允许\",{\"1\":{\"221\":1}}],[\"因为它没有磁盘上相同数据的支持\",{\"1\":{\"205\":2}}],[\"因为它在启动期间已经发生过\",{\"1\":{\"200\":1}}],[\"因为它不会产生\",{\"1\":{\"169\":1}}],[\"因为它不使用\",{\"1\":{\"96\":1}}],[\"因为它大致跟踪\",{\"1\":{\"151\":1}}],[\"因为它可能不包含所有\",{\"1\":{\"148\":1}}],[\"因为它以两个渲染通道绘制\",{\"1\":{\"110\":1}}],[\"因为它们会在\",{\"1\":{\"275\":1}}],[\"因为它们会移除材质的\",{\"1\":{\"108\":1}}],[\"因为它们可以与用户脚本代码同时运行\",{\"1\":{\"227\":1}}],[\"因为它们必须在每次被标记为脏时重新计算其子元素的大小和位置\",{\"1\":{\"172\":1}}],[\"因为它们从其父\",{\"1\":{\"163\":1}}],[\"因为它们通常在栈上\",{\"1\":{\"48\":1}}],[\"因为它需要一个\",{\"1\":{\"97\":1}}],[\"因为值类型在栈上分配\",{\"1\":{\"63\":1,\"68\":1}}],[\"因为屏幕像素远多于模型顶点\",{\"1\":{\"51\":1}}],[\"因为\",{\"1\":{\"43\":1,\"58\":1,\"112\":2,\"117\":1,\"132\":1,\"149\":1,\"190\":1,\"197\":1,\"198\":1,\"212\":1,\"213\":1,\"215\":1,\"240\":1,\"285\":1,\"289\":2,\"389\":1,\"394\":1,\"402\":1}}],[\"因为装箱\",{\"1\":{\"42\":1}}],[\"零基础入门\",{\"1\":{\"313\":1}}],[\"零\",{\"1\":{\"75\":1}}],[\"零引用\",{\"1\":{\"75\":1}}],[\"易用性决定了架构的整体开发效率\",{\"1\":{\"381\":1}}],[\"易用性\",{\"1\":{\"381\":1}}],[\"易用性和解耦程度的权衡\",{\"1\":{\"60\":1}}],[\"易导致内存泄漏\",{\"1\":{\"75\":1}}],[\"运算符调用列表的\",{\"1\":{\"271\":1}}],[\"运动矢量\",{\"0\":{\"214\":1}}],[\"运动会出现\",{\"1\":{\"74\":1}}],[\"运行效率不高\",{\"1\":{\"371\":1}}],[\"运行效率通常低于\",{\"1\":{\"47\":1}}],[\"运行构建脚本\",{\"1\":{\"339\":1}}],[\"运行它们\",{\"1\":{\"298\":1}}],[\"运行垃圾回收器\",{\"1\":{\"276\":1}}],[\"运行垃圾回收器的时机\",{\"1\":{\"274\":1}}],[\"运行完整回收\",{\"1\":{\"276\":1}}],[\"运行重建和重新批处理过程\",{\"1\":{\"173\":1}}],[\"运行过程分为三步\",{\"1\":{\"144\":1}}],[\"运行于每个像素\",{\"1\":{\"76\":1}}],[\"运行于每个顶点\",{\"1\":{\"76\":1}}],[\"运行\",{\"1\":{\"51\":2,\"350\":1,\"351\":1}}],[\"运行更快\",{\"1\":{\"47\":1}}],[\"运行时以特定方式处理从\",{\"1\":{\"259\":1}}],[\"运行时网格组合\",{\"1\":{\"218\":1}}],[\"运行时是一个静态引擎代码库\",{\"1\":{\"193\":1}}],[\"运行时作为预链接的\",{\"1\":{\"193\":1}}],[\"运行时引擎在用户终止应用程序之前不会将托管内存返回给操作系统以供重用\",{\"1\":{\"189\":1}}],[\"运行时启用和禁用\",{\"1\":{\"148\":1}}],[\"运行时更改每实例数据示例\",{\"0\":{\"123\":1}}],[\"运行时的批处理不需要您启用\",{\"1\":{\"109\":1}}],[\"运行时的静态批处理\",{\"1\":{\"109\":1}}],[\"运行时加载模式切换\",{\"1\":{\"76\":1}}],[\"运行时性能优于\",{\"1\":{\"76\":1}}],[\"运行时共享数据\",{\"1\":{\"75\":1}}],[\"运行时动态加载\",{\"1\":{\"65\":1}}],[\"运行时没有\",{\"1\":{\"57\":1}}],[\"运行时编译\",{\"1\":{\"57\":1}}],[\"运行时\",{\"1\":{\"47\":1,\"65\":1,\"230\":1,\"371\":2}}],[\"运行时修改\",{\"1\":{\"45\":1}}],[\"配置表\",{\"1\":{\"404\":1}}],[\"配置项\",{\"1\":{\"365\":1}}],[\"配置导航栏最简单的方式\",{\"1\":{\"360\":1}}],[\"配置文件\",{\"1\":{\"346\":1}}],[\"配置\",{\"0\":{\"334\":1,\"356\":1},\"1\":{\"74\":1,\"149\":1,\"345\":1,\"361\":2}}],[\"降低音频比特率\",{\"1\":{\"249\":1}}],[\"降低是过度绘制\",{\"1\":{\"215\":1}}],[\"降低帧缓冲区大小也减少了这些缓冲区所需的内存量\",{\"1\":{\"205\":1}}],[\"降低片段着色器的复杂性\",{\"1\":{\"154\":1}}],[\"降低的不是\",{\"1\":{\"106\":1}}],[\"降低\",{\"1\":{\"74\":1}}],[\"判断\",{\"1\":{\"74\":1}}],[\"耗时过高\",{\"1\":{\"74\":1}}],[\"耗时\",{\"1\":{\"74\":1}}],[\"耗时约40ms\",{\"1\":{\"60\":1}}],[\"讨论一些不适合其他地方的问题\",{\"1\":{\"139\":1}}],[\"讨论提高\",{\"1\":{\"139\":1}}],[\"讨论使用开发者可用的各种工具收集性能分析数据\",{\"1\":{\"139\":1}}],[\"讨论\",{\"1\":{\"74\":1,\"139\":1}}],[\"捕获外部变量的闭包会在堆上分配对象\",{\"1\":{\"74\":1}}],[\"追踪内存分配\",{\"1\":{\"274\":1}}],[\"追踪\",{\"1\":{\"74\":1}}],[\"追问\",{\"1\":{\"55\":1,\"56\":1,\"57\":1,\"58\":1}}],[\"攻坚\",{\"1\":{\"74\":1}}],[\"必考硬核\",{\"0\":{\"74\":1}}],[\"必须重新编译你所有的程序集\",{\"1\":{\"300\":1}}],[\"必须重写一些底层引擎部分\",{\"1\":{\"127\":1}}],[\"必须将\",{\"1\":{\"283\":1}}],[\"必须谨慎管理内存\",{\"1\":{\"276\":1}}],[\"必须注意这些常量通常作为返回常量值的属性\",{\"1\":{\"272\":1}}],[\"必须调用\",{\"1\":{\"271\":1}}],[\"必须通过遮罩手动设置它们\",{\"1\":{\"218\":1}}],[\"必须向显卡推送大量顶点数据\",{\"1\":{\"217\":1}}],[\"必须清除先前的内容\",{\"1\":{\"212\":1}}],[\"必须随应用程序一起发布托管程序集\",{\"1\":{\"190\":1}}],[\"必须依赖后备字体\",{\"1\":{\"169\":1}}],[\"必须依附于\",{\"1\":{\"56\":1}}],[\"必须最小化重建次数\",{\"1\":{\"168\":1}}],[\"必须测试在层次结构中附加到每个\",{\"1\":{\"166\":1}}],[\"必须遍历的层次结构越浅\",{\"1\":{\"166\":1}}],[\"必须采样背景的纹理\",{\"1\":{\"159\":1}}],[\"必须在程序集定义资产中创建对该程序集的引用\",{\"1\":{\"299\":1}}],[\"必须在\",{\"1\":{\"151\":1}}],[\"必须在主线程执行的顺序逻辑\",{\"1\":{\"57\":1}}],[\"必须绘制在\",{\"1\":{\"149\":1}}],[\"必须做出权衡\",{\"1\":{\"139\":1}}],[\"必须根据系统行为仔细评估每种情况\",{\"1\":{\"139\":1}}],[\"必须与包含指定属性的常量缓冲区的名称匹配\",{\"1\":{\"118\":1}}],[\"必须支持\",{\"1\":{\"115\":1}}],[\"必须包含网格或蒙皮网格\",{\"1\":{\"112\":1}}],[\"必须满足以下要求才能与\",{\"1\":{\"112\":1}}],[\"必须符合静态批处理的条件\",{\"1\":{\"109\":1}}],[\"必须从后到前渲染网格\",{\"1\":{\"108\":1}}],[\"必须使用\",{\"1\":{\"60\":1}}],[\"必须使用同一个\",{\"1\":{\"58\":1}}],[\"必须是\",{\"1\":{\"58\":1}}],[\"必须声明在\",{\"1\":{\"58\":1}}],[\"必须兼容\",{\"1\":{\"58\":1}}],[\"必须由它启动\",{\"1\":{\"49\":1}}],[\"必须\",{\"1\":{\"47\":1}}],[\"客户端的高级渲染代码在主线程上执行\",{\"1\":{\"225\":1}}],[\"客户端还拥有真实的图形设备\",{\"1\":{\"224\":1}}],[\"客户端空间驱动程序和内核空间驱动程序共享一个内存空间\",{\"1\":{\"205\":1}}],[\"客户端全局捕获未处理异常\",{\"1\":{\"91\":1}}],[\"客户端预测\",{\"1\":{\"87\":1}}],[\"客户端程序\",{\"1\":{\"73\":1}}],[\"客户端面试宝典\",{\"0\":{\"73\":1}}],[\"充当单个游戏逻辑实体的世界空间位置的表征\",{\"1\":{\"270\":1}}],[\"充分利用多核\",{\"1\":{\"75\":1}}],[\"充分利用现代\",{\"1\":{\"46\":1}}],[\"充满信心地迎接挑战\",{\"1\":{\"72\":1}}],[\"答案更重要\",{\"1\":{\"72\":1}}],[\"答案要点\",{\"1\":{\"41\":1,\"42\":1,\"43\":1,\"44\":1,\"45\":1,\"46\":1,\"47\":1,\"48\":1,\"49\":1,\"50\":1,\"51\":1,\"52\":1,\"53\":1}}],[\"正常\",{\"1\":{\"396\":1}}],[\"正交投影\",{\"1\":{\"325\":1}}],[\"正如\",{\"1\":{\"270\":1}}],[\"正则表达式\",{\"0\":{\"253\":1}}],[\"正则在线测试\",{\"1\":{\"30\":1}}],[\"正在积极开发中\",{\"1\":{\"137\":1}}],[\"正确应用\",{\"1\":{\"221\":1}}],[\"正确使用\",{\"0\":{\"182\":1}}],[\"正确\",{\"1\":{\"72\":1}}],[\"情境\",{\"1\":{\"72\":1,\"92\":1}}],[\"情景题\",{\"1\":{\"59\":1}}],[\"情景与软技能\",{\"0\":{\"59\":1}}],[\"区域约束与序数比对\",{\"0\":{\"251\":1}}],[\"区域\",{\"1\":{\"205\":2,\"206\":1}}],[\"区分级别\",{\"1\":{\"91\":1}}],[\"区分使用\",{\"1\":{\"87\":1}}],[\"区分瓶颈\",{\"1\":{\"55\":1}}],[\"区别\",{\"1\":{\"71\":1,\"79\":1,\"80\":1}}],[\"热更的流程\",{\"1\":{\"93\":1}}],[\"热更新框架\",{\"1\":{\"312\":1}}],[\"热更新流程\",{\"1\":{\"84\":1}}],[\"热更新方案\",{\"1\":{\"61\":1}}],[\"热更\",{\"1\":{\"71\":1}}],[\"连续六次\",{\"1\":{\"399\":1}}],[\"连续的数据\",{\"1\":{\"387\":1}}],[\"连续碰撞检测\",{\"1\":{\"326\":1}}],[\"连续存储在内存块中\",{\"1\":{\"75\":1}}],[\"连续存储在内存块\",{\"1\":{\"46\":1}}],[\"连接到全局管理器单例可以优化性能\",{\"1\":{\"267\":1}}],[\"连接到\",{\"1\":{\"199\":1}}],[\"连接性\",{\"1\":{\"71\":1}}],[\"🧠\",{\"0\":{\"71\":1}}],[\"🧱\",{\"0\":{\"62\":1}}],[\"强化学习\",{\"1\":{\"332\":1}}],[\"强制单声道\",{\"1\":{\"392\":2}}],[\"强制执行规则的简单示例\",{\"1\":{\"246\":1}}],[\"强制\",{\"1\":{\"216\":1}}],[\"强制开发者处理依赖关系\",{\"1\":{\"60\":1}}],[\"强烈建议开发者在尝试应用\",{\"1\":{\"256\":1}}],[\"强烈建议不要使用静态\",{\"1\":{\"253\":1}}],[\"强烈建议所有\",{\"1\":{\"174\":1}}],[\"强烈建议移动开发者创建自己的\",{\"1\":{\"165\":1}}],[\"强烈建议读者从本章开始\",{\"1\":{\"139\":1}}],[\"强烈建议的用法\",{\"1\":{\"70\":1}}],[\"强引用和弱引用有啥区别\",{\"1\":{\"93\":1}}],[\"强调增量更新和断点续传的实现\",{\"1\":{\"84\":1}}],[\"强调\",{\"1\":{\"79\":1}}],[\"允许开发者控制用于加载数据的后台线程的优先级\",{\"1\":{\"269\":1}}],[\"允许\",{\"1\":{\"200\":1,\"225\":1}}],[\"允许你定义自定义托管程序集\",{\"1\":{\"198\":1}}],[\"允许进行原生代码剥离\",{\"1\":{\"193\":1}}],[\"允许布局系统正确计算\",{\"1\":{\"170\":1}}],[\"允许在\",{\"1\":{\"150\":1}}],[\"允许在一个\",{\"1\":{\"69\":1}}],[\"允许着色器函数访问实例\",{\"1\":{\"118\":1}}],[\"允许更长生命周期的分配\",{\"1\":{\"104\":1}}],[\"允许我们通过\",{\"1\":{\"58\":1}}],[\"新粒子系统完整讲义\",{\"1\":{\"319\":1}}],[\"新的回收请求可以直接销毁对象\",{\"1\":{\"69\":1}}],[\"新版本可变长参数操作\",{\"1\":{\"26\":1}}],[\"除特殊文件夹外\",{\"1\":{\"289\":2}}],[\"除此以外\",{\"1\":{\"289\":1}}],[\"除以\",{\"1\":{\"134\":2}}],[\"除以粒度大小\",{\"1\":{\"100\":1}}],[\"除非在\",{\"1\":{\"395\":1}}],[\"除非在初始化期间\",{\"1\":{\"253\":1}}],[\"除非这些文件夹包含它们自己的程序集定义或引用资产\",{\"1\":{\"294\":1,\"295\":1}}],[\"除非子文件夹有自己的程序集定义或程序集引用资产\",{\"1\":{\"290\":1}}],[\"除非频繁调用重复的连接\",{\"1\":{\"280\":1}}],[\"除非您在\",{\"1\":{\"119\":1}}],[\"除非被装箱\",{\"1\":{\"60\":1}}],[\"除了你自己的\",{\"1\":{\"388\":1}}],[\"除了切换到顺序比较\",{\"1\":{\"252\":1}}],[\"除了托管内存\",{\"1\":{\"200\":1}}],[\"除了\",{\"1\":{\"109\":1,\"114\":1,\"206\":1}}],[\"除了基本的池化\",{\"1\":{\"69\":1}}],[\"查找脚本所属的程序集\",{\"0\":{\"306\":1}}],[\"查找\",{\"1\":{\"81\":1}}],[\"查询也需要在底层分配大型瞬态数据结构\",{\"1\":{\"253\":1}}],[\"查询\",{\"1\":{\"68\":1,\"258\":1}}],[\"查看各个资源的引用\",{\"1\":{\"403\":1}}],[\"查看报错\",{\"1\":{\"340\":1}}],[\"查看器工具\",{\"1\":{\"284\":1}}],[\"查看器的输出\",{\"1\":{\"284\":1}}],[\"查看我们的\",{\"1\":{\"134\":1}}],[\"查看它如何影响应用程序的性能\",{\"1\":{\"96\":1}}],[\"查看\",{\"1\":{\"41\":3,\"134\":1,\"135\":1,\"215\":1,\"339\":1}}],[\"查看是否有过多的游戏逻辑\",{\"1\":{\"55\":1}}],[\"查看是\",{\"1\":{\"41\":1}}],[\"需准备\",{\"1\":{\"71\":1}}],[\"需使用\",{\"1\":{\"68\":1}}],[\"需要双份内存\",{\"1\":{\"377\":1}}],[\"需要手动管理内存分配和释放\",{\"1\":{\"371\":1}}],[\"需要开启\",{\"1\":{\"362\":1}}],[\"需要修改图标资产模式\",{\"1\":{\"359\":1}}],[\"需要安装\",{\"1\":{\"348\":1}}],[\"需要指定\",{\"1\":{\"340\":1}}],[\"需要拉取全部提交记录\",{\"1\":{\"339\":1}}],[\"需要的时候手动引用\",{\"1\":{\"291\":1}}],[\"需要的执行时间为\",{\"1\":{\"271\":2}}],[\"需要为每个程序集创建一个文件夹\",{\"1\":{\"290\":1}}],[\"需要为每种类型单独生成代码\",{\"1\":{\"197\":1}}],[\"需要某种粒子效果时\",{\"1\":{\"266\":1}}],[\"需要唤醒它们\",{\"1\":{\"222\":1}}],[\"需要方形纹理\",{\"1\":{\"221\":1}}],[\"需要\",{\"1\":{\"221\":1,\"262\":1}}],[\"需要时间和精力\",{\"1\":{\"218\":1}}],[\"需要并自动启用运动矢量\",{\"1\":{\"214\":1}}],[\"需要较少的资源进行解压缩\",{\"1\":{\"201\":1}}],[\"需要更多资源进行解压缩\",{\"1\":{\"201\":1}}],[\"需要额外的\",{\"1\":{\"200\":1}}],[\"需要分配新的内存页块时\",{\"1\":{\"200\":1}}],[\"需要改变\",{\"1\":{\"180\":1}}],[\"需要知道交互事件应该来自哪个相机\",{\"1\":{\"180\":1}}],[\"需要批量处理\",{\"1\":{\"178\":1}}],[\"需要按照其适当的层次结构顺序应用\",{\"1\":{\"145\":1}}],[\"需要记住的重要一点是\",{\"1\":{\"142\":1}}],[\"需要相同的\",{\"1\":{\"127\":1}}],[\"需要高可配置性和可维护性的项目中\",{\"1\":{\"75\":1}}],[\"需要物体使用相同的材质\",{\"1\":{\"64\":1,\"69\":1}}],[\"需要加载不同的材质属性\",{\"1\":{\"58\":1}}],[\"需要复杂逻辑\",{\"1\":{\"48\":1}}],[\"需要继承\",{\"1\":{\"48\":1}}],[\"需要一个背景\",{\"1\":{\"159\":1}}],[\"需要一个\",{\"1\":{\"44\":1}}],[\"需要准备数据\",{\"1\":{\"43\":1}}],[\"若需在函数内修改值类型变量的值\",{\"1\":{\"68\":1}}],[\"状态模式\",{\"1\":{\"312\":1}}],[\"状态机\",{\"1\":{\"75\":1,\"85\":1,\"331\":1}}],[\"状态机设计\",{\"1\":{\"66\":1}}],[\"状态切换\",{\"1\":{\"70\":1}}],[\"状态同步\",{\"1\":{\"66\":1}}],[\"碰撞检测\",{\"1\":{\"326\":1}}],[\"碰撞检测原理\",{\"1\":{\"66\":1}}],[\"碰撞器不会被物理引擎处理\",{\"1\":{\"62\":1,\"67\":1}}],[\"碰撞器会根据物理引擎产生真实的碰撞效果\",{\"1\":{\"62\":1,\"67\":1}}],[\"碰撞器\",{\"1\":{\"62\":2,\"67\":2}}],[\"碰撞器与触发器的区别\",{\"1\":{\"61\":1}}],[\"确定是使用a星算法还是跳点算法或者其他算法\",{\"1\":{\"383\":1}}],[\"确定是使用状态机还是行为树或者其他\",{\"1\":{\"383\":1}}],[\"确定是使用ngui还是ugui\",{\"1\":{\"383\":1}}],[\"确定是否使用assetbundle\",{\"1\":{\"383\":1}}],[\"确定是tcp\",{\"1\":{\"383\":1}}],[\"确实会进行射线检测\",{\"1\":{\"179\":1}}],[\"确实在\",{\"1\":{\"134\":1}}],[\"确实需要系统地梳理可能遇到的面试问题\",{\"1\":{\"66\":1}}],[\"确认应答\",{\"1\":{\"71\":1}}],[\"确保磁盘上每个资源的大小与其运行时内存使用量成比例\",{\"1\":{\"200\":1}}],[\"确保没有通过将其\",{\"1\":{\"155\":1}}],[\"确保\",{\"1\":{\"112\":1}}],[\"确保材质和\",{\"1\":{\"74\":1}}],[\"确保材质兼容\",{\"1\":{\"41\":1}}],[\"确保正确使用了\",{\"1\":{\"74\":1}}],[\"确保在资源完全不被使用时才调用\",{\"1\":{\"70\":1}}],[\"确保先调用旧状态的\",{\"1\":{\"70\":1}}],[\"确保相机在对象移动后再更新\",{\"1\":{\"67\":1}}],[\"扎实的技术基础\",{\"1\":{\"66\":1}}],[\"希望大家未来都能注意\",{\"1\":{\"77\":1}}],[\"希望这份整合的面试题集能帮助你构建清晰的知识脉络\",{\"1\":{\"72\":1}}],[\"希望这份问题清单和解答思路能帮助你系统地准备面试\",{\"1\":{\"66\":1}}],[\"希望能帮助你更有针对性地进行准备\",{\"1\":{\"66\":1}}],[\"希望能助你一臂之力\",{\"1\":{\"61\":1}}],[\"保持大小较低更为关键\",{\"1\":{\"219\":1}}],[\"保持编辑器打开\",{\"1\":{\"199\":1}}],[\"保持思维活跃\",{\"1\":{\"66\":1,\"72\":1}}],[\"保留\",{\"1\":{\"14\":1}}],[\"保留原始\",{\"1\":{\"14\":1}}],[\"则完全可以关掉\",{\"1\":{\"394\":1}}],[\"则继续分解成子子问题\",{\"1\":{\"382\":1}}],[\"则表达式语法不正确\",{\"1\":{\"302\":1}}],[\"则包含依赖类型的程序集必须声明对包含其所依赖类型的程序集的引用\",{\"1\":{\"291\":1}}],[\"则每次都会分配新的内存\",{\"1\":{\"281\":1}}],[\"则每个进程在\",{\"1\":{\"205\":1}}],[\"则此方法会在堆上为以下字符串生成存储\",{\"1\":{\"280\":1}}],[\"则忽略\",{\"1\":{\"275\":1}}],[\"则运行\",{\"1\":{\"267\":1}}],[\"则为数组的数组与\",{\"1\":{\"265\":1}}],[\"则没必要将所有关卡的数据一起序列\",{\"1\":{\"254\":1}}],[\"则禁用\",{\"1\":{\"247\":1}}],[\"则强制将标志位更改为\",{\"1\":{\"246\":1}}],[\"则应有地形地图\",{\"1\":{\"383\":1}}],[\"则应该禁用它们\",{\"1\":{\"232\":1}}],[\"则应使用它来减少射线检测层次遍历的成本\",{\"1\":{\"166\":1}}],[\"则图形驱动程序分别需要两个或三个帧缓冲区\",{\"1\":{\"230\":1}}],[\"则橱柜模型不应在其背面有任何面\",{\"1\":{\"217\":1}}],[\"则很容易创建临时分配\",{\"1\":{\"283\":1}}],[\"则很难获得稳定的结果\",{\"1\":{\"204\":1}}],[\"则很可能是在计算帧时发生的失败分配\",{\"1\":{\"100\":1}}],[\"则会\",{\"1\":{\"394\":1}}],[\"则会被修饰的方法以及对被修饰方法的所有调用都会在编译中剔除\",{\"1\":{\"263\":1}}],[\"则会给动画系统增加不必要的开销\",{\"1\":{\"248\":1}}],[\"则会导致添加\",{\"1\":{\"248\":1}}],[\"则会将其更改为真实声音\",{\"1\":{\"201\":1}}],[\"则会影响性能\",{\"1\":{\"100\":1}}],[\"则务必始终设置\",{\"1\":{\"174\":1}}],[\"则重建它们的成本通常足够高\",{\"1\":{\"170\":1}}],[\"则重建网格\",{\"1\":{\"146\":1}}],[\"则这不会产生任何影响\",{\"1\":{\"213\":1}}],[\"则这种完整的布局和顶点重新计算是不必要的\",{\"1\":{\"170\":1}}],[\"则这种方法因其简单性而受到青睐\",{\"1\":{\"170\":1}}],[\"则这些字体资源及其所有后备字体资源将在激活第一个包含\",{\"1\":{\"169\":1}}],[\"则引用的字体资源及其所有后备字体资源将在组件激活后递归加载\",{\"1\":{\"169\":1}}],[\"则后备字体消耗的内存量可能变得过多\",{\"1\":{\"168\":1}}],[\"则必须重置\",{\"1\":{\"299\":1}}],[\"则必须将字体设置为\",{\"1\":{\"168\":1}}],[\"则必须使用\",{\"1\":{\"96\":1}}],[\"则通过将图集的较短维度加倍来创建更大的图集\",{\"1\":{\"168\":1}}],[\"则通过扩展\",{\"1\":{\"65\":1}}],[\"则光栅化该图集并且不继续第二步\",{\"1\":{\"168\":1}}],[\"则系统会尝试重建图集\",{\"1\":{\"168\":1}}],[\"则添加它并将图集重新上传到图形设备\",{\"1\":{\"168\":1}}],[\"则字体图集将包含一个粗体\",{\"1\":{\"168\":1}}],[\"则字体图集将包含两个不同大小的字母\",{\"1\":{\"168\":1}}],[\"则任何绘制在位于射线阻挡物理层上的\",{\"1\":{\"166\":1}}],[\"则将其添加到命中列表中\",{\"1\":{\"166\":1}}],[\"则计算批处理本身变得非常昂贵\",{\"1\":{\"161\":1}}],[\"则无需渲染另一个房间\",{\"1\":{\"213\":1}}],[\"则无需设置和上传缓冲区到\",{\"1\":{\"127\":1}}],[\"则无论场景中有多少活动相机\",{\"1\":{\"157\":1}}],[\"则问题可能是动态元素与静态元素分组在一起\",{\"1\":{\"152\":1}}],[\"则问题是计算网格修改器花费了过多时间\",{\"1\":{\"152\":1}}],[\"则问题只是文本网格的生成\",{\"1\":{\"152\":1}}],[\"则时间用于对脏的\",{\"1\":{\"152\":1}}],[\"则需要更深入的分析\",{\"1\":{\"152\":1}}],[\"则可节省\",{\"1\":{\"267\":1}}],[\"则可在\",{\"1\":{\"248\":1}}],[\"则可禁用\",{\"1\":{\"247\":1}}],[\"则可能会对性能产生不利影响\",{\"1\":{\"285\":1}}],[\"则可能会花费过多的时间刷新更改相对较少的\",{\"1\":{\"161\":1}}],[\"则可能可以用基于\",{\"1\":{\"172\":1}}],[\"则可批处理的四边形实际上可以批处理\",{\"1\":{\"149\":1}}],[\"则可以认为它们是上下层关系\",{\"1\":{\"379\":1}}],[\"则可以在玩家闯关到相应位置时再解析数据\",{\"1\":{\"254\":1}}],[\"则可以重新编译\",{\"1\":{\"175\":1}}],[\"则可以禁用实际的世界空间相机\",{\"1\":{\"158\":1}}],[\"则可以使用接下来描述的\",{\"1\":{\"148\":1}}],[\"则可以将绘制调用分组在一起\",{\"1\":{\"106\":1}}],[\"则更新附加的\",{\"1\":{\"146\":1}}],[\"则该\",{\"1\":{\"136\":1}}],[\"则该分配将添加到队列中\",{\"1\":{\"101\":1}}],[\"则\",{\"1\":{\"119\":1,\"149\":1,\"174\":1,\"201\":1,\"248\":1,\"269\":1,\"340\":1}}],[\"则它是静态的\",{\"1\":{\"116\":1}}],[\"则它们共享相同的配置\",{\"1\":{\"106\":1}}],[\"则大小为\",{\"1\":{\"104\":2}}],[\"则构建正在处理每帧溢出\",{\"1\":{\"103\":1}}],[\"则溢出是在加载期间发生的高水位标记\",{\"1\":{\"103\":1}}],[\"则存在泄漏托管对象引用的原生对象的风险\",{\"1\":{\"97\":1}}],[\"则堆必须扩展\",{\"1\":{\"97\":1}}],[\"则是直接优化为\",{\"1\":{\"60\":1}}],[\"参阅\",{\"1\":{\"255\":1}}],[\"参见\",{\"1\":{\"170\":1,\"254\":1}}],[\"参见左侧的\",{\"1\":{\"135\":1}}],[\"参数是纹理被重建的字体\",{\"1\":{\"168\":1}}],[\"参数\",{\"1\":{\"127\":1,\"270\":1}}],[\"参数设置为\",{\"1\":{\"116\":1}}],[\"参数名称\",{\"1\":{\"104\":1}}],[\"参数则只卸载\",{\"1\":{\"65\":1}}],[\"参考文章\",{\"1\":{\"387\":1}}],[\"参考导表工具\",{\"1\":{\"377\":1}}],[\"参考中的\",{\"1\":{\"215\":1}}],[\"参考\",{\"0\":{\"94\":1,\"341\":1,\"374\":1},\"1\":{\"124\":1,\"336\":1,\"360\":1,\"388\":2,\"393\":1,\"404\":1}}],[\"参考手册\",{\"1\":{\"30\":1}}],[\"卸载场景\",{\"1\":{\"200\":1}}],[\"卸载策略\",{\"1\":{\"84\":1}}],[\"卸载\",{\"1\":{\"65\":1,\"70\":1,\"84\":1}}],[\"限制在可配置的最小\",{\"1\":{\"168\":1}}],[\"限制池大小\",{\"1\":{\"69\":1}}],[\"限制\",{\"1\":{\"64\":2,\"69\":2,\"110\":1,\"132\":1,\"134\":1}}],[\"任何星标的文章都会显示在博客主页侧边栏的文章栏目中\",{\"1\":{\"358\":1}}],[\"任何在此注释之前的内容会被视为摘要\",{\"1\":{\"358\":1}}],[\"任何后缀都会被忽略\",{\"1\":{\"304\":1}}],[\"任何脚本都可以直接访问任何其他脚本中定义的类型\",{\"1\":{\"289\":1}}],[\"任何修改字符串的尝试都会导致一个全新的字符串\",{\"1\":{\"280\":1}}],[\"任何具有更高优先级的线程都会抢占主线程\",{\"1\":{\"269\":1}}],[\"任何当前不包含在活动\",{\"1\":{\"168\":1}}],[\"任何深度\",{\"1\":{\"166\":1}}],[\"任何动画\",{\"1\":{\"163\":1}}],[\"任何覆盖在不可批处理的四边形上的四边形必须在不可批处理的四边形之前绘制\",{\"1\":{\"149\":1}}],[\"任何因绘制调用而使\",{\"1\":{\"139\":1}}],[\"任何需要频繁实例化和销毁的\",{\"1\":{\"64\":1}}],[\"任意数量的\",{\"1\":{\"116\":1}}],[\"任务和成就系统\",{\"1\":{\"75\":1}}],[\"任务配置\",{\"1\":{\"56\":1}}],[\"任务物品\",{\"1\":{\"56\":1}}],[\"任务\",{\"1\":{\"56\":3,\"72\":1,\"92\":1}}],[\"任务要求玩家拥有\",{\"1\":{\"56\":1}}],[\"任务系统需要检查是否完成\",{\"1\":{\"60\":1}}],[\"任务系统的工作流\",{\"1\":{\"56\":1}}],[\"任务系统\",{\"1\":{\"56\":1,\"60\":1,\"75\":1}}],[\"任务完成后\",{\"1\":{\"49\":1}}],[\"⚙️\",{\"0\":{\"64\":1,\"69\":1,\"82\":1}}],[\"移动设备\",{\"1\":{\"387\":1}}],[\"移动设备上的\",{\"1\":{\"244\":1}}],[\"移动设备上错误的鼠标输入检测\",{\"0\":{\"165\":1}}],[\"移动\",{\"1\":{\"331\":1}}],[\"移动大型变换层级视图的\",{\"1\":{\"270\":1}}],[\"移动应用程序的优化\",{\"1\":{\"245\":2}}],[\"移动着色器\",{\"0\":{\"236\":1}}],[\"移除您看不到的几何体面\",{\"1\":{\"217\":1}}],[\"移除天空盒材质\",{\"1\":{\"212\":1}}],[\"移除模块可以节省大量内存\",{\"1\":{\"194\":1}}],[\"移除渲染器兼容性\",{\"1\":{\"112\":1}}],[\"移除着色器兼容性\",{\"1\":{\"112\":1}}],[\"移除与\",{\"1\":{\"112\":1}}],[\"移除\",{\"1\":{\"63\":1,\"112\":1}}],[\"移到\",{\"1\":{\"41\":1}}],[\"委托都会执行回调列表的完整拷贝\",{\"1\":{\"268\":1}}],[\"委托来实现这些回调\",{\"1\":{\"268\":1}}],[\"委托\",{\"0\":{\"268\":1}}],[\"委托目前未记录\",{\"1\":{\"168\":1}}],[\"委托并查询\",{\"1\":{\"168\":1}}],[\"委托和事件缓存\",{\"1\":{\"63\":1}}],[\"委托与事件的区别\",{\"1\":{\"66\":1}}],[\"委托与事件\",{\"1\":{\"61\":1}}],[\"离开作用域后自动释放\",{\"1\":{\"63\":1,\"68\":1}}],[\"敌人等\",{\"1\":{\"64\":1}}],[\"敌人\",{\"1\":{\"63\":1,\"68\":1}}],[\"敌人属性\",{\"1\":{\"45\":1}}],[\"例子\",{\"1\":{\"63\":1}}],[\"例如配置表\",{\"1\":{\"402\":1}}],[\"例如如果用同样的\",{\"1\":{\"394\":1}}],[\"例如如何启用和使用每种方法\",{\"1\":{\"108\":1}}],[\"例如很多\",{\"1\":{\"391\":1}}],[\"例如抛射物\",{\"1\":{\"279\":1}}],[\"例如引用变量被重新赋值\",{\"1\":{\"274\":1}}],[\"例如从\",{\"1\":{\"269\":1}}],[\"例如大多数\",{\"1\":{\"249\":1}}],[\"例如暴露模型的双手以便动态附加武器模型\",{\"1\":{\"248\":1}}],[\"例如使用\",{\"1\":{\"247\":1}}],[\"例如线性雾\",{\"1\":{\"241\":1}}],[\"例如天空盒或地面平面\",{\"1\":{\"215\":1}}],[\"例如密集的粒子效果和全屏后处理效果\",{\"1\":{\"215\":1}}],[\"例如设置或玩家库存\",{\"1\":{\"215\":1}}],[\"例如时间抗锯齿\",{\"1\":{\"214\":1}}],[\"例如通用框架的代码\",{\"1\":{\"205\":1}}],[\"例如音效\",{\"1\":{\"201\":1}}],[\"例如后备缓冲区\",{\"1\":{\"200\":1}}],[\"例如常量缓冲区\",{\"1\":{\"200\":1}}],[\"例如协程\",{\"1\":{\"197\":1}}],[\"例如按钮上的文本\",{\"1\":{\"179\":1}}],[\"例如仅需要显示少量\",{\"1\":{\"170\":1}}],[\"例如整个\",{\"1\":{\"168\":1}}],[\"例如一个是\",{\"1\":{\"168\":1}}],[\"例如希望其背景和文本都改变颜色的按钮\",{\"1\":{\"166\":1}}],[\"例如触摸事件和指针悬停事件\",{\"1\":{\"164\":1}}],[\"例如背景和标签\",{\"1\":{\"163\":1}}],[\"例如教程箭头\",{\"1\":{\"163\":1}}],[\"例如始终在其他层之上或之下\",{\"1\":{\"163\":1}}],[\"例如这个最小的\",{\"1\":{\"160\":1}}],[\"例如当组件的材质或纹理改变时\",{\"1\":{\"146\":1}}],[\"例如当组件的\",{\"1\":{\"146\":1}}],[\"例如当父\",{\"1\":{\"141\":1}}],[\"例如颜色\",{\"1\":{\"120\":1}}],[\"例如粒子和线\",{\"1\":{\"110\":1}}],[\"例如树木或灌木\",{\"1\":{\"106\":1,\"113\":1}}],[\"例如切换到不同的材质\",{\"1\":{\"106\":1}}],[\"例如关于纹理\",{\"1\":{\"106\":1}}],[\"例如卡顿\",{\"1\":{\"96\":1}}],[\"例如简单的模型动画\",{\"1\":{\"76\":1}}],[\"例如场景中没有对象在使用这个纹理\",{\"1\":{\"70\":1}}],[\"例如在每次帧更新时\",{\"1\":{\"280\":1}}],[\"例如在某些\",{\"1\":{\"218\":1}}],[\"例如在\",{\"1\":{\"60\":1}}],[\"例如100\",{\"1\":{\"60\":1}}],[\"例如每帧执行1000次\",{\"1\":{\"60\":1}}],[\"例如mmorpg\",{\"1\":{\"60\":1}}],[\"例如基于\",{\"1\":{\"44\":1}}],[\"例如\",{\"1\":{\"41\":1,\"43\":1,\"44\":1,\"45\":1,\"48\":1,\"52\":4,\"56\":1,\"60\":1,\"66\":3,\"72\":2,\"77\":1,\"92\":1,\"97\":1,\"98\":1,\"100\":1,\"101\":1,\"102\":1,\"103\":2,\"104\":3,\"106\":1,\"108\":2,\"109\":2,\"110\":4,\"111\":1,\"112\":2,\"113\":1,\"118\":1,\"126\":1,\"129\":1,\"136\":2,\"144\":1,\"148\":1,\"156\":1,\"163\":1,\"168\":2,\"169\":2,\"172\":1,\"178\":1,\"194\":2,\"195\":1,\"201\":1,\"204\":1,\"205\":4,\"210\":1,\"211\":1,\"212\":2,\"213\":1,\"215\":1,\"216\":2,\"217\":2,\"218\":1,\"221\":2,\"222\":1,\"225\":2,\"226\":1,\"228\":1,\"231\":1,\"233\":1,\"236\":2,\"237\":1,\"238\":1,\"240\":1,\"247\":1,\"267\":1,\"269\":2,\"270\":2,\"273\":1,\"274\":1,\"275\":1,\"276\":1,\"278\":1,\"279\":1,\"282\":1,\"284\":1,\"285\":1,\"288\":1,\"290\":1,\"301\":1,\"304\":5,\"305\":1,\"308\":1,\"309\":1,\"388\":1,\"389\":1,\"392\":1,\"404\":1}}],[\"🚀\",{\"0\":{\"73\":1,\"78\":1}}],[\"💡\",{\"0\":{\"66\":1,\"72\":1,\"89\":1}}],[\"🔧\",{\"0\":{\"65\":1,\"70\":1}}],[\"💻\",{\"0\":{\"63\":1,\"68\":1,\"86\":1}}],[\"🔍\",{\"0\":{\"61\":1,\"67\":1}}],[\"系列教程\",{\"1\":{\"319\":1}}],[\"系列课\",{\"1\":{\"315\":1}}],[\"系列\",{\"1\":{\"212\":1}}],[\"系列函数\",{\"1\":{\"62\":2,\"67\":2}}],[\"系统进程最后被终止\",{\"1\":{\"388\":1}}],[\"系统进行处理\",{\"1\":{\"269\":1}}],[\"系统的原理及其组件使用\",{\"0\":{\"379\":1}}],[\"系统的不同部分很重要\",{\"1\":{\"140\":1}}],[\"系统会重复在共享内存和\",{\"1\":{\"212\":1}}],[\"系统会重新编织程序集\",{\"1\":{\"195\":1}}],[\"系统必须写入并修改内存\",{\"1\":{\"205\":1}}],[\"系统必须为屏幕上表示的每个\",{\"1\":{\"161\":1}}],[\"系统根据使用同一页的其他进程数量的比例来缩放进程中每页\",{\"1\":{\"205\":1}}],[\"系统分配的页面\",{\"1\":{\"200\":1}}],[\"系统分配第一个内存页块\",{\"1\":{\"200\":1}}],[\"系统旨在支持大量用例\",{\"1\":{\"175\":1}}],[\"系统更高效\",{\"1\":{\"172\":1}}],[\"系统本身在本机代码中驱动\",{\"1\":{\"172\":1}}],[\"系统确保\",{\"1\":{\"170\":1}}],[\"系统开销\",{\"1\":{\"169\":1}}],[\"系统将把大部分处理转移到工作线程\",{\"1\":{\"163\":1}}],[\"系统也不会跨单独的\",{\"1\":{\"163\":1}}],[\"系统生成的几何体的渲染成本将显示在\",{\"1\":{\"151\":1}}],[\"系统提供可绘制几何体的\",{\"1\":{\"141\":1}}],[\"系统中一些基本技巧和\",{\"1\":{\"139\":1}}],[\"系统中每个\",{\"1\":{\"104\":1}}],[\"系统之前\",{\"1\":{\"139\":1}}],[\"系统相关的\",{\"1\":{\"104\":1}}],[\"系统或\",{\"1\":{\"96\":1}}],[\"系统级思维\",{\"1\":{\"92\":1}}],[\"系统解耦\",{\"1\":{\"75\":1}}],[\"系统\",{\"1\":{\"46\":1,\"52\":1,\"55\":1,\"96\":2,\"116\":1,\"204\":1,\"379\":1}}],[\"系统和其他游戏系统\",{\"1\":{\"44\":1}}],[\"之所以是使用\",{\"1\":{\"400\":1}}],[\"之中\",{\"1\":{\"388\":1}}],[\"之\",{\"1\":{\"318\":1,\"319\":1,\"404\":1}}],[\"之外\",{\"1\":{\"252\":1}}],[\"之外的\",{\"1\":{\"213\":1}}],[\"之外的所有跟踪类别\",{\"1\":{\"148\":1}}],[\"之上\",{\"1\":{\"181\":1}}],[\"之上和\",{\"1\":{\"149\":1}}],[\"之前的\",{\"1\":{\"371\":1}}],[\"之前以自定义格式写入和读取命令的性能影响\",{\"1\":{\"228\":1}}],[\"之前\",{\"1\":{\"165\":1}}],[\"之前调用\",{\"1\":{\"62\":1,\"67\":1}}],[\"之后可以减少内存大小\",{\"1\":{\"394\":1}}],[\"之后做了一些\",{\"1\":{\"389\":1}}],[\"之后应立即重新启用\",{\"1\":{\"276\":1}}],[\"之后再立即退出\",{\"1\":{\"267\":1}}],[\"之后\",{\"1\":{\"213\":1,\"227\":1,\"387\":1}}],[\"之后将不再需要重新批处理\",{\"1\":{\"163\":1}}],[\"之后就可以只写中文了\",{\"1\":{\"14\":1}}],[\"之下\",{\"1\":{\"149\":1}}],[\"之一\",{\"1\":{\"115\":1,\"116\":1}}],[\"之间存在差异\",{\"1\":{\"269\":1}}],[\"之间传输\",{\"1\":{\"212\":1}}],[\"之间\",{\"1\":{\"143\":1,\"305\":1}}],[\"之间的兼容性问题\",{\"1\":{\"371\":1}}],[\"之间的区别\",{\"1\":{\"187\":1}}],[\"之间的屏幕位置关系\",{\"1\":{\"178\":1}}],[\"之间的\",{\"1\":{\"135\":1}}],[\"之间的工作方式不同\",{\"1\":{\"110\":1}}],[\"之间共享材质\",{\"1\":{\"108\":1}}],[\"无用内容\",{\"1\":{\"403\":1}}],[\"无限光源\",{\"1\":{\"329\":1}}],[\"无效且不会启动回收\",{\"1\":{\"276\":1}}],[\"无效\",{\"1\":{\"276\":1}}],[\"无需其他初始化代码\",{\"1\":{\"257\":1}}],[\"无需导入压缩的音频再重新压缩\",{\"1\":{\"249\":1}}],[\"无需与漫反射贴图\",{\"1\":{\"200\":1}}],[\"无工作线程\",{\"0\":{\"224\":1,\"228\":1}}],[\"无论这些脚本位于何处\",{\"1\":{\"307\":1}}],[\"无论这些文件夹位于何处\",{\"1\":{\"290\":1}}],[\"无论您传递的方法是匿名方法还是预定义方法\",{\"1\":{\"283\":1}}],[\"无论您使用\",{\"1\":{\"109\":1}}],[\"无论它是否已更改\",{\"1\":{\"161\":1}}],[\"无论如何\",{\"1\":{\"134\":1}}],[\"无论\",{\"1\":{\"134\":1}}],[\"无论线程所有者是谁\",{\"1\":{\"130\":1}}],[\"无论脚本是否启用\",{\"1\":{\"62\":1,\"67\":1}}],[\"无法统计到内部的使用情况\",{\"1\":{\"389\":1}}],[\"无法分析已经编译过的\",{\"1\":{\"389\":1}}],[\"无法跨平台\",{\"1\":{\"371\":1}}],[\"无法单独剔除\",{\"1\":{\"288\":1}}],[\"无法单独剔除您组合的网格\",{\"1\":{\"111\":1}}],[\"无法控制它使用多少颜色缓冲区和帧缓冲区\",{\"1\":{\"231\":1}}],[\"无法控制\",{\"1\":{\"212\":1}}],[\"无法将其返回给系统\",{\"1\":{\"200\":1}}],[\"无法将它们批处理在一起\",{\"1\":{\"108\":1,\"110\":1}}],[\"无法剥离\",{\"1\":{\"193\":1}}],[\"无法渲染所有物体\",{\"1\":{\"127\":1}}],[\"无法高效实例化受多个灯光影响的对象\",{\"1\":{\"120\":1}}],[\"无法以充分利用\",{\"1\":{\"117\":1}}],[\"无法完全对使用多通道着色器的\",{\"1\":{\"110\":1}}],[\"无法对许多复杂的数据类型\",{\"1\":{\"254\":1}}],[\"无法对包含超过\",{\"1\":{\"110\":1}}],[\"无法对\",{\"1\":{\"108\":1}}],[\"无法容纳应用程序所需的\",{\"1\":{\"103\":1}}],[\"无锁地分配\",{\"1\":{\"103\":1}}],[\"无缝对接\",{\"1\":{\"58\":1}}],[\"世界的替身版本\",{\"1\":{\"158\":1}}],[\"世界的工作来帮助减少\",{\"1\":{\"157\":1}}],[\"世界\",{\"1\":{\"158\":1}}],[\"世界空间相机仍将渲染\",{\"1\":{\"157\":1}}],[\"世界坐标\",{\"1\":{\"61\":1}}],[\"世界法线\",{\"1\":{\"51\":1}}],[\"基本看不到\",{\"1\":{\"399\":1}}],[\"基本上就不要用了\",{\"1\":{\"394\":1}}],[\"基本概念\",{\"1\":{\"317\":1}}],[\"基本操作\",{\"1\":{\"313\":1}}],[\"基准测试\",{\"1\":{\"252\":1}}],[\"基准测试可以告诉您\",{\"1\":{\"210\":1}}],[\"基准测试项目\",{\"1\":{\"134\":1}}],[\"基础资源\",{\"1\":{\"313\":1}}],[\"基础组件\",{\"1\":{\"313\":1}}],[\"基础层使用较低的\",{\"1\":{\"218\":1}}],[\"基础步骤中的\",{\"1\":{\"172\":1}}],[\"基础\",{\"0\":{\"140\":1},\"1\":{\"66\":1,\"139\":1,\"161\":1}}],[\"基础概念\",{\"1\":{\"61\":1}}],[\"基于物理的渲染\",{\"1\":{\"333\":1}}],[\"基于瓦片的渲染\",{\"1\":{\"212\":2}}],[\"基于位置的\",{\"1\":{\"170\":1}}],[\"基于组合的\",{\"0\":{\"159\":1},\"1\":{\"154\":1}}],[\"基于\",{\"0\":{\"172\":1},\"1\":{\"75\":1}}],[\"基于scriptableobject的event\",{\"1\":{\"60\":1}}],[\"基于cocos2d\",{\"1\":{\"19\":1}}],[\"组中\",{\"1\":{\"149\":2}}],[\"组合模式\",{\"1\":{\"312\":1}}],[\"组合批处理\",{\"1\":{\"163\":1}}],[\"组合层叠元素有几个缺点\",{\"1\":{\"159\":1}}],[\"组合和分层标准背景和元素以创建最终\",{\"1\":{\"159\":1}}],[\"组合表示其\",{\"1\":{\"143\":1}}],[\"组合网格以减少绘制调用\",{\"1\":{\"106\":1}}],[\"组织技术分享会\",{\"1\":{\"60\":1}}],[\"组件做的事情就是合并\",{\"1\":{\"379\":1}}],[\"组件原理和性能深度优化\",{\"1\":{\"313\":1}}],[\"组件后带有后缀\",{\"1\":{\"304\":1}}],[\"组件交互\",{\"1\":{\"234\":1}}],[\"组件将停止\",{\"1\":{\"183\":1}}],[\"组件将其几何体生成为一系列四边形\",{\"1\":{\"149\":1}}],[\"组件本身\",{\"1\":{\"183\":1}}],[\"组件来减轻硬件负载并提高渲染性能\",{\"1\":{\"218\":1}}],[\"组件来搜索主相机\",{\"1\":{\"174\":1}}],[\"组件来改进\",{\"1\":{\"170\":1}}],[\"组件相对昂贵\",{\"1\":{\"172\":1}}],[\"组件组成\",{\"1\":{\"170\":1}}],[\"组件而不是\",{\"1\":{\"169\":1}}],[\"组件父级到具有自己的\",{\"1\":{\"169\":1}}],[\"组件非常相似\",{\"1\":{\"169\":1}}],[\"组件内容中的所有唯一字符并初始化字体图集可能是有利的\",{\"1\":{\"168\":1}}],[\"组件时\",{\"1\":{\"168\":1}}],[\"组件单独触发的\",{\"1\":{\"168\":1}}],[\"组件显示的字形\",{\"1\":{\"168\":1}}],[\"组件不会在\",{\"1\":{\"183\":1}}],[\"组件不共享相同的大小\",{\"1\":{\"168\":1}}],[\"组件不使用任何着色器将\",{\"1\":{\"109\":1}}],[\"组件共享相同的大小\",{\"1\":{\"168\":1}}],[\"组件更改时\",{\"1\":{\"168\":1}}],[\"组件是粗体而另一个不是\",{\"1\":{\"168\":1}}],[\"组件是在\",{\"1\":{\"168\":1}}],[\"组件是完全开源的\",{\"1\":{\"139\":1}}],[\"组件允许射线投射\",{\"1\":{\"166\":1}}],[\"组件处理\",{\"1\":{\"164\":1}}],[\"组件处理输入事件\",{\"1\":{\"164\":1}}],[\"组件构建几何体\",{\"1\":{\"161\":1}}],[\"组件数量\",{\"1\":{\"152\":1}}],[\"组件循环遍历其层次结构中包含的所有可剪裁元素\",{\"1\":{\"150\":1}}],[\"组件上使用\",{\"1\":{\"169\":1}}],[\"组件上启用或禁用附加功能\",{\"1\":{\"214\":1}}],[\"组件上启用\",{\"1\":{\"166\":1}}],[\"组件上方的父\",{\"1\":{\"150\":1}}],[\"组件上选择的\",{\"1\":{\"149\":1}}],[\"组件都会在此时更新它们的\",{\"1\":{\"148\":1}}],[\"组件都依赖于\",{\"1\":{\"141\":1}}],[\"组件被重建时\",{\"1\":{\"146\":1}}],[\"组件列表\",{\"1\":{\"146\":1}}],[\"组件列表执行\",{\"1\":{\"145\":1}}],[\"组件列表进行排序\",{\"1\":{\"145\":1,\"150\":1,\"152\":1}}],[\"组件可能会改变其子对象的位置和大小\",{\"1\":{\"145\":1}}],[\"组件执行\",{\"1\":{\"144\":2}}],[\"组件重建其图形元素\",{\"1\":{\"144\":1}}],[\"组件重建其布局\",{\"1\":{\"144\":1}}],[\"组件调用\",{\"1\":{\"144\":1}}],[\"组件集\",{\"1\":{\"143\":1}}],[\"组件和\",{\"1\":{\"141\":1}}],[\"组件使用\",{\"1\":{\"141\":1}}],[\"组件仅依赖于\",{\"1\":{\"141\":1}}],[\"组件控制的\",{\"1\":{\"145\":1}}],[\"组件控制\",{\"1\":{\"141\":1}}],[\"组件中遇到的字符在运行时构建字形图集\",{\"1\":{\"168\":1}}],[\"组件中的字符都不会出现在新图集中\",{\"1\":{\"168\":1}}],[\"组件中的组件的适当位置\",{\"1\":{\"145\":1}}],[\"组件中的\",{\"1\":{\"141\":1}}],[\"组件中包含镜像的\",{\"1\":{\"108\":1}}],[\"组件提供给\",{\"1\":{\"141\":1}}],[\"组件引用且尚未通过\",{\"1\":{\"169\":1}}],[\"组件引用和\",{\"1\":{\"116\":1}}],[\"组件引用了\",{\"1\":{\"109\":1}}],[\"组件的基础\",{\"1\":{\"248\":1}}],[\"组件的大部分便利性的同时实现对象池化的最简单方法是采用混合方法\",{\"1\":{\"170\":1}}],[\"组件的父\",{\"1\":{\"169\":1}}],[\"组件的文本字段的更改\",{\"1\":{\"169\":1}}],[\"组件的边界框内显示而不溢出的最大整数点大小\",{\"1\":{\"168\":1}}],[\"组件的方式实现\",{\"1\":{\"168\":1}}],[\"组件的子级\",{\"1\":{\"166\":1}}],[\"组件的布局和网格的地方\",{\"1\":{\"144\":1}}],[\"组件的更新称为重建\",{\"1\":{\"141\":1}}],[\"组件的集合\",{\"1\":{\"141\":1}}],[\"组件的\",{\"1\":{\"115\":1,\"148\":1,\"168\":1,\"170\":2}}],[\"组件或\",{\"1\":{\"115\":1}}],[\"组件通常是\",{\"1\":{\"75\":1}}],[\"组件\",{\"1\":{\"46\":1,\"109\":2,\"116\":1,\"141\":2,\"144\":1,\"152\":1,\"155\":1,\"166\":1,\"168\":1,\"170\":2,\"173\":1,\"181\":1,\"248\":2,\"313\":1}}],[\"建造者模式\",{\"1\":{\"312\":1}}],[\"建议先操作大内存\",{\"1\":{\"402\":1}}],[\"建议填写\",{\"1\":{\"365\":1}}],[\"建议你把它们添加到\",{\"1\":{\"347\":1}}],[\"建议使用一维数组\",{\"1\":{\"265\":1}}],[\"建议您禁用静态批处理\",{\"1\":{\"106\":1}}],[\"建议他在\",{\"1\":{\"59\":1}}],[\"建立引用计数机制或依赖管理\",{\"1\":{\"70\":1}}],[\"建立团队的\",{\"1\":{\"60\":1}}],[\"建立标准\",{\"1\":{\"60\":1,\"77\":1}}],[\"功能预览\",{\"1\":{\"197\":1}}],[\"功能可能未被计入\",{\"1\":{\"148\":1}}],[\"功能\",{\"1\":{\"108\":1,\"109\":1,\"110\":1,\"112\":1,\"114\":1,\"118\":1,\"160\":1}}],[\"功能实现没问题\",{\"1\":{\"77\":1}}],[\"功能实现是ok的\",{\"1\":{\"60\":1}}],[\"功能性\",{\"1\":{\"53\":1}}],[\"还有长久内存\",{\"1\":{\"401\":1}}],[\"还有一个\",{\"1\":{\"389\":1}}],[\"还有一个新的\",{\"1\":{\"148\":1}}],[\"还需要一套角色技能\",{\"1\":{\"383\":1}}],[\"还需要一个非常特殊的名为\",{\"1\":{\"136\":1}}],[\"还会占大量内存\",{\"1\":{\"394\":1}}],[\"还会将所有子文件夹中的脚本包含在同一个程序集中\",{\"1\":{\"290\":1}}],[\"还会创建\",{\"1\":{\"289\":1}}],[\"还根据其边界框的中心位置对透明\",{\"1\":{\"215\":1}}],[\"还提供了一个内存分析器\",{\"1\":{\"206\":1}}],[\"还可以使用\",{\"1\":{\"274\":1}}],[\"还可以应用于\",{\"1\":{\"220\":1}}],[\"还可以节省\",{\"1\":{\"218\":1}}],[\"还可以将射线投射到\",{\"1\":{\"166\":1}}],[\"还可以通过单击并向上或向下拖动类别名称来重新排序\",{\"1\":{\"148\":1}}],[\"还支持对与\",{\"1\":{\"106\":1}}],[\"还是要看实际用户的情况\",{\"1\":{\"394\":1}}],[\"还是存在几种普遍适用的简易\",{\"1\":{\"256\":1}}],[\"还是\",{\"1\":{\"74\":1,\"109\":1,\"377\":1,\"387\":1}}],[\"还是gpu的锅\",{\"1\":{\"60\":1}}],[\"还要注意\",{\"1\":{\"168\":1}}],[\"还要理解其基于迭代器的实现原理与主线程的关系\",{\"1\":{\"66\":1}}],[\"还要提升整个团队的水平\",{\"1\":{\"60\":1}}],[\"里后\",{\"1\":{\"396\":1}}],[\"里面所有引用的所有内存都会存在\",{\"1\":{\"404\":1}}],[\"里面有多少东西\",{\"1\":{\"390\":1}}],[\"里面的名字就是\",{\"1\":{\"390\":1}}],[\"里如果两个元素重叠\",{\"1\":{\"379\":1}}],[\"里不包含位置等信息\",{\"1\":{\"127\":1}}],[\"里\",{\"1\":{\"127\":1}}],[\"里显性的参数\",{\"1\":{\"127\":1}}],[\"里每帧都执行了\",{\"1\":{\"60\":1}}],[\"里使用了\",{\"1\":{\"59\":1}}],[\"包大概\",{\"1\":{\"394\":1}}],[\"包大小\",{\"1\":{\"394\":1}}],[\"包大小会减少\",{\"1\":{\"394\":1}}],[\"包打多大是很玄学的问题\",{\"1\":{\"394\":1}}],[\"包中\",{\"1\":{\"394\":1}}],[\"包围体\",{\"1\":{\"326\":1}}],[\"包围盒\",{\"1\":{\"60\":1}}],[\"包提供\",{\"1\":{\"169\":1}}],[\"包包含在项目中\",{\"1\":{\"169\":1}}],[\"包含程序集定义引用资产的文件夹中的脚本\",{\"1\":{\"295\":1}}],[\"包含程序集定义的文件夹中的脚本\",{\"1\":{\"294\":1}}],[\"包含\",{\"1\":{\"274\":2,\"280\":1}}],[\"包含预定大小的数据块\",{\"1\":{\"201\":1}}],[\"包含数千个元素\",{\"1\":{\"178\":1}}],[\"包含两个文本组件\",{\"1\":{\"168\":1}}],[\"包含对订阅\",{\"1\":{\"148\":1}}],[\"包含需要重新批处理的几何体时\",{\"1\":{\"141\":1}}],[\"包含与\",{\"1\":{\"96\":1}}],[\"包查看它们的\",{\"1\":{\"136\":1}}],[\"包文档中的\",{\"1\":{\"97\":1}}],[\"包\",{\"1\":{\"76\":1,\"96\":1,\"274\":2}}],[\"包括动画组件封装\",{\"1\":{\"383\":1}}],[\"包括人物移动处理方案\",{\"1\":{\"383\":1}}],[\"包括时间函数\",{\"1\":{\"383\":1}}],[\"包括地图是2d的还是3d的\",{\"1\":{\"383\":1}}],[\"包括同屏渲染和非同屏渲染\",{\"1\":{\"381\":1}}],[\"包括测试程序集\",{\"1\":{\"309\":2}}],[\"包括基于程序集定义资产创建的程序集\",{\"1\":{\"309\":1}}],[\"包括编辑器中的\",{\"1\":{\"301\":1}}],[\"包括任何子文件夹中的脚本\",{\"1\":{\"294\":1,\"295\":1}}],[\"包括使用程序集定义创建的程序集\",{\"1\":{\"292\":1}}],[\"包括缓冲区\",{\"1\":{\"239\":1}}],[\"包括两个颜色缓冲区\",{\"1\":{\"231\":1}}],[\"包括手\",{\"1\":{\"218\":1}}],[\"包括颜色\",{\"1\":{\"212\":1}}],[\"包括子\",{\"1\":{\"179\":1}}],[\"包括分配给精灵渲染器的精灵\",{\"1\":{\"161\":1}}],[\"包括在顶点着色器中花费的时间\",{\"1\":{\"151\":1}}],[\"包括批处理几何体的构建\",{\"1\":{\"139\":1}}],[\"包括为什么\",{\"1\":{\"112\":1}}],[\"包括失败的分配数量\",{\"1\":{\"100\":1}}],[\"包括\",{\"1\":{\"96\":1,\"108\":1,\"112\":1,\"127\":1,\"139\":1,\"149\":1,\"151\":1,\"291\":1}}],[\"包括采样纹理\",{\"1\":{\"76\":1}}],[\"包括标记\",{\"1\":{\"55\":1}}],[\"包括所有\",{\"1\":{\"48\":1}}],[\"剔除掉公共库的内存分配\",{\"1\":{\"388\":1}}],[\"剔除有两种类型\",{\"1\":{\"213\":1}}],[\"剔除任何被裁剪的组件\",{\"1\":{\"144\":1}}],[\"剔除等\",{\"1\":{\"131\":1}}],[\"剔除\",{\"0\":{\"213\":1},\"1\":{\"60\":1,\"83\":1,\"211\":1,\"213\":1}}],[\"遮挡物\",{\"1\":{\"329\":1}}],[\"遮挡剔除的示例\",{\"1\":{\"213\":1}}],[\"遮挡剔除\",{\"1\":{\"60\":1,\"74\":1,\"83\":1,\"213\":3,\"317\":1,\"329\":1}}],[\"遮挡\",{\"1\":{\"60\":1}}],[\"种可能导致这个问题的其他原因\",{\"1\":{\"60\":1}}],[\"地形地图\",{\"1\":{\"383\":1}}],[\"地图\",{\"1\":{\"383\":1}}],[\"地编\",{\"0\":{\"320\":1}}],[\"地从上一个物理位置移动到当前物理位置\",{\"1\":{\"60\":1}}],[\"地址\",{\"1\":{\"48\":2}}],[\"插值计算\",{\"1\":{\"323\":1}}],[\"插值\",{\"1\":{\"60\":1,\"74\":1}}],[\"插件在页面底部显示页面的最后更新时间与贡献者\",{\"1\":{\"364\":1}}],[\"插件或系统的配置\",{\"1\":{\"45\":1}}],[\"插件\",{\"0\":{\"207\":1},\"1\":{\"22\":1,\"30\":1,\"33\":2,\"207\":1,\"335\":1,\"336\":1,\"389\":2}}],[\"静止\",{\"1\":{\"60\":1}}],[\"静态场景\",{\"1\":{\"218\":1}}],[\"静态几何体\",{\"1\":{\"217\":1}}],[\"静态三角形是低端移动设备的保守目标\",{\"1\":{\"217\":1}}],[\"静态\",{\"1\":{\"109\":1}}],[\"静态字段和事件是此类内存泄漏的常见来源\",{\"1\":{\"97\":1}}],[\"静态物体\",{\"1\":{\"83\":1}}],[\"静态物体是否勾选\",{\"1\":{\"55\":1}}],[\"静态编译\",{\"1\":{\"65\":1}}],[\"静态批处理可以包含的顶点数量有限制\",{\"1\":{\"109\":1}}],[\"静态批处理比\",{\"1\":{\"109\":1}}],[\"静态批处理不会减少绘制调用的数量\",{\"1\":{\"109\":1}}],[\"静态批处理是一种\",{\"1\":{\"109\":1}}],[\"静态批处理会产生内存和存储开销\",{\"1\":{\"108\":1}}],[\"静态批处理\",{\"0\":{\"109\":1},\"1\":{\"64\":1,\"69\":1,\"106\":1,\"108\":2,\"110\":1,\"111\":1,\"124\":1,\"288\":1}}],[\"静态合批\",{\"1\":{\"43\":1}}],[\"根目录下与着色器相关的所有内容\",{\"1\":{\"239\":1}}],[\"根\",{\"0\":{\"196\":1},\"1\":{\"173\":1,\"195\":1}}],[\"根部的\",{\"1\":{\"173\":1}}],[\"根本原因\",{\"1\":{\"60\":1}}],[\"根据文件结构自动生成侧边栏\",{\"1\":{\"361\":1}}],[\"根据需要处理的分配量和运行平台\",{\"1\":{\"275\":1}}],[\"根据需要重新定位它们以表示可见内容\",{\"1\":{\"170\":1}}],[\"根据访问多维数组与访问一维数组的成本差异\",{\"1\":{\"265\":1}}],[\"根据图形\",{\"1\":{\"225\":1}}],[\"根据图标的大小和数量\",{\"1\":{\"159\":1}}],[\"根据目标平台\",{\"1\":{\"217\":1}}],[\"根据平台的\",{\"1\":{\"201\":1}}],[\"根据区域设置\",{\"1\":{\"169\":1}}],[\"根据大小和线程\",{\"1\":{\"98\":1}}],[\"根据\",{\"0\":{\"302\":1},\"1\":{\"51\":1,\"180\":1}}],[\"根据定位\",{\"1\":{\"41\":1}}],[\"低效的内置字符串\",{\"0\":{\"252\":1}}],[\"低内存终止守护程序\",{\"1\":{\"388\":3}}],[\"低内存压力\",{\"1\":{\"204\":1}}],[\"低内存压力和高内存压力\",{\"1\":{\"204\":1}}],[\"低内存平台中不存在\",{\"1\":{\"104\":1}}],[\"低内存平台上的\",{\"1\":{\"104\":1}}],[\"低端移动设备\",{\"1\":{\"217\":1,\"236\":1}}],[\"低端\",{\"1\":{\"204\":1}}],[\"低级帧调试工具对于分析批处理\",{\"1\":{\"151\":1}}],[\"低于渲染帧率\",{\"1\":{\"60\":1}}],[\"低耦合\",{\"1\":{\"56\":1}}],[\"设备制造商可以设置\",{\"1\":{\"387\":1}}],[\"设备都有\",{\"1\":{\"254\":1}}],[\"设备都包含硬件\",{\"1\":{\"249\":1}}],[\"设备最多\",{\"1\":{\"254\":1}}],[\"设备本身支持\",{\"1\":{\"249\":1}}],[\"设备上最常见\",{\"1\":{\"247\":1}}],[\"设备上构建并运行项目\",{\"1\":{\"151\":1}}],[\"设备\",{\"1\":{\"205\":1,\"221\":1}}],[\"设备通常配备很少的板载闪存和有限的存储空间\",{\"1\":{\"203\":1}}],[\"设备仍将查询鼠标的位置\",{\"1\":{\"165\":1}}],[\"设备信息\",{\"1\":{\"91\":1}}],[\"设置填充满多大之后再推向\",{\"1\":{\"396\":1}}],[\"设置的\",{\"1\":{\"392\":1}}],[\"设置全局页脚\",{\"1\":{\"362\":1}}],[\"设置图标\",{\"1\":{\"359\":1}}],[\"设置缓存路径\",{\"1\":{\"343\":1}}],[\"设置程序集的元数据属性\",{\"1\":{\"308\":1}}],[\"设置设置程序集属性\",{\"0\":{\"308\":1}}],[\"设置设置为\",{\"1\":{\"166\":1}}],[\"设置属性\",{\"1\":{\"302\":1}}],[\"设置中定义的符号\",{\"1\":{\"301\":1}}],[\"设置中删除默认\",{\"1\":{\"169\":1}}],[\"设置包括\",{\"1\":{\"291\":1}}],[\"设置适当的值\",{\"1\":{\"269\":1}}],[\"设置作为其默认值\",{\"1\":{\"269\":1}}],[\"设置剔除距离对于剔除相机从给定距离查看时对场景没有贡献的小型\",{\"1\":{\"213\":1}}],[\"设置标志以忽略先前的内容\",{\"1\":{\"212\":1}}],[\"设置强制使用较低的纹理分辨率\",{\"1\":{\"200\":1}}],[\"设置预先加载所有本地化语言字体资源将对内存压力有害\",{\"1\":{\"169\":1}}],[\"设置加载时\",{\"1\":{\"169\":1}}],[\"设置资源中引用了字体资源\",{\"1\":{\"169\":1}}],[\"设置以及字体资源本身作为后备字体引用\",{\"1\":{\"169\":1}}],[\"设置文件中定义的\",{\"1\":{\"169\":1}}],[\"设置文件中分配的一般后备字体\",{\"1\":{\"169\":1}}],[\"设置永远不应使用\",{\"1\":{\"168\":1}}],[\"设置和使用上述工具的说明超出了本指南的范围\",{\"1\":{\"147\":1}}],[\"设置成本\",{\"1\":{\"135\":1}}],[\"设置每实例数据\",{\"1\":{\"123\":1}}],[\"设置为非活动状态\",{\"1\":{\"279\":1}}],[\"设置为颜色\",{\"1\":{\"212\":1}}],[\"设置为\",{\"1\":{\"119\":1,\"155\":1,\"157\":1,\"168\":1,\"174\":1,\"179\":1,\"201\":1,\"212\":1,\"216\":1,\"275\":1,\"357\":1,\"358\":4}}],[\"设置\",{\"1\":{\"109\":1,\"112\":1,\"120\":1,\"126\":1,\"166\":1,\"201\":1,\"269\":1,\"274\":1,\"339\":3,\"340\":1,\"358\":1}}],[\"设置渲染状态\",{\"1\":{\"74\":1,\"106\":1}}],[\"设置不当\",{\"1\":{\"60\":1}}],[\"设为\",{\"1\":{\"60\":1}}],[\"设计需要在最小化重建成本和最小化浪费的绘制调用之间取得平衡\",{\"1\":{\"163\":1}}],[\"设计的数据结构\",{\"1\":{\"268\":1}}],[\"设计的\",{\"1\":{\"126\":1}}],[\"设计思路和权衡考量\",{\"1\":{\"72\":1}}],[\"设计师通常通过组合来创建\",{\"1\":{\"159\":1}}],[\"设计师\",{\"1\":{\"56\":1}}],[\"设计师可以直接在\",{\"1\":{\"45\":1}}],[\"设计模式应用\",{\"1\":{\"85\":1}}],[\"设计模式\",{\"0\":{\"35\":1},\"1\":{\"35\":1,\"312\":1}}],[\"场景内的大小物件区别对待\",{\"1\":{\"383\":1}}],[\"场景编辑器的结构是否需要网络合并\",{\"1\":{\"383\":1}}],[\"场景转\",{\"1\":{\"320\":1}}],[\"场景快速搭建\",{\"1\":{\"320\":1}}],[\"场景视图控制栏中的过度绘制\",{\"1\":{\"215\":1}}],[\"场景视图控制栏\",{\"1\":{\"215\":1}}],[\"场景保持活动状态\",{\"1\":{\"215\":1}}],[\"场景和大量内容的应用程序执行相同的命令会打印以下信息\",{\"1\":{\"205\":1}}],[\"场景仍保持在\",{\"1\":{\"134\":1}}],[\"场景截图\",{\"1\":{\"132\":1}}],[\"场景中查看动画内容的可能性\",{\"1\":{\"157\":1}}],[\"场景中的材质越多\",{\"1\":{\"126\":1}}],[\"场景中导出模型插件\",{\"1\":{\"22\":1}}],[\"场景管理\",{\"1\":{\"93\":1}}],[\"场景及其解决方案\",{\"1\":{\"74\":1}}],[\"场景\",{\"1\":{\"60\":1,\"98\":1,\"157\":3}}],[\"竞态条件\",{\"1\":{\"60\":1}}],[\"为不同的页面组显示不同的侧边栏\",{\"1\":{\"361\":1}}],[\"为你构建项目的每个平台重复此操作\",{\"1\":{\"300\":1}}],[\"为资产分配名称\",{\"1\":{\"295\":1}}],[\"为该资产分配一个名称\",{\"1\":{\"294\":1}}],[\"为数据类型提供了许多\",{\"1\":{\"272\":1}}],[\"为最大限度减少不必要的内存分配\",{\"1\":{\"250\":1}}],[\"为单位进行操作\",{\"1\":{\"388\":1}}],[\"为单位的结果\",{\"1\":{\"233\":1}}],[\"为单位测量\",{\"1\":{\"130\":1}}],[\"为脏的\",{\"1\":{\"181\":1}}],[\"为避免内存使用随时间增加\",{\"1\":{\"276\":1}}],[\"为避免此问题\",{\"1\":{\"173\":1}}],[\"为避免可预测的性能问题\",{\"1\":{\"168\":1}}],[\"为每个相机执行剔除\",{\"1\":{\"213\":1}}],[\"为每个新着色器变体调用\",{\"1\":{\"135\":1}}],[\"为每个新材质调用\",{\"1\":{\"135\":1}}],[\"为每种语言所需的后备\",{\"1\":{\"169\":1}}],[\"为基础\",{\"1\":{\"169\":1}}],[\"为显示的每个不同大小的字符渲染不同的字形到字体图集中\",{\"1\":{\"168\":1}}],[\"为它们创建不同的材质\",{\"1\":{\"118\":1}}],[\"为此\",{\"1\":{\"112\":2,\"145\":1,\"151\":1,\"279\":1,\"281\":1,\"285\":1}}],[\"为\",{\"0\":{\"297\":1},\"1\":{\"100\":2,\"102\":1,\"110\":1,\"246\":1,\"267\":1,\"358\":1,\"388\":1}}],[\"为对象池设置一个最大容量\",{\"1\":{\"69\":1}}],[\"为对象池中的闲置对象设定一个时间阈值\",{\"1\":{\"69\":1}}],[\"为了防止内存碎片化\",{\"1\":{\"402\":1}}],[\"为了防止这种对垃圾回收的持续需求\",{\"1\":{\"280\":1}}],[\"为了防止这些回退分配\",{\"1\":{\"100\":1}}],[\"为了对此做兼容\",{\"1\":{\"394\":1}}],[\"为了处理上述问题\",{\"1\":{\"387\":1}}],[\"为了解决\",{\"1\":{\"371\":1}}],[\"为了解决这个问题\",{\"1\":{\"278\":1}}],[\"为了解决这种不可预测性\",{\"1\":{\"96\":1}}],[\"为了避免这种额外的开销\",{\"1\":{\"300\":1}}],[\"为了避免上述问题\",{\"1\":{\"170\":1}}],[\"为了改进这一点\",{\"1\":{\"285\":1}}],[\"为了使此代码段可重用\",{\"1\":{\"283\":1}}],[\"为了使图形分析器工作\",{\"1\":{\"151\":1}}],[\"为了进一步改进这一点\",{\"1\":{\"280\":1}}],[\"为了方便开发者\",{\"1\":{\"272\":1}}],[\"为了加快速度\",{\"1\":{\"257\":1}}],[\"为了有效地优化图形渲染\",{\"1\":{\"210\":1}}],[\"为了卸载资源并释放托管内存和原生内存\",{\"1\":{\"200\":1}}],[\"为了确定哪些堆内存块不再使用\",{\"1\":{\"274\":1}}],[\"为了确定哪个\",{\"1\":{\"180\":1}}],[\"为了确保将正确的值传递到闭包中\",{\"1\":{\"283\":1}}],[\"为了确保良好性能\",{\"1\":{\"205\":1}}],[\"为了确保您的设置提高了性能\",{\"1\":{\"104\":1}}],[\"为了确保您的应用程序运行时没有性能问题\",{\"1\":{\"96\":1}}],[\"为了支持此行为\",{\"1\":{\"168\":1}}],[\"为了减少重建和渲染\",{\"1\":{\"156\":1}}],[\"为了缓解填充率过度使用并减少过度绘制\",{\"1\":{\"154\":1}}],[\"为了更容易看到\",{\"1\":{\"148\":1}}],[\"为了增加变化并减少重复感\",{\"1\":{\"113\":1}}],[\"为了实现这一点\",{\"1\":{\"110\":1}}],[\"为了实现一个ui功能\",{\"1\":{\"60\":1}}],[\"为了批处理透明网格\",{\"1\":{\"108\":1}}],[\"为了准备绘制调用\",{\"1\":{\"106\":1}}],[\"为了匹配场景加载等事件中的峰值使用量\",{\"1\":{\"103\":1}}],[\"为了节省内存\",{\"1\":{\"102\":1}}],[\"为了节省它们在这种算法下可能使用的内存块\",{\"1\":{\"99\":1}}],[\"为了帮助您为不同的项目获得最佳性能\",{\"1\":{\"98\":1}}],[\"为了线程安全和性能\",{\"1\":{\"60\":1}}],[\"为什么内存下降了\",{\"1\":{\"402\":1}}],[\"为什么所有与\",{\"1\":{\"60\":1}}],[\"为什么\",{\"1\":{\"60\":4,\"66\":1,\"72\":1,\"134\":2}}],[\"为什么快\",{\"1\":{\"57\":1}}],[\"为什么这样好\",{\"1\":{\"56\":1}}],[\"为什么这么做\",{\"1\":{\"54\":1,\"92\":1}}],[\"手机上更容易出现内存不够的问题\",{\"1\":{\"387\":1}}],[\"手机上的内存\",{\"1\":{\"387\":1}}],[\"手机上无论是\",{\"1\":{\"387\":1}}],[\"手机没有独立显卡\",{\"1\":{\"387\":1}}],[\"手机\",{\"1\":{\"387\":1}}],[\"手机无显卡\",{\"1\":{\"106\":1}}],[\"手动启用行号\",{\"1\":{\"367\":1}}],[\"手动禁用行号\",{\"1\":{\"367\":1}}],[\"手动创建\",{\"0\":{\"346\":1}}],[\"手动触发部署\",{\"1\":{\"339\":1}}],[\"手动指定要引用的程序集\",{\"1\":{\"291\":1}}],[\"手动内联\",{\"1\":{\"273\":1}}],[\"手动设置实例\",{\"1\":{\"122\":1}}],[\"手动移除\",{\"1\":{\"112\":1,\"114\":1}}],[\"手动组合彼此靠近的网格可能是一个很好的替代方案\",{\"1\":{\"108\":1}}],[\"手动合并网格\",{\"0\":{\"111\":1,\"288\":1},\"1\":{\"106\":1,\"108\":1,\"124\":1}}],[\"手动\",{\"1\":{\"76\":1}}],[\"手动ab需要开发者自己管理依赖关系\",{\"1\":{\"60\":1}}],[\"手册页面\",{\"1\":{\"218\":1}}],[\"手册中\",{\"1\":{\"188\":1}}],[\"手册的\",{\"1\":{\"145\":1,\"248\":1}}],[\"手册\",{\"0\":{\"95\":1},\"1\":{\"4\":1}}],[\"痛点\",{\"1\":{\"60\":1}}],[\"被认为早于\",{\"1\":{\"304\":1}}],[\"被认为是脏\",{\"1\":{\"141\":1}}],[\"被操作系统关闭\",{\"1\":{\"276\":1}}],[\"被隐藏\",{\"1\":{\"215\":1}}],[\"被简单地禁用和重新启用而不更改文本\",{\"1\":{\"168\":1}}],[\"被归类为\",{\"1\":{\"148\":2}}],[\"被移到列表的前面\",{\"1\":{\"145\":1}}],[\"被标记为脏\",{\"1\":{\"143\":1}}],[\"被设置为了0\",{\"1\":{\"60\":1}}],[\"被遮挡\",{\"1\":{\"60\":1}}],[\"被\",{\"1\":{\"60\":1,\"403\":1}}],[\"即第一行中的项目将最先被终止\",{\"1\":{\"388\":1}}],[\"即小成本小作品的快速迭代\",{\"1\":{\"381\":1}}],[\"即源文件目录下的\",{\"1\":{\"347\":1}}],[\"即通常在台式机和游戏机中找到的类型\",{\"1\":{\"212\":1}}],[\"即屏幕上不可见\",{\"1\":{\"166\":1}}],[\"即有几何体\",{\"1\":{\"166\":1}}],[\"即具有较少父\",{\"1\":{\"145\":1}}],[\"即填充率\",{\"1\":{\"139\":1}}],[\"即您的艺术家可以使用材质\",{\"1\":{\"136\":1}}],[\"即\",{\"1\":{\"135\":1,\"233\":1,\"236\":1,\"302\":1,\"307\":1}}],[\"即场景使用许多不同材质但很少着色器变体的情况\",{\"1\":{\"127\":1}}],[\"即时编译\",{\"1\":{\"76\":1,\"371\":1}}],[\"即50hz\",{\"1\":{\"60\":1}}],[\"即可以直接使用\",{\"1\":{\"339\":1}}],[\"即可发现此情况\",{\"1\":{\"265\":1}}],[\"即可\",{\"1\":{\"60\":1}}],[\"即使该程序集中的代码没有被使用\",{\"1\":{\"300\":1}}],[\"即使装箱会导致意外的内存分配\",{\"1\":{\"284\":1}}],[\"即使只有少量对象同时在运行\",{\"1\":{\"279\":1}}],[\"即使在\",{\"1\":{\"271\":1}}],[\"即使有\",{\"1\":{\"271\":1}}],[\"即使有足够的总空闲空间\",{\"1\":{\"97\":1}}],[\"即使关闭了不需要的区域设置强制转换时也是如此\",{\"1\":{\"271\":1}}],[\"即使简单的布尔值\",{\"1\":{\"253\":1}}],[\"即使对于现代游戏机\",{\"1\":{\"233\":1}}],[\"即使您已经拥有最佳的几何体\",{\"1\":{\"218\":1}}],[\"即使没有分配任何东西\",{\"1\":{\"200\":1}}],[\"即使你使用了某个类型\",{\"1\":{\"192\":1}}],[\"即使动画中的值没有变化\",{\"1\":{\"184\":1}}],[\"即使它与另一个字体属于同一字体系列\",{\"1\":{\"168\":1}}],[\"即使它完全被其他不透明多边形覆盖\",{\"1\":{\"142\":1}}],[\"即使它们最初是通过调用\",{\"1\":{\"168\":1}}],[\"即使它们本质上是相同的\",{\"1\":{\"110\":1}}],[\"即使它们的材质不同\",{\"1\":{\"110\":1}}],[\"即使加速\",{\"1\":{\"134\":1}}],[\"即使渲染器使用实例化着色器也是如此\",{\"1\":{\"106\":1}}],[\"即使这意味着使用较慢的分配器\",{\"1\":{\"98\":1}}],[\"即使其中很大一部分是空的\",{\"1\":{\"97\":1}}],[\"即使\",{\"1\":{\"43\":1,\"58\":1,\"272\":1,\"278\":1}}],[\"号称能极大降低draw\",{\"1\":{\"60\":1}}],[\"适配器模式\",{\"1\":{\"312\":1}}],[\"适时调用\",{\"1\":{\"84\":1}}],[\"适用于\",{\"1\":{\"301\":1}}],[\"适用于绘制大量相同的物体\",{\"1\":{\"69\":1}}],[\"适用于追求平滑帧率的项目\",{\"1\":{\"42\":1}}],[\"适用场景\",{\"1\":{\"64\":1}}],[\"适用场景及简单实现思路\",{\"1\":{\"64\":1}}],[\"适合平台的压缩设置\",{\"1\":{\"249\":1}}],[\"适合协程\",{\"1\":{\"60\":1}}],[\"适合\",{\"1\":{\"60\":1}}],[\"深入\",{\"1\":{\"313\":1,\"335\":1,\"336\":1}}],[\"深入的理解\",{\"1\":{\"92\":1}}],[\"深入理解原理\",{\"1\":{\"66\":1,\"72\":1}}],[\"深入对比二者\",{\"1\":{\"60\":1}}],[\"深度学习\",{\"1\":{\"332\":1}}],[\"深度会发生变更\",{\"1\":{\"247\":1}}],[\"深度和模板缓冲区\",{\"1\":{\"212\":1}}],[\"深度缓冲区为\",{\"1\":{\"232\":1}}],[\"深度缓冲区和模板缓冲区是两个独立的缓冲区\",{\"1\":{\"232\":1}}],[\"深度缓冲区\",{\"1\":{\"212\":1}}],[\"深度\",{\"1\":{\"60\":4,\"247\":1}}],[\"深度集成了\",{\"1\":{\"50\":1,\"58\":1}}],[\"发送\",{\"1\":{\"392\":1}}],[\"发送指令\",{\"1\":{\"392\":1}}],[\"发送的一个\",{\"1\":{\"43\":1}}],[\"发现\",{\"1\":{\"391\":1}}],[\"发现一位初级开发者提交的代码中\",{\"1\":{\"60\":1}}],[\"发布\",{\"1\":{\"371\":1}}],[\"发布类型指示符的比较如下\",{\"1\":{\"304\":1}}],[\"发布版本\",{\"1\":{\"304\":3}}],[\"发布之前\",{\"1\":{\"169\":1}}],[\"发布者和订阅者之间存在强引用\",{\"1\":{\"75\":1}}],[\"发布者和订阅者互不知晓\",{\"1\":{\"60\":1}}],[\"发布者\",{\"1\":{\"75\":1}}],[\"发光等\",{\"1\":{\"169\":1}}],[\"发出\",{\"1\":{\"254\":1}}],[\"发出带有\",{\"1\":{\"118\":1}}],[\"发出绘制调用以显示\",{\"1\":{\"178\":1}}],[\"发出绘制调用\",{\"1\":{\"106\":1,\"183\":1}}],[\"发生游戏卡顿现象\",{\"1\":{\"377\":1}}],[\"发生这种情况时\",{\"1\":{\"106\":1}}],[\"发生这种情况的时间间隔不确定且不可靠\",{\"1\":{\"97\":1}}],[\"发生的原因和位置\",{\"1\":{\"81\":1}}],[\"真实情况是\",{\"1\":{\"369\":1}}],[\"真正的原因是引擎在发出绘制之前必须设置很多东西\",{\"1\":{\"135\":1}}],[\"真正的\",{\"1\":{\"60\":1,\"135\":1}}],[\"真的需要每帧都更新吗\",{\"1\":{\"59\":1}}],[\"方向\",{\"1\":{\"325\":1}}],[\"方括号\",{\"1\":{\"303\":1}}],[\"方便在本地环境模拟\",{\"1\":{\"91\":1}}],[\"方便策划在inspector里拖拽引用\",{\"1\":{\"60\":1}}],[\"方案\",{\"1\":{\"65\":1,\"254\":3}}],[\"方法要求将一个对象传递给它\",{\"1\":{\"284\":1}}],[\"方法总会分配内存\",{\"1\":{\"274\":1}}],[\"方法调用开销的真正优势\",{\"1\":{\"271\":1}}],[\"方法来检索列表特定索引位置的项值\",{\"1\":{\"271\":1}}],[\"方法性能消耗达到峰值\",{\"1\":{\"268\":1}}],[\"方法时\",{\"1\":{\"257\":1,\"283\":1}}],[\"方法级别\",{\"1\":{\"192\":1}}],[\"方法以及对该方法的所有调用一样简单\",{\"1\":{\"165\":1}}],[\"方法的\",{\"1\":{\"150\":1,\"285\":1}}],[\"方法名称与上面\",{\"1\":{\"150\":1}}],[\"方法请求脏的\",{\"1\":{\"144\":1}}],[\"方法组合您传入的\",{\"1\":{\"109\":1}}],[\"方法中\",{\"1\":{\"70\":1}}],[\"方法将对象放回池中并重置状态\",{\"1\":{\"64\":1}}],[\"方法从池中取出\",{\"1\":{\"64\":1}}],[\"方法会去查询inventorymanager\",{\"1\":{\"56\":1}}],[\"方法\",{\"1\":{\"56\":1,\"70\":1,\"109\":1,\"110\":1,\"146\":1,\"246\":2,\"252\":1,\"253\":1,\"271\":2,\"282\":1,\"284\":1}}],[\"方法开始时在当前线程\",{\"1\":{\"49\":1}}],[\"层级上触发昂贵的\",{\"1\":{\"183\":1}}],[\"层级向上查找\",{\"1\":{\"181\":1}}],[\"层级管理\",{\"1\":{\"44\":1}}],[\"层次包围体\",{\"1\":{\"326\":1}}],[\"层次深度和射线检测过滤器\",{\"1\":{\"166\":1}}],[\"层次结构一直到根部\",{\"1\":{\"166\":1}}],[\"层次结构部分\",{\"1\":{\"148\":1}}],[\"层次结构中不会调用任何\",{\"1\":{\"173\":1}}],[\"层次结构中较早的对象被认为在层次结构中较晚的对象后面\",{\"1\":{\"162\":1}}],[\"层次结构中较高的项目\",{\"1\":{\"145\":1}}],[\"层次结构中更靠近根的\",{\"1\":{\"145\":1}}],[\"层面的强引用\",{\"1\":{\"60\":1}}],[\"收藏家\",{\"1\":{\"60\":1}}],[\"收集分析数据后\",{\"1\":{\"152\":1}}],[\"收集任务\",{\"1\":{\"60\":1}}],[\"收集\",{\"1\":{\"56\":1,\"168\":1}}],[\"候选人必须知道如何用profiler或frame\",{\"1\":{\"60\":1}}],[\"广度\",{\"1\":{\"60\":1}}],[\"针对播放器编译的程序集\",{\"1\":{\"309\":2}}],[\"针对编辑器编译的程序集\",{\"1\":{\"309\":1}}],[\"针对发布版本进行了优化\",{\"1\":{\"190\":1}}],[\"针对\",{\"1\":{\"60\":1}}],[\"针对性解决\",{\"1\":{\"55\":1}}],[\"占位符\",{\"1\":{\"170\":1}}],[\"占了10ms\",{\"1\":{\"60\":1}}],[\"占了20ms\",{\"1\":{\"60\":1}}],[\"占用的内存超过大约\",{\"1\":{\"246\":1}}],[\"占用了大量\",{\"1\":{\"152\":1}}],[\"占用20ms\",{\"1\":{\"60\":1}}],[\"占用会上升\",{\"1\":{\"55\":1}}],[\"占用是否过高\",{\"1\":{\"41\":1}}],[\"风险预估和指导他人的能力\",{\"1\":{\"60\":1}}],[\"风灵月影官网\",{\"1\":{\"30\":1}}],[\"宏观诊断\",{\"0\":{\"60\":1}}],[\"他的代码\",{\"1\":{\"59\":1}}],[\"驳回\",{\"1\":{\"59\":1}}],[\"把暂停主线程的事分帧做了\",{\"1\":{\"401\":1}}],[\"把\",{\"1\":{\"394\":1}}],[\"把分散的内存数据变成整块\",{\"1\":{\"387\":1}}],[\"把这\",{\"1\":{\"127\":1}}],[\"把这个加进去\",{\"1\":{\"59\":1}}],[\"把同一种\",{\"1\":{\"127\":1}}],[\"把数据加载到显存\",{\"1\":{\"106\":1}}],[\"把场景中的一个物体渲染到屏幕上\",{\"1\":{\"93\":1}}],[\"把封装的类和对象池结合使用\",{\"1\":{\"93\":1}}],[\"把它们丢到后台线程\",{\"1\":{\"57\":1}}],[\"团队领导力\",{\"1\":{\"60\":1}}],[\"团队所有人\",{\"1\":{\"59\":1}}],[\"团队里一位初级开发提交了\",{\"1\":{\"59\":1}}],[\"拔高\",{\"1\":{\"59\":1,\"77\":1}}],[\"给出方案\",{\"1\":{\"77\":1}}],[\"给出\",{\"1\":{\"59\":1,\"60\":1}}],[\"给出解决方案\",{\"1\":{\"59\":1}}],[\"每秒调用一次垃圾回收器会对性能产生负面影响\",{\"1\":{\"278\":1}}],[\"每像素计算\",{\"1\":{\"217\":1}}],[\"每层剔除距离\",{\"1\":{\"213\":2}}],[\"每种语言一张表\",{\"1\":{\"377\":1}}],[\"每种字体的最小拉丁字形\",{\"1\":{\"169\":1}}],[\"每种类型都有不同的算法将分配放入内存块中\",{\"1\":{\"98\":1}}],[\"每次扩容的时候都会使用创建一个新的数组\",{\"1\":{\"369\":1}}],[\"每次你更改一个脚本\",{\"1\":{\"289\":1}}],[\"每次访问\",{\"1\":{\"285\":1}}],[\"每次访问返回数组的所有\",{\"1\":{\"285\":1}}],[\"每次在循环中添加一个新字符串时\",{\"1\":{\"280\":1}}],[\"每次发射一个抛射物时\",{\"1\":{\"279\":1}}],[\"每次循环执行时都有四个方法调用\",{\"1\":{\"271\":1}}],[\"每次添加或删除回调时\",{\"1\":{\"268\":1}}],[\"每次调用\",{\"1\":{\"253\":1}}],[\"每次将模型导入项目时\",{\"1\":{\"246\":1}}],[\"每次被访问时都会调用\",{\"1\":{\"180\":1}}],[\"每次升级\",{\"1\":{\"175\":1}}],[\"每次\",{\"1\":{\"166\":1,\"394\":1}}],[\"每次准备并命令\",{\"1\":{\"64\":1,\"69\":1}}],[\"每当交换或关联算术允许时\",{\"1\":{\"260\":1}}],[\"每当在\",{\"1\":{\"257\":1}}],[\"每当任何\",{\"1\":{\"170\":1}}],[\"每当具有动态字体的\",{\"1\":{\"168\":1}}],[\"每当给定\",{\"1\":{\"161\":1}}],[\"每当\",{\"1\":{\"144\":1,\"168\":1,\"200\":1,\"275\":1,\"339\":1}}],[\"每一层专注解决某个领域的问题\",{\"1\":{\"382\":1}}],[\"每一次的\",{\"1\":{\"127\":1}}],[\"每一帧调用一次\",{\"1\":{\"62\":1,\"67\":1}}],[\"每帧\",{\"1\":{\"278\":1}}],[\"每帧都会脏标记其元素\",{\"1\":{\"184\":1}}],[\"每帧都会产生新的\",{\"1\":{\"59\":1}}],[\"每帧会访问\",{\"1\":{\"180\":1}}],[\"每帧需要执行的相交检查次数\",{\"1\":{\"179\":1}}],[\"每帧仅仅设置坐标\",{\"1\":{\"127\":1}}],[\"每帧有5kb\",{\"1\":{\"60\":1}}],[\"每个进程的\",{\"1\":{\"388\":1}}],[\"每个进程报告的大小是\",{\"1\":{\"205\":1}}],[\"每个元素都有自己的材质球实例和实例参数\",{\"1\":{\"379\":1}}],[\"每个字符串都比上一个更长\",{\"1\":{\"280\":1}}],[\"每个字符一个\",{\"1\":{\"168\":1}}],[\"每个异步资源加载操作以及每个\",{\"1\":{\"269\":1}}],[\"每个帧缓冲区有一个颜色缓冲区\",{\"1\":{\"231\":1}}],[\"每个作业都在自己的线程上运行\",{\"1\":{\"227\":1}}],[\"每个相机都有显著的固定剔除和渲染开销\",{\"1\":{\"213\":1}}],[\"每个程序集可使可执行文件增加多达\",{\"1\":{\"198\":1}}],[\"每个脚本后端都有优缺点\",{\"1\":{\"190\":1}}],[\"每个标记其布局为脏的\",{\"1\":{\"181\":1}}],[\"每个试图标记其\",{\"1\":{\"181\":1}}],[\"每个需要输入的\",{\"1\":{\"179\":1}}],[\"每个加载的不同\",{\"1\":{\"168\":1}}],[\"每个附加了\",{\"1\":{\"165\":1}}],[\"每个产品\",{\"1\":{\"159\":1}}],[\"每个批处理都是帧调试器中称为\",{\"1\":{\"135\":1}}],[\"每个材质内容现在持久保存在\",{\"1\":{\"127\":1}}],[\"每个对象都是动态的且使用不同的材质\",{\"1\":{\"125\":1}}],[\"每个实例可以有不同的属性\",{\"1\":{\"113\":1}}],[\"每个命令序列称为\",{\"1\":{\"112\":1}}],[\"每个静态批处理最多可以包含\",{\"1\":{\"109\":1}}],[\"每个调用之间几乎没有状态更改\",{\"1\":{\"109\":1}}],[\"每个绘制调用包含图形\",{\"1\":{\"106\":1}}],[\"每个\",{\"1\":{\"104\":1,\"112\":2,\"116\":1,\"148\":1,\"166\":1,\"178\":1,\"180\":2,\"181\":1,\"211\":1,\"270\":1,\"390\":1}}],[\"每个音频\",{\"1\":{\"104\":1}}],[\"每个后台\",{\"1\":{\"104\":1}}],[\"每个线程都使用自己的快速栈分配器进行临时分配\",{\"1\":{\"102\":1}}],[\"每个分配都有一个额外的\",{\"1\":{\"100\":1}}],[\"每个子部分包含不同数量的桶\",{\"1\":{\"100\":1}}],[\"每个子部分被分成分配\",{\"1\":{\"100\":1}}],[\"每个块被分成\",{\"1\":{\"100\":1}}],[\"每个平台都有一个默认块大小\",{\"1\":{\"99\":1}}],[\"每个状态应包含\",{\"1\":{\"70\":1}}],[\"每个物品是一个\",{\"1\":{\"56\":1}}],[\"每个任务是一个\",{\"1\":{\"56\":1}}],[\"指当前内存要分配到哪一个类型池里面\",{\"1\":{\"390\":1}}],[\"指标\",{\"1\":{\"131\":1}}],[\"指的是\",{\"1\":{\"125\":1}}],[\"指令是\",{\"1\":{\"284\":1}}],[\"指令中指定\",{\"1\":{\"119\":1}}],[\"指令可以使用以下开关\",{\"1\":{\"118\":1}}],[\"指示符本身有三个部分\",{\"1\":{\"304\":1}}],[\"指示\",{\"1\":{\"118\":1}}],[\"指定特定页面的页脚内容\",{\"1\":{\"362\":1}}],[\"指定了一些\",{\"1\":{\"308\":1}}],[\"指定\",{\"1\":{\"118\":1}}],[\"指向同一块内存\",{\"1\":{\"63\":1,\"68\":1}}],[\"指出\",{\"1\":{\"59\":1}}],[\"指出问题\",{\"1\":{\"59\":1,\"77\":1}}],[\"指南以了解更多详细信息\",{\"1\":{\"269\":1}}],[\"指南的\",{\"1\":{\"222\":1}}],[\"指南中的提示来避免这些问题\",{\"1\":{\"215\":1}}],[\"指南\",{\"1\":{\"24\":1,\"335\":1,\"336\":1,\"361\":1}}],[\"首页关闭背景和名称\",{\"1\":{\"358\":1}}],[\"首次显示时批处理一次\",{\"1\":{\"163\":1}}],[\"首要\",{\"1\":{\"59\":1}}],[\"首先将所有抛射物游戏对象\",{\"1\":{\"279\":1}}],[\"首先将它们从后到前排序\",{\"1\":{\"108\":1}}],[\"首先检查\",{\"1\":{\"134\":1}}],[\"首先看\",{\"1\":{\"55\":1}}],[\"首先\",{\"1\":{\"41\":1,\"97\":1,\"115\":1,\"131\":1,\"134\":1,\"136\":1,\"151\":1,\"168\":1,\"175\":1,\"269\":1}}],[\"所使用的内存\",{\"1\":{\"388\":1}}],[\"所使用的内存之外\",{\"1\":{\"388\":1}}],[\"所应用到的所有内存\",{\"1\":{\"388\":1}}],[\"所选脚本被编译到库文件\",{\"1\":{\"306\":1}}],[\"所需的\",{\"1\":{\"275\":1}}],[\"所需的材质状态更改就越少\",{\"1\":{\"216\":1}}],[\"所需的唯一材质\",{\"1\":{\"216\":1}}],[\"所需的绘制调用数量\",{\"1\":{\"170\":1}}],[\"所需的层叠元素数量压缩到专门的\",{\"1\":{\"159\":1}}],[\"所需的时间\",{\"1\":{\"156\":1,\"170\":1}}],[\"所需的内存\",{\"1\":{\"96\":1}}],[\"所述\",{\"1\":{\"75\":1,\"265\":1}}],[\"所以对\",{\"1\":{\"289\":1}}],[\"所以不建议声明长字符串或其他大型数据类型\",{\"1\":{\"272\":1}}],[\"所以随着项目规模的增长\",{\"1\":{\"262\":1}}],[\"所以此代码不会产生无限的重新导入循环\",{\"1\":{\"246\":1}}],[\"所以一次\",{\"1\":{\"127\":1}}],[\"所以它创建了一个新的批处理\",{\"1\":{\"112\":1}}],[\"所以\",{\"1\":{\"76\":1,\"127\":1,\"387\":2,\"388\":1,\"392\":1}}],[\"所以t也会被加载\",{\"1\":{\"60\":1}}],[\"所以总\",{\"1\":{\"55\":1}}],[\"所有内存都会在内存里\",{\"1\":{\"404\":1}}],[\"所有内置引擎属性必须在名为\",{\"1\":{\"129\":1}}],[\"所有匿名函数和闭包会\",{\"1\":{\"404\":1}}],[\"所有实体最终都会反映在\",{\"1\":{\"391\":1}}],[\"所有实例都会对\",{\"1\":{\"116\":1}}],[\"所有数据在放入\",{\"1\":{\"387\":1}}],[\"所有脚本都会被所有平台编译\",{\"1\":{\"289\":1}}],[\"所有这些操作都是有成本的\",{\"1\":{\"271\":1}}],[\"所有这些都会一直分配\",{\"1\":{\"200\":1}}],[\"所有这些都是在原生\",{\"1\":{\"141\":1}}],[\"所有属性名称都经过哈希处理为属性\",{\"1\":{\"257\":1}}],[\"所有字符串均不可变\",{\"1\":{\"250\":1}}],[\"所有私有页贡献其大小的\",{\"1\":{\"205\":1}}],[\"所有方法都可以通过向\",{\"1\":{\"170\":1}}],[\"所有变量都应遵循我们称为\",{\"1\":{\"136\":1}}],[\"所有时间都应花费在\",{\"1\":{\"134\":1}}],[\"所有时间均以毫秒\",{\"1\":{\"130\":1}}],[\"所有\",{\"1\":{\"115\":1,\"136\":1,\"149\":2,\"206\":1,\"249\":1}}],[\"所有材质属性必须在名为\",{\"1\":{\"129\":1}}],[\"所有材质内容现在都持久保存在\",{\"1\":{\"112\":1}}],[\"所有材质都有位于\",{\"1\":{\"112\":1,\"127\":1}}],[\"所有代码在构建时编译成高度优化的机器码\",{\"1\":{\"76\":1}}],[\"所有material必须使用兼容srp\",{\"1\":{\"60\":1}}],[\"所有使用\",{\"1\":{\"58\":1}}],[\"读进内存\",{\"1\":{\"396\":1}}],[\"读取接口和解析接口的定义\",{\"1\":{\"383\":1}}],[\"读取\",{\"1\":{\"215\":1}}],[\"读取该物体的材质属性即可\",{\"1\":{\"58\":1}}],[\"读写磁盘\",{\"1\":{\"57\":1}}],[\"读写文件\",{\"1\":{\"49\":1}}],[\"缓慢的\",{\"1\":{\"135\":1}}],[\"缓冲区等\",{\"1\":{\"205\":1}}],[\"缓冲区数\",{\"1\":{\"201\":1}}],[\"缓冲区大小影响延迟\",{\"1\":{\"201\":1}}],[\"缓冲区大小来控制\",{\"1\":{\"201\":1}}],[\"缓冲区大小\",{\"1\":{\"201\":2,\"233\":1}}],[\"缓冲区中的内置引擎属性\",{\"1\":{\"127\":1}}],[\"缓冲区中更新\",{\"1\":{\"112\":2}}],[\"缓冲区的数量取决于着色器如何声明其\",{\"1\":{\"126\":1}}],[\"缓冲区的数量取决于着色器如何声明其常量缓冲区\",{\"1\":{\"112\":1}}],[\"缓冲区以及分配存储在原生内存中\",{\"1\":{\"96\":1}}],[\"缓冲区\",{\"1\":{\"58\":1,\"222\":1}}],[\"缓存级数更少\",{\"1\":{\"387\":1}}],[\"缓存文件和构建输出文件\",{\"1\":{\"347\":1}}],[\"缓存命中率\",{\"1\":{\"46\":1,\"75\":1}}],[\"缓存\",{\"1\":{\"41\":1,\"42\":2,\"55\":2,\"74\":1,\"81\":1,\"158\":1,\"180\":1,\"339\":1}}],[\"缓存组件\",{\"1\":{\"41\":1}}],[\"属性设置为引用目标程序集定义资产\",{\"1\":{\"295\":1}}],[\"属性设置为随机颜色\",{\"1\":{\"123\":1}}],[\"属性访问\",{\"1\":{\"285\":1}}],[\"属性时都会发生分配\",{\"1\":{\"285\":2}}],[\"属性上的\",{\"1\":{\"271\":2}}],[\"属性上设置了相应的标志\",{\"1\":{\"166\":1}}],[\"属性的更多信息\",{\"1\":{\"263\":1}}],[\"属性的任何定义均未被定义\",{\"1\":{\"263\":1}}],[\"属性所使用的一个或多个定义将决定被修饰的方法是否包含在已编译的源代码中\",{\"1\":{\"263\":1}}],[\"属性来修饰这些方法\",{\"1\":{\"263\":1}}],[\"属性名称的对应\",{\"1\":{\"257\":2}}],[\"属性进行内部寻址\",{\"1\":{\"257\":1}}],[\"属性表示\",{\"1\":{\"246\":1}}],[\"属性会导致材质被克隆\",{\"1\":{\"200\":1}}],[\"属性公开\",{\"1\":{\"174\":1}}],[\"属性将导致\",{\"1\":{\"166\":1}}],[\"属性是唯一的\",{\"1\":{\"118\":1}}],[\"属性\",{\"0\":{\"263\":1},\"1\":{\"58\":1,\"112\":1,\"166\":1,\"174\":2,\"180\":2,\"262\":1,\"269\":2,\"275\":1,\"308\":2}}],[\"描边\",{\"1\":{\"58\":1}}],[\"描述主包\",{\"1\":{\"84\":1}}],[\"描述\",{\"1\":{\"56\":2,\"104\":1,\"118\":2,\"205\":1}}],[\"轻松入门\",{\"1\":{\"317\":1}}],[\"轻松且几乎没有错误地编写代码\",{\"1\":{\"277\":1}}],[\"轻松修复\",{\"1\":{\"148\":1}}],[\"轻松地在渲染循环中注入自定义的\",{\"1\":{\"58\":1}}],[\"轻松实现大规模并行计算\",{\"1\":{\"46\":1}}],[\"相当于音频的缓冲\",{\"1\":{\"392\":1}}],[\"相互绘制的地方\",{\"1\":{\"215\":1}}],[\"相互绘制的对象\",{\"1\":{\"215\":1}}],[\"相加来计算使用的总\",{\"1\":{\"205\":1}}],[\"相加\",{\"1\":{\"205\":1}}],[\"相交\",{\"1\":{\"179\":1,\"326\":1}}],[\"相关信息\",{\"1\":{\"366\":1}}],[\"相关的文件的地方\",{\"1\":{\"347\":1}}],[\"相关的性能峰值会减少\",{\"1\":{\"275\":1}}],[\"相关的操作\",{\"1\":{\"60\":1}}],[\"相关调用\",{\"1\":{\"148\":1}}],[\"相反\",{\"1\":{\"97\":1,\"112\":2,\"118\":1,\"134\":1,\"139\":1,\"180\":1,\"279\":1,\"307\":1}}],[\"相机上自动执行\",{\"1\":{\"213\":1}}],[\"相机中\",{\"1\":{\"149\":1}}],[\"相机\",{\"0\":{\"211\":1},\"1\":{\"124\":1,\"210\":1,\"211\":1}}],[\"相机分层渲染原理\",{\"1\":{\"61\":1}}],[\"相机的\",{\"1\":{\"60\":1}}],[\"相同层级并不是指\",{\"1\":{\"379\":1}}],[\"相同材质球的元素进行合并\",{\"1\":{\"379\":1}}],[\"相同着色器的材质球指向同一个材质球\",{\"1\":{\"379\":1}}],[\"相同的像素\",{\"1\":{\"215\":1}}],[\"相同纹理且没有中间层的对象来构建\",{\"1\":{\"162\":1}}],[\"相同缩放等\",{\"1\":{\"64\":1,\"69\":1}}],[\"相同\",{\"1\":{\"58\":2,\"112\":1,\"150\":1}}],[\"相比之下\",{\"1\":{\"205\":1}}],[\"相比手动管理\",{\"1\":{\"60\":1}}],[\"相比内置管线的\",{\"1\":{\"58\":1}}],[\"相比\",{\"1\":{\"58\":1,\"84\":1,\"127\":1,\"163\":1,\"190\":1,\"277\":1,\"394\":1}}],[\"相对的编译方式\",{\"1\":{\"371\":1}}],[\"相对\",{\"1\":{\"46\":1}}],[\"生态系统在不同实现\",{\"1\":{\"371\":1}}],[\"生态系统\",{\"1\":{\"335\":1,\"336\":2}}],[\"生成中间图形命令\",{\"1\":{\"227\":1}}],[\"生成交互事件的\",{\"1\":{\"180\":1}}],[\"生成可能很耗性能\",{\"1\":{\"178\":1}}],[\"生成表示\",{\"1\":{\"161\":1}}],[\"生成的实现\",{\"1\":{\"197\":1}}],[\"生成的\",{\"1\":{\"190\":1}}],[\"生成的绘制调用更新自身\",{\"1\":{\"149\":1}}],[\"生成的绘制调用\",{\"1\":{\"149\":1}}],[\"生成的绘制调用数量的有用工具\",{\"1\":{\"149\":1}}],[\"生成的所有绘制调用\",{\"1\":{\"149\":1}}],[\"生成的几何体将始终以\",{\"1\":{\"142\":1}}],[\"生成适当的渲染命令并将这些命令发送到\",{\"1\":{\"141\":1}}],[\"生成一个额外的变体以与\",{\"1\":{\"118\":1}}],[\"生成实例化变体\",{\"1\":{\"118\":1}}],[\"生成特化代码\",{\"1\":{\"57\":1}}],[\"生命周期回调\",{\"1\":{\"173\":1}}],[\"生命周期小于一帧\",{\"1\":{\"102\":1}}],[\"生命周期易管理\",{\"1\":{\"75\":1}}],[\"生命周期管理上较麻烦\",{\"1\":{\"75\":1}}],[\"生命周期\",{\"1\":{\"61\":1,\"66\":1}}],[\"生命周期紧密绑定的\",{\"1\":{\"57\":1}}],[\"生效\",{\"1\":{\"60\":1}}],[\"其访问权限已移出循环的条件语句\",{\"1\":{\"271\":1}}],[\"其边界框与两个原本可批处理的对象重叠\",{\"1\":{\"162\":1}}],[\"其余部分为空\",{\"1\":{\"149\":1}}],[\"其源代码可以在\",{\"1\":{\"144\":1}}],[\"其次\",{\"1\":{\"115\":1,\"131\":1,\"168\":1,\"269\":1}}],[\"其核心价值在于数据与逻辑分离\",{\"1\":{\"75\":1}}],[\"其增删改查的效率\",{\"1\":{\"71\":1}}],[\"其中mask组件使用顶点重构的方式剔除矩形区域外的部分\",{\"1\":{\"379\":1}}],[\"其中的对象无须手动释放\",{\"1\":{\"371\":1}}],[\"其中的白色框表示\",{\"1\":{\"97\":1}}],[\"其中每次访问\",{\"1\":{\"285\":1}}],[\"其中每个工作线程都有自己的栈\",{\"1\":{\"102\":1}}],[\"其中需要按特定顺序对随机数列表进行排序\",{\"1\":{\"283\":1}}],[\"其中说明了向简单库代码添加额外方法调用的成本\",{\"1\":{\"271\":1}}],[\"其中包含脚本定义的已编译的类和结构\",{\"1\":{\"289\":1}}],[\"其中包含一个新的底层引擎渲染循环\",{\"1\":{\"125\":1}}],[\"其中包括\",{\"1\":{\"252\":1}}],[\"其中包括着色器时间和大小\",{\"1\":{\"238\":1}}],[\"其中深度缓冲区使用\",{\"1\":{\"232\":1}}],[\"其中不同的着色器多次触碰\",{\"1\":{\"215\":1}}],[\"其中列出了许多不同的行业标准\",{\"1\":{\"210\":1}}],[\"其中显示了最终可执行文件中剥离了什么以及为什么剥离\",{\"1\":{\"199\":1}}],[\"其中两个\",{\"1\":{\"151\":1}}],[\"其中\",{\"1\":{\"60\":1,\"284\":1,\"304\":1,\"305\":1}}],[\"其代码优化能力\",{\"1\":{\"57\":1}}],[\"其他资源\",{\"1\":{\"336\":1}}],[\"其他的都是多余的分配\",{\"1\":{\"280\":1}}],[\"其他优化建议\",{\"0\":{\"176\":1},\"1\":{\"176\":1}}],[\"其他可能是\",{\"1\":{\"171\":1}}],[\"其他技术和技巧\",{\"1\":{\"139\":1}}],[\"其他对象仍使用标准\",{\"1\":{\"129\":1}}],[\"其他平台忽略此选项\",{\"1\":{\"118\":1}}],[\"其他类型的渲染组件\",{\"1\":{\"108\":1}}],[\"其他分配器other\",{\"1\":{\"104\":1}}],[\"其他高频考点\",{\"0\":{\"71\":1}}],[\"其他\",{\"0\":{\"171\":1,\"323\":1},\"1\":{\"51\":1,\"206\":1}}],[\"其他情况\",{\"1\":{\"48\":1}}],[\"原来合并的网格就不符合新的要求了\",{\"1\":{\"379\":1}}],[\"原型模式\",{\"1\":{\"312\":1}}],[\"原则\",{\"1\":{\"195\":1}}],[\"原则上可以创建一个性能受限于发送到\",{\"1\":{\"139\":1}}],[\"原因是\",{\"1\":{\"112\":1,\"170\":1}}],[\"原本会使用类型树和缓存的分配将回退到主要分配器\",{\"1\":{\"99\":1}}],[\"原文地址\",{\"1\":{\"96\":1,\"106\":1,\"113\":1,\"125\":1,\"138\":1,\"177\":1,\"186\":1,\"209\":1,\"245\":1,\"274\":1,\"288\":1,\"289\":1,\"311\":1,\"324\":1}}],[\"原生开发\",{\"1\":{\"327\":1}}],[\"原生堆\",{\"1\":{\"205\":1}}],[\"原生代码剥离仅在\",{\"1\":{\"193\":1}}],[\"原生代码剥离\",{\"0\":{\"193\":1},\"1\":{\"191\":1}}],[\"原生代码\",{\"1\":{\"141\":1}}],[\"原生核心中原生且高性能代码的优势\",{\"1\":{\"96\":1}}],[\"原生内存是优化应用程序的关键组成部分\",{\"1\":{\"200\":1}}],[\"原生内存分配器的一些可配置设置来调整应用程序的性能\",{\"1\":{\"96\":1}}],[\"原生内存\",{\"0\":{\"98\":1,\"200\":1},\"1\":{\"96\":3}}],[\"原生\",{\"1\":{\"76\":1,\"96\":1,\"205\":1,\"206\":1}}],[\"原生的\",{\"1\":{\"57\":1}}],[\"原理\",{\"1\":{\"65\":1}}],[\"原神\",{\"1\":{\"56\":1}}],[\"快了两倍\",{\"1\":{\"134\":2}}],[\"快速代码路径在\",{\"1\":{\"133\":1}}],[\"快速线程共享临时分配器fast\",{\"1\":{\"104\":1}}],[\"快速清除分配以使块再次可用非常重要\",{\"1\":{\"103\":1}}],[\"快速每线程临时分配器fast\",{\"1\":{\"104\":1}}],[\"快速每线程临时分配器\",{\"1\":{\"102\":1}}],[\"快排的原理\",{\"1\":{\"71\":1}}],[\"快\",{\"1\":{\"57\":1,\"190\":1}}],[\"那些频繁更改的元素\",{\"1\":{\"163\":1}}],[\"那就是\",{\"1\":{\"148\":1}}],[\"那么红黑树也会非常大\",{\"1\":{\"395\":1}}],[\"那么游戏在加载数据表时\",{\"1\":{\"377\":1}}],[\"那么您应该使用\",{\"1\":{\"280\":1}}],[\"那么垃圾回收器无法释放这些临时对象\",{\"1\":{\"278\":1}}],[\"那么它必须每秒分配\",{\"1\":{\"278\":1}}],[\"那么目标帧率就是每秒\",{\"1\":{\"275\":1}}],[\"那么寻找单例的代码经常会重复调用\",{\"1\":{\"262\":1}}],[\"那么可能的问题是在单个\",{\"1\":{\"152\":1}}],[\"那么大多数现代\",{\"1\":{\"151\":1}}],[\"那么查看\",{\"1\":{\"134\":1}}],[\"那么\",{\"1\":{\"110\":2,\"134\":1,\"152\":1,\"168\":1,\"195\":1,\"394\":1}}],[\"那么使用\",{\"1\":{\"57\":1}}],[\"那样在\",{\"1\":{\"56\":1}}],[\"空着就空着\",{\"1\":{\"401\":1}}],[\"空间划分\",{\"1\":{\"326\":1}}],[\"空间换时间\",{\"1\":{\"317\":1}}],[\"空数组重用\",{\"0\":{\"287\":1}}],[\"空\",{\"1\":{\"236\":1}}],[\"空场景\",{\"1\":{\"205\":1}}],[\"空闲内存\",{\"1\":{\"97\":1}}],[\"空闲空间不会成为一个大的\",{\"1\":{\"97\":1}}],[\"空等\",{\"1\":{\"57\":1}}],[\"空壳\",{\"1\":{\"46\":1}}],[\"效率就会降低\",{\"1\":{\"369\":1}}],[\"效率较高\",{\"1\":{\"260\":1}}],[\"效率较低\",{\"1\":{\"260\":1}}],[\"效率大幅提升\",{\"1\":{\"75\":1}}],[\"效率\",{\"0\":{\"135\":1},\"1\":{\"71\":1}}],[\"效率远高于协程\",{\"1\":{\"57\":1}}],[\"效率高且不易出错\",{\"1\":{\"56\":1}}],[\"大块内存\",{\"1\":{\"401\":1}}],[\"大幅上升\",{\"1\":{\"393\":1}}],[\"大地形在游戏里如何显示\",{\"1\":{\"383\":1}}],[\"大地图的生成\",{\"1\":{\"57\":1}}],[\"大话\",{\"1\":{\"318\":1,\"319\":1,\"320\":1}}],[\"大批量对象移动和\",{\"0\":{\"270\":1}}],[\"大型回调列表或大量回调订阅\",{\"1\":{\"268\":1}}],[\"大型数据集上或紧凑循环中执行时\",{\"1\":{\"250\":1}}],[\"大型的共享\",{\"1\":{\"127\":1}}],[\"大约\",{\"1\":{\"203\":1}}],[\"大部分内存都进入\",{\"1\":{\"207\":1}}],[\"大部分被遮挡的相机\",{\"0\":{\"158\":1},\"1\":{\"154\":1}}],[\"大部分情况下只需要更新大型共享\",{\"1\":{\"127\":1}}],[\"大小更小\",{\"1\":{\"387\":1}}],[\"大小上限\",{\"1\":{\"387\":1}}],[\"大小相同\",{\"1\":{\"200\":1}}],[\"大小\",{\"1\":{\"100\":1,\"170\":1,\"205\":1,\"206\":1}}],[\"大分配将保留在动态堆中\",{\"1\":{\"99\":1}}],[\"大多数类型的\",{\"1\":{\"269\":1}}],[\"大多数粒子系统设置都可在运行时进行操作\",{\"1\":{\"266\":1}}],[\"大多数\",{\"1\":{\"254\":1,\"275\":1}}],[\"大多数选择使用该方法的开发者会将其数据移动到某种\",{\"1\":{\"254\":1}}],[\"大多数内置的\",{\"1\":{\"141\":1}}],[\"大多数帧分配了\",{\"1\":{\"99\":1}}],[\"大多数时候\",{\"1\":{\"96\":2}}],[\"大世界地图资源处理\",{\"1\":{\"93\":1}}],[\"大胆地和面试官沟通\",{\"1\":{\"66\":1,\"72\":1}}],[\"大规模物理计算等\",{\"1\":{\"60\":1}}],[\"大规模寻路\",{\"1\":{\"60\":1}}],[\"大量单位的boids算法\",{\"1\":{\"60\":1}}],[\"大模型\",{\"0\":{\"7\":1,\"8\":1}}],[\"密集型进程\",{\"1\":{\"97\":1}}],[\"密集型计算\",{\"1\":{\"49\":1}}],[\"密集计算\",{\"1\":{\"57\":1}}],[\"秒后开门\",{\"1\":{\"57\":1}}],[\"秒后执行\",{\"1\":{\"49\":1}}],[\"都打\",{\"1\":{\"394\":1}}],[\"都能及时地记录下来并发送到后台\",{\"1\":{\"381\":1}}],[\"都能处理异步\",{\"1\":{\"57\":1}}],[\"都包含在光照贴图中\",{\"1\":{\"216\":1}}],[\"都需要一个\",{\"1\":{\"179\":1}}],[\"都需要重新分析以确定如何最优绘制其元素\",{\"1\":{\"178\":1}}],[\"都显示字母\",{\"1\":{\"168\":1}}],[\"都必须重新编译所有其他脚本\",{\"1\":{\"289\":1}}],[\"都必须重新运行批处理构建过程\",{\"1\":{\"161\":1}}],[\"都必须将您的更改与新的\",{\"1\":{\"175\":1}}],[\"都必须由\",{\"1\":{\"166\":1}}],[\"都必须在托管堆上分配\",{\"1\":{\"97\":1}}],[\"都是比\",{\"1\":{\"387\":1}}],[\"都是共用一个缓存\",{\"1\":{\"387\":1}}],[\"都是一个孤岛\",{\"1\":{\"178\":1}}],[\"都是有问题的\",{\"1\":{\"168\":1}}],[\"都是通过\",{\"1\":{\"141\":1}}],[\"都是激活的\",{\"1\":{\"60\":1}}],[\"都有各自专门的代码进行更新\",{\"1\":{\"127\":1}}],[\"都要更新这个\",{\"1\":{\"127\":1}}],[\"都会先构建一个方形网格\",{\"1\":{\"379\":1}}],[\"都会被编译到被引用的程序集中\",{\"1\":{\"295\":1}}],[\"都会被编译到新的程序集中\",{\"1\":{\"294\":1}}],[\"都会创建一个数组的新副本\",{\"1\":{\"285\":1}}],[\"都会发生此分配\",{\"1\":{\"283\":1}}],[\"都会暂停主\",{\"1\":{\"275\":1}}],[\"都会调用此类\",{\"1\":{\"246\":1}}],[\"都会产生内存和\",{\"1\":{\"200\":1}}],[\"都会为每个子\",{\"1\":{\"181\":1}}],[\"都会这样做\",{\"1\":{\"109\":1}}],[\"都会执行\",{\"1\":{\"62\":1}}],[\"都使用此大小\",{\"1\":{\"104\":1}}],[\"都设置正确\",{\"1\":{\"60\":1}}],[\"都强烈建议在\",{\"1\":{\"60\":1}}],[\"都可以通过\",{\"1\":{\"149\":1}}],[\"都可以处理异步流程\",{\"1\":{\"60\":1}}],[\"都可以引用同一个itemso\",{\"1\":{\"56\":1}}],[\"都依赖\",{\"1\":{\"57\":1}}],[\"内部是用数组实现的\",{\"1\":{\"369\":1}}],[\"内部时接收回调\",{\"1\":{\"270\":1}}],[\"内部\",{\"1\":{\"216\":1}}],[\"内部系统使用块分配器的方式存在细微差异\",{\"1\":{\"200\":1}}],[\"内部系统使用不同的缓冲区和资源\",{\"1\":{\"200\":1}}],[\"内部系统并解释了你在原生分析器中经常看到的内存数据\",{\"1\":{\"200\":1}}],[\"内部系统的原生内存消耗\",{\"1\":{\"200\":1}}],[\"内每个元素的根\",{\"1\":{\"170\":1}}],[\"内的\",{\"1\":{\"170\":1}}],[\"内容的大小并使滚动条正常工作\",{\"1\":{\"170\":1}}],[\"内\",{\"1\":{\"166\":1}}],[\"内核交换守护程序和低内存终止守护程序\",{\"1\":{\"388\":1}}],[\"内核态的内存是用户严格不能访问的\",{\"1\":{\"388\":1}}],[\"内核将它们交换到特殊的\",{\"1\":{\"205\":1}}],[\"内核\",{\"1\":{\"143\":1}}],[\"内置着色器\",{\"0\":{\"244\":1},\"1\":{\"244\":1}}],[\"内置\",{\"0\":{\"261\":1},\"1\":{\"170\":1}}],[\"内置的\",{\"1\":{\"169\":1}}],[\"内置实现者包括\",{\"1\":{\"150\":1}}],[\"内置引擎变量\",{\"1\":{\"136\":1}}],[\"内置渲染管线中可以看到\",{\"1\":{\"215\":1}}],[\"内置渲染管线\",{\"1\":{\"108\":1,\"109\":1,\"110\":1,\"112\":1,\"114\":1,\"118\":1,\"318\":1}}],[\"内置drawcall\",{\"1\":{\"108\":1}}],[\"内置管线\",{\"1\":{\"50\":1}}],[\"内存及性能工具\",{\"1\":{\"404\":1}}],[\"内存只是没有任何人能够管理到\",{\"1\":{\"403\":1}}],[\"内存泄露说法是不对的\",{\"1\":{\"403\":1}}],[\"内存泄漏发生在内存被分配后\",{\"1\":{\"97\":1}}],[\"内存泄漏发生在内存无法从代码访问或未使用的内存堆积时\",{\"1\":{\"96\":1}}],[\"内存泄漏\",{\"1\":{\"96\":1}}],[\"内存已被严重碎片化\",{\"1\":{\"402\":1}}],[\"内存碎片化\",{\"0\":{\"402\":1}}],[\"内存碎片和堆扩展\",{\"1\":{\"97\":1}}],[\"内存回收\",{\"1\":{\"400\":1}}],[\"内存回读的速度极慢\",{\"1\":{\"247\":1}}],[\"内存也是以\",{\"1\":{\"399\":1}}],[\"内存池没地方放它\",{\"1\":{\"402\":1}}],[\"内存池\",{\"0\":{\"399\":1}}],[\"内存占用可能更严重\",{\"1\":{\"397\":1}}],[\"内存占用更多的分配器\",{\"1\":{\"98\":1}}],[\"内存里的就会\",{\"1\":{\"396\":1}}],[\"内存减少\",{\"1\":{\"394\":1}}],[\"内存大量上升的时候\",{\"1\":{\"391\":1}}],[\"内存就会显著上升\",{\"1\":{\"391\":1}}],[\"内存就会变脏\",{\"1\":{\"205\":1}}],[\"内存是\",{\"1\":{\"389\":1}}],[\"内存指标\",{\"1\":{\"388\":1}}],[\"内存不足\",{\"1\":{\"388\":1}}],[\"内存分为\",{\"1\":{\"389\":1}}],[\"内存分为物理内存\",{\"1\":{\"387\":1}}],[\"内存分用户态和内核态两个部分\",{\"1\":{\"388\":1}}],[\"内存的回收和分配都是以\",{\"1\":{\"388\":1}}],[\"内存的内存\",{\"1\":{\"200\":1}}],[\"内存消耗根据粒子系统上激活的模块数量而增加\",{\"1\":{\"266\":1}}],[\"内存消耗限制\",{\"0\":{\"204\":1}}],[\"内存读入临时缓冲区以供\",{\"1\":{\"247\":1}}],[\"内存过载\",{\"1\":{\"222\":1}}],[\"内存行为\",{\"1\":{\"222\":1}}],[\"内存作为计算空间\",{\"1\":{\"205\":1}}],[\"内存使用量\",{\"1\":{\"205\":1}}],[\"内存使用\",{\"1\":{\"202\":1}}],[\"内存管理很复杂\",{\"1\":{\"202\":1}}],[\"内存管理概览\",{\"1\":{\"202\":1}}],[\"内存管理\",{\"0\":{\"202\":1,\"386\":1,\"388\":1},\"1\":{\"124\":1,\"384\":1,\"386\":1,\"388\":2}}],[\"内存管理器会执行两个操作\",{\"1\":{\"97\":1}}],[\"内存中的持久\",{\"1\":{\"127\":1}}],[\"内存中的持久常量缓冲区\",{\"1\":{\"112\":1}}],[\"内存中持久化\",{\"1\":{\"127\":1}}],[\"内存中设置不同的常量缓冲区\",{\"1\":{\"126\":1}}],[\"内存中\",{\"1\":{\"112\":2,\"127\":1}}],[\"内存来存储组合的几何体\",{\"1\":{\"109\":1}}],[\"内存小于\",{\"1\":{\"104\":1}}],[\"内存设置的选择\",{\"1\":{\"104\":1}}],[\"内存三个维度全面诊断问题的能力\",{\"1\":{\"60\":1}}],[\"内存\",{\"0\":{\"384\":1,\"389\":1,\"390\":1,\"398\":1},\"1\":{\"56\":1,\"60\":1,\"96\":3,\"103\":1,\"105\":1,\"205\":1,\"233\":2,\"278\":1,\"385\":1,\"403\":1}}],[\"极小化极大算法\",{\"1\":{\"331\":1}}],[\"极大地降低了\",{\"1\":{\"58\":1}}],[\"极大地提高了效率\",{\"1\":{\"56\":1}}],[\"极客学院\",{\"1\":{\"30\":1}}],[\"找是否有活跃度实际上并不高的内存\",{\"1\":{\"403\":1}}],[\"找到包含你想要包含在被引用程序集中的脚本的文件夹\",{\"1\":{\"295\":1}}],[\"找到想要创建程序集的脚本文件夹\",{\"1\":{\"294\":1}}],[\"找到\",{\"1\":{\"192\":1,\"355\":1}}],[\"找到对应的\",{\"1\":{\"56\":1}}],[\"找出所有不再被栈\",{\"1\":{\"42\":1}}],[\"而数据不通用\",{\"1\":{\"394\":1}}],[\"而用户管理的内存才是使用者需要关系和优先考虑的\",{\"1\":{\"389\":1}}],[\"而手机只有\",{\"1\":{\"387\":1}}],[\"而增大或缩小\",{\"1\":{\"387\":1}}],[\"而安卓没有这个能力\",{\"1\":{\"387\":1}}],[\"而多了很多2d动画行为控制上的需求\",{\"1\":{\"383\":1}}],[\"而rectmask2d组件则采用着色器的剔除方式\",{\"1\":{\"379\":1}}],[\"而rawimage组件能展示单张图片\",{\"1\":{\"379\":1}}],[\"而它们可能不属于那里\",{\"1\":{\"307\":1}}],[\"而第二个程序集又引用第一个程序集时\",{\"1\":{\"293\":1}}],[\"而无需更新其他程序集定义中的引用以反映新名称\",{\"1\":{\"299\":1}}],[\"而无需在托管堆上进行任何新的分配\",{\"1\":{\"281\":1}}],[\"而无需考虑多个\",{\"1\":{\"178\":1}}],[\"而优先级较低的线程则不会\",{\"1\":{\"269\":1}}],[\"而非在运行时进行编译\",{\"1\":{\"371\":1}}],[\"而非链表\",{\"1\":{\"369\":1}}],[\"而非委托\",{\"1\":{\"268\":1}}],[\"而非直接销毁\",{\"1\":{\"64\":1}}],[\"而根据访问交错数组与访问一维数组的成本差异\",{\"1\":{\"265\":1}}],[\"而浮点数学比矢量\",{\"1\":{\"260\":1}}],[\"而许多\",{\"1\":{\"249\":1}}],[\"而当前使用的图形\",{\"1\":{\"238\":1}}],[\"而其他缓冲区可能存在或不存在\",{\"1\":{\"229\":1}}],[\"而其他代码正在尝试访问它\",{\"1\":{\"96\":1}}],[\"而这些时间可以用于在主线程上运行的其他子系统\",{\"1\":{\"224\":1}}],[\"而黑色表示没有发生过度绘制\",{\"1\":{\"215\":1}}],[\"而交换空间\",{\"1\":{\"203\":1}}],[\"而中低质量的这两种格式的文件解压缩所需的\",{\"1\":{\"201\":1}}],[\"而有些是动态的\",{\"1\":{\"200\":1}}],[\"而结构体在栈上\",{\"1\":{\"197\":1}}],[\"而且手机的内存更小\",{\"1\":{\"387\":1}}],[\"而且用字符串查找字符串的效率也不高\",{\"1\":{\"377\":1}}],[\"而且在实例化包含大量\",{\"1\":{\"267\":1}}],[\"而且在大型字符串上\",{\"1\":{\"250\":1}}],[\"而且会导致大量内存分配\",{\"1\":{\"261\":1}}],[\"而且根本不会脏标记新层级\",{\"1\":{\"182\":1}}],[\"而且\",{\"1\":{\"181\":1}}],[\"而且动态批处理通常不会带来性能提升\",{\"1\":{\"110\":1}}],[\"而应从\",{\"1\":{\"173\":1}}],[\"而在\",{\"1\":{\"389\":1}}],[\"而在另一个控件上使用\",{\"1\":{\"168\":1}}],[\"而在内置管线中\",{\"1\":{\"58\":1}}],[\"而四边形\",{\"1\":{\"149\":1}}],[\"而另一些则不兼容\",{\"1\":{\"112\":1}}],[\"而另一个\",{\"1\":{\"108\":1}}],[\"而动态批处理会产生一些\",{\"1\":{\"108\":1}}],[\"而一帧\",{\"1\":{\"99\":1}}],[\"而是一次分配一大块\",{\"1\":{\"399\":1}}],[\"而是减少设备寿命看\",{\"1\":{\"387\":1}}],[\"而是减少它们之间的渲染状态更改的数量\",{\"1\":{\"109\":1}}],[\"而是覆盖层级\",{\"1\":{\"379\":1}}],[\"而是先编译成中间语言\",{\"1\":{\"371\":1}}],[\"而是编译到你的程序集\",{\"1\":{\"307\":1}}],[\"而是使用字段\",{\"1\":{\"275\":1}}],[\"而是留下了一小部分世界可见\",{\"1\":{\"158\":1}}],[\"而是通过材质属性来完成\",{\"1\":{\"156\":1}}],[\"而是回退到虚拟内存\",{\"1\":{\"99\":1}}],[\"而是帮助他成长\",{\"1\":{\"59\":1}}],[\"而短期存在的分配会进入线程安全线性分配器和\",{\"1\":{\"98\":1}}],[\"而引用类型实例分配在堆\",{\"1\":{\"63\":1,\"68\":1}}],[\"而渲染在\",{\"1\":{\"60\":1}}],[\"而\",{\"1\":{\"56\":1,\"59\":1,\"65\":1,\"127\":1,\"134\":1,\"144\":1,\"180\":1,\"196\":1,\"201\":1,\"247\":1,\"304\":1}}],[\"而不仅仅是放在名为\",{\"1\":{\"297\":1}}],[\"而不管循环迭代的次数如何\",{\"1\":{\"285\":1}}],[\"而不考虑字节表示的字符\",{\"1\":{\"251\":1}}],[\"而不能对附加通道使用\",{\"1\":{\"120\":1}}],[\"而不能直接访问托管对象\",{\"1\":{\"60\":1}}],[\"而不会统计成员\",{\"1\":{\"390\":1}}],[\"而不会产生大的性能开销\",{\"1\":{\"106\":1}}],[\"而不会失去\",{\"1\":{\"96\":1}}],[\"而不只是找茬\",{\"1\":{\"59\":1}}],[\"而不需要执行那么多渲染状态更改\",{\"1\":{\"106\":1}}],[\"而不需要打开场景\",{\"1\":{\"56\":1}}],[\"而不需要改动背包系统的任何代码\",{\"1\":{\"56\":1}}],[\"而不需要动场景或\",{\"1\":{\"45\":1}}],[\"而不是托管堆里面\",{\"1\":{\"391\":1}}],[\"而不是销毁旧对象并用新对象替换它们\",{\"1\":{\"279\":1}}],[\"而不是停止主\",{\"1\":{\"275\":1}}],[\"而不是兆字节\",{\"1\":{\"237\":1}}],[\"而不是增加初始加载时间\",{\"1\":{\"237\":1}}],[\"而不是为每个对象存储多个\",{\"1\":{\"218\":1}}],[\"而不是大量低多边形数的\",{\"1\":{\"217\":1}}],[\"而不是闪存\",{\"1\":{\"205\":1}}],[\"而不是频繁分配\",{\"1\":{\"189\":1}}],[\"而不是频繁的字符串拼接\",{\"1\":{\"81\":1}}],[\"而不是在每次变化时都使用\",{\"1\":{\"181\":1}}],[\"而不是每个网格一次\",{\"1\":{\"288\":1}}],[\"而不是每个网格一个绘制调用\",{\"1\":{\"106\":1,\"111\":1}}],[\"而不是每次遇到新字形时都重建一次\",{\"1\":{\"168\":1}}],[\"而不是持续渲染它\",{\"1\":{\"157\":1}}],[\"而不是插入它们之间\",{\"1\":{\"149\":1}}],[\"而不是来自\",{\"1\":{\"135\":1}}],[\"而不是使用通用渲染管线或高清渲染管线\",{\"1\":{\"112\":1}}],[\"而不是动态堆分配器\",{\"1\":{\"101\":1}}],[\"而不是场景加载的峰值使用量\",{\"1\":{\"100\":1}}],[\"而不是加载时\",{\"1\":{\"100\":1}}],[\"而不是回退到虚拟内存\",{\"1\":{\"99\":1}}],[\"而不是手动管理\",{\"1\":{\"76\":1}}],[\"而不是\",{\"1\":{\"56\":1,\"108\":1,\"114\":1,\"170\":2,\"240\":1,\"394\":2}}],[\"而不是批评\",{\"1\":{\"53\":1}}],[\"而不是放在场景中或\",{\"1\":{\"44\":1}}],[\"成一个\",{\"1\":{\"404\":1}}],[\"成本相对较高\",{\"1\":{\"270\":1}}],[\"成本来自该设置\",{\"1\":{\"135\":1}}],[\"成二进制格式\",{\"1\":{\"254\":1}}],[\"成功批处理它\",{\"1\":{\"106\":1}}],[\"成就\",{\"1\":{\"60\":1}}],[\"成就系统需要检查是否解锁\",{\"1\":{\"60\":1}}],[\"成就系统\",{\"1\":{\"56\":1,\"60\":1}}],[\"成\",{\"1\":{\"57\":1}}],[\"成为瓶颈\",{\"1\":{\"43\":1}}],[\"明天我可以轻松加入\",{\"1\":{\"56\":1}}],[\"装饰器模式\",{\"1\":{\"312\":1}}],[\"装备\",{\"1\":{\"56\":1}}],[\"装箱在\",{\"1\":{\"284\":1}}],[\"装箱值类型对象\",{\"1\":{\"97\":1}}],[\"装箱\",{\"0\":{\"284\":1},\"1\":{\"48\":1,\"55\":1,\"60\":1,\"284\":1}}],[\"消息为\",{\"1\":{\"293\":1}}],[\"消息系统\",{\"1\":{\"56\":1}}],[\"消耗增加\",{\"1\":{\"392\":1}}],[\"消耗\",{\"1\":{\"270\":1}}],[\"消耗品\",{\"1\":{\"56\":1}}],[\"消除不可见\",{\"0\":{\"155\":1},\"1\":{\"154\":1}}],[\"消除核心\",{\"1\":{\"74\":1}}],[\"消防员\",{\"1\":{\"55\":1}}],[\"完整场景的帧缓冲区分辨率降低了\",{\"1\":{\"205\":1}}],[\"完整场景\",{\"1\":{\"205\":1}}],[\"完成的\",{\"1\":{\"144\":1}}],[\"完成后\",{\"1\":{\"212\":1,\"294\":1,\"295\":1}}],[\"完成后会释放缓冲区\",{\"1\":{\"103\":1}}],[\"完成后自动切回主线程\",{\"1\":{\"57\":1}}],[\"完成条件\",{\"1\":{\"56\":3}}],[\"完全由自己管理内存\",{\"1\":{\"389\":1}}],[\"完全禁用垃圾回收器\",{\"1\":{\"276\":1}}],[\"完全泛型共享\",{\"1\":{\"197\":1}}],[\"完全在透明队列中操作\",{\"1\":{\"149\":1}}],[\"完全不知道\",{\"1\":{\"56\":1}}],[\"完全解耦\",{\"1\":{\"45\":1,\"60\":1,\"75\":1}}],[\"完全分离\",{\"1\":{\"44\":1}}],[\"平均压缩比率差\",{\"1\":{\"394\":1}}],[\"平摊下来就会导致你自己的\",{\"1\":{\"388\":1}}],[\"平滑性\",{\"1\":{\"74\":1}}],[\"平滑\",{\"1\":{\"60\":1}}],[\"平滑度\",{\"1\":{\"55\":1}}],[\"平台特点\",{\"1\":{\"323\":1}}],[\"平台特定\",{\"1\":{\"104\":1}}],[\"平台不支持增量式垃圾回收\",{\"1\":{\"275\":1}}],[\"平台的\",{\"1\":{\"147\":1,\"371\":1}}],[\"平台兼容性\",{\"1\":{\"114\":1}}],[\"平台\",{\"0\":{\"8\":1},\"1\":{\"65\":1,\"217\":1,\"297\":1}}],[\"换句话说\",{\"1\":{\"304\":1}}],[\"换\",{\"1\":{\"55\":1}}],[\"化整为零\",{\"1\":{\"55\":1}}],[\"总体\",{\"1\":{\"401\":1}}],[\"总是晚于具有相同修订号的\",{\"1\":{\"304\":1}}],[\"总是分配一个\",{\"1\":{\"180\":1}}],[\"总和并不等于该时间段内托管内存的实际增长量\",{\"1\":{\"274\":1}}],[\"总时间\",{\"1\":{\"265\":1}}],[\"总时长\",{\"1\":{\"55\":1}}],[\"总计\",{\"1\":{\"206\":1}}],[\"总的来说\",{\"1\":{\"163\":1}}],[\"总共有\",{\"1\":{\"218\":1}}],[\"总共有八个桶\",{\"1\":{\"100\":1}}],[\"总共三个采样\",{\"1\":{\"159\":1}}],[\"总块\",{\"1\":{\"100\":1}}],[\"总线\",{\"1\":{\"60\":1}}],[\"总\",{\"1\":{\"55\":1}}],[\"总结一下\",{\"1\":{\"127\":1}}],[\"总结与建议\",{\"0\":{\"92\":1}}],[\"总结\",{\"1\":{\"49\":1,\"59\":1}}],[\"后者早于\",{\"1\":{\"304\":1}}],[\"后者通常是更简单的解决方案\",{\"1\":{\"170\":1}}],[\"后立即在主线程上唤醒资源\",{\"1\":{\"222\":1}}],[\"后处理效果\",{\"1\":{\"214\":1}}],[\"后备顺序由\",{\"1\":{\"168\":1}}],[\"后备字体和内存使用\",{\"1\":{\"168\":1}}],[\"后面的标准\",{\"1\":{\"157\":1}}],[\"后全局\",{\"1\":{\"134\":1}}],[\"后台应用最先被终止\",{\"1\":{\"388\":1}}],[\"后台\",{\"1\":{\"104\":3}}],[\"后报告已满的原因\",{\"1\":{\"100\":1}}],[\"后进先出\",{\"1\":{\"98\":1}}],[\"后续行动\",{\"1\":{\"77\":1}}],[\"后续的代码会\",{\"1\":{\"49\":1}}],[\"后的代码默认会通过\",{\"1\":{\"60\":1}}],[\"后\",{\"1\":{\"55\":1}}],[\"算法应用于内存块\",{\"1\":{\"99\":1}}],[\"算法与数据结构\",{\"1\":{\"71\":1}}],[\"算法与底层\",{\"1\":{\"66\":1}}],[\"算法\",{\"1\":{\"55\":1,\"98\":1,\"103\":1,\"326\":3}}],[\"算法优化\",{\"1\":{\"41\":1}}],[\"要做很多统计\",{\"1\":{\"400\":1}}],[\"要填充满\",{\"1\":{\"392\":1}}],[\"要小很多的\",{\"1\":{\"387\":1}}],[\"要管理\",{\"1\":{\"307\":1}}],[\"要识别你的\",{\"1\":{\"306\":1}}],[\"要将非子文件夹中的脚本包含在程序集中\",{\"1\":{\"290\":1}}],[\"要将代码组织成程序集\",{\"1\":{\"290\":1}}],[\"要优化代码以获得最佳性能\",{\"1\":{\"277\":1}}],[\"要更精确地控制增量式垃圾回收行为\",{\"1\":{\"275\":1}}],[\"要更改剥离级别\",{\"1\":{\"192\":1}}],[\"要更改脚本后端\",{\"1\":{\"190\":1}}],[\"要更改主堆分配器的块大小\",{\"1\":{\"104\":1}}],[\"要启用增量式垃圾回收\",{\"1\":{\"275\":1}}],[\"要获取最准确的信息\",{\"1\":{\"274\":1}}],[\"要获得最大性能\",{\"1\":{\"135\":1}}],[\"要阅读更多关于着色器变体的信息\",{\"1\":{\"241\":1}}],[\"要确定着色器在运行时的大小\",{\"1\":{\"239\":1}}],[\"要确定在您的应用程序中使用动态批处理是否有益\",{\"1\":{\"110\":1}}],[\"要禁用增量式垃圾回收\",{\"1\":{\"275\":1}}],[\"要禁用深度缓冲区和模板缓冲区\",{\"1\":{\"232\":1}}],[\"要禁用多线程渲染\",{\"1\":{\"225\":1}}],[\"要完全禁用天空盒渲染\",{\"1\":{\"212\":1}}],[\"要调整这些设置\",{\"1\":{\"201\":1}}],[\"要预览剥离信息\",{\"1\":{\"199\":1}}],[\"要解决此限制\",{\"1\":{\"168\":1}}],[\"要解决这个问题\",{\"1\":{\"136\":1}}],[\"要显示任何\",{\"1\":{\"161\":1}}],[\"要显示所有部分中的所有其他属性\",{\"1\":{\"112\":1}}],[\"要测试给定\",{\"1\":{\"151\":1}}],[\"要分析这一点\",{\"1\":{\"148\":1}}],[\"要分配的最大块数\",{\"1\":{\"104\":2}}],[\"要重新计算包含在一个或多个\",{\"1\":{\"145\":1}}],[\"要向实例添加更多变化\",{\"1\":{\"120\":1}}],[\"要覆盖剥离行为\",{\"1\":{\"119\":1}}],[\"要手动设置实例数据\",{\"1\":{\"118\":1}}],[\"要访问实例\",{\"1\":{\"118\":1}}],[\"要为多个平台定义符号\",{\"1\":{\"301\":1}}],[\"要为自定义\",{\"1\":{\"120\":1}}],[\"要为这些平台指定批处理大小\",{\"1\":{\"118\":1}}],[\"要为\",{\"1\":{\"116\":1}}],[\"要为任何其他着色器添加\",{\"1\":{\"115\":1}}],[\"要为您的渲染实现最佳性能\",{\"1\":{\"112\":1}}],[\"要检查\",{\"1\":{\"112\":1}}],[\"要检查构建的帧溢出是否足够\",{\"1\":{\"103\":1}}],[\"要实现这一点\",{\"1\":{\"112\":1,\"170\":1}}],[\"要使着色器与\",{\"1\":{\"129\":1}}],[\"要使对象通过\",{\"1\":{\"129\":1}}],[\"要使\",{\"1\":{\"112\":1}}],[\"要使用属于另一个程序集的\",{\"1\":{\"299\":1}}],[\"要使用此类\",{\"1\":{\"246\":1}}],[\"要使用此宏\",{\"1\":{\"118\":1}}],[\"要使用\",{\"1\":{\"112\":2}}],[\"要使自定义着色器与\",{\"1\":{\"112\":1}}],[\"要查看\",{\"1\":{\"237\":1}}],[\"要查看所有可用属性\",{\"1\":{\"112\":1}}],[\"要查找装箱\",{\"1\":{\"284\":1}}],[\"要查找要更改的分配器参数的名称\",{\"1\":{\"104\":1}}],[\"要查找您的日志文件\",{\"1\":{\"98\":1,\"104\":1}}],[\"要么只能有限地应用动态批处理\",{\"1\":{\"110\":1}}],[\"要么根本无法使用动态批处理\",{\"1\":{\"110\":1}}],[\"要对材质使用\",{\"1\":{\"115\":1}}],[\"要对网格和材质进行实例化\",{\"1\":{\"115\":1}}],[\"要对网格使用动态批处理\",{\"1\":{\"110\":1}}],[\"要对一组\",{\"1\":{\"109\":1}}],[\"要在编辑器中禁用多线程渲染\",{\"1\":{\"226\":1}}],[\"要在运行时启用或禁用\",{\"1\":{\"112\":1}}],[\"要在运行时批处理静态网格\",{\"1\":{\"109\":1}}],[\"要在\",{\"1\":{\"112\":1,\"128\":1,\"170\":1}}],[\"要在构建时执行静态批处理\",{\"1\":{\"109\":1}}],[\"要在屏幕上绘制几何体\",{\"1\":{\"106\":1}}],[\"要绘制什么以及如何绘制\",{\"1\":{\"106\":1}}],[\"要自定义分配器设置\",{\"1\":{\"104\":1}}],[\"要计算子部分中的桶数\",{\"1\":{\"100\":1}}],[\"要让\",{\"1\":{\"60\":1}}],[\"要生效\",{\"1\":{\"58\":1}}],[\"要求和兼容性\",{\"0\":{\"114\":1},\"1\":{\"108\":1}}],[\"要求严格\",{\"1\":{\"64\":1,\"69\":1}}],[\"要求\",{\"1\":{\"55\":1,\"60\":1}}],[\"要点\",{\"1\":{\"55\":1,\"56\":1,\"57\":1,\"58\":1,\"59\":1}}],[\"闭包和匿名函数\",{\"1\":{\"404\":1}}],[\"闭包和匿名方法\",{\"0\":{\"283\":1}}],[\"闭包以及部分\",{\"1\":{\"68\":1}}],[\"闭包以及匿名方法\",{\"1\":{\"63\":1}}],[\"闭包\",{\"1\":{\"55\":1,\"60\":1,\"71\":1,\"74\":1}}],[\"拼接\",{\"1\":{\"55\":1,\"59\":2}}],[\"问题是\",{\"1\":{\"178\":1}}],[\"问题详解与回答思路\",{\"0\":{\"61\":1}}],[\"问题\",{\"1\":{\"55\":2,\"60\":10,\"79\":1,\"80\":1,\"81\":1,\"83\":1,\"84\":1,\"85\":1,\"87\":1,\"88\":1,\"90\":1,\"91\":1,\"178\":1,\"179\":2,\"180\":1,\"181\":1,\"182\":1,\"183\":1,\"184\":1}}],[\"累积起来都会导致\",{\"1\":{\"55\":1}}],[\"说明\",{\"1\":{\"55\":1}}],[\"说明有大量临时内存分配\",{\"1\":{\"41\":1}}],[\"及\",{\"1\":{\"261\":1}}],[\"及更高版本\",{\"1\":{\"221\":1}}],[\"及更高版本提供了对\",{\"1\":{\"221\":1}}],[\"及更高版本支持\",{\"1\":{\"193\":1}}],[\"及更高版本中已作业化\",{\"1\":{\"213\":1}}],[\"及更高版本中的\",{\"1\":{\"201\":1}}],[\"及更高版本中的新功能\",{\"1\":{\"148\":1}}],[\"及更高版本中\",{\"1\":{\"148\":1,\"258\":1}}],[\"及其非分配替代方案\",{\"1\":{\"286\":1}}],[\"及其网格\",{\"1\":{\"109\":1}}],[\"及其执行顺序\",{\"1\":{\"79\":1}}],[\"及其创建的所有资源\",{\"1\":{\"65\":1}}],[\"及其子项\",{\"1\":{\"55\":1}}],[\"及计算机等相关术语\",{\"1\":{\"14\":1}}],[\"峰值影响应用程序性能\",{\"1\":{\"275\":1}}],[\"峰值消耗数毫秒\",{\"1\":{\"178\":1}}],[\"峰值的原因\",{\"1\":{\"148\":1}}],[\"峰值\",{\"1\":{\"55\":1,\"74\":1,\"275\":3,\"276\":1}}],[\"打一个\",{\"1\":{\"394\":1}}],[\"打出来的\",{\"1\":{\"394\":1}}],[\"打光\",{\"1\":{\"320\":1}}],[\"打开着色器源文件\",{\"1\":{\"112\":1}}],[\"打开\",{\"1\":{\"55\":1,\"112\":1,\"119\":1,\"275\":2}}],[\"打包工具\",{\"1\":{\"335\":1,\"336\":1}}],[\"打包到一块大的gpu内存中\",{\"1\":{\"60\":1}}],[\"打包\",{\"1\":{\"43\":1,\"313\":1,\"323\":1}}],[\"权衡\",{\"1\":{\"54\":1}}],[\"我要播放声音\",{\"1\":{\"392\":2}}],[\"我将它们分为几个主要类别\",{\"1\":{\"77\":1}}],[\"我将把这个点加入到我们的\",{\"1\":{\"77\":1}}],[\"我注意到你在\",{\"1\":{\"77\":1}}],[\"我注意到这里有两个性能隐患\",{\"1\":{\"60\":1}}],[\"我为你准备了一份\",{\"1\":{\"73\":1}}],[\"我为你整合了网络上的高频面试题和参考答案\",{\"1\":{\"66\":1}}],[\"我为你整理了一份常见且重要的\",{\"1\":{\"61\":1}}],[\"我能理解你对即将到来的面试的重视\",{\"1\":{\"73\":1}}],[\"我很乐意提供进一步的信息\",{\"1\":{\"72\":1}}],[\"我很乐意提供更进一步的信息\",{\"1\":{\"66\":1}}],[\"我很高兴能与你\",{\"1\":{\"60\":1}}],[\"我很高兴能和你聊聊\",{\"1\":{\"54\":1}}],[\"我准备的这10个问题会混合考察你的技术深度\",{\"1\":{\"60\":1}}],[\"我不会只停留在这个\",{\"1\":{\"59\":1}}],[\"我选择它的原因是\",{\"1\":{\"56\":1}}],[\"我可以独立测试\",{\"1\":{\"56\":1}}],[\"我会毫不犹豫回答是抽象能力\",{\"1\":{\"382\":1}}],[\"我会优先选择\",{\"1\":{\"75\":1}}],[\"我会在评论中\",{\"1\":{\"59\":1}}],[\"我会建议他使用\",{\"1\":{\"59\":1}}],[\"我会建立一个全局的事件系统\",{\"1\":{\"56\":1}}],[\"我会问他\",{\"1\":{\"59\":1}}],[\"我会简要解释为什么这很糟糕\",{\"1\":{\"59\":1}}],[\"我会明确指出两个性能隐患点\",{\"1\":{\"59\":1}}],[\"我会首先肯定他完成了功能\",{\"1\":{\"59\":1}}],[\"我会用\",{\"1\":{\"57\":1}}],[\"我会大量使用\",{\"1\":{\"56\":1}}],[\"我会实现一个\",{\"1\":{\"55\":1}}],[\"我会检查\",{\"1\":{\"55\":1}}],[\"我会立刻检查是否有\",{\"1\":{\"55\":1}}],[\"我会立即检查\",{\"1\":{\"55\":1}}],[\"我会看主线程\",{\"1\":{\"55\":1}}],[\"我们会统计\",{\"1\":{\"390\":1}}],[\"我们会检查几个潜在错误\",{\"1\":{\"136\":1}}],[\"我们在实际工作中更多要做的是对\",{\"1\":{\"388\":1}}],[\"我们需要尽可能保证\",{\"1\":{\"387\":1}}],[\"我们先把大问题分解成若干个子问题\",{\"1\":{\"382\":1}}],[\"我们把整个系统划分成若干个层次\",{\"1\":{\"382\":1}}],[\"我们要想方设法合并更多的元素\",{\"1\":{\"379\":1}}],[\"我们要做一个类似\",{\"1\":{\"56\":1}}],[\"我们可以通过文字表格自动生成一个类\",{\"1\":{\"377\":1}}],[\"我们可以建立一个团队的\",{\"1\":{\"59\":1}}],[\"我们更难识别这句话代表什么\",{\"1\":{\"377\":1}}],[\"我们推荐你省略\",{\"1\":{\"360\":1}}],[\"我们推出了一种高度可定制的渲染技术\",{\"1\":{\"125\":1}}],[\"我们希望只在必要时才重新生成\",{\"1\":{\"178\":1}}],[\"我们建议仅在必要时\",{\"1\":{\"169\":1}}],[\"我们建议用户使用普通的\",{\"1\":{\"169\":1}}],[\"我们从新的\",{\"1\":{\"137\":1}}],[\"我们还在努力添加与\",{\"1\":{\"137\":1}}],[\"我们仍在通过在某些渲染通道\",{\"1\":{\"137\":1}}],[\"我们必须中断批处理\",{\"1\":{\"135\":1}}],[\"我们犹豫是否在覆盖底部添加\",{\"1\":{\"131\":1}}],[\"我们使用专用代码路径快速更新大型\",{\"1\":{\"127\":1}}],[\"我们的目标是加速一般情况\",{\"1\":{\"127\":1}}],[\"我们的游戏在手机上发热严重\",{\"1\":{\"55\":1}}],[\"我们看到了原生集成一些新范例\",{\"1\":{\"127\":1}}],[\"我们不是在讨论全局帧率\",{\"1\":{\"125\":1}}],[\"我们开始吧\",{\"1\":{\"54\":1,\"60\":1}}],[\"我的面试会比较深入\",{\"1\":{\"54\":1}}],[\"我设计了一套\",{\"1\":{\"52\":1}}],[\"专用字形渲染器\",{\"1\":{\"168\":1}}],[\"专用元素不能再重复使用\",{\"1\":{\"159\":1}}],[\"专用代码管理大型\",{\"1\":{\"127\":1}}],[\"专用代码管理一个大型的每对象\",{\"1\":{\"112\":1}}],[\"专用主线程\",{\"1\":{\"104\":1}}],[\"专用主线程分配器的块大小\",{\"1\":{\"104\":1}}],[\"专门用于\",{\"1\":{\"104\":1}}],[\"专门在\",{\"1\":{\"74\":1}}],[\"专家期待的答案\",{\"1\":{\"55\":2,\"56\":2,\"57\":2,\"58\":2,\"59\":1}}],[\"专家视角\",{\"0\":{\"54\":1}}],[\"专为移动端到\",{\"1\":{\"50\":1}}],[\"祝你面试顺利\",{\"1\":{\"53\":1,\"72\":1}}],[\"态度\",{\"1\":{\"53\":1,\"59\":1}}],[\"重载了所有分配内存的操作符\",{\"1\":{\"390\":1}}],[\"重复访问会扩展托管堆\",{\"1\":{\"285\":1}}],[\"重复的字符串连接\",{\"0\":{\"280\":1}}],[\"重复使用临时工作缓冲区以保持临时垃圾\",{\"1\":{\"189\":1}}],[\"重复代码\",{\"1\":{\"53\":1}}],[\"重新编译项目中的脚本以创建新的程序集\",{\"1\":{\"295\":1}}],[\"重新上传\",{\"1\":{\"222\":1}}],[\"重新计算\",{\"1\":{\"178\":1}}],[\"重新启用垃圾回收器并使用\",{\"1\":{\"276\":1}}],[\"重新启用\",{\"1\":{\"173\":1}}],[\"重新排序可绘制对象\",{\"1\":{\"162\":1}}],[\"重用或池化分配的集合或数组是高效的\",{\"1\":{\"282\":1}}],[\"重用\",{\"1\":{\"170\":1}}],[\"重要提示\",{\"1\":{\"366\":1}}],[\"重要的方法包括\",{\"1\":{\"246\":1}}],[\"重要的是要记住\",{\"1\":{\"204\":1}}],[\"重要的是要注意\",{\"1\":{\"191\":1}}],[\"重要的是始终在代码中的同一位置\",{\"1\":{\"204\":1}}],[\"重要文档\",{\"0\":{\"188\":1}}],[\"重要\",{\"1\":{\"123\":1,\"161\":1,\"275\":1,\"366\":1}}],[\"重定向分配\",{\"1\":{\"98\":1}}],[\"重在教育和赋能\",{\"1\":{\"77\":1}}],[\"重建调用尽可能高效\",{\"1\":{\"169\":1}}],[\"重建可能成为性能问题\",{\"1\":{\"161\":1}}],[\"重建使用了过多的\",{\"1\":{\"152\":1}}],[\"重建和\",{\"1\":{\"150\":1}}],[\"重建不会以任何特定顺序遍历\",{\"1\":{\"146\":1}}],[\"重建布局\",{\"1\":{\"145\":1}}],[\"重建分为两步\",{\"1\":{\"144\":1}}],[\"重建分为三步\",{\"1\":{\"144\":1}}],[\"重建过程的某些部分可能是原因\",{\"1\":{\"152\":1}}],[\"重建过程是重新计算\",{\"1\":{\"144\":1}}],[\"重建过程将在本文档后面详细讨论\",{\"1\":{\"141\":1}}],[\"重建\",{\"0\":{\"144\":1,\"145\":1,\"146\":1,\"161\":1},\"1\":{\"74\":1,\"144\":1,\"172\":1}}],[\"重传机制\",{\"1\":{\"71\":1}}],[\"重点检查\",{\"1\":{\"55\":1}}],[\"重点考察你在性能\",{\"1\":{\"54\":1}}],[\"重叠过多透明元素\",{\"1\":{\"83\":1}}],[\"重叠\",{\"1\":{\"41\":1}}],[\"坏味道\",{\"1\":{\"53\":1}}],[\"架构分层\",{\"1\":{\"383\":1}}],[\"架构设计中最重要的能力是什么\",{\"1\":{\"382\":1}}],[\"架构设计与高级特性\",{\"0\":{\"70\":1}}],[\"架构中的思维方式\",{\"0\":{\"382\":1}}],[\"架构能适应不同类型的需求\",{\"1\":{\"381\":1}}],[\"架构能力\",{\"1\":{\"60\":1}}],[\"架构的好坏可从以下几个方面进行评估\",{\"1\":{\"381\":1}}],[\"架构的好坏\",{\"0\":{\"381\":1}}],[\"架构的哪些根本性问题\",{\"1\":{\"75\":1}}],[\"架构上通常会有很大差异\",{\"1\":{\"143\":1}}],[\"架构与设计\",{\"1\":{\"66\":1}}],[\"架构与设计模式\",{\"0\":{\"56\":1,\"75\":1}}],[\"架构师需要根据用户的反馈对架构进行不断的调整\",{\"1\":{\"382\":1}}],[\"架构师\",{\"1\":{\"55\":1}}],[\"架构和底层原理上的理解\",{\"1\":{\"54\":1}}],[\"架构广度\",{\"1\":{\"53\":1}}],[\"架构\",{\"1\":{\"53\":1,\"66\":1,\"85\":1,\"212\":1}}],[\"逻辑寻址\",{\"1\":{\"76\":1}}],[\"逻辑层\",{\"1\":{\"57\":1}}],[\"逻辑问题\",{\"1\":{\"55\":1}}],[\"逻辑是否清晰\",{\"1\":{\"53\":1}}],[\"逻辑简单\",{\"1\":{\"48\":1}}],[\"命名为\",{\"1\":{\"339\":1}}],[\"命名空间中的\",{\"1\":{\"309\":1}}],[\"命名空间中的数组或类\",{\"1\":{\"282\":1}}],[\"命名空间\",{\"1\":{\"96\":1}}],[\"命名空间和包\",{\"1\":{\"96\":1}}],[\"命名是否规范\",{\"1\":{\"53\":1}}],[\"命令并指定相应的参数\",{\"1\":{\"371\":1}}],[\"命令模式\",{\"1\":{\"312\":1}}],[\"命令降低默认分辨率并在不损失质量的情况下恢复性能\",{\"1\":{\"233\":1}}],[\"命令提供了系统整体内存使用情况的摘要\",{\"1\":{\"205\":1}}],[\"命令缓冲区\",{\"1\":{\"205\":1,\"228\":1}}],[\"命令缓冲区的一些字节\",{\"1\":{\"135\":1}}],[\"命令组合在一起\",{\"1\":{\"112\":1}}],[\"命令行参数\",{\"1\":{\"98\":1,\"104\":1}}],[\"命令\",{\"1\":{\"24\":1,\"43\":1,\"85\":1,\"112\":1,\"135\":1,\"205\":1,\"212\":1}}],[\"人工神经网络\",{\"1\":{\"332\":1}}],[\"人们通过重新设置父对象然后禁用使\",{\"1\":{\"182\":1}}],[\"人们可能希望使用\",{\"1\":{\"136\":1}}],[\"人们倾向于减少\",{\"1\":{\"135\":1}}],[\"人\",{\"1\":{\"52\":1}}],[\"人提升到\",{\"1\":{\"52\":1}}],[\"人名不翻译\",{\"1\":{\"14\":1}}],[\"结尾的路径会被推断为\",{\"1\":{\"360\":1}}],[\"结构型模式\",{\"1\":{\"312\":1}}],[\"结构\",{\"0\":{\"156\":1},\"1\":{\"154\":1}}],[\"结构体等\",{\"1\":{\"192\":1}}],[\"结构体不会在堆上分配\",{\"1\":{\"189\":1}}],[\"结构体\",{\"1\":{\"63\":1}}],[\"结果从头到尾只用了一次\",{\"1\":{\"403\":1}}],[\"结果变量的先前内容都会变得多余\",{\"1\":{\"280\":1}}],[\"结果是帧率通常高于双缓冲\",{\"1\":{\"230\":1}}],[\"结果将大于实际的总\",{\"1\":{\"205\":1}}],[\"结果\",{\"0\":{\"152\":1},\"1\":{\"57\":1,\"72\":1,\"92\":1}}],[\"结果如何\",{\"1\":{\"52\":1}}],[\"结合使用的内存管理层\",{\"1\":{\"96\":1}}],[\"结合你实际项目中的经验\",{\"1\":{\"92\":1}}],[\"结合项目经验\",{\"1\":{\"66\":1,\"72\":1}}],[\"结合法线和光照信息\",{\"1\":{\"51\":1}}],[\"结合\",{\"1\":{\"46\":1}}],[\"远端服务器\",{\"1\":{\"84\":1}}],[\"远处只更新位置\",{\"1\":{\"55\":1}}],[\"远处的物体使用低模\",{\"1\":{\"83\":1}}],[\"远处的\",{\"1\":{\"55\":1}}],[\"远处的玩家关闭\",{\"1\":{\"52\":1}}],[\"远快于访问分散内存\",{\"1\":{\"46\":1}}],[\"帧的速度运行\",{\"1\":{\"278\":1}}],[\"帧时间图表中显示为大的峰值\",{\"1\":{\"275\":1}}],[\"帧时间的\",{\"1\":{\"165\":1}}],[\"帧缓冲区包含深度\",{\"1\":{\"229\":1}}],[\"帧缓冲区压缩\",{\"1\":{\"212\":1}}],[\"帧缓冲区\",{\"0\":{\"229\":1},\"1\":{\"210\":1}}],[\"帧捕获\",{\"1\":{\"151\":1}}],[\"帧调试器窗口\",{\"1\":{\"218\":1}}],[\"帧调试器\",{\"1\":{\"215\":1}}],[\"帧调试器将使用为\",{\"1\":{\"149\":1}}],[\"帧调试器中的\",{\"1\":{\"135\":1}}],[\"帧同步和状态同步\",{\"1\":{\"314\":1}}],[\"帧同步\",{\"1\":{\"66\":1,\"87\":1}}],[\"帧率\",{\"1\":{\"275\":2}}],[\"帧率相关\",{\"1\":{\"79\":1}}],[\"帧率高时施加次数多\",{\"1\":{\"60\":1}}],[\"帧率从60\",{\"1\":{\"60\":1}}],[\"帧率在复杂场景下掉到\",{\"1\":{\"55\":1}}],[\"帧率稳定在\",{\"1\":{\"52\":1}}],[\"帧率暴跌至\",{\"1\":{\"52\":1}}],[\"帧\",{\"1\":{\"52\":2,\"55\":1,\"275\":1}}],[\"同上\",{\"1\":{\"397\":1}}],[\"同一层级上的\",{\"1\":{\"379\":1}}],[\"同步到\",{\"0\":{\"339\":1}}],[\"同步类\",{\"1\":{\"254\":1}}],[\"同步方案\",{\"1\":{\"87\":1}}],[\"同级\",{\"1\":{\"163\":1}}],[\"同样\",{\"1\":{\"106\":1,\"289\":1,\"291\":1,\"292\":2}}],[\"同屏承载能力从\",{\"1\":{\"52\":1}}],[\"同屏人数一多\",{\"1\":{\"52\":1}}],[\"同时所有出现的程序错误\",{\"1\":{\"381\":1}}],[\"同时生成数据定义类\",{\"1\":{\"377\":1}}],[\"同时支持页面配置\",{\"1\":{\"363\":1}}],[\"同时将测试代码与应用程序发布代码分开\",{\"1\":{\"298\":1}}],[\"同时\",{\"1\":{\"270\":1,\"358\":1}}],[\"同时保持\",{\"1\":{\"248\":1}}],[\"同时保持原有的格式不变\",{\"1\":{\"14\":1}}],[\"同时分析应用程序的内存消耗\",{\"1\":{\"204\":1}}],[\"同时仍能实现高视觉保真度并节省内存和磁盘空间\",{\"1\":{\"200\":1}}],[\"同时打开并启用\",{\"1\":{\"162\":1}}],[\"同时渲染同一网格的多个副本\",{\"1\":{\"106\":1}}],[\"同时方便地编写\",{\"1\":{\"96\":1}}],[\"同时写\",{\"1\":{\"60\":1}}],[\"同时读写\",{\"1\":{\"60\":1}}],[\"同时与\",{\"1\":{\"52\":1}}],[\"遇到的具体技术难题是什么\",{\"1\":{\"52\":1}}],[\"遇到了瓶颈\",{\"1\":{\"41\":1}}],[\"法则来组织你的回答\",{\"1\":{\"72\":1}}],[\"法则\",{\"1\":{\"52\":1,\"92\":1}}],[\"法线贴图\",{\"1\":{\"200\":1}}],[\"法线\",{\"1\":{\"51\":1}}],[\"法线等数据传递给片元着色器\",{\"1\":{\"51\":1}}],[\"法线等\",{\"1\":{\"51\":1}}],[\"坐标转换函数\",{\"1\":{\"383\":1}}],[\"坐标转换\",{\"1\":{\"61\":1}}],[\"坐标采样纹理\",{\"1\":{\"51\":1}}],[\"坐标变换\",{\"1\":{\"51\":1}}],[\"也有头来索引\",{\"1\":{\"395\":1}}],[\"也一样\",{\"1\":{\"394\":1}}],[\"也要占内存\",{\"1\":{\"394\":1}}],[\"也就是\",{\"1\":{\"388\":1}}],[\"也就是说会导致包体大一点\",{\"1\":{\"394\":1}}],[\"也就是说\",{\"1\":{\"142\":1,\"162\":1,\"168\":1,\"169\":1}}],[\"也能适应小项目上\",{\"1\":{\"381\":1}}],[\"也存在所有\",{\"1\":{\"258\":1}}],[\"也很困难\",{\"1\":{\"233\":1}}],[\"也称为\",{\"1\":{\"205\":1}}],[\"也是\",{\"1\":{\"181\":1}}],[\"也都是\",{\"1\":{\"181\":1}}],[\"也将从命中列表中消除\",{\"1\":{\"166\":1}}],[\"也将在此运行\",{\"1\":{\"150\":1}}],[\"也不会执行不必要的射线检测\",{\"1\":{\"165\":1}}],[\"也不需要任何排序操作\",{\"1\":{\"146\":1}}],[\"也不错\",{\"1\":{\"134\":1}}],[\"也不要遗漏任何信息\",{\"1\":{\"14\":1}}],[\"也会造成不少内存的冗余\",{\"1\":{\"369\":1}}],[\"也会继续绘制其后面的所有内容\",{\"1\":{\"215\":1}}],[\"也会移除该类型中未使用的方法\",{\"1\":{\"192\":1}}],[\"也会将其内容与父\",{\"1\":{\"178\":1}}],[\"也会发生此重新计算\",{\"1\":{\"168\":1}}],[\"也会在\",{\"1\":{\"118\":1}}],[\"也会打断合批\",{\"1\":{\"58\":1}}],[\"也支持对应用进行\",{\"1\":{\"371\":1}}],[\"也支持\",{\"1\":{\"115\":1}}],[\"也常配合\",{\"1\":{\"65\":1}}],[\"也分配在堆上\",{\"1\":{\"60\":1}}],[\"也可以在页面\",{\"1\":{\"362\":1}}],[\"也可以编写设置基于\",{\"1\":{\"172\":1}}],[\"也可以从\",{\"1\":{\"169\":1}}],[\"也可以使用\",{\"1\":{\"128\":1}}],[\"也可以处理顶点动画\",{\"1\":{\"51\":1}}],[\"也可能会停止\",{\"1\":{\"97\":1}}],[\"也可能是cpu在等待gpu完成上一帧\",{\"1\":{\"60\":1}}],[\"也更利于单元测试\",{\"1\":{\"57\":1}}],[\"最高得分的进程最先被终止\",{\"1\":{\"388\":1}}],[\"最常用的是数据表\",{\"1\":{\"383\":1}}],[\"最常见和最快的方法是\",{\"1\":{\"205\":1}}],[\"最常见的是排行榜或统计屏幕\",{\"1\":{\"168\":1}}],[\"最常见的适用情况是打开具有不透明背景的全屏\",{\"1\":{\"155\":1}}],[\"最常见的问题只是填充率使用过度\",{\"1\":{\"154\":1}}],[\"最常见的原因之一是\",{\"1\":{\"148\":1}}],[\"最近更新时间\",{\"1\":{\"339\":1}}],[\"最新版本控制系统\",{\"1\":{\"315\":1}}],[\"最有趣和最昂贵的指标是\",{\"1\":{\"205\":1}}],[\"最有用的功能是底部的批处理查看器\",{\"1\":{\"148\":1}}],[\"最佳做法是为创建的每个\",{\"1\":{\"269\":1}}],[\"最佳性能\",{\"1\":{\"201\":1}}],[\"最佳延迟\",{\"1\":{\"201\":1}}],[\"最佳实践指南中有详细介绍\",{\"1\":{\"255\":1}}],[\"最佳实践指南中阅读更多关于\",{\"1\":{\"220\":1}}],[\"最佳实践是仅为长期存在的分配禁用垃圾回收器\",{\"1\":{\"276\":1}}],[\"最佳实践是仅在必须接收指针事件的\",{\"1\":{\"166\":1}}],[\"最佳实践是创建一个包含所有网格信息的单一缓冲区\",{\"1\":{\"117\":1}}],[\"最佳实践\",{\"0\":{\"404\":1},\"1\":{\"4\":1,\"22\":1,\"70\":1,\"404\":1}}],[\"最终部署页面为\",{\"1\":{\"339\":1}}],[\"最终\",{\"0\":{\"234\":1}}],[\"最终链接发生在构建期间\",{\"1\":{\"193\":1}}],[\"最终会将托管堆空闲部分使用的内存释放回操作系统\",{\"1\":{\"97\":1}}],[\"最小化对\",{\"1\":{\"169\":1}}],[\"最重要的是要理解\",{\"1\":{\"168\":1}}],[\"最适合用于\",{\"1\":{\"163\":1}}],[\"最好是新建一个名为\",{\"1\":{\"339\":1}}],[\"最好是将防止人为错误作为第一道防线\",{\"1\":{\"246\":1}}],[\"最好使用根据距离建模具有正确细节的网格\",{\"1\":{\"218\":1}}],[\"最好测试最长\",{\"1\":{\"169\":1}}],[\"最好尝试将元素放在同一个\",{\"1\":{\"163\":1}}],[\"最好的补救措施是创建专门的\",{\"1\":{\"159\":1}}],[\"最好能理解其基于\",{\"1\":{\"72\":1}}],[\"最简单的方法是禁用包含不可见\",{\"1\":{\"155\":1}}],[\"最可能的原因是\",{\"1\":{\"152\":1}}],[\"最后启用它\",{\"1\":{\"182\":1}}],[\"最后返回最终的命中列表\",{\"1\":{\"166\":1}}],[\"最后是文本图集的纹理\",{\"1\":{\"159\":1}}],[\"最后一列显示与批处理关联的游戏对象名称\",{\"1\":{\"148\":1}}],[\"最后\",{\"1\":{\"148\":1,\"155\":1,\"269\":1,\"369\":1}}],[\"最后到裁剪空间\",{\"1\":{\"51\":1}}],[\"最糟糕的情况\",{\"1\":{\"125\":1}}],[\"最多可以批处理\",{\"1\":{\"110\":1}}],[\"最值得注意的是\",{\"1\":{\"108\":1,\"150\":1}}],[\"最大\",{\"1\":{\"201\":1}}],[\"最大真实声音数\",{\"1\":{\"201\":1}}],[\"最大虚拟声音数\",{\"1\":{\"201\":1}}],[\"最大文本块的最佳点大小\",{\"1\":{\"169\":1}}],[\"最大点大小范围内\",{\"1\":{\"168\":1}}],[\"最大的问题是依赖管理和寻址\",{\"1\":{\"76\":1}}],[\"最大的区别是什么\",{\"1\":{\"56\":1}}],[\"最大优势\",{\"1\":{\"58\":1}}],[\"再操作小内存\",{\"1\":{\"402\":1}}],[\"再加载小内存的资源\",{\"1\":{\"402\":1}}],[\"再加载下一关卡\",{\"1\":{\"276\":1}}],[\"再将子问题的解组合成原问题的解\",{\"1\":{\"382\":1}}],[\"再将图片放入网格中\",{\"1\":{\"379\":1}}],[\"再次将游戏对象设置为非活动状态\",{\"1\":{\"279\":1}}],[\"再次强调\",{\"1\":{\"169\":1}}],[\"再考虑更改源代码\",{\"1\":{\"175\":1}}],[\"再提供一些更深入的\",{\"1\":{\"92\":1}}],[\"再设置新状态并调用其\",{\"1\":{\"70\":1}}],[\"再指出问题\",{\"1\":{\"60\":1}}],[\"再到视图空间\",{\"1\":{\"51\":1}}],[\"再逐个\",{\"1\":{\"46\":1}}],[\"输出到每个线程不同的\",{\"1\":{\"227\":1}}],[\"输出结构中定义实例\",{\"1\":{\"118\":1}}],[\"输出cmd改变颜色\",{\"1\":{\"27\":1}}],[\"输入事件封装进行选择\",{\"1\":{\"383\":1}}],[\"输入符号名称\",{\"1\":{\"301\":1}}],[\"输入数组中的项目越多\",{\"1\":{\"280\":1}}],[\"输入管理系统\",{\"1\":{\"164\":1}}],[\"输入\",{\"1\":{\"51\":2,\"118\":1}}],[\"提到了手工编码的替换比内置方法快\",{\"1\":{\"271\":1}}],[\"提交给真实的图形设备\",{\"1\":{\"227\":1}}],[\"提交\",{\"1\":{\"190\":1}}],[\"提交绘制调用的方式\",{\"1\":{\"110\":1}}],[\"提升到\",{\"1\":{\"137\":1}}],[\"提高应用程序未来开发的可维护性\",{\"1\":{\"106\":1}}],[\"提高游戏渲染性能的常用方法有哪些\",{\"1\":{\"83\":1}}],[\"提高总\",{\"1\":{\"74\":1}}],[\"提及\",{\"1\":{\"79\":1,\"88\":1}}],[\"提供给用户\",{\"1\":{\"389\":1}}],[\"提供每帧\",{\"1\":{\"274\":1}}],[\"提供以下工具来追踪内存分配\",{\"1\":{\"274\":1}}],[\"提供以下类型的内置\",{\"1\":{\"106\":1}}],[\"提供的所有服务\",{\"1\":{\"205\":1}}],[\"提供的统计信息包含与应用程序内存相关的各种信息\",{\"1\":{\"205\":1}}],[\"提供固定的\",{\"1\":{\"201\":1}}],[\"提供两种内置的drawcall\",{\"1\":{\"108\":1}}],[\"提供\",{\"1\":{\"104\":1,\"298\":1}}],[\"提供一些保护\",{\"1\":{\"96\":1}}],[\"提供一个\",{\"1\":{\"64\":1}}],[\"提供具体解决方案\",{\"1\":{\"60\":1}}],[\"提供了许多工具来获取有关\",{\"1\":{\"205\":1}}],[\"提供了一个很好的\",{\"1\":{\"178\":1}}],[\"提供了一个受控的内存环境\",{\"1\":{\"96\":1}}],[\"提供了\",{\"1\":{\"109\":1}}],[\"提供了更高级的抽象层\",{\"1\":{\"84\":1}}],[\"提供了更高效的合批机制\",{\"1\":{\"50\":1}}],[\"提供了统一的渲染路径和光照模型\",{\"1\":{\"58\":1}}],[\"提前剔除了\",{\"1\":{\"60\":1}}],[\"提前编译\",{\"1\":{\"57\":1,\"190\":1,\"371\":1}}],[\"提示容器\",{\"1\":{\"366\":1}}],[\"提示\",{\"1\":{\"60\":2,\"98\":2,\"99\":1,\"100\":1,\"101\":1,\"102\":1,\"104\":3,\"109\":1,\"112\":1,\"136\":2,\"190\":1,\"201\":1,\"225\":1,\"233\":1,\"237\":1,\"240\":1,\"241\":1,\"343\":1,\"355\":1,\"358\":1,\"360\":1,\"362\":1,\"366\":1,\"377\":1,\"379\":1,\"387\":1}}],[\"提示框\",{\"1\":{\"44\":1}}],[\"提醒大家注意\",{\"1\":{\"59\":1}}],[\"提出建设性意见\",{\"1\":{\"53\":1}}],[\"脚本可以构建你的网站\",{\"1\":{\"351\":1}}],[\"脚本可以启动开发服务器\",{\"1\":{\"350\":1}}],[\"脚本优化\",{\"1\":{\"317\":1}}],[\"脚本放入预定义的\",{\"1\":{\"307\":1}}],[\"脚本放在项目的任何位置\",{\"1\":{\"297\":1}}],[\"脚本文件\",{\"1\":{\"306\":1}}],[\"脚本被编译到哪个程序集中\",{\"1\":{\"306\":1}}],[\"脚本参考中有详细说明\",{\"1\":{\"248\":1}}],[\"脚本的文件夹\",{\"1\":{\"297\":1}}],[\"脚本的文件夹中创建一个特定平台的程序集\",{\"1\":{\"297\":1}}],[\"脚本的调用\",{\"1\":{\"148\":1}}],[\"脚本的生命周期函数\",{\"1\":{\"79\":1}}],[\"脚本访问共享材质属性时\",{\"1\":{\"108\":1}}],[\"脚本环境\",{\"1\":{\"97\":1}}],[\"脚本层相关的内存\",{\"1\":{\"96\":1}}],[\"脚本栈会建立和展开\",{\"1\":{\"96\":1}}],[\"脚本栈\",{\"1\":{\"96\":1}}],[\"脚本虚拟机\",{\"1\":{\"96\":1}}],[\"脚本实例被创建时调用\",{\"1\":{\"62\":1,\"67\":1}}],[\"脚本\",{\"1\":{\"50\":1,\"130\":1,\"276\":1}}],[\"脚本后端的构建中始终启用\",{\"1\":{\"192\":1}}],[\"脚本后端的构建中是可选的\",{\"1\":{\"192\":1}}],[\"脚本后端以提高迭代速度\",{\"1\":{\"190\":1}}],[\"脚本后端以实现快速迭代\",{\"1\":{\"190\":1}}],[\"脚本后端或\",{\"1\":{\"190\":1}}],[\"脚本后端定期复制这些类型的数据效率很低\",{\"1\":{\"97\":1}}],[\"脚本后端可以快速复制占用少量字节的数据类型\",{\"1\":{\"97\":1}}],[\"脚本后端将其参数的值复制到为该特定调用保留的内存区域中\",{\"1\":{\"97\":1}}],[\"脚本后端从\",{\"1\":{\"76\":1}}],[\"脚本后端\",{\"0\":{\"47\":1,\"190\":1},\"1\":{\"190\":4}}],[\"渲染方程\",{\"1\":{\"329\":1}}],[\"渲染组件\",{\"1\":{\"313\":1}}],[\"渲染将与显示器的垂直刷新率同步\",{\"1\":{\"275\":1}}],[\"渲染线程\",{\"1\":{\"225\":1}}],[\"渲染允许您随着对象与相机的距离增加而减少渲染的三角形数量\",{\"1\":{\"218\":1}}],[\"渲染工作负载的最佳实践\",{\"1\":{\"210\":1}}],[\"渲染工作流\",{\"1\":{\"126\":1,\"127\":1}}],[\"渲染细节\",{\"0\":{\"142\":1}}],[\"渲染器不知道全屏\",{\"1\":{\"157\":1}}],[\"渲染器的\",{\"1\":{\"137\":2}}],[\"渲染器开始\",{\"1\":{\"137\":1}}],[\"渲染器为批处理设置材质状态\",{\"1\":{\"110\":1}}],[\"渲染循环\",{\"1\":{\"135\":1}}],[\"渲染循环中花费的时间\",{\"1\":{\"130\":1}}],[\"渲染成本\",{\"1\":{\"135\":1}}],[\"渲染部分不是您的瓶颈\",{\"1\":{\"134\":1}}],[\"渲染架构中\",{\"1\":{\"127\":1}}],[\"渲染代码\",{\"1\":{\"125\":1}}],[\"渲染速度提升\",{\"1\":{\"125\":1}}],[\"渲染优化\",{\"1\":{\"124\":1,\"317\":1}}],[\"渲染路径\",{\"1\":{\"120\":1}}],[\"渲染路径主要是前向渲染\",{\"1\":{\"50\":1}}],[\"渲染多个实例的绘制调用在\",{\"1\":{\"113\":1}}],[\"渲染使用相同着色器变体的许多材质的场景所需的\",{\"1\":{\"112\":1}}],[\"渲染管线和\",{\"1\":{\"114\":1}}],[\"渲染管线兼容性\",{\"1\":{\"108\":1,\"109\":1,\"110\":1,\"112\":1,\"114\":1,\"118\":1}}],[\"渲染管线\",{\"1\":{\"90\":1,\"210\":1,\"313\":2,\"318\":2}}],[\"渲染瓶颈\",{\"1\":{\"74\":1}}],[\"渲染一个物体的过程\",{\"1\":{\"64\":1,\"69\":1}}],[\"渲染广度\",{\"1\":{\"60\":1}}],[\"渲染时\",{\"1\":{\"60\":1,\"180\":1}}],[\"渲染时几乎没有\",{\"1\":{\"58\":1}}],[\"渲染深度\",{\"1\":{\"60\":1}}],[\"渲染与图形学\",{\"0\":{\"58\":1}}],[\"渲染\",{\"0\":{\"210\":1},\"1\":{\"50\":1,\"64\":1,\"69\":1,\"79\":1,\"116\":1}}],[\"渲染提交\",{\"1\":{\"41\":2}}],[\"黑盒\",{\"1\":{\"50\":1,\"57\":1,\"58\":1}}],[\"特殊文件夹\",{\"0\":{\"307\":1}}],[\"特别优化\",{\"0\":{\"264\":1}}],[\"特别是当可用内存是一个问题时\",{\"1\":{\"169\":1}}],[\"特别是如果每个元素上有大量\",{\"1\":{\"170\":1}}],[\"特别是如果\",{\"1\":{\"159\":1}}],[\"特别是阴影和深度通道\",{\"1\":{\"137\":1}}],[\"特别是围绕\",{\"1\":{\"96\":1}}],[\"特别是在一个复杂的场景中\",{\"1\":{\"79\":1}}],[\"特定\",{\"1\":{\"210\":1}}],[\"特定类型的\",{\"1\":{\"167\":1}}],[\"特定类型的游戏系统设计等\",{\"1\":{\"72\":1}}],[\"特有的术语\",{\"1\":{\"139\":1}}],[\"特点\",{\"1\":{\"50\":2}}],[\"特效设计\",{\"1\":{\"319\":1}}],[\"特效\",{\"1\":{\"41\":1,\"64\":1,\"81\":1,\"313\":1,\"383\":1}}],[\"协作\",{\"1\":{\"49\":1}}],[\"协程和线程的区别\",{\"1\":{\"93\":1}}],[\"协程优化\",{\"1\":{\"81\":1}}],[\"协程主要用于\",{\"1\":{\"80\":1}}],[\"协程不是多线程\",{\"1\":{\"80\":1}}],[\"协程是\",{\"1\":{\"80\":1}}],[\"协程是如何工作的\",{\"1\":{\"80\":1}}],[\"协程是unity主线程上的迭代器\",{\"1\":{\"60\":1}}],[\"协程会一直占用主线程\",{\"1\":{\"57\":1}}],[\"协程的启动\",{\"1\":{\"57\":1}}],[\"协程用于主线程的时间分片\",{\"1\":{\"49\":1}}],[\"协程\",{\"1\":{\"49\":1,\"57\":1,\"74\":1,\"404\":1}}],[\"抛到线程池中执行\",{\"1\":{\"49\":1}}],[\"切回主线程\",{\"1\":{\"60\":1}}],[\"切回主线程继续执行\",{\"1\":{\"49\":1}}],[\"切换至序数比对的方式非常简单\",{\"1\":{\"251\":1}}],[\"切换到\",{\"1\":{\"76\":1}}],[\"切换不同的\",{\"1\":{\"58\":1}}],[\"切换上下文\",{\"1\":{\"55\":1}}],[\"切换渲染状态\",{\"1\":{\"43\":1}}],[\"切换\",{\"1\":{\"20\":1,\"212\":1}}],[\"默认显示行号\",{\"1\":{\"367\":1}}],[\"默认同主题选项中的\",{\"1\":{\"364\":1}}],[\"默认是隐藏的\",{\"1\":{\"362\":1}}],[\"默认不启用\",{\"1\":{\"358\":1}}],[\"默认还会在该目录下生成临时文件\",{\"1\":{\"347\":1}}],[\"默认构建生成的静态文件目录\",{\"1\":{\"338\":1,\"347\":1}}],[\"默认缓存目录\",{\"1\":{\"338\":1,\"347\":1}}],[\"默认临时文件目录\",{\"1\":{\"338\":1,\"347\":1}}],[\"默认主题\",{\"1\":{\"335\":1,\"336\":1}}],[\"默认引用\",{\"0\":{\"292\":1}}],[\"默认设置为\",{\"1\":{\"275\":1}}],[\"默认已启用\",{\"1\":{\"275\":1}}],[\"默认区域\",{\"1\":{\"252\":2}}],[\"默认着色器\",{\"1\":{\"237\":1}}],[\"默认禁用图形作业\",{\"1\":{\"228\":1}}],[\"默认使用单线程渲染\",{\"1\":{\"224\":1}}],[\"默认为根目录\",{\"1\":{\"364\":1}}],[\"默认为\",{\"1\":{\"201\":1,\"291\":1,\"364\":1,\"365\":1}}],[\"默认支持实例化\",{\"1\":{\"119\":1}}],[\"默认支持\",{\"1\":{\"116\":1}}],[\"默认启用\",{\"1\":{\"112\":1,\"225\":1,\"274\":1}}],[\"默认情况下禁用此设置\",{\"1\":{\"247\":1}}],[\"默认情况下\",{\"1\":{\"112\":1,\"119\":1,\"120\":1,\"148\":1,\"164\":1,\"179\":1,\"248\":2,\"275\":1,\"289\":1,\"292\":1,\"294\":1,\"300\":1}}],[\"默认值\",{\"1\":{\"104\":1}}],[\"默认都是兼容的\",{\"1\":{\"58\":1}}],[\"默认\",{\"1\":{\"49\":1,\"201\":2,\"359\":1}}],[\"让复杂的事务变得更加清晰\",{\"1\":{\"382\":1}}],[\"让我们看一个简单的着色器\",{\"1\":{\"136\":1}}],[\"让我们看看如何最好地使用这一功能\",{\"1\":{\"125\":1}}],[\"让多个物体共享同一个材质\",{\"1\":{\"64\":1,\"69\":1}}],[\"让一个ui元素在2秒内从透明渐变到不透明\",{\"1\":{\"60\":1}}],[\"让它们既能独立工作\",{\"1\":{\"56\":1}}],[\"让画面更平滑\",{\"1\":{\"55\":1}}],[\"让主线程继续工作\",{\"1\":{\"49\":1}}],[\"让lua具备代码提示等\",{\"1\":{\"19\":1}}],[\"依赖于\",{\"1\":{\"291\":1,\"371\":1}}],[\"依赖旧技术\",{\"1\":{\"50\":1}}],[\"依赖\",{\"1\":{\"49\":1,\"57\":1,\"60\":1,\"74\":1,\"339\":1,\"355\":1}}],[\"当开发者大量加载小内存\",{\"1\":{\"402\":1}}],[\"当有内存被回收的时候\",{\"1\":{\"401\":1}}],[\"当有一个内存很久没动的时候会移到长久内存区域中\",{\"1\":{\"401\":1}}],[\"当两个声道完全相同时可以\",{\"1\":{\"392\":1}}],[\"当全部\",{\"1\":{\"387\":1}}],[\"当这个页面程序出错时\",{\"1\":{\"381\":1}}],[\"当ui系统被实例化时\",{\"1\":{\"379\":1}}],[\"当填入数字时\",{\"1\":{\"365\":2}}],[\"当填充极大量的\",{\"1\":{\"168\":1}}],[\"当前我这一个版本里用到了哪些变量\",{\"1\":{\"394\":1}}],[\"当前架构能承受多少人同时访问\",{\"1\":{\"381\":1}}],[\"当前页面图标的\",{\"1\":{\"365\":1}}],[\"当前页面内容标题\",{\"1\":{\"365\":1}}],[\"当前这里只有一个配置文件\",{\"1\":{\"347\":1}}],[\"当前版本的\",{\"1\":{\"304\":1}}],[\"当勾选\",{\"1\":{\"300\":1}}],[\"当编译后的代码运行时\",{\"1\":{\"291\":1}}],[\"当从方法返回零长度数组时\",{\"1\":{\"287\":1}}],[\"当一个\",{\"1\":{\"399\":1}}],[\"当一个声音要播放的时候\",{\"1\":{\"392\":1}}],[\"当一个程序集引用第二个程序集\",{\"1\":{\"293\":1}}],[\"当一个类型使用另一个类型时\",{\"1\":{\"291\":1}}],[\"当一个值类型\",{\"1\":{\"284\":1}}],[\"当一个块满时\",{\"1\":{\"103\":1}}],[\"当闭包传递给\",{\"1\":{\"283\":1}}],[\"当抛射物被销毁时\",{\"1\":{\"279\":1}}],[\"当发射一个抛射物时\",{\"1\":{\"279\":1}}],[\"当脚本尝试在托管堆\",{\"1\":{\"274\":1}}],[\"当具有每帧回调的\",{\"1\":{\"267\":1}}],[\"当遇到文本数据解析所引起的性能问题时\",{\"1\":{\"254\":1}}],[\"当加载线程完成加载场景或资源时\",{\"1\":{\"222\":1}}],[\"当将\",{\"1\":{\"216\":1}}],[\"当多个光源触碰单个\",{\"1\":{\"215\":1}}],[\"当它们未自动启用时\",{\"1\":{\"214\":1}}],[\"当光照运行时处于最佳状态时\",{\"1\":{\"210\":1}}],[\"当布局系统中的子元素发生变化时\",{\"1\":{\"181\":1}}],[\"当设置\",{\"1\":{\"180\":1}}],[\"当使用子\",{\"1\":{\"178\":1}}],[\"当使用默认\",{\"1\":{\"151\":1}}],[\"当应用程序启动时\",{\"1\":{\"169\":1}}],[\"当字体资源由给定场景中的\",{\"1\":{\"169\":1}}],[\"当字形从\",{\"1\":{\"169\":1}}],[\"当触发字体图集重建时\",{\"1\":{\"168\":1}}],[\"当该单个\",{\"1\":{\"166\":1}}],[\"当启用\",{\"1\":{\"150\":1}}],[\"当与通过\",{\"1\":{\"150\":1}}],[\"当此脚本运行时\",{\"1\":{\"130\":1}}],[\"当我们看\",{\"1\":{\"391\":1}}],[\"当我们加载一个\",{\"1\":{\"390\":1}}],[\"当我们开发\",{\"1\":{\"127\":1}}],[\"当我们说\",{\"1\":{\"125\":1}}],[\"当检测到新材质时\",{\"1\":{\"126\":1}}],[\"当纹理位于同一图集中时\",{\"1\":{\"108\":1}}],[\"当您将匿名方法转换为闭包时\",{\"1\":{\"283\":1}}],[\"当您将场景视图调整到目标分辨率时\",{\"1\":{\"215\":1}}],[\"当您移除图形\",{\"1\":{\"244\":1}}],[\"当您预热变体集合时\",{\"1\":{\"242\":1}}],[\"当您在\",{\"1\":{\"231\":1}}],[\"当您在单线程渲染模式下运行以在主线程上执行所有内容时\",{\"1\":{\"228\":1}}],[\"当您在场景中使用许多活动相机时\",{\"1\":{\"213\":1}}],[\"当您想要动画的\",{\"1\":{\"218\":1}}],[\"当您启用多线程渲染时\",{\"1\":{\"225\":1}}],[\"当您启用\",{\"1\":{\"213\":1}}],[\"当您切换渲染目标时\",{\"1\":{\"212\":1}}],[\"当您有几个同名对象时\",{\"1\":{\"148\":1}}],[\"当您看到\",{\"1\":{\"130\":1}}],[\"当您声明实例化属性时\",{\"1\":{\"120\":1}}],[\"当您的应用程序以本机分辨率\",{\"1\":{\"230\":1}}],[\"当您的应用程序进入和退出任何代码范围时\",{\"1\":{\"96\":1}}],[\"当您的项目使用\",{\"1\":{\"118\":1}}],[\"当您这样做时\",{\"1\":{\"116\":1}}],[\"当您从\",{\"1\":{\"108\":1}}],[\"当您使用内置着色器时\",{\"1\":{\"236\":1}}],[\"当您使用用户无法移动的静态相机设置\",{\"1\":{\"218\":1}}],[\"当您使用光照探针\",{\"1\":{\"216\":1}}],[\"当您使用多个每实例属性时\",{\"1\":{\"118\":1}}],[\"当您使用运行时\",{\"1\":{\"109\":1}}],[\"当您使用\",{\"1\":{\"106\":1,\"112\":1,\"282\":1}}],[\"当您尽早优化绘制调用和渲染状态更改并将其保持在优化水平时\",{\"1\":{\"106\":1}}],[\"当您减少绘制调用的数量时\",{\"1\":{\"106\":1}}],[\"当您关闭\",{\"1\":{\"104\":1}}],[\"当分配器不再需要块中的内存时\",{\"1\":{\"103\":1}}],[\"当分配粒度为\",{\"1\":{\"100\":2}}],[\"当堆扩展时\",{\"1\":{\"97\":1}}],[\"当需要额外的数据值时\",{\"1\":{\"97\":1}}],[\"当需要时从池中取出\",{\"1\":{\"64\":1}}],[\"当对象引用发生变化时\",{\"1\":{\"275\":1}}],[\"当对象间引用在多个工作片段之间不发生变化时\",{\"1\":{\"275\":1}}],[\"当对象不再使用时\",{\"1\":{\"97\":1}}],[\"当对象被销毁时调用\",{\"1\":{\"62\":1}}],[\"当调用方法时\",{\"1\":{\"97\":1}}],[\"当计算结果在顶点之间可以平滑插值\",{\"1\":{\"76\":1}}],[\"当你确定你当前的\",{\"1\":{\"394\":1}}],[\"当你确认当前\",{\"1\":{\"394\":1}}],[\"当你修改你的\",{\"1\":{\"350\":1}}],[\"当你使用\",{\"1\":{\"307\":1}}],[\"当你在其中一个特殊文件夹内部或其上级文件夹中创建程序集定义资产时\",{\"1\":{\"307\":1}}],[\"当你为某个平台构建项目时\",{\"1\":{\"296\":1}}],[\"当你为\",{\"1\":{\"292\":1}}],[\"当你将代码集成到原生插件中时\",{\"1\":{\"200\":1}}],[\"当你重新启用它时\",{\"1\":{\"183\":1}}],[\"当你加载一个资源时\",{\"1\":{\"76\":1}}],[\"当你只加载m时\",{\"1\":{\"60\":1}}],[\"当渲染帧率\",{\"1\":{\"74\":1}}],[\"当渲染使用\",{\"1\":{\"58\":1}}],[\"当物理时间步长和渲染帧率不同时\",{\"1\":{\"74\":1}}],[\"当池满后\",{\"1\":{\"69\":1}}],[\"当闲置时间超过阈值时\",{\"1\":{\"69\":1}}],[\"当玩家\",{\"1\":{\"60\":1}}],[\"当\",{\"1\":{\"49\":1,\"56\":1,\"62\":2,\"67\":2,\"97\":1,\"112\":1,\"126\":1,\"134\":1,\"141\":1,\"146\":1,\"178\":3,\"272\":1,\"291\":1,\"371\":1,\"392\":2}}],[\"当数据结构很小\",{\"1\":{\"48\":1}}],[\"当赋值或传递时\",{\"1\":{\"48\":1}}],[\"当赋值或作为参数传递时\",{\"1\":{\"48\":1}}],[\"只把相同层级的元素\",{\"1\":{\"379\":1}}],[\"只用于内存管理\",{\"1\":{\"371\":1}}],[\"只提供了一个编译好的\",{\"1\":{\"291\":1}}],[\"只应在应用程序性能关键且能计算和控制内存分配的短暂时段禁用垃圾回收\",{\"1\":{\"276\":1}}],[\"只有此\",{\"1\":{\"388\":1}}],[\"只有销毁粒子系统时才会释放\",{\"1\":{\"266\":1}}],[\"只有在着色器之外操作纹理数据时\",{\"1\":{\"247\":1}}],[\"只有在你更改场景或调用\",{\"1\":{\"200\":1}}],[\"只\",{\"1\":{\"253\":1}}],[\"只加载所需的遮罩\",{\"1\":{\"218\":1}}],[\"只将手指放在一个遮罩中\",{\"1\":{\"218\":1}}],[\"只剔除相机使用的层上的\",{\"1\":{\"213\":1}}],[\"只会丢弃帧缓冲区\",{\"1\":{\"212\":1}}],[\"只会构建那些实际受到脚本更改影响的程序集\",{\"1\":{\"198\":1}}],[\"只会重新开始绘制它们\",{\"1\":{\"183\":1}}],[\"只支持\",{\"1\":{\"190\":2,\"394\":1}}],[\"只在总是变化的动态元素上使用\",{\"1\":{\"184\":1}}],[\"只在每帧开始时上传一次这个大缓冲区\",{\"1\":{\"58\":1}}],[\"只是嵌套在另一个\",{\"1\":{\"141\":1}}],[\"只是一系列\",{\"1\":{\"135\":1}}],[\"只需要在页面的\",{\"1\":{\"358\":1}}],[\"只需要在页面\",{\"1\":{\"358\":1}}],[\"只需要在批处理的四边形之前或之后绘制\",{\"1\":{\"149\":1}}],[\"只需在文章的\",{\"1\":{\"358\":2}}],[\"只需将\",{\"1\":{\"251\":1}}],[\"只需将脚本添加到场景中\",{\"1\":{\"130\":1}}],[\"只需小心禁用运行昂贵每帧代码的子组件\",{\"1\":{\"183\":1}}],[\"只需像这样声明所有\",{\"1\":{\"136\":1}}],[\"只需使用\",{\"1\":{\"128\":1}}],[\"只需告诉gpu一个偏移量\",{\"1\":{\"60\":1}}],[\"只处理内置引擎属性\",{\"1\":{\"127\":1}}],[\"只能有效地对基础通道使用实例化\",{\"1\":{\"120\":1}}],[\"只能批处理\",{\"1\":{\"110\":1}}],[\"只能使用此间隙来存储与已释放对象大小相同或更小的数据\",{\"1\":{\"97\":1}}],[\"只要不被释放\",{\"1\":{\"404\":1}}],[\"只要协程不被释放掉\",{\"1\":{\"404\":1}}],[\"只要改变模型顶点上的uv和颜色即可\",{\"1\":{\"379\":1}}],[\"只要对象不同时靠近相机\",{\"1\":{\"218\":1}}],[\"只要可能\",{\"1\":{\"168\":1}}],[\"只要当前没有可用的触摸输入\",{\"1\":{\"165\":1}}],[\"只要有一个不在\",{\"1\":{\"112\":1}}],[\"只要\",{\"1\":{\"75\":1,\"110\":1}}],[\"只卸载\",{\"1\":{\"70\":1}}],[\"只复制引用\",{\"1\":{\"48\":1}}],[\"只负责显示和接收输入\",{\"1\":{\"44\":1}}],[\"技术要点\",{\"0\":{\"370\":1}}],[\"技术经验\",{\"1\":{\"321\":1}}],[\"技术全景图\",{\"0\":{\"311\":1},\"1\":{\"310\":1}}],[\"技术时\",{\"1\":{\"127\":1}}],[\"技术领域\",{\"1\":{\"61\":1}}],[\"技术美术\",{\"0\":{\"318\":1},\"1\":{\"49\":1,\"58\":1}}],[\"技术上是按值传递引用\",{\"1\":{\"48\":1}}],[\"技能编辑器\",{\"1\":{\"383\":1}}],[\"技能系统\",{\"1\":{\"85\":1}}],[\"技能配置\",{\"1\":{\"75\":1}}],[\"技能\",{\"1\":{\"30\":1,\"87\":1}}],[\"按比例分摊的内存大小\",{\"1\":{\"388\":1}}],[\"按照范围\",{\"1\":{\"367\":1}}],[\"按照惯例\",{\"1\":{\"308\":1}}],[\"按照程序集的依赖关系确定的顺序来编译程序集\",{\"1\":{\"290\":1}}],[\"按钮的支持\",{\"1\":{\"364\":1}}],[\"按钮向列表添加一个条目\",{\"1\":{\"302\":1}}],[\"按钮向约束列表添加一个新符号\",{\"1\":{\"301\":1}}],[\"按钮添加一个新的引用\",{\"1\":{\"299\":1,\"300\":1}}],[\"按钮和按钮上一些文本的简单\",{\"1\":{\"159\":1}}],[\"按\",{\"0\":{\"257\":1}}],[\"按层剔除意味着\",{\"1\":{\"213\":1}}],[\"按其在层次结构中的深度对脏的\",{\"1\":{\"145\":1}}],[\"按此顺序\",{\"1\":{\"136\":1}}],[\"按行为分组\",{\"1\":{\"115\":1}}],[\"按以下顺序优先考虑绘制调用优化\",{\"1\":{\"106\":1}}],[\"按需异步加载\",{\"1\":{\"84\":1}}],[\"按需加载和资源分包\",{\"1\":{\"65\":1}}],[\"按时间步进的流程\",{\"1\":{\"80\":1}}],[\"按值复制的开销\",{\"1\":{\"48\":1}}],[\"按值传递\",{\"1\":{\"48\":1}}],[\"按引用传递\",{\"1\":{\"48\":1}}],[\"引入了所有物理查询\",{\"1\":{\"258\":1}}],[\"引入了采用其内置\",{\"1\":{\"254\":1}}],[\"引入静态代码分析工具\",{\"1\":{\"60\":1}}],[\"引用预编译的\",{\"0\":{\"300\":1}}],[\"引用另一个程序集\",{\"0\":{\"299\":1}}],[\"引用和依赖关系\",{\"0\":{\"291\":1}}],[\"引用了\",{\"1\":{\"289\":1}}],[\"引用了一个\",{\"1\":{\"60\":1}}],[\"引用这些对象直到操作完成\",{\"1\":{\"278\":1}}],[\"引用同一个实例\",{\"1\":{\"75\":1}}],[\"引用\",{\"1\":{\"63\":1,\"68\":1,\"97\":1,\"180\":1}}],[\"引用类型意味着\",{\"1\":{\"280\":1}}],[\"引用类型对象\",{\"1\":{\"97\":1}}],[\"引用类型是传递引用\",{\"1\":{\"63\":1,\"68\":1}}],[\"引用类型\",{\"1\":{\"48\":1,\"97\":1}}],[\"引擎管理的内存一般开发者是访问不到的\",{\"1\":{\"389\":1}}],[\"引擎\",{\"1\":{\"389\":1,\"391\":1}}],[\"引擎影视动画入门课程\",{\"1\":{\"321\":1}}],[\"引擎下载\",{\"1\":{\"313\":1}}],[\"引擎知识\",{\"0\":{\"313\":1}}],[\"引擎代码\",{\"1\":{\"205\":1}}],[\"引擎代码中的所有模块和类\",{\"1\":{\"193\":1}}],[\"引擎代码中未使用的模块和类\",{\"1\":{\"193\":1}}],[\"引擎代码剥离\",{\"1\":{\"190\":1}}],[\"引擎属性\",{\"1\":{\"112\":3}}],[\"引擎的内部\",{\"1\":{\"96\":1}}],[\"引擎与语言底层\",{\"0\":{\"76\":1}}],[\"引擎核心\",{\"0\":{\"67\":1}}],[\"引擎基础\",{\"1\":{\"66\":1}}],[\"引擎底层\",{\"1\":{\"60\":1}}],[\"引擎更强\",{\"1\":{\"57\":1}}],[\"引擎自动对共享相同\",{\"1\":{\"43\":1}}],[\"传输到每个瓦片的帧缓冲区部分\",{\"1\":{\"212\":1}}],[\"传入\",{\"1\":{\"93\":1}}],[\"传递给对象类型的方法时\",{\"1\":{\"284\":1}}],[\"传递给任何字符串比较方法\",{\"1\":{\"252\":1}}],[\"传递给\",{\"1\":{\"116\":1}}],[\"传递方式\",{\"1\":{\"63\":1,\"68\":1}}],[\"传递过来的插值数据\",{\"1\":{\"51\":1}}],[\"传递\",{\"1\":{\"48\":2}}],[\"传统上\",{\"1\":{\"135\":1}}],[\"传统的优化绘制调用的方法是减少它们的数量\",{\"1\":{\"112\":1}}],[\"传统的面向对象\",{\"1\":{\"46\":1}}],[\"传统合批是\",{\"1\":{\"60\":1}}],[\"传统\",{\"1\":{\"46\":1,\"75\":1}}],[\"上面\",{\"1\":{\"400\":1}}],[\"上面脚本的改进版本如下所示\",{\"1\":{\"280\":1}}],[\"上有一小块\",{\"1\":{\"387\":1}}],[\"上有过多的\",{\"1\":{\"152\":1}}],[\"上架流程\",{\"1\":{\"323\":1}}],[\"上篇\",{\"1\":{\"320\":1}}],[\"上图演示了如何将项目中的代码拆分成多个程序集\",{\"1\":{\"289\":1}}],[\"上图显示了内存碎片的示例\",{\"1\":{\"97\":1}}],[\"上分配内存但可用堆内存不足时\",{\"1\":{\"274\":1}}],[\"上调用\",{\"1\":{\"269\":1}}],[\"上调用菜单屏幕\",{\"1\":{\"215\":1}}],[\"上一部分介绍了适用于所有项目的优化\",{\"1\":{\"264\":1}}],[\"上运行的应用程序\",{\"1\":{\"233\":1}}],[\"上启用或禁用多线程渲染\",{\"1\":{\"225\":1}}],[\"上传\",{\"0\":{\"222\":1},\"1\":{\"222\":1}}],[\"上主要的纹理压缩格式\",{\"1\":{\"221\":1}}],[\"上效果很好\",{\"1\":{\"216\":1}}],[\"上每一新帧都使用\",{\"1\":{\"212\":1}}],[\"上执行不必要的清除\",{\"1\":{\"212\":1}}],[\"上正在运行的应用程序内存的信息\",{\"1\":{\"205\":1}}],[\"上转储系统内存\",{\"1\":{\"205\":1}}],[\"上测量内存消耗的能力\",{\"1\":{\"204\":1}}],[\"上关于\",{\"1\":{\"202\":1}}],[\"上位于\",{\"1\":{\"199\":2}}],[\"上受支持\",{\"1\":{\"193\":1}}],[\"上使用本机分析器分析内存时比较内存统计信息\",{\"1\":{\"233\":1}}],[\"上使用\",{\"1\":{\"184\":1,\"212\":1,\"221\":3,\"231\":1,\"234\":1,\"257\":1}}],[\"上留空\",{\"1\":{\"180\":1}}],[\"上所有对输入感兴趣的\",{\"1\":{\"179\":1}}],[\"上所做的工作可能比绘制调用的开销更大\",{\"1\":{\"110\":1}}],[\"上述\",{\"1\":{\"169\":1}}],[\"上来细分\",{\"1\":{\"163\":1}}],[\"上元素数量的增加\",{\"1\":{\"161\":1}}],[\"上可绘制\",{\"1\":{\"161\":1}}],[\"上可绘制的\",{\"1\":{\"161\":1}}],[\"上绘制\",{\"1\":{\"152\":1}}],[\"上对\",{\"1\":{\"150\":1}}],[\"上找到\",{\"1\":{\"144\":1}}],[\"上下文中\",{\"1\":{\"135\":2}}],[\"上下文中的\",{\"1\":{\"135\":1}}],[\"上花费一些时间是正常的\",{\"1\":{\"134\":1}}],[\"上加速约为\",{\"1\":{\"125\":1}}],[\"上设置的\",{\"1\":{\"120\":1}}],[\"上而不是\",{\"1\":{\"110\":1}}],[\"上变换所有顶点来工作\",{\"1\":{\"110\":1}}],[\"上变换顶点\",{\"1\":{\"109\":1}}],[\"上变换它们的顶点\",{\"1\":{\"108\":1}}],[\"上变换网格顶点\",{\"1\":{\"106\":1}}],[\"上吗\",{\"1\":{\"60\":1}}],[\"上的节点层级\",{\"1\":{\"379\":1}}],[\"上的元素\",{\"1\":{\"379\":1}}],[\"上的元素发生变化时\",{\"1\":{\"178\":2}}],[\"上的工作方式有所不同\",{\"1\":{\"274\":1}}],[\"上的纹理采样性能变差\",{\"1\":{\"247\":1}}],[\"上的可用性\",{\"1\":{\"228\":1}}],[\"上的调用堆栈中找到\",{\"1\":{\"225\":1}}],[\"上的包涵盖了审计过程的许多方面\",{\"1\":{\"220\":1}}],[\"上的分页\",{\"0\":{\"203\":1}}],[\"上的原生代码剥离\",{\"1\":{\"193\":1}}],[\"上的每个可绘制\",{\"1\":{\"161\":1}}],[\"上的任何可绘制\",{\"1\":{\"161\":1}}],[\"上的加速几乎相同\",{\"1\":{\"132\":1}}],[\"上的内部设置\",{\"1\":{\"106\":1}}],[\"上的内存由多个进程共享\",{\"1\":{\"202\":1}}],[\"上的内存\",{\"1\":{\"42\":1}}],[\"上的说明进行操作\",{\"1\":{\"98\":1,\"104\":1}}],[\"上的\",{\"1\":{\"60\":1,\"131\":1,\"134\":1,\"152\":1,\"166\":1,\"173\":2,\"174\":1,\"208\":2,\"221\":1}}],[\"上的反例\",{\"1\":{\"60\":1}}],[\"上的耗时\",{\"1\":{\"58\":1}}],[\"上的小程序\",{\"1\":{\"51\":1}}],[\"上\",{\"1\":{\"48\":2,\"63\":2,\"65\":1,\"68\":2,\"110\":1,\"134\":1,\"151\":1,\"163\":4,\"173\":1,\"174\":1,\"190\":1,\"201\":2,\"205\":2,\"208\":1,\"212\":2,\"221\":3,\"232\":1,\"234\":1,\"246\":1,\"254\":1,\"387\":1,\"388\":1,\"391\":1}}],[\"变更引用\",{\"1\":{\"275\":1}}],[\"变换操作\",{\"1\":{\"270\":1}}],[\"变换位置和缩放\",{\"1\":{\"161\":1}}],[\"变化的子元素会使拥有它的\",{\"1\":{\"181\":1}}],[\"变体将无法编译\",{\"1\":{\"118\":1}}],[\"变成粉色\",{\"1\":{\"70\":1}}],[\"变量传递到闭包中\",{\"1\":{\"283\":1}}],[\"变量的每个引用都替换为其值\",{\"1\":{\"272\":1}}],[\"变量的引用将替换为其值\",{\"1\":{\"272\":1}}],[\"变量都能使用\",{\"1\":{\"136\":1}}],[\"变量\",{\"1\":{\"136\":2,\"272\":2}}],[\"变量和函数\",{\"1\":{\"118\":1}}],[\"变量本身\",{\"1\":{\"63\":1,\"68\":1}}],[\"变量本身直接存储数据\",{\"1\":{\"48\":1}}],[\"变量存储的是一个指向数据实际位置的引用\",{\"1\":{\"48\":1}}],[\"变乱\",{\"1\":{\"19\":1}}],[\"以此决定要终止的进程\",{\"1\":{\"388\":1}}],[\"以此类推\",{\"1\":{\"258\":1}}],[\"以达到更少的性能开销目的\",{\"1\":{\"379\":1}}],[\"以提高执行效率\",{\"1\":{\"371\":1}}],[\"以将这些脚本放入一个或多个\",{\"1\":{\"307\":1}}],[\"以表示表达式包含该版本或更高版本\",{\"1\":{\"303\":1}}],[\"以收集一组数据点\",{\"1\":{\"282\":1}}],[\"以在引用变更时通知垃圾回收器\",{\"1\":{\"275\":1}}],[\"以在单线程渲染模式下查看在主线程上执行的整个渲染队列\",{\"1\":{\"228\":1}}],[\"以外的值\",{\"1\":{\"275\":1}}],[\"以增量模式运行\",{\"1\":{\"275\":1}}],[\"以进一步节省内存消耗和构建的项目大小\",{\"1\":{\"249\":1}}],[\"以进行性能基准测试\",{\"1\":{\"128\":1}}],[\"以获取变体的代码\",{\"1\":{\"241\":1}}],[\"以获得以字节\",{\"1\":{\"233\":1}}],[\"以获得适度的额外内存节省\",{\"1\":{\"169\":1}}],[\"以位为单位\",{\"1\":{\"233\":1}}],[\"以避免产生垃圾\",{\"1\":{\"279\":1}}],[\"以避免占用全局关键字\",{\"1\":{\"240\":1}}],[\"以避免在片段着色器中计算高光\",{\"1\":{\"217\":1}}],[\"以避免帧缓冲区恢复\",{\"1\":{\"212\":1}}],[\"以防止\",{\"1\":{\"216\":1}}],[\"以最大程度地减少过度绘制\",{\"1\":{\"215\":1}}],[\"以最小化\",{\"1\":{\"74\":1}}],[\"以从后到前的顺序渲染透明队列中的对象\",{\"1\":{\"215\":1}}],[\"以从后到前的顺序渲染网格\",{\"1\":{\"108\":1}}],[\"以从前到后的顺序渲染\",{\"1\":{\"215\":1}}],[\"以节省调用属性的\",{\"1\":{\"285\":1}}],[\"以节省渲染性能\",{\"1\":{\"213\":1}}],[\"以节省运行时内存和磁盘空间\",{\"1\":{\"201\":1}}],[\"以节省运行时内存\",{\"1\":{\"201\":1}}],[\"以了解有关减小代码大小的更多信息\",{\"1\":{\"208\":1}}],[\"以简单的字符串表示形式获取系统信息\",{\"1\":{\"205\":1}}],[\"以销毁和卸载与场景关联的\",{\"1\":{\"200\":1}}],[\"以保证内存以最大效率被重复利用\",{\"1\":{\"402\":1}}],[\"以保证物理模拟的稳定性\",{\"1\":{\"62\":1,\"67\":1}}],[\"以保持填充率较低\",{\"1\":{\"215\":1}}],[\"以保留原生\",{\"1\":{\"193\":1}}],[\"以移除原生\",{\"1\":{\"193\":1}}],[\"以减小代码大小\",{\"1\":{\"190\":1}}],[\"以减少\",{\"1\":{\"110\":1}}],[\"以减少渲染状态更改数量的方式组织绘制调用\",{\"1\":{\"106\":1}}],[\"以便读取\",{\"1\":{\"394\":1}}],[\"以便定义此符号\",{\"1\":{\"302\":1}}],[\"以便它可以传递给\",{\"1\":{\"284\":1}}],[\"以便它们不干扰应用程序的分配模式\",{\"1\":{\"104\":1}}],[\"以便闭包的代码可以使用它\",{\"1\":{\"283\":1}}],[\"以便仅在分数更改时才更新文本\",{\"1\":{\"280\":1}}],[\"以便将其传递给加法运算\",{\"1\":{\"271\":1}}],[\"以便应用程序的整个生命周期使用\",{\"1\":{\"243\":1}}],[\"以便您的用户如果想节省电池寿命可以降低分辨率\",{\"1\":{\"233\":1}}],[\"以便在任何公开可用的平台上分析和优化内存消耗\",{\"1\":{\"187\":1}}],[\"以错误的方式使用\",{\"1\":{\"182\":1}}],[\"以\",{\"1\":{\"180\":1,\"360\":1}}],[\"以判断是否有物理对象阻挡用户与\",{\"1\":{\"179\":1}}],[\"以至于分配只在\",{\"1\":{\"200\":1}}],[\"以至于在低端设备上会明显降低帧率\",{\"1\":{\"170\":1}}],[\"以至于全局帧速率提高了五倍\",{\"1\":{\"137\":1}}],[\"以模块化方式加载字体资源的潜在策略\",{\"1\":{\"169\":1}}],[\"以添加视觉样式\",{\"1\":{\"169\":1}}],[\"以相同大小重建图集\",{\"1\":{\"168\":1}}],[\"以查看报告中的数据\",{\"1\":{\"199\":1}}],[\"以查看它们是否实现了\",{\"1\":{\"166\":1}}],[\"以查看不同情况下的加速效果\",{\"1\":{\"132\":1}}],[\"以确保\",{\"1\":{\"169\":1}}],[\"以确保所有所需字符保持初始化状态\",{\"1\":{\"168\":1}}],[\"以确保这些引用的状态是最新的\",{\"1\":{\"97\":1}}],[\"以确定是否需要发送任何悬停事件\",{\"1\":{\"165\":1}}],[\"以包装您希望每个实例唯一的属性的声明\",{\"1\":{\"118\":2}}],[\"以启用或禁用\",{\"1\":{\"112\":1}}],[\"以对所有它们启用静态批处理\",{\"1\":{\"109\":1}}],[\"以下脚本使用\",{\"1\":{\"309\":1}}],[\"以下表达式包含\",{\"1\":{\"305\":1}}],[\"以下表达式包含任何\",{\"1\":{\"304\":1}}],[\"以下代码示例将前面的示例转换为无分配的\",{\"1\":{\"285\":1}}],[\"以下代码示例演示了这一点\",{\"1\":{\"282\":1}}],[\"以下代码不必要地为每个循环迭代创建四个顶点数组的副本\",{\"1\":{\"285\":1}}],[\"以下\",{\"1\":{\"275\":1,\"308\":1}}],[\"以下命令将提供系统内存的快速概述\",{\"1\":{\"205\":1}}],[\"以下命令列出了\",{\"1\":{\"205\":1}}],[\"以下小节描述了缓冲区及其行为\",{\"1\":{\"200\":1}}],[\"以下示例定义了符号\",{\"1\":{\"302\":1}}],[\"以下示例代码展示了一个每次调用时都会创建一个数组的方法示例\",{\"1\":{\"281\":1}}],[\"以下示例代码为无害的单行代码\",{\"1\":{\"253\":1}}],[\"以下示例在每次调用\",{\"1\":{\"280\":1}}],[\"以下示例演示如何使用\",{\"1\":{\"123\":1}}],[\"以下示例演示如何创建具有每个实例不同颜色值的实例化\",{\"1\":{\"121\":1,\"122\":1}}],[\"以下示例配置演示了为分配保留块的过程\",{\"1\":{\"100\":1}}],[\"以下渲染器动态生成几何体\",{\"1\":{\"110\":1}}],[\"以下使用信息与静态和动态批处理都相关\",{\"1\":{\"108\":1}}],[\"以下是较为通用的资源规则\",{\"1\":{\"246\":1}}],[\"以下是描述\",{\"1\":{\"136\":1}}],[\"以下是\",{\"1\":{\"132\":1}}],[\"以下是可能被问到的问题以及相应的回答思路\",{\"1\":{\"77\":1}}],[\"以下是一些可能遇到的高级面试题\",{\"1\":{\"40\":1}}],[\"以充分利用您拥有的内存\",{\"1\":{\"97\":1}}],[\"以释放资源\",{\"1\":{\"69\":1}}],[\"以免导致帧率下降\",{\"1\":{\"62\":1}}],[\"以固定时间步长调用\",{\"1\":{\"60\":1}}],[\"以及目前\",{\"1\":{\"400\":1}}],[\"以及状态机或行为树接口的实现\",{\"1\":{\"383\":1}}],[\"以及状态同步和帧同步的区别与应用场景\",{\"1\":{\"71\":1}}],[\"以及相同层级上的拥有相同材质球参数的进行合并处理\",{\"1\":{\"379\":1}}],[\"以及少许整张的图集\",{\"1\":{\"379\":1}}],[\"以及所有支持程序集定义的版本\",{\"1\":{\"304\":1}}],[\"以及标准的\",{\"1\":{\"254\":1}}],[\"以及它们之间的比较\",{\"1\":{\"210\":1}}],[\"以及它核心的\",{\"1\":{\"75\":1}}],[\"以及在以下领域减少\",{\"1\":{\"210\":1}}],[\"以及内存在不同平台上的行为方式\",{\"1\":{\"187\":1}}],[\"以及更多装饰元素分层到背景上\",{\"1\":{\"159\":1}}],[\"以及详细的绘制调用和着色器分析\",{\"1\":{\"147\":1}}],[\"以及可能的大小\",{\"1\":{\"145\":1}}],[\"以及一些不适合其他地方的技巧\",{\"1\":{\"139\":1}}],[\"以及一个由所有其他线程共享的分配器\",{\"1\":{\"101\":1}}],[\"以及常见问题和解决方案\",{\"1\":{\"138\":1,\"139\":1}}],[\"以及运行\",{\"1\":{\"96\":1}}],[\"以及不同方案的优劣权衡\",{\"1\":{\"92\":1}}],[\"以及作为高级开发者应该给出的答案要点\",{\"1\":{\"73\":1}}],[\"以及检查状态转换条件的方法\",{\"1\":{\"70\":1}}],[\"以及\",{\"1\":{\"56\":1,\"58\":1,\"96\":1,\"112\":1,\"308\":1}}],[\"以及使用\",{\"1\":{\"55\":1}}],[\"以及自定义的\",{\"1\":{\"48\":2}}],[\"长期\",{\"1\":{\"189\":1}}],[\"长期存在的\",{\"1\":{\"98\":1}}],[\"长度\",{\"1\":{\"135\":1}}],[\"长\",{\"1\":{\"47\":1,\"190\":1}}],[\"比实际值大\",{\"1\":{\"205\":1}}],[\"比较\",{\"0\":{\"259\":1},\"1\":{\"259\":1}}],[\"比较进程之间的\",{\"1\":{\"205\":1}}],[\"比较启用和禁用动态批处理的情况\",{\"1\":{\"110\":1}}],[\"比例集大小\",{\"1\":{\"205\":2}}],[\"比使用多个材质更快\",{\"1\":{\"108\":1}}],[\"比如某些插件不提供源码\",{\"1\":{\"291\":1}}],[\"比如使用\",{\"1\":{\"85\":1}}],[\"比如复杂的寻路算法\",{\"1\":{\"57\":1}}],[\"比如一个\",{\"1\":{\"56\":1,\"127\":1,\"389\":1}}],[\"比如\",{\"1\":{\"56\":1,\"60\":1,\"66\":1,\"263\":1}}],[\"比\",{\"1\":{\"47\":1,\"221\":1}}],[\"尤其是存在垃圾回收峰值的项目\",{\"1\":{\"275\":1}}],[\"尤其是对\",{\"1\":{\"76\":1}}],[\"尤其是\",{\"1\":{\"47\":1}}],[\"尤其是在逐帧执行的代码中使用匿名方法和方法引用\",{\"1\":{\"283\":1}}],[\"尤其是在附加了其他组件\",{\"1\":{\"248\":1}}],[\"尤其是在高分辨率显示器上\",{\"1\":{\"230\":1}}],[\"尤其是在同时启用多个相机时\",{\"1\":{\"213\":1}}],[\"尤其是在分配大量托管内存时\",{\"1\":{\"189\":1}}],[\"尤其是在将\",{\"1\":{\"163\":1}}],[\"尤其是在移动设备上\",{\"1\":{\"200\":1,\"217\":1}}],[\"尤其是在移动\",{\"1\":{\"143\":1}}],[\"尤其是在加载期间\",{\"1\":{\"103\":1}}],[\"尤其是在\",{\"1\":{\"41\":1,\"203\":1,\"287\":1}}],[\"跨平台的\",{\"1\":{\"371\":1}}],[\"跨平台的视频库\",{\"1\":{\"19\":1}}],[\"跨平台\",{\"1\":{\"47\":1,\"50\":1}}],[\"高川\",{\"0\":{\"386\":1},\"1\":{\"384\":2}}],[\"高清渲染\",{\"1\":{\"318\":1,\"319\":1}}],[\"高清渲染管线\",{\"1\":{\"108\":1,\"109\":1,\"110\":1,\"112\":2,\"114\":1,\"118\":1,\"128\":1}}],[\"高质量\",{\"1\":{\"218\":1}}],[\"高质量的\",{\"1\":{\"201\":1}}],[\"高端移动设备\",{\"1\":{\"217\":1,\"236\":1}}],[\"高内存压力\",{\"1\":{\"204\":1}}],[\"高效地存储用户数据\",{\"1\":{\"88\":1}}],[\"高通常是\",{\"1\":{\"74\":1}}],[\"高\",{\"1\":{\"55\":1,\"151\":2}}],[\"高性能\",{\"1\":{\"47\":1}}],[\"高级编程\",{\"0\":{\"375\":1}}],[\"高级渲染\",{\"0\":{\"333\":1}}],[\"高级着色语言\",{\"1\":{\"330\":1}}],[\"高级与实战经验\",{\"0\":{\"89\":1}}],[\"高级点\",{\"1\":{\"79\":1}}],[\"高级答案要点\",{\"1\":{\"74\":1,\"75\":1,\"76\":1,\"77\":1}}],[\"高级面试宝典\",{\"1\":{\"73\":1}}],[\"高级职位的面试会着重考察你的系统架构能力\",{\"1\":{\"73\":1}}],[\"高级岗位可能涉及\",{\"1\":{\"71\":1}}],[\"高级优化包括\",{\"1\":{\"69\":1}}],[\"高级候选人应能清晰地分析这三者的性能\",{\"1\":{\"60\":1}}],[\"高级开发不仅要自己写好代码\",{\"1\":{\"60\":1}}],[\"高级开发不仅意味着能独立完成任务\",{\"1\":{\"60\":1}}],[\"高级开发者应理解这种隐式依赖\",{\"1\":{\"60\":1}}],[\"高级开发者必须澄清\",{\"1\":{\"60\":1}}],[\"高级开发必须深入理解语言和引擎的\",{\"1\":{\"57\":1}}],[\"高级开发要为项目的可维护性和扩展性负责\",{\"1\":{\"56\":1}}],[\"高级开发需要能和\",{\"1\":{\"58\":1}}],[\"高级开发需要理解渲染管线\",{\"1\":{\"49\":1}}],[\"高级开发需要具备搭建大型\",{\"1\":{\"43\":1}}],[\"高级\",{\"0\":{\"73\":1},\"1\":{\"53\":1,\"54\":1,\"74\":1,\"313\":1,\"318\":1}}],[\"高级应用\",{\"1\":{\"48\":1,\"75\":1}}],[\"高级特性的理解\",{\"1\":{\"46\":1}}],[\"高级游戏客户端开发的你\",{\"1\":{\"66\":1}}],[\"高级游戏客户端开发\",{\"1\":{\"40\":1}}],[\"主程手记\",{\"0\":{\"375\":1}}],[\"主程手记记录摘要\",{\"1\":{\"374\":1}}],[\"主题同时根据侧边栏配置提供上一页和下一页的导航按钮\",{\"1\":{\"364\":1}}],[\"主题通过\",{\"1\":{\"364\":1}}],[\"主题设置的配置项\",{\"1\":{\"363\":1}}],[\"主题官网文档侧边栏\",{\"1\":{\"361\":1}}],[\"主题官网文档导航栏\",{\"1\":{\"360\":1}}],[\"主题支持直接使用\",{\"1\":{\"359\":1}}],[\"主题按照上述规则默认自动生成摘要\",{\"1\":{\"358\":1}}],[\"主题\",{\"0\":{\"353\":1}}],[\"主摄像机的视锥体附近\",{\"1\":{\"270\":1}}],[\"主渲染线程栈大小\",{\"1\":{\"104\":1}}],[\"主线程不会有峰值\",{\"1\":{\"401\":1}}],[\"主线程被迫要停下来\",{\"1\":{\"401\":1}}],[\"主线程和图形线程的优先级都是\",{\"1\":{\"269\":1}}],[\"主线程栈的初始大小\",{\"1\":{\"104\":1}}],[\"主线程块大小main\",{\"1\":{\"104\":3}}],[\"主线程必须删除它进行的任何分配\",{\"1\":{\"101\":1}}],[\"主分配器main\",{\"1\":{\"104\":1}}],[\"主分配器\",{\"1\":{\"101\":1}}],[\"主要精力放在\",{\"1\":{\"400\":1}}],[\"主要为了跨平台\",{\"1\":{\"389\":1}}],[\"主要包括\",{\"1\":{\"205\":1}}],[\"主要重新批处理脏元素\",{\"1\":{\"163\":1}}],[\"主要有两个原因\",{\"1\":{\"161\":1}}],[\"主要关注以下方法的成本\",{\"1\":{\"150\":1}}],[\"主要任务是找到观察到的性能问题的确切原因\",{\"1\":{\"139\":1}}],[\"主要是图形\",{\"1\":{\"110\":1}}],[\"主要是它提高了帧时间\",{\"1\":{\"106\":1}}],[\"主要部分的块大小\",{\"1\":{\"104\":1}}],[\"主要用于\",{\"1\":{\"104\":1}}],[\"主要用于物理计算\",{\"1\":{\"62\":1,\"67\":1}}],[\"主要分配器main\",{\"1\":{\"104\":1}}],[\"主要分配器\",{\"1\":{\"98\":3}}],[\"主要职责是计算最终的颜色\",{\"1\":{\"76\":1}}],[\"主要职责是进行坐标变换\",{\"1\":{\"76\":1}}],[\"主要使用单通道前向渲染\",{\"1\":{\"50\":1}}],[\"主机\",{\"1\":{\"47\":1}}],[\"主页\",{\"0\":{\"0\":1}}],[\"且自定义通用组件基类和各类通用组件\",{\"1\":{\"383\":1}}],[\"且\",{\"1\":{\"307\":1}}],[\"且没有任何撕裂\",{\"1\":{\"230\":1}}],[\"且该元素被标记为可交互\",{\"1\":{\"179\":1}}],[\"且不需要逐像素精度时\",{\"1\":{\"76\":1}}],[\"且不方便策划配置\",{\"1\":{\"60\":1}}],[\"且数据规整\",{\"1\":{\"75\":1}}],[\"且数据布局规整\",{\"1\":{\"46\":1}}],[\"且在跨场景\",{\"1\":{\"75\":1}}],[\"且在某些平台\",{\"1\":{\"47\":1}}],[\"且依然存在耦合\",{\"1\":{\"60\":1}}],[\"且希望按值复制时\",{\"1\":{\"48\":1}}],[\"缺点\",{\"1\":{\"47\":2,\"49\":1,\"50\":1,\"75\":2}}],[\"缺点是增加内存占用\",{\"1\":{\"43\":1}}],[\"优于\",{\"1\":{\"127\":1}}],[\"优先于\",{\"1\":{\"114\":1}}],[\"优先级\",{\"1\":{\"106\":1}}],[\"优先使用\",{\"1\":{\"57\":1}}],[\"优先使用协程\",{\"1\":{\"57\":1}}],[\"优秀的问题解决能力和系统架构思维\",{\"1\":{\"77\":1}}],[\"优势\",{\"1\":{\"76\":1,\"84\":1,\"90\":1}}],[\"优点\",{\"1\":{\"47\":2,\"75\":2}}],[\"优化方式\",{\"1\":{\"256\":1}}],[\"优化方法\",{\"1\":{\"64\":1,\"69\":1,\"108\":1,\"113\":1}}],[\"优化之前对其应用程序进行性能分析\",{\"1\":{\"256\":1}}],[\"优化着色器加载时间\",{\"1\":{\"242\":1}}],[\"优化的详细信息\",{\"1\":{\"208\":1}}],[\"优化部分从\",{\"1\":{\"177\":1,\"185\":1}}],[\"优化建议\",{\"0\":{\"177\":1}}],[\"优化技术和技巧\",{\"0\":{\"171\":1}}],[\"优化任何\",{\"1\":{\"139\":1}}],[\"优化指南\",{\"0\":{\"139\":1}}],[\"优化基于\",{\"1\":{\"138\":1,\"139\":1}}],[\"优化绘制调用和渲染状态更改对您的应用程序有许多好处\",{\"1\":{\"106\":1}}],[\"优化渲染状态更改的主要方法是减少它们的数量\",{\"1\":{\"106\":1}}],[\"优化策略\",{\"1\":{\"61\":1,\"66\":1}}],[\"优化深度\",{\"1\":{\"53\":1}}],[\"优化粒子\",{\"1\":{\"41\":1}}],[\"优化\",{\"0\":{\"106\":1,\"124\":1,\"138\":1,\"167\":1,\"209\":1,\"317\":1},\"1\":{\"41\":2,\"42\":1,\"61\":1,\"66\":1,\"70\":1,\"74\":2,\"83\":3,\"90\":1,\"112\":1,\"139\":1,\"215\":1,\"317\":1}}],[\"优化物理检测\",{\"1\":{\"41\":1}}],[\"优化循环\",{\"1\":{\"41\":1}}],[\"优化图形渲染\",{\"1\":{\"22\":1}}],[\"多少兆\",{\"1\":{\"390\":1}}],[\"多传入一个参数\",{\"1\":{\"377\":1}}],[\"多国语言\",{\"1\":{\"377\":1}}],[\"多语言表设计\",{\"1\":{\"377\":1}}],[\"多语言\",{\"0\":{\"377\":1}}],[\"多面体裁剪\",{\"1\":{\"329\":1}}],[\"多边形裁剪\",{\"1\":{\"329\":1}}],[\"多边形计算\",{\"1\":{\"323\":1}}],[\"多人联机\",{\"1\":{\"314\":1}}],[\"多维数组\",{\"0\":{\"265\":1},\"1\":{\"265\":1}}],[\"多通道着色器\",{\"1\":{\"236\":1}}],[\"多通道\",{\"1\":{\"236\":1}}],[\"多客户端\",{\"0\":{\"227\":1,\"228\":1}}],[\"多次绘制的\",{\"1\":{\"215\":1}}],[\"多核和内存架构提升性能\",{\"1\":{\"75\":1}}],[\"多线程会不会有\",{\"1\":{\"400\":1}}],[\"多线程渲染\",{\"0\":{\"223\":1,\"225\":1},\"1\":{\"210\":1,\"223\":1,\"225\":1}}],[\"多线程优化\",{\"1\":{\"75\":1}}],[\"多线程知识\",{\"1\":{\"60\":1}}],[\"多线程\",{\"1\":{\"46\":1}}],[\"多个单行\",{\"1\":{\"367\":1}}],[\"多个侧边栏\",{\"1\":{\"361\":1}}],[\"多个本机命令生成线程利用支持在多个线程上以本机格式记录图形命令\",{\"1\":{\"228\":1}}],[\"多个作业\",{\"1\":{\"227\":1}}],[\"多个相机\",{\"1\":{\"213\":1}}],[\"多个箱子可以使用具有不同纹理的材质\",{\"1\":{\"110\":1}}],[\"多个系统\",{\"1\":{\"56\":1}}],[\"多个\",{\"1\":{\"45\":1,\"75\":1}}],[\"性能测试工具\",{\"1\":{\"404\":1}}],[\"性能热点\",{\"1\":{\"285\":1}}],[\"性能上最大的节约来自于消除很少执行的回调\",{\"1\":{\"267\":1}}],[\"性能注意事项\",{\"1\":{\"225\":1}}],[\"性能指南\",{\"1\":{\"205\":1}}],[\"性能限制时才使用\",{\"1\":{\"201\":1}}],[\"性能显著提高\",{\"1\":{\"163\":1}}],[\"性能良好的\",{\"1\":{\"163\":1}}],[\"性能的最佳实践技巧\",{\"1\":{\"177\":1}}],[\"性能的最有效方法之一\",{\"1\":{\"148\":1}}],[\"性能的建议\",{\"1\":{\"171\":1}}],[\"性能的差异\",{\"1\":{\"148\":1}}],[\"性能分析工具\",{\"0\":{\"147\":1},\"1\":{\"139\":1}}],[\"性能分析的艺术\",{\"0\":{\"130\":1}}],[\"性能差异如此之大\",{\"1\":{\"137\":1}}],[\"性能影响不高\",{\"1\":{\"285\":1}}],[\"性能影响\",{\"0\":{\"117\":1},\"1\":{\"109\":2}}],[\"性能高\",{\"1\":{\"88\":1}}],[\"性能权衡\",{\"1\":{\"76\":1}}],[\"性能优劣差距很多时候都会出现在这里\",{\"1\":{\"379\":1}}],[\"性能优势\",{\"1\":{\"76\":1}}],[\"性能优化与架构设计\",{\"0\":{\"82\":1},\"1\":{\"92\":1}}],[\"性能优化与诊断\",{\"0\":{\"74\":1}}],[\"性能优化与实践\",{\"0\":{\"64\":1,\"69\":1}}],[\"性能优化\",{\"0\":{\"40\":1,\"55\":1},\"1\":{\"40\":1,\"50\":1,\"61\":1,\"66\":1,\"77\":1}}],[\"性能略低于原生\",{\"1\":{\"75\":1}}],[\"性能极高\",{\"1\":{\"75\":1}}],[\"性能开发规范\",{\"1\":{\"60\":1}}],[\"性能最高\",{\"1\":{\"60\":1}}],[\"性能最佳实践\",{\"1\":{\"59\":1}}],[\"性能攻坚经验\",{\"1\":{\"73\":1}}],[\"性能攻坚\",{\"1\":{\"60\":1}}],[\"性能攻坚的系统性思维\",{\"0\":{\"60\":1}}],[\"性能\",{\"1\":{\"46\":1,\"48\":1,\"50\":1,\"51\":1,\"53\":1,\"151\":1,\"201\":1}}],[\"谈谈你对\",{\"0\":{\"46\":1},\"1\":{\"75\":1}}],[\"用的时候生产一个\",{\"1\":{\"404\":1}}],[\"用到\",{\"1\":{\"392\":1}}],[\"用变量的形式去记录文字的\",{\"1\":{\"377\":1}}],[\"用值填充数组然后返回它的方法可能很方便\",{\"1\":{\"281\":1}}],[\"用表示所有滚动视图内容所需的所有元素填充它\",{\"1\":{\"170\":1}}],[\"用一组适当的字符初始化字体的字形图集\",{\"1\":{\"168\":1}}],[\"用一个网格绑定一个材质球\",{\"1\":{\"379\":1}}],[\"用一个字符串去获取另一个字符串\",{\"1\":{\"377\":1}}],[\"用一个\",{\"1\":{\"64\":1,\"69\":1}}],[\"用户分配的\",{\"1\":{\"389\":1}}],[\"用户代码会转换为\",{\"1\":{\"389\":1}}],[\"用户界面\",{\"0\":{\"378\":1}}],[\"用户程序集是\",{\"1\":{\"196\":1}}],[\"用户程序集\",{\"1\":{\"196\":1}}],[\"用户通常会遇到四类问题\",{\"1\":{\"139\":1}}],[\"用户可以跳过此部分\",{\"1\":{\"136\":1}}],[\"用户无法访问此内存\",{\"1\":{\"96\":1}}],[\"用户手册\",{\"1\":{\"19\":1}}],[\"用协程最直观\",{\"1\":{\"57\":1}}],[\"用\",{\"1\":{\"55\":1,\"75\":1,\"92\":1,\"152\":1}}],[\"用于底层系统在处理解压缩和加载数据时\",{\"1\":{\"269\":1}}],[\"用于寻址属性\",{\"1\":{\"257\":1}}],[\"用于一些具有重新映射能力的\",{\"1\":{\"205\":1}}],[\"用于在重新计算布局之前对脏的\",{\"1\":{\"150\":1}}],[\"用于提供分层几何体\",{\"1\":{\"141\":1}}],[\"用于标准代码路径\",{\"1\":{\"132\":1}}],[\"用于实例的选项\",{\"1\":{\"118\":1}}],[\"用于所有每对象属性\",{\"1\":{\"112\":1}}],[\"用于线程之间共享的短生命周期分配的快速线性分配器\",{\"1\":{\"104\":1}}],[\"用于桶的内存块大小\",{\"1\":{\"104\":2}}],[\"用于与\",{\"1\":{\"104\":1}}],[\"用于大多数分配的主要分配器\",{\"1\":{\"104\":1}}],[\"用于大多数分配的分配器\",{\"1\":{\"104\":1}}],[\"用于快速\",{\"1\":{\"103\":1}}],[\"用于执行小型分配\",{\"1\":{\"100\":1}}],[\"用于将数据传递给\",{\"1\":{\"98\":1}}],[\"用于\",{\"1\":{\"98\":1}}],[\"用于运行引擎的\",{\"1\":{\"96\":1}}],[\"用于相同\",{\"1\":{\"83\":1}}],[\"用于频繁创建和销毁的物体\",{\"1\":{\"81\":1}}],[\"用于打包和管理游戏资源\",{\"1\":{\"65\":1}}],[\"用于检测重叠事件\",{\"1\":{\"62\":1,\"67\":1}}],[\"用于清理资源\",{\"1\":{\"62\":1}}],[\"用于真正的异步\",{\"1\":{\"49\":1}}],[\"用于存储复杂的配置\",{\"1\":{\"45\":1}}],[\"用途\",{\"1\":{\"49\":2,\"98\":1}}],[\"本最佳实践指南是\",{\"1\":{\"245\":1}}],[\"本机分辨率通常远高于\",{\"1\":{\"233\":1}}],[\"本机分辨率\",{\"0\":{\"233\":1}}],[\"本文将采用泛用的且与平台无关的方法对性能的相关信息进行讲解\",{\"1\":{\"245\":1}}],[\"本文汇集了提升\",{\"1\":{\"177\":1}}],[\"本文档中的示例使用当您关闭\",{\"1\":{\"98\":1}}],[\"本文档的这一部分解释了\",{\"1\":{\"96\":1}}],[\"本指南解释了与渲染相关的底层概念\",{\"1\":{\"210\":1}}],[\"本指南的目标是为你提供必要的知识\",{\"1\":{\"187\":1}}],[\"本指南后面将更详细地讨论这一点\",{\"1\":{\"150\":1}}],[\"本指南将讨论\",{\"1\":{\"138\":1,\"139\":1}}],[\"本章首先定义本系列文章中使用的许多术语\",{\"1\":{\"140\":1}}],[\"本视频为\",{\"1\":{\"125\":1}}],[\"本页包含如何向自定义\",{\"1\":{\"118\":1}}],[\"本节概述了一些常见问题和工作流程\",{\"1\":{\"277\":1}}],[\"本节将详细介绍在收集性能分析数据之前不应使用的优化\",{\"1\":{\"264\":1}}],[\"本节包含一些可能有助于提高\",{\"1\":{\"171\":1}}],[\"本节包含有关如何在\",{\"1\":{\"112\":1}}],[\"本节包含有关\",{\"1\":{\"108\":1,\"114\":1}}],[\"本节适用于编写自己的可编程渲染循环和着色器库的高级用户\",{\"1\":{\"136\":1}}],[\"本节假设您对原生内存管理和分配器有一般了解\",{\"1\":{\"98\":1}}],[\"本节中关于分配器的信息仅适用于原生内存\",{\"1\":{\"98\":1}}],[\"本地缓存\",{\"1\":{\"88\":1}}],[\"本地图片查找\",{\"1\":{\"31\":1}}],[\"本身有内存池\",{\"1\":{\"404\":1}}],[\"本身是数据\",{\"1\":{\"394\":1}}],[\"本身内部使用了\",{\"1\":{\"240\":1}}],[\"本身\",{\"1\":{\"60\":1,\"135\":1}}],[\"本身也应该被抽象\",{\"1\":{\"56\":1}}],[\"本身就是一个\",{\"1\":{\"45\":1}}],[\"本质区别\",{\"1\":{\"57\":1}}],[\"本质\",{\"1\":{\"49\":2}}],[\"很像\",{\"1\":{\"396\":1}}],[\"很多音效师为了声音质量\",{\"1\":{\"392\":1}}],[\"很多插件\",{\"1\":{\"45\":1}}],[\"很相似\",{\"1\":{\"388\":1}}],[\"很难维持流畅动画所需的稳定帧率\",{\"1\":{\"275\":1}}],[\"很难替代\",{\"1\":{\"252\":1}}],[\"很难知道内存来自哪里\",{\"1\":{\"207\":1}}],[\"很少有移动设备实际配备立体声扬声器\",{\"1\":{\"249\":1}}],[\"很昂贵\",{\"1\":{\"178\":1}}],[\"很诱人的是在字体导入器的\",{\"1\":{\"168\":1}}],[\"很常见的是发现\",{\"1\":{\"149\":1}}],[\"很有用\",{\"1\":{\"106\":1}}],[\"很高\",{\"1\":{\"55\":1}}],[\"很空闲\",{\"1\":{\"43\":1}}],[\"互不知道对方\",{\"1\":{\"45\":1}}],[\"物品数量变化时\",{\"1\":{\"56\":1}}],[\"物品\",{\"1\":{\"56\":1}}],[\"物体可以相互穿过\",{\"1\":{\"62\":1,\"67\":1}}],[\"物体\",{\"1\":{\"45\":1}}],[\"物理学组件\",{\"1\":{\"313\":1}}],[\"物理系统投射射线可能很昂贵\",{\"1\":{\"179\":1}}],[\"物理系统投射射线\",{\"1\":{\"179\":1}}],[\"物理系统中\",{\"1\":{\"166\":1}}],[\"物理步长相关\",{\"1\":{\"79\":1}}],[\"物理更新\",{\"1\":{\"79\":1}}],[\"物理帧率时\",{\"1\":{\"74\":1}}],[\"物理效果不稳定\",{\"1\":{\"74\":1}}],[\"物理引擎的模拟周期是固定的\",{\"1\":{\"74\":1}}],[\"物理引擎以\",{\"1\":{\"60\":1}}],[\"物理同步\",{\"1\":{\"74\":1}}],[\"物理模拟上\",{\"1\":{\"383\":1}}],[\"物理模拟在\",{\"1\":{\"60\":1}}],[\"物理模拟是否过载\",{\"1\":{\"55\":1}}],[\"物理\",{\"0\":{\"326\":1},\"1\":{\"41\":2,\"131\":1}}],[\"类列出项目中所有的\",{\"1\":{\"309\":1}}],[\"类来检索为项目构建的所有程序集\",{\"1\":{\"309\":1}}],[\"类进行比较的成本\",{\"1\":{\"259\":1}}],[\"类可用于在\",{\"1\":{\"246\":1}}],[\"类的目的\",{\"1\":{\"290\":1}}],[\"类的话\",{\"1\":{\"290\":1}}],[\"类的额外虚函数\",{\"1\":{\"228\":1}}],[\"类的基类\",{\"1\":{\"141\":1}}],[\"类函数\",{\"1\":{\"225\":1}}],[\"类通常在堆上\",{\"1\":{\"197\":1}}],[\"类源代码中\",{\"1\":{\"170\":1}}],[\"类别是\",{\"1\":{\"148\":1}}],[\"类接收此事件并使用它来运行前面描述的重建过程\",{\"1\":{\"148\":1}}],[\"类中执行的\",{\"1\":{\"144\":1}}],[\"类\",{\"1\":{\"56\":1,\"57\":1,\"63\":1,\"109\":1,\"141\":2,\"144\":1,\"165\":1,\"192\":1,\"254\":1,\"275\":1,\"279\":1,\"280\":1}}],[\"类型和函数\",{\"1\":{\"299\":1}}],[\"类型树有自己的分配器以避免由于许多小型分配而导致的碎片\",{\"1\":{\"104\":1}}],[\"类型树块大小type\",{\"1\":{\"104\":1}}],[\"类型树和文件缓存分配器使用动态堆分配\",{\"1\":{\"99\":1}}],[\"类型之间的频繁转换\",{\"1\":{\"68\":1}}],[\"类型\",{\"1\":{\"56\":1,\"234\":2,\"286\":1}}],[\"类型的\",{\"1\":{\"45\":1}}],[\"类似于多线程渲染\",{\"1\":{\"227\":1}}],[\"类似于垃圾回收器\",{\"1\":{\"195\":1}}],[\"类似地\",{\"1\":{\"196\":1}}],[\"类似\",{\"1\":{\"44\":1}}],[\"通道\",{\"1\":{\"233\":1,\"236\":1}}],[\"通道计算的内存\",{\"1\":{\"233\":1}}],[\"通用\",{\"1\":{\"164\":1,\"266\":1,\"271\":1}}],[\"通用渲染管线\",{\"1\":{\"108\":1,\"109\":1,\"110\":1,\"112\":1,\"114\":1,\"118\":1}}],[\"通过代码管理和性能工具分析\",{\"1\":{\"403\":1}}],[\"通过文字表生成数据表\",{\"1\":{\"377\":1}}],[\"通过命令行创建\",{\"0\":{\"345\":1}}],[\"通过定义程序集\",{\"1\":{\"289\":1}}],[\"通过简单的重构即可消除其中的大部分垃圾\",{\"1\":{\"253\":1}}],[\"通过简单地观察\",{\"1\":{\"162\":1}}],[\"通过多线程执行网格蒙皮和骨骼动画计算的能力\",{\"1\":{\"248\":1}}],[\"通过自动化资源审计过程\",{\"1\":{\"220\":1}}],[\"通过编写使用\",{\"1\":{\"218\":1}}],[\"通过添加\",{\"1\":{\"218\":1}}],[\"通过拥有少量高多边形数的\",{\"1\":{\"217\":1}}],[\"通过使用\",{\"1\":{\"216\":1,\"263\":1}}],[\"通过遵循\",{\"1\":{\"215\":1}}],[\"通过脚本使用\",{\"1\":{\"214\":1}}],[\"通过发出\",{\"1\":{\"212\":1}}],[\"通过在\",{\"1\":{\"200\":1}}],[\"通过不为非交互式\",{\"1\":{\"179\":1}}],[\"通过分配\",{\"1\":{\"172\":1}}],[\"通过将正则表达式传递为正则表达式对象构造函数的第一个参数来预编译它们\",{\"1\":{\"253\":1}}],[\"通过将尽可能多的细节烘焙到纹理中来降低像素复杂性\",{\"1\":{\"217\":1}}],[\"通过将\",{\"1\":{\"170\":1}}],[\"通过了所有测试\",{\"1\":{\"166\":1}}],[\"通过字符串地址或\",{\"1\":{\"76\":1}}],[\"通过池化技术复用对象\",{\"1\":{\"63\":1,\"68\":1}}],[\"通过\",{\"1\":{\"50\":1,\"57\":1,\"65\":1,\"75\":1,\"144\":1,\"179\":1,\"200\":1,\"215\":1,\"271\":2,\"361\":2,\"362\":1,\"371\":1,\"389\":1}}],[\"通常无法将层级视图精简为少量的游戏对象\",{\"1\":{\"270\":1}}],[\"通常很容易想到使用普通的\",{\"1\":{\"268\":1}}],[\"通常每帧多次发生\",{\"1\":{\"262\":1}}],[\"通常情况下\",{\"1\":{\"247\":1,\"248\":1}}],[\"通常在\",{\"1\":{\"230\":1}}],[\"通常不建议在运行时组合网格\",{\"1\":{\"218\":1}}],[\"通常将着色器实现为多个通道\",{\"1\":{\"215\":1}}],[\"通常小于实际物理\",{\"1\":{\"205\":1}}],[\"通常启用或禁用\",{\"1\":{\"173\":1}}],[\"通常需要某种池化方法来避免性能问题\",{\"1\":{\"170\":1}}],[\"通常需要大量\",{\"1\":{\"170\":1}}],[\"通常最好编写\",{\"1\":{\"170\":1}}],[\"通常最好在复合\",{\"1\":{\"166\":1}}],[\"通常最好拆分\",{\"1\":{\"163\":1}}],[\"通常可以忽略它\",{\"1\":{\"151\":1}}],[\"通常建议禁用除\",{\"1\":{\"148\":1}}],[\"通常具有\",{\"1\":{\"143\":1}}],[\"通常具有少量\",{\"1\":{\"143\":1}}],[\"通常用于分析目的\",{\"1\":{\"225\":1}}],[\"通常用于创建需要相对大小或内容相对定位的复杂布局\",{\"1\":{\"141\":1}}],[\"通常用于初始化变量或建立脚本间的引用\",{\"1\":{\"67\":1}}],[\"通常来自文本\",{\"1\":{\"139\":1}}],[\"通常意味着项目使用了太多的着色器变体\",{\"1\":{\"112\":1}}],[\"通常更安全的做法是管理好资源的引用\",{\"1\":{\"65\":1}}],[\"通常使用\",{\"1\":{\"64\":1}}],[\"通常\",{\"1\":{\"48\":1,\"100\":1,\"118\":1,\"151\":2,\"168\":1,\"182\":1,\"200\":1,\"207\":1,\"226\":1,\"231\":1,\"254\":1,\"256\":1,\"293\":1,\"307\":1}}],[\"通常比\",{\"1\":{\"47\":1,\"57\":1}}],[\"通常是过度绘制和填充率问题的原因\",{\"1\":{\"215\":1}}],[\"通常是一个热点\",{\"1\":{\"150\":1}}],[\"通常是您在\",{\"1\":{\"136\":1}}],[\"通常是主线程\",{\"1\":{\"49\":1}}],[\"通常是\",{\"1\":{\"46\":1,\"51\":1,\"151\":2}}],[\"通常只用于读取配置\",{\"1\":{\"45\":1}}],[\"通义\",{\"1\":{\"7\":1}}],[\"注释来标记它\",{\"1\":{\"358\":1}}],[\"注释是否必要且准确\",{\"1\":{\"53\":1}}],[\"注\",{\"1\":{\"274\":1,\"275\":1,\"366\":1}}],[\"注意网格渲染器设置\",{\"1\":{\"248\":1}}],[\"注意多通道着色器\",{\"1\":{\"216\":1}}],[\"注意那些用\",{\"1\":{\"215\":1}}],[\"注意克隆材质\",{\"1\":{\"200\":1}}],[\"注意装箱拆箱\",{\"1\":{\"68\":1}}],[\"注意事项\",{\"1\":{\"65\":1}}],[\"注意\",{\"1\":{\"45\":1,\"99\":1,\"109\":2,\"110\":1,\"125\":1,\"130\":1,\"131\":1,\"135\":1,\"136\":2,\"137\":2,\"148\":1,\"150\":1,\"151\":1,\"157\":1,\"190\":2,\"192\":1,\"193\":1,\"194\":1,\"198\":1,\"199\":1,\"200\":2,\"205\":2,\"212\":2,\"213\":1,\"216\":1,\"221\":1,\"222\":1,\"227\":1,\"228\":3,\"233\":1,\"242\":1,\"244\":1,\"247\":1,\"254\":2,\"265\":1,\"267\":1,\"269\":1,\"272\":1,\"274\":1,\"275\":1,\"276\":1,\"285\":1,\"291\":1,\"292\":1,\"303\":1,\"366\":1}}],[\"注册\",{\"1\":{\"7\":1}}],[\"作者说\",{\"1\":{\"394\":1}}],[\"作者\",{\"1\":{\"363\":1}}],[\"作者博客\",{\"1\":{\"34\":1}}],[\"作业化作业和图形作业\",{\"1\":{\"228\":1}}],[\"作业化渲染\",{\"0\":{\"227\":1},\"1\":{\"223\":1}}],[\"作业将命令\",{\"1\":{\"227\":1}}],[\"作用\",{\"1\":{\"65\":1}}],[\"作为快捷方式\",{\"1\":{\"303\":1}}],[\"作为最终参数提供给\",{\"1\":{\"251\":1}}],[\"作为源层\",{\"1\":{\"218\":1}}],[\"作为可见\",{\"1\":{\"170\":1}}],[\"作为其主要文本渲染管道\",{\"1\":{\"169\":1}}],[\"作为经验法则\",{\"1\":{\"134\":1}}],[\"作为小型分配的共享分配器\",{\"1\":{\"98\":1}}],[\"作为高级程序\",{\"1\":{\"92\":1}}],[\"作为高级开发者\",{\"1\":{\"77\":1}}],[\"作为高级开发\",{\"1\":{\"53\":1}}],[\"作为一般规则\",{\"1\":{\"109\":1}}],[\"作为一个高级开发者\",{\"1\":{\"75\":1}}],[\"作为一名高级\",{\"1\":{\"77\":1}}],[\"作为一名经验丰富的高级\",{\"1\":{\"73\":1}}],[\"作为一名专家级\",{\"1\":{\"60\":1}}],[\"作为一名在\",{\"1\":{\"54\":1}}],[\"作为跨场景的共享数据源\",{\"1\":{\"75\":1}}],[\"作为核心消息总线\",{\"1\":{\"75\":1}}],[\"作为准备面试\",{\"1\":{\"66\":1}}],[\"作为\",{\"1\":{\"60\":1,\"149\":1,\"169\":1,\"298\":1}}],[\"作为共享的玩家数据\",{\"1\":{\"45\":1}}],[\"关掉\",{\"1\":{\"394\":2}}],[\"关节\",{\"1\":{\"326\":1}}],[\"关联软件\",{\"1\":{\"323\":1}}],[\"关闭静态或非交互元素的\",{\"1\":{\"179\":1}}],[\"关闭\",{\"1\":{\"130\":1,\"179\":1,\"230\":1,\"292\":3}}],[\"关于移动设备和\",{\"1\":{\"387\":1}}],[\"关于虚拟内存\",{\"1\":{\"387\":1}}],[\"关于物理内存\",{\"1\":{\"387\":1}}],[\"关于为什么重建很昂贵\",{\"1\":{\"178\":1}}],[\"关于此\",{\"1\":{\"173\":1}}],[\"关于\",{\"1\":{\"97\":1,\"133\":1,\"181\":1}}],[\"关于微软官网的一些链接\",{\"1\":{\"0\":1}}],[\"关卡完成后释放所有内存\",{\"1\":{\"276\":1}}],[\"关卡配置等\",{\"1\":{\"75\":1}}],[\"关卡数据\",{\"1\":{\"45\":1}}],[\"关键词\",{\"1\":{\"359\":1}}],[\"关键工具是\",{\"1\":{\"147\":1}}],[\"关键\",{\"1\":{\"58\":1}}],[\"关键字数量最少\",{\"1\":{\"112\":1}}],[\"关键字暂停并在下一帧或特定条件满足时恢复执行\",{\"1\":{\"80\":1}}],[\"关键字按引用传递\",{\"1\":{\"68\":1}}],[\"关键字\",{\"1\":{\"55\":1,\"240\":1}}],[\"存活\",{\"1\":{\"274\":2}}],[\"存在托管内存泄漏的风险\",{\"1\":{\"97\":1}}],[\"存在于场景或\",{\"1\":{\"56\":1}}],[\"存档\",{\"1\":{\"88\":1}}],[\"存储器\",{\"1\":{\"387\":1}}],[\"存储为错误日志\",{\"1\":{\"381\":1}}],[\"存储和读取设置\",{\"1\":{\"104\":1}}],[\"存储方式\",{\"1\":{\"88\":1}}],[\"存储在托管堆内存空间中的数据值\",{\"1\":{\"97\":1}}],[\"存储在非托管内存中\",{\"1\":{\"75\":1}}],[\"存储在栈中\",{\"1\":{\"63\":1,\"68\":1}}],[\"存储敌人属性\",{\"1\":{\"75\":1}}],[\"存储状态名与状态对象的映射\",{\"1\":{\"70\":1}}],[\"存储位置\",{\"1\":{\"63\":1,\"68\":1}}],[\"存储\",{\"1\":{\"48\":2}}],[\"存储不常变化的数据\",{\"1\":{\"45\":1}}],[\"存放在栈上\",{\"1\":{\"42\":1}}],[\"来决定哪些\",{\"1\":{\"401\":1}}],[\"来检索资源在什么位置\",{\"1\":{\"395\":1}}],[\"来帮助\",{\"1\":{\"395\":1}}],[\"来减少内存的峰值\",{\"1\":{\"394\":1}}],[\"来减少上传到\",{\"1\":{\"200\":1}}],[\"来进行反序列化\",{\"1\":{\"394\":1}}],[\"来设置它们的顺序\",{\"1\":{\"358\":2}}],[\"来直接启用它\",{\"1\":{\"357\":1}}],[\"来编译程序集中的不同代码\",{\"1\":{\"302\":1}}],[\"来阻止\",{\"1\":{\"292\":1}}],[\"来阻止程序集被预定义程序集引用\",{\"1\":{\"292\":1}}],[\"来引用目标程序集\",{\"1\":{\"290\":1}}],[\"来优化\",{\"1\":{\"288\":1}}],[\"来控制渲染帧的节奏\",{\"1\":{\"275\":1}}],[\"来处理托管堆上的所有对象\",{\"1\":{\"275\":1}}],[\"来处理高性能的\",{\"1\":{\"85\":1}}],[\"来确定内存分配发生在哪个方法中\",{\"1\":{\"274\":1}}],[\"来回收不再使用的对象的内存\",{\"1\":{\"274\":1}}],[\"来加载和解压缩\",{\"1\":{\"269\":1}}],[\"来禁用\",{\"1\":{\"240\":1}}],[\"来更改多线程渲染\",{\"1\":{\"226\":1}}],[\"来唤醒资源\",{\"1\":{\"222\":1}}],[\"来对纹理应用类似的概念\",{\"1\":{\"218\":1}}],[\"来关注静态和动态批处理计数与总绘制调用计数\",{\"1\":{\"216\":1}}],[\"来组织要渲染的内容\",{\"1\":{\"213\":1}}],[\"来开发和发布你的项目\",{\"1\":{\"190\":1}}],[\"来销毁一个\",{\"1\":{\"189\":1}}],[\"来最小化其数量\",{\"1\":{\"179\":1}}],[\"来池化其对象的\",{\"1\":{\"170\":1}}],[\"来实现高性能\",{\"1\":{\"163\":1}}],[\"来实现\",{\"1\":{\"163\":1,\"216\":1}}],[\"来实现系统间的低耦合通信\",{\"1\":{\"75\":1}}],[\"来隐藏\",{\"1\":{\"155\":1}}],[\"来节省一些\",{\"1\":{\"136\":1}}],[\"来渲染它\",{\"1\":{\"114\":1}}],[\"来说是个问题\",{\"1\":{\"275\":1}}],[\"来说至关重要\",{\"1\":{\"97\":1}}],[\"来说非常耗时\",{\"1\":{\"97\":1}}],[\"来释放它\",{\"1\":{\"97\":1}}],[\"来描述你解决复杂问题的过程\",{\"1\":{\"92\":1}}],[\"来提高移动端性能\",{\"1\":{\"90\":1}}],[\"来定义状态和状态转换\",{\"1\":{\"75\":1}}],[\"来保证模拟的确定性和稳定性\",{\"1\":{\"74\":1}}],[\"来存储这个\",{\"1\":{\"391\":1}}],[\"来存储空闲对象\",{\"1\":{\"64\":1}}],[\"来存储玩家拥有的物品数量\",{\"1\":{\"56\":1}}],[\"来利用多核cpu\",{\"1\":{\"60\":1}}],[\"来构建字符串\",{\"1\":{\"59\":1}}],[\"来自动为每个页面生成编辑此页链接\",{\"1\":{\"364\":1}}],[\"来自动管理应用程序的内存\",{\"1\":{\"97\":1}}],[\"来自动释放脚本\",{\"1\":{\"97\":1}}],[\"来自动分配和指派内存\",{\"1\":{\"96\":1}}],[\"来自\",{\"1\":{\"55\":2}}],[\"来解耦\",{\"1\":{\"44\":1}}],[\"来管理的\",{\"1\":{\"399\":1}}],[\"来管理它们的工作线程\",{\"1\":{\"254\":1}}],[\"来管理未使用的内存部分\",{\"1\":{\"96\":1}}],[\"来管理\",{\"1\":{\"44\":1}}],[\"事件可在垃圾回收器模式更改时收到通知\",{\"1\":{\"274\":1}}],[\"事件的组件\",{\"1\":{\"179\":1}}],[\"事件的\",{\"1\":{\"148\":1}}],[\"事件时\",{\"1\":{\"144\":1}}],[\"事件时根据需要触发更新\",{\"1\":{\"141\":1}}],[\"事件来检查\",{\"1\":{\"56\":1}}],[\"事件\",{\"1\":{\"45\":1,\"135\":1}}],[\"事件系统\",{\"1\":{\"44\":1,\"85\":1}}],[\"事件总线\",{\"1\":{\"22\":1,\"56\":1,\"60\":1,\"75\":1}}],[\"文字与变量的数字依次对应\",{\"1\":{\"377\":1}}],[\"文字量的增多\",{\"1\":{\"377\":1}}],[\"文字数据从一开始就应该放在表里\",{\"1\":{\"377\":1}}],[\"文章摘要\",{\"1\":{\"358\":1}}],[\"文章列表\",{\"1\":{\"358\":1}}],[\"文章\",{\"1\":{\"221\":1,\"265\":1}}],[\"文本和\",{\"1\":{\"181\":1}}],[\"文本组件的场景时递归加载\",{\"1\":{\"169\":1}}],[\"文本组件\",{\"1\":{\"169\":1}}],[\"文本组件必须重新计算用于显示实际文本的多边形\",{\"1\":{\"168\":1}}],[\"文本渲染能力的自定义着色器\",{\"1\":{\"169\":1}}],[\"文本网格的重建\",{\"1\":{\"168\":1}}],[\"文本网格重建\",{\"1\":{\"168\":1,\"169\":1}}],[\"文本网格中包含的文本等\",{\"1\":{\"161\":1}}],[\"文本的边界框可以无形地与附近的精灵重叠\",{\"1\":{\"162\":1}}],[\"文本字符串中字符的多边形\",{\"1\":{\"161\":1}}],[\"文本字形仅占用用于表示它们的四边形的一小部分\",{\"1\":{\"149\":1}}],[\"文本\",{\"0\":{\"168\":1,\"169\":1},\"1\":{\"139\":1}}],[\"文件时\",{\"1\":{\"350\":1}}],[\"文件中的第一个\",{\"1\":{\"365\":1}}],[\"文件中\",{\"1\":{\"347\":1}}],[\"文件的地方\",{\"1\":{\"347\":1}}],[\"文件的大小\",{\"1\":{\"208\":1}}],[\"文件并在需要时将内核页存储在数据中的能力\",{\"1\":{\"203\":1}}],[\"文件将其他类型和方法标记为根\",{\"1\":{\"196\":1}}],[\"文件缓存有自己的分配器以避免碎片\",{\"1\":{\"104\":1}}],[\"文件缓存块大小file\",{\"1\":{\"104\":1}}],[\"文件缓存分配器\",{\"1\":{\"98\":3}}],[\"文件以及它创建的所有资源\",{\"1\":{\"70\":1}}],[\"文件本身\",{\"1\":{\"65\":1,\"70\":1}}],[\"文件\",{\"1\":{\"45\":2,\"56\":1,\"160\":1,\"190\":1,\"199\":1,\"203\":1,\"263\":1,\"299\":1,\"347\":1}}],[\"文件夹内新建项目\",{\"1\":{\"355\":1}}],[\"文件夹不要放在子目录里\",{\"1\":{\"307\":1}}],[\"文件夹的文件夹中创建程序集定义资产\",{\"1\":{\"307\":1}}],[\"文件夹的使用不当会使项目构建出现膨胀\",{\"1\":{\"255\":1}}],[\"文件夹时\",{\"1\":{\"307\":1}}],[\"文件夹是\",{\"1\":{\"255\":1}}],[\"文件夹中创建程序集定义或引用资产\",{\"1\":{\"307\":1}}],[\"文件夹中的脚本组合到它们自己的程序集中\",{\"1\":{\"290\":1}}],[\"文件夹中的脚本\",{\"1\":{\"289\":2}}],[\"文件夹中的编辑器脚本不会被编译到\",{\"1\":{\"307\":1}}],[\"文件夹中的编辑器脚本\",{\"1\":{\"289\":1}}],[\"文件夹中的任意位置的\",{\"1\":{\"289\":1}}],[\"文件夹中的运行时脚本\",{\"1\":{\"289\":1}}],[\"文件夹中的松散代码生成的程序集\",{\"1\":{\"196\":1}}],[\"文件夹中\",{\"1\":{\"104\":1,\"297\":1}}],[\"文件夹\",{\"0\":{\"255\":1,\"395\":1},\"1\":{\"44\":1,\"307\":2}}],[\"文档存放的分支\",{\"1\":{\"364\":1}}],[\"文档在仓库中的目录\",{\"1\":{\"364\":1}}],[\"文档仓库地址\",{\"1\":{\"364\":1}}],[\"文档中关于\",{\"1\":{\"216\":1}}],[\"文档化\",{\"1\":{\"60\":1}}],[\"文档\",{\"1\":{\"26\":1,\"38\":1,\"59\":1,\"104\":1,\"210\":1,\"215\":1,\"216\":1,\"234\":1,\"241\":1,\"242\":1,\"312\":1}}],[\"文档翻译为中文\",{\"1\":{\"14\":1}}],[\"异教徒\",{\"1\":{\"321\":1}}],[\"异步任务有什么本质区别\",{\"1\":{\"80\":1}}],[\"异步版\",{\"1\":{\"70\":1}}],[\"异步加载和热更新流程\",{\"1\":{\"84\":1}}],[\"异步加载\",{\"1\":{\"44\":1}}],[\"异常捕获与上报\",{\"1\":{\"91\":1}}],[\"异常\",{\"1\":{\"19\":1}}],[\"应先加载大内存的资源\",{\"1\":{\"402\":1}}],[\"应先去检查\",{\"1\":{\"391\":1}}],[\"应避免装箱\",{\"1\":{\"284\":1}}],[\"应在禁用垃圾回收器前分配所有内存\",{\"1\":{\"276\":1}}],[\"应在性能敏感代码中避免\",{\"1\":{\"48\":1}}],[\"应始终在目标平台上进行性能分析\",{\"1\":{\"274\":1}}],[\"应权衡手动内联的性能提升与维护性能更高代码的长期成本之间的关系\",{\"1\":{\"273\":1}}],[\"应优先使用内置\",{\"1\":{\"261\":1}}],[\"应将未压缩的音频文件导入\",{\"1\":{\"249\":1}}],[\"应为音频启用与可用硬件匹配的压缩格式\",{\"1\":{\"249\":1}}],[\"应确定不同类型纹理的合理最大值\",{\"1\":{\"247\":1}}],[\"应继承\",{\"1\":{\"246\":1}}],[\"应设置为\",{\"1\":{\"201\":1}}],[\"应谨慎处理\",{\"1\":{\"201\":1}}],[\"应谨慎使用此功能\",{\"1\":{\"179\":1}}],[\"应包括一个引导步骤来验证用户的区域设置并为每个字体资源设置字体资源后备\",{\"1\":{\"169\":1}}],[\"应包含所有这些变量\",{\"1\":{\"136\":1}}],[\"应包含所有\",{\"1\":{\"136\":1}}],[\"应包含原理和权衡\",{\"1\":{\"74\":1,\"75\":1,\"76\":1,\"77\":1}}],[\"应该避免这种错误包含的情况\",{\"1\":{\"307\":1}}],[\"应该对系统进行更改以操作\",{\"1\":{\"270\":1}}],[\"应该使用着色器的\",{\"1\":{\"236\":1}}],[\"应该不会有明显的性能差异\",{\"1\":{\"197\":1}}],[\"应该将其替换为\",{\"1\":{\"221\":1}}],[\"应该将\",{\"1\":{\"156\":1}}],[\"应该在\",{\"1\":{\"74\":1}}],[\"应用使用的非共享页面数量\",{\"1\":{\"388\":1}}],[\"应用使用的非共享页面的数量加上共享页面的均匀分摊数量\",{\"1\":{\"388\":1}}],[\"应用使用的共享和非共享页面\",{\"1\":{\"388\":1}}],[\"应用托管字节码剥离\",{\"1\":{\"371\":1}}],[\"应用正确的细节可以节省大量磁盘空间和一些运行时内存\",{\"1\":{\"218\":1}}],[\"应用多个定向光\",{\"1\":{\"216\":1}}],[\"应用程序启动时\",{\"1\":{\"371\":1}}],[\"应用程序通常会在每一帧中将临时数据分配到\",{\"1\":{\"278\":1}}],[\"应用程序保持了稳定的\",{\"1\":{\"275\":1}}],[\"应用程序都严重依赖它\",{\"1\":{\"211\":1}}],[\"应用程序大小\",{\"0\":{\"208\":1}}],[\"应用程序使用\",{\"1\":{\"205\":1}}],[\"应用程序使用内存分配器来平衡性能和可用内存空间\",{\"1\":{\"98\":1}}],[\"应用程序了\",{\"1\":{\"190\":1}}],[\"应用程序\",{\"1\":{\"165\":1,\"258\":1}}],[\"应用程序一起使用时\",{\"1\":{\"150\":1}}],[\"应用动态批处理\",{\"1\":{\"108\":1,\"110\":1}}],[\"应用光照模型\",{\"1\":{\"76\":1}}],[\"应尽量避免\",{\"1\":{\"51\":1}}],[\"应通过\",{\"1\":{\"44\":1}}],[\"应使用\",{\"1\":{\"42\":1,\"272\":1}}],[\"操作系统会把一些不用的数据\",{\"1\":{\"387\":1}}],[\"操作系统版本和设备内存压力来测量内存\",{\"1\":{\"204\":1}}],[\"操作步骤上报给崩溃收集平台\",{\"1\":{\"91\":1}}],[\"操作\",{\"1\":{\"44\":1,\"49\":1,\"57\":1,\"60\":1}}],[\"支持正则字符串\",{\"1\":{\"360\":1}}],[\"支持多种渲染模式\",{\"1\":{\"223\":1}}],[\"支持多帧比较\",{\"1\":{\"104\":1}}],[\"支持的屏幕分辨率越大\",{\"1\":{\"205\":1}}],[\"支持的平台\",{\"0\":{\"133\":1}}],[\"支持运行时代码执行\",{\"1\":{\"190\":1}}],[\"支持更多托管库\",{\"1\":{\"190\":1}}],[\"支持所有平台\",{\"1\":{\"47\":1}}],[\"支持\",{\"1\":{\"44\":1,\"108\":1,\"115\":1,\"126\":1}}],[\"顶点的总数\",{\"1\":{\"148\":1}}],[\"顶点法线和单个\",{\"1\":{\"110\":1}}],[\"顶点法线和一个\",{\"1\":{\"109\":1}}],[\"顶点法线\",{\"1\":{\"109\":1,\"110\":1}}],[\"顶点数量较少的网格无法使用\",{\"1\":{\"117\":1}}],[\"顶点数少于900\",{\"1\":{\"69\":1}}],[\"顶点数少于\",{\"1\":{\"64\":1}}],[\"顶点数有限\",{\"1\":{\"43\":1}}],[\"顶点\",{\"1\":{\"51\":1,\"93\":1}}],[\"顶点着色器\",{\"0\":{\"51\":1},\"1\":{\"51\":1,\"76\":1}}],[\"顶层\",{\"1\":{\"44\":1}}],[\"弹出层\",{\"1\":{\"44\":1}}],[\"背景和一些图标来表示价格\",{\"1\":{\"159\":1}}],[\"背景层\",{\"1\":{\"44\":1}}],[\"背包需要更新\",{\"1\":{\"60\":1}}],[\"背包系统\",{\"1\":{\"56\":1,\"60\":1}}],[\"背包\",{\"1\":{\"44\":1,\"56\":2}}],[\"背包数据\",{\"1\":{\"44\":1}}],[\"不分代的\",{\"1\":{\"401\":1}}],[\"不注重\",{\"1\":{\"389\":1}}],[\"不但分配内存的大小会有不同\",{\"1\":{\"389\":1}}],[\"不论从哪个角度看\",{\"1\":{\"387\":1}}],[\"不像在其他\",{\"1\":{\"387\":1}}],[\"不存在的情况下\",{\"1\":{\"348\":1}}],[\"不包括共享页面\",{\"1\":{\"388\":1}}],[\"不包括测试程序集\",{\"1\":{\"309\":1}}],[\"不包括手或身体的其余部分\",{\"1\":{\"218\":1}}],[\"不可变意味着一旦创建了一个字符串\",{\"1\":{\"280\":1}}],[\"不适合时\",{\"1\":{\"272\":1}}],[\"不适用\",{\"1\":{\"225\":5,\"228\":5}}],[\"不适用于托管堆\",{\"1\":{\"98\":1}}],[\"不使用就关闭它\",{\"1\":{\"396\":1}}],[\"不使用的资源就不会导入\",{\"1\":{\"389\":1}}],[\"不使用字符串名称\",{\"1\":{\"257\":1}}],[\"不使用硬件加速解码\",{\"1\":{\"201\":2}}],[\"不过\",{\"1\":{\"256\":1}}],[\"不执行最终\",{\"1\":{\"234\":1}}],[\"不透明队列中的对象使用边界框\",{\"1\":{\"215\":1}}],[\"不被渲染\",{\"1\":{\"213\":1}}],[\"不清除\",{\"1\":{\"212\":1}}],[\"不干净\",{\"1\":{\"171\":1}}],[\"不随地区变化\",{\"1\":{\"168\":1}}],[\"不变元素的尽可能多合并到其背景纹理中\",{\"1\":{\"159\":1}}],[\"不幸的是\",{\"1\":{\"148\":1,\"204\":1}}],[\"不用的时候\",{\"1\":{\"404\":1}}],[\"不用每帧设置给\",{\"1\":{\"127\":1}}],[\"不用时放回池中\",{\"1\":{\"64\":1}}],[\"不将\",{\"1\":{\"118\":1}}],[\"不需要在\",{\"1\":{\"118\":1}}],[\"不需要修改逻辑\",{\"1\":{\"44\":1}}],[\"不支持通配符\",{\"1\":{\"303\":1}}],[\"不支持\",{\"1\":{\"115\":1,\"225\":2,\"228\":2}}],[\"不支持动态批处理\",{\"1\":{\"110\":1}}],[\"不兼容\",{\"1\":{\"114\":1,\"132\":1}}],[\"不兼容时\",{\"1\":{\"114\":1}}],[\"不兼容的\",{\"1\":{\"112\":1}}],[\"不建议禁用\",{\"1\":{\"112\":1}}],[\"不能批处理\",{\"1\":{\"149\":1}}],[\"不能与\",{\"1\":{\"149\":1}}],[\"不能是粒子或蒙皮网格\",{\"1\":{\"129\":1}}],[\"不能是粒子系统\",{\"1\":{\"58\":1}}],[\"不能使用\",{\"1\":{\"112\":1}}],[\"不受支持\",{\"1\":{\"108\":1}}],[\"不受gc影响\",{\"1\":{\"60\":1}}],[\"不会频繁地分配内存\",{\"1\":{\"399\":1}}],[\"不会把内存直接返还给系统\",{\"1\":{\"399\":1}}],[\"不会考虑脚本中定义的符号\",{\"1\":{\"301\":1}}],[\"不会将渲染与垂直同步进行同步\",{\"1\":{\"275\":1}}],[\"不会重新分配内存中的对象来填补对象之间的空隙\",{\"1\":{\"275\":1}}],[\"不会从非开发构建中剥离\",{\"1\":{\"263\":1}}],[\"不会调整纹理大小\",{\"1\":{\"221\":1}}],[\"不会渲染它们\",{\"1\":{\"213\":1}}],[\"不会为分页出脏页\",{\"1\":{\"203\":1}}],[\"不会共享值类型\",{\"1\":{\"197\":1}}],[\"不会剥离核心模块\",{\"1\":{\"194\":1}}],[\"不会剥离该模块\",{\"1\":{\"194\":1}}],[\"不会触发重建\",{\"1\":{\"183\":1}}],[\"不会丢弃其顶点缓冲区\",{\"1\":{\"183\":1}}],[\"不会接收事件\",{\"1\":{\"180\":1}}],[\"不会不必要地扩展字体的纹理图集\",{\"1\":{\"168\":1}}],[\"不会减少\",{\"1\":{\"135\":1}}],[\"不会增加任何\",{\"1\":{\"133\":1}}],[\"不会\",{\"1\":{\"120\":1,\"201\":1,\"401\":1}}],[\"不会设置实例\",{\"1\":{\"118\":1}}],[\"不会合并这些绘制调用\",{\"1\":{\"115\":1}}],[\"不会显示\",{\"1\":{\"112\":1}}],[\"不会自动触发\",{\"1\":{\"97\":1}}],[\"不会给gc带来负担\",{\"1\":{\"68\":1}}],[\"不会给\",{\"1\":{\"63\":1}}],[\"不再需要编译预定义程序集了\",{\"1\":{\"292\":1}}],[\"不再需要切换状态或加载新数据\",{\"1\":{\"58\":1}}],[\"不再持有任何引用的内存分配\",{\"1\":{\"97\":1}}],[\"不仅仅是\",{\"1\":{\"181\":1}}],[\"不仅知道\",{\"1\":{\"92\":1}}],[\"不仅要会使用协程\",{\"1\":{\"72\":1}}],[\"不仅要知道怎么用协程\",{\"1\":{\"66\":1}}],[\"不应使用多维数组\",{\"1\":{\"265\":1}}],[\"不应直接实现\",{\"1\":{\"173\":1}}],[\"不应用于关键存档数据\",{\"1\":{\"88\":1}}],[\"不应知道订阅者\",{\"1\":{\"75\":1}}],[\"不正确\",{\"1\":{\"60\":1}}],[\"不是分代的\",{\"1\":{\"284\":1}}],[\"不是线性的\",{\"1\":{\"131\":1}}],[\"不是透明shader\",{\"1\":{\"60\":1}}],[\"不是多线程\",{\"1\":{\"49\":1,\"57\":1,\"60\":1}}],[\"不阻塞主线程\",{\"1\":{\"60\":1}}],[\"不同平台是否可以使用\",{\"1\":{\"400\":1}}],[\"不同游戏类型的需要的模块和层级不同\",{\"1\":{\"383\":1}}],[\"不同功能的子系统\",{\"1\":{\"381\":1}}],[\"不同步\",{\"1\":{\"275\":1}}],[\"不同的是\",{\"1\":{\"388\":1}}],[\"不同的图形\",{\"1\":{\"225\":1}}],[\"不同的层\",{\"1\":{\"213\":1}}],[\"不同的结果\",{\"1\":{\"205\":1}}],[\"不同脚本后端的优缺点\",{\"1\":{\"190\":1}}],[\"不同\",{\"1\":{\"57\":1,\"122\":1,\"265\":1,\"269\":1}}],[\"不依赖于\",{\"1\":{\"371\":1}}],[\"不依赖于任何其他程序集\",{\"1\":{\"289\":1}}],[\"不依赖\",{\"1\":{\"57\":1}}],[\"不要把整个配置表都扔进去\",{\"1\":{\"404\":1}}],[\"不要使用\",{\"1\":{\"395\":1}}],[\"不要直接操作场景中的一大群游戏对象\",{\"1\":{\"270\":1}}],[\"不要留空这个设置\",{\"1\":{\"180\":1}}],[\"不要创建像文件夹一样且除了组织场景之外没有其他用途的游戏对象\",{\"1\":{\"156\":1}}],[\"不要仅仅为了改变元素的色调而使用混合的\",{\"1\":{\"156\":1}}],[\"不要将非实例化属性放在\",{\"1\":{\"118\":1}}],[\"不要对顶点少于\",{\"1\":{\"117\":1}}],[\"不要在\",{\"1\":{\"41\":1,\"112\":1}}],[\"不要随意扩展\",{\"1\":{\"14\":1}}],[\"框架内的协作式多任务\",{\"1\":{\"80\":1}}],[\"框架\",{\"0\":{\"44\":1},\"1\":{\"313\":1}}],[\"纹理贴图\",{\"1\":{\"329\":1}}],[\"纹理以及在屏幕上以恒定大小显示的其他纹理非常有用\",{\"1\":{\"247\":1}}],[\"纹理缩放因子调整纹理大小\",{\"1\":{\"221\":1}}],[\"纹理格式和\",{\"1\":{\"221\":1}}],[\"纹理压缩优化游戏资源\",{\"1\":{\"221\":1}}],[\"纹理压缩\",{\"0\":{\"221\":1},\"1\":{\"221\":1}}],[\"纹理是\",{\"1\":{\"219\":1}}],[\"纹理越少\",{\"1\":{\"216\":1}}],[\"纹理的内容\",{\"1\":{\"212\":1}}],[\"纹理的静态\",{\"1\":{\"116\":1}}],[\"纹理大小\",{\"1\":{\"205\":1}}],[\"纹理不是按需加载和卸载的\",{\"1\":{\"159\":1}}],[\"纹理所需的内存量\",{\"1\":{\"159\":1}}],[\"纹理\",{\"0\":{\"219\":1,\"247\":1},\"1\":{\"124\":2,\"125\":1,\"169\":1,\"210\":1}}],[\"纹理图集\",{\"1\":{\"43\":1}}],[\"纹理采样是否过多\",{\"1\":{\"41\":1}}],[\"但建议开发者对高频使用的小部件\",{\"1\":{\"404\":1}}],[\"但总体内存池还是上升了\",{\"1\":{\"402\":1}}],[\"但实际效果并不一定有用\",{\"1\":{\"397\":1}}],[\"但实际上内存没有被泄露\",{\"1\":{\"403\":1}}],[\"但实际上需要在工具编码方面投入大量精力\",{\"1\":{\"254\":1}}],[\"但实际上可以存储交换文件\",{\"1\":{\"203\":1}}],[\"但现在\",{\"1\":{\"394\":1}}],[\"但每一个\",{\"1\":{\"394\":1}}],[\"但每个调用的开销仍然很高\",{\"1\":{\"216\":1}}],[\"但每个绘制调用的资源密集度较低\",{\"1\":{\"106\":1}}],[\"但声音数据又没这么大\",{\"1\":{\"392\":1}}],[\"但无法参与合并\",{\"1\":{\"379\":1}}],[\"但展示的图元可以参与合并\",{\"1\":{\"379\":1}}],[\"但你可以在\",{\"1\":{\"294\":1}}],[\"但你不能再向\",{\"1\":{\"190\":1}}],[\"但该函数在调用时不会生成任何新垃圾\",{\"1\":{\"281\":1}}],[\"但仍可使用\",{\"1\":{\"276\":1}}],[\"但仍然存在硬物理限制\",{\"1\":{\"204\":1}}],[\"但仍然比静态大小的文本慢得多\",{\"1\":{\"168\":1}}],[\"但应指出要注意的\",{\"1\":{\"286\":1}}],[\"但应用程序的内存使用量不会减少\",{\"1\":{\"276\":1}}],[\"但应始终使用\",{\"1\":{\"275\":1}}],[\"但已删除所有其他方法或不再是每个循环迭代便执行一次\",{\"1\":{\"271\":1}}],[\"但已经从中加载出来的资源\",{\"1\":{\"70\":1}}],[\"但通过分析代码中的方法调用情况\",{\"1\":{\"271\":1}}],[\"但通常为绘制调用所做的准备工作比绘制调用本身更耗费资源\",{\"1\":{\"106\":1}}],[\"但随着回调数量的增加\",{\"1\":{\"267\":1}}],[\"但需要大量的工程努力才能实现\",{\"1\":{\"266\":1}}],[\"但必须注意检查代码并确保调用访问器时场景中不存在单例对象\",{\"1\":{\"262\":1}}],[\"但必须确保这些资源没有任何引用\",{\"1\":{\"70\":1}}],[\"但远高于与纯\",{\"1\":{\"259\":1}}],[\"但只适用于不需要动态生成的数据\",{\"1\":{\"254\":1}}],[\"但众所周知\",{\"1\":{\"254\":1}}],[\"但因此无法针对具体数据布局进行优化\",{\"1\":{\"254\":1}}],[\"但比前面的示例有了相当大的改进\",{\"1\":{\"253\":1}}],[\"但可能会无意中将其打开\",{\"1\":{\"247\":1}}],[\"但可以提高性能\",{\"1\":{\"218\":1}}],[\"但最好在最初就确保这些错误不可能发生\",{\"1\":{\"246\":1}}],[\"但大部分的内容也适用于非移动端\",{\"1\":{\"245\":1}}],[\"但此后已被图形作业取代\",{\"1\":{\"227\":1}}],[\"但您可以在\",{\"1\":{\"228\":1}}],[\"但您可以在使用\",{\"1\":{\"96\":1}}],[\"但您应该省略小型对象\",{\"1\":{\"216\":1}}],[\"但要注意内存占用\",{\"1\":{\"216\":1}}],[\"但要注意避免在此处进行复杂计算\",{\"1\":{\"62\":1}}],[\"但将其后面的\",{\"1\":{\"215\":1}}],[\"但将共享页平均分配给共享进程\",{\"1\":{\"205\":1}}],[\"但根据您选择的清除标志\",{\"1\":{\"212\":1}}],[\"但文件大小显著减小\",{\"1\":{\"201\":1}}],[\"但并不总是能够控制和优化\",{\"1\":{\"200\":1}}],[\"但在这个版本中不存在\",{\"1\":{\"394\":1}}],[\"但在紧密循环中重复访问会创建\",{\"1\":{\"285\":1}}],[\"但在构建项目中不会\",{\"1\":{\"274\":1}}],[\"但在大多数代码中\",{\"1\":{\"271\":1}}],[\"但在远处将它们合并成一个网格并进行\",{\"1\":{\"218\":1}}],[\"但在移动设备上速度较慢\",{\"1\":{\"216\":1}}],[\"但在内存不足时分页需要丢弃内核页\",{\"1\":{\"203\":1}}],[\"但在使用\",{\"1\":{\"192\":1}}],[\"但在释放和分配内存方面也是不可预测的\",{\"1\":{\"96\":1}}],[\"但当你重新设置父对象时\",{\"1\":{\"182\":1}}],[\"但也意味着预定义程序集不能直接使用此程序集中的代码\",{\"1\":{\"292\":1}}],[\"但也意味着一些优化无法在不破坏其他功能的情况下轻松完成\",{\"1\":{\"175\":1}}],[\"但也很容易忘记调整纹理大小或无意中更改纹理大小导入设置\",{\"1\":{\"247\":1}}],[\"但也为感兴趣的读者额外补充了一些材料\",{\"1\":{\"245\":1}}],[\"但也使得相对简单地创建性能问题\",{\"1\":{\"171\":1}}],[\"但经常作为性能热点出现\",{\"1\":{\"168\":1}}],[\"但请记住\",{\"1\":{\"163\":1}}],[\"但请注意\",{\"1\":{\"106\":1}}],[\"但由于将工作负载分摊到多个帧中\",{\"1\":{\"275\":1}}],[\"但由于其产品在背景上滚动\",{\"1\":{\"159\":1}}],[\"但由于\",{\"1\":{\"159\":1}}],[\"但这是对先前版本的改进\",{\"1\":{\"280\":1}}],[\"但这是劳动密集型的\",{\"1\":{\"159\":1}}],[\"但这个过程需要大量的\",{\"1\":{\"277\":1}}],[\"但这种情况需要咨询音频设计师\",{\"1\":{\"249\":1}}],[\"但这种差异对于阴影投射器通道无关紧要\",{\"1\":{\"110\":1}}],[\"但这超出了本指南的范围\",{\"1\":{\"203\":1}}],[\"但这取决于具体情况以及需要优化什么\",{\"1\":{\"197\":1}}],[\"但这会导致不必要的脏标记\",{\"1\":{\"182\":1}}],[\"但这应该只作为最后的手段\",{\"1\":{\"175\":1}}],[\"但这在大多数情况下应该是可以接受的\",{\"1\":{\"157\":1}}],[\"但包括\",{\"1\":{\"150\":1}}],[\"但复杂的\",{\"1\":{\"139\":1}}],[\"但场景仍能正确渲染\",{\"1\":{\"129\":1}}],[\"但自定义\",{\"1\":{\"120\":1}}],[\"但除了变换之外没有其他每实例属性\",{\"1\":{\"119\":1}}],[\"但作为一般规则\",{\"1\":{\"117\":1}}],[\"但使用\",{\"1\":{\"108\":1}}],[\"但单独渲染组合中的每个网格\",{\"1\":{\"106\":1}}],[\"但加载期间的溢出不如每帧溢出关键\",{\"1\":{\"103\":1}}],[\"但其余帧低于\",{\"1\":{\"102\":1}}],[\"但它与\",{\"1\":{\"254\":1}}],[\"但它始终按照调度顺序执行它们\",{\"1\":{\"227\":1}}],[\"但它确保\",{\"1\":{\"218\":1}}],[\"但它们每帧执行数千次\",{\"1\":{\"272\":1}}],[\"但它们可能对性能的影响极大\",{\"1\":{\"253\":1}}],[\"但它们交换到\",{\"1\":{\"205\":1}}],[\"但它们也会增加应用程序的二进制大小和运行时内存\",{\"1\":{\"198\":1}}],[\"但它们将保留在内存中\",{\"1\":{\"173\":1}}],[\"但它们确实需要一个实例\",{\"1\":{\"120\":1}}],[\"但它还\",{\"1\":{\"106\":1}}],[\"但它仅在对象之间的\",{\"1\":{\"97\":1}}],[\"但它有一些缺点\",{\"1\":{\"96\":1}}],[\"但了解它包含与您的代码生成的执行代码相关的内存会很有用\",{\"1\":{\"96\":1}}],[\"但分散单帧卡顿峰值\",{\"1\":{\"74\":1}}],[\"但对物体形态变化有要求\",{\"1\":{\"69\":1}}],[\"但对于总电量敏感的放置类游戏\",{\"1\":{\"55\":1}}],[\"但\",{\"1\":{\"60\":1,\"148\":1,\"168\":1,\"179\":1,\"231\":1,\"269\":1,\"284\":1,\"305\":1,\"392\":1}}],[\"但有些在结构上\",{\"1\":{\"171\":1}}],[\"但有两个控件是许多在接近可发布状态的游戏中遇到的性能问题的根源\",{\"1\":{\"167\":1}}],[\"但有一个特别关键\",{\"1\":{\"148\":1}}],[\"但有性能开销\",{\"1\":{\"60\":1}}],[\"但有c\",{\"1\":{\"60\":1}}],[\"但非必须\",{\"1\":{\"57\":1}}],[\"但是策略写的不好\",{\"1\":{\"403\":1}}],[\"但是你的调用的某个公共库已经有了很大的内存分配\",{\"1\":{\"388\":1}}],[\"但是你检查了\",{\"1\":{\"60\":1}}],[\"但是在\",{\"1\":{\"387\":1}}],[\"但是手机是不做内存交换的\",{\"1\":{\"387\":1}}],[\"但是不执行\",{\"1\":{\"371\":1}}],[\"但是随着项目中代码的增多\",{\"1\":{\"289\":1}}],[\"但是低效的字符串比较方法可以被简单地优化掉了\",{\"1\":{\"252\":1}}],[\"但是请注意\",{\"1\":{\"173\":1}}],[\"但是可以降低\",{\"1\":{\"127\":1}}],[\"但是材质不相同\",{\"1\":{\"112\":1}}],[\"但是要求玩家能看到npc\",{\"1\":{\"93\":1}}],[\"但是\",{\"1\":{\"55\":1,\"97\":1,\"108\":1,\"110\":1,\"112\":2,\"118\":1,\"149\":1,\"159\":1,\"168\":1,\"212\":1,\"215\":2,\"217\":1,\"222\":1,\"228\":1,\"230\":1,\"246\":2,\"248\":1,\"253\":1,\"254\":1,\"268\":1,\"270\":1,\"271\":1,\"272\":1,\"273\":1,\"275\":1,\"277\":1,\"278\":1,\"281\":1,\"307\":2,\"348\":1,\"394\":1}}],[\"但开启\",{\"1\":{\"55\":1}}],[\"但如果检测到你开了\",{\"1\":{\"396\":1}}],[\"但如果声音的数据量非常小\",{\"1\":{\"392\":1}}],[\"但如果游戏庞大到几十个\",{\"1\":{\"389\":1}}],[\"但如果设备不支持\",{\"1\":{\"231\":1}}],[\"但如果相机不使用\",{\"1\":{\"213\":1}}],[\"但如果这些声音靠近或变响\",{\"1\":{\"201\":1}}],[\"但如果你想一次加载许多\",{\"1\":{\"200\":1}}],[\"但如果它们使用相同的着色器\",{\"1\":{\"135\":1}}],[\"但如果它们在计算帧时发生\",{\"1\":{\"100\":1}}],[\"但如果每个对象使用不同的网格也会得到相同的结果\",{\"1\":{\"125\":1}}],[\"但如果您想微调应用程序性能的某些方面\",{\"1\":{\"96\":1}}],[\"但如果场景中仍有引用会导致资源丢失\",{\"1\":{\"65\":1}}],[\"但如果\",{\"1\":{\"48\":1}}],[\"但不包含\",{\"1\":{\"304\":1}}],[\"但不包含在任何\",{\"1\":{\"143\":1}}],[\"但不释放分配给集合的内存\",{\"1\":{\"282\":1}}],[\"但不再使用该图形\",{\"1\":{\"244\":1}}],[\"但不使用交换空间\",{\"1\":{\"203\":1}}],[\"但不能保证它会工作\",{\"1\":{\"151\":1}}],[\"但不能批处理使用顶点位置\",{\"1\":{\"109\":1}}],[\"但不同程序集中类之间的循环引用是不允许的\",{\"1\":{\"293\":1}}],[\"但不同\",{\"1\":{\"58\":1}}],[\"但不总是\",{\"1\":{\"48\":1}}],[\"但不依附于\",{\"1\":{\"45\":1}}],[\"但好的答案应包含以下几点\",{\"1\":{\"44\":1}}],[\"但相同\",{\"1\":{\"43\":1}}],[\"但会改善\",{\"1\":{\"401\":1}}],[\"但会占用更多的磁盘空间和\",{\"1\":{\"213\":1}}],[\"但会增加总体的\",{\"1\":{\"42\":1}}],[\"但会暂停主线程\",{\"1\":{\"42\":1}}],[\"兼容对象将使用\",{\"1\":{\"129\":1}}],[\"兼容性信息\",{\"1\":{\"114\":1}}],[\"兼容性\",{\"0\":{\"129\":1},\"1\":{\"108\":1,\"112\":1,\"114\":1,\"123\":1,\"129\":1}}],[\"兼容的着色器\",{\"1\":{\"129\":1}}],[\"兼容的\",{\"1\":{\"106\":1,\"112\":1,\"115\":1}}],[\"兼容\",{\"1\":{\"43\":1,\"55\":1,\"74\":1,\"114\":1,\"129\":2,\"136\":1}}],[\"下一代\",{\"1\":{\"401\":1}}],[\"下一步\",{\"1\":{\"77\":1}}],[\"下次要用了再填进去\",{\"1\":{\"401\":1}}],[\"下次调用此方法时\",{\"1\":{\"281\":1}}],[\"下则是你使用时才会加载\",{\"1\":{\"389\":1}}],[\"下和在\",{\"1\":{\"389\":1}}],[\"下创建文件\",{\"1\":{\"339\":1}}],[\"下篇\",{\"1\":{\"320\":1}}],[\"下方的会话禁用了\",{\"1\":{\"275\":1}}],[\"下方的所有\",{\"1\":{\"155\":1}}],[\"下\",{\"1\":{\"215\":1,\"239\":1,\"271\":1,\"389\":1}}],[\"下拉菜单\",{\"1\":{\"214\":1}}],[\"下拉菜单并选择\",{\"1\":{\"192\":1}}],[\"下拉菜单中选择\",{\"1\":{\"190\":1}}],[\"下面会有很多子内存\",{\"1\":{\"390\":1}}],[\"下面的池时就可以问\",{\"1\":{\"390\":1}}],[\"下面的代码展示了一个基于堆栈的对象池的简单实现\",{\"1\":{\"279\":1}}],[\"下面将讨论两种可能的方法\",{\"1\":{\"170\":1}}],[\"下面是由它们生成的批处理列表\",{\"1\":{\"148\":1}}],[\"下面这个表格汇总了常见的考察方向和核心问题\",{\"1\":{\"66\":1}}],[\"下面这个表格汇总了\",{\"1\":{\"61\":1}}],[\"下表列出了从高到低的\",{\"1\":{\"388\":1}}],[\"下表列出了每种分配器类型的算法和用途\",{\"1\":{\"98\":1}}],[\"下表显示了一小部分常见的分配\",{\"1\":{\"286\":1}}],[\"下表显示平台和所需的最低\",{\"1\":{\"133\":1}}],[\"下表提供了按分辨率和位\",{\"1\":{\"233\":1}}],[\"下表概述了图形作业在每个平台和图形\",{\"1\":{\"228\":1}}],[\"下表概述了可以在哪些平台和图形\",{\"1\":{\"225\":1}}],[\"下表比较了结果并描述了详细的统计信息\",{\"1\":{\"205\":1}}],[\"下图演示了\",{\"1\":{\"100\":1}}],[\"下与\",{\"1\":{\"96\":1}}],[\"下的\",{\"1\":{\"188\":1,\"215\":1}}],[\"下的一种新的合批机制\",{\"1\":{\"58\":1}}],[\"下的新技术\",{\"1\":{\"43\":1}}],[\"下载并呈现构建报告的详细信息\",{\"1\":{\"199\":1}}],[\"下载狗\",{\"1\":{\"30\":1}}],[\"下载\",{\"1\":{\"18\":1,\"25\":1,\"27\":1,\"38\":1,\"84\":1,\"160\":1}}],[\"石头\",{\"1\":{\"43\":1}}],[\"非压缩式\",{\"1\":{\"401\":1}}],[\"非压缩式的\",{\"1\":{\"400\":1}}],[\"非分配\",{\"1\":{\"286\":1}}],[\"非二次幂\",{\"1\":{\"221\":1}}],[\"非托管代码\",{\"1\":{\"371\":1}}],[\"非托管\",{\"1\":{\"96\":1}}],[\"非托管内存层允许您访问原生内存层以微调内存分配\",{\"1\":{\"96\":1}}],[\"非托管内存层\",{\"1\":{\"96\":1}}],[\"非托管内存\",{\"1\":{\"96\":4}}],[\"非精确的光照法线\",{\"1\":{\"76\":1}}],[\"非物理移动\",{\"1\":{\"67\":1}}],[\"非常大\",{\"1\":{\"395\":1}}],[\"非常快\",{\"1\":{\"394\":1}}],[\"非常相似\",{\"1\":{\"272\":1}}],[\"非常有用\",{\"1\":{\"213\":1}}],[\"非常好\",{\"1\":{\"134\":1}}],[\"非常繁琐\",{\"1\":{\"60\":1}}],[\"非常\",{\"1\":{\"58\":1}}],[\"非常适合处理\",{\"1\":{\"49\":1}}],[\"非常适合处理游戏中的时间相关逻辑\",{\"1\":{\"49\":1}}],[\"非常适合与\",{\"1\":{\"46\":1}}],[\"非常适合绘制草\",{\"1\":{\"43\":1}}],[\"非\",{\"1\":{\"57\":1,\"289\":1}}],[\"非主线程的\",{\"1\":{\"57\":1}}],[\"非官方下载网站\",{\"1\":{\"22\":1}}],[\"实操\",{\"1\":{\"314\":1}}],[\"实操训练\",{\"1\":{\"313\":1}}],[\"实施合理的纹理大小限制\",{\"1\":{\"247\":1}}],[\"实际的东西反序列化\",{\"1\":{\"394\":1}}],[\"实际效果\",{\"1\":{\"359\":1}}],[\"实际效果与包裹在\",{\"1\":{\"263\":1}}],[\"实际上\",{\"1\":{\"399\":1}}],[\"实际上正是这些\",{\"1\":{\"257\":1}}],[\"实际上并不进行射线检测\",{\"1\":{\"179\":1}}],[\"实际上并没有遮挡整个\",{\"1\":{\"158\":1}}],[\"实际项目中发现的许多问题都是源自无心之过\",{\"1\":{\"246\":1}}],[\"实时光线追踪\",{\"1\":{\"333\":1}}],[\"实时可听度\",{\"1\":{\"201\":1}}],[\"实时性要求高\",{\"1\":{\"87\":1}}],[\"实体\",{\"1\":{\"46\":1}}],[\"实例可以在\",{\"1\":{\"116\":1}}],[\"实例支持以下来源\",{\"1\":{\"116\":1}}],[\"实例\",{\"1\":{\"45\":1,\"203\":1,\"250\":1}}],[\"实例化一个新的抛射物对象并不是最佳的\",{\"1\":{\"279\":1}}],[\"实例化成本归因于调用预制件中每个组件上的\",{\"1\":{\"267\":1}}],[\"实例化只有在大约\",{\"1\":{\"216\":1}}],[\"实例化足以填充\",{\"1\":{\"170\":1}}],[\"实例化所有\",{\"1\":{\"170\":1}}],[\"实例化所需的着色器关键字\",{\"1\":{\"118\":1}}],[\"实例化具有不同\",{\"1\":{\"120\":1}}],[\"实例化着色器添加每实例属性\",{\"0\":{\"120\":1}}],[\"实例化应用于\",{\"1\":{\"118\":3}}],[\"实例化的\",{\"1\":{\"119\":1}}],[\"实例化的着色器变体\",{\"0\":{\"119\":1}}],[\"实例化的着色器\",{\"0\":{\"118\":1}}],[\"实例化的平台\",{\"1\":{\"114\":1}}],[\"实例化高效处理\",{\"1\":{\"117\":1}}],[\"实例化自动适用于\",{\"1\":{\"116\":1}}],[\"实例化和\",{\"1\":{\"116\":1,\"118\":2}}],[\"实例化支持的信息\",{\"1\":{\"118\":1}}],[\"实例化支持\",{\"1\":{\"115\":1,\"116\":1}}],[\"实例化与\",{\"1\":{\"114\":1}}],[\"实例化在所有平台上都可用\",{\"1\":{\"114\":1}}],[\"实例化在同一个绘制调用中渲染相同的网格\",{\"1\":{\"113\":1}}],[\"实例化对您的应用程序比\",{\"1\":{\"112\":1}}],[\"实例化对于绘制在场景中多次出现的几何体\",{\"1\":{\"106\":1}}],[\"实例化而不是\",{\"1\":{\"112\":1}}],[\"实例化可能比\",{\"1\":{\"112\":1}}],[\"实例化\",{\"0\":{\"107\":1,\"113\":1,\"115\":1},\"1\":{\"43\":1,\"107\":1,\"112\":2,\"114\":3,\"115\":5,\"117\":1,\"124\":1,\"216\":2}}],[\"实现上那样用于交换空间\",{\"1\":{\"387\":1}}],[\"实现这一点\",{\"1\":{\"146\":1}}],[\"实现了该回调并调用方法\",{\"1\":{\"170\":1}}],[\"实现了\",{\"1\":{\"96\":1}}],[\"实现了真正的\",{\"1\":{\"65\":1}}],[\"实现非阻塞的逻辑\",{\"1\":{\"80\":1}}],[\"实现稍复杂\",{\"1\":{\"75\":1}}],[\"实现可靠传输\",{\"1\":{\"71\":1}}],[\"实现思路\",{\"1\":{\"64\":1}}],[\"实现的一个虚拟机来解释执行\",{\"1\":{\"65\":1}}],[\"实现的一种迭代器\",{\"1\":{\"57\":1}}],[\"实现的迭代器\",{\"1\":{\"49\":1}}],[\"实现\",{\"1\":{\"20\":1,\"172\":1,\"225\":1,\"318\":1,\"371\":2}}],[\"有硬解支持的\",{\"1\":{\"392\":1}}],[\"有过多\",{\"1\":{\"391\":1}}],[\"有的大的会几天\",{\"1\":{\"389\":1}}],[\"有序\",{\"1\":{\"382\":1}}],[\"有自己的虚拟机\",{\"1\":{\"371\":1}}],[\"有条件地包含程序集\",{\"0\":{\"301\":1}}],[\"有条件限制\",{\"1\":{\"83\":1}}],[\"有三个选项\",{\"1\":{\"275\":1}}],[\"有三种模式\",{\"1\":{\"274\":1}}],[\"有效帧率为显示器的原生刷新率除以\",{\"1\":{\"275\":1}}],[\"有一种减图片大小的方式\",{\"1\":{\"394\":1}}],[\"有一个内置\",{\"1\":{\"261\":1}}],[\"有一些例外\",{\"1\":{\"197\":1}}],[\"有一些行为并不为人所知\",{\"1\":{\"168\":1}}],[\"有一些优化策略\",{\"1\":{\"106\":1}}],[\"有多少原因导致性能问题\",{\"1\":{\"256\":1}}],[\"有几个性能分析工具可用于分析\",{\"1\":{\"147\":1}}],[\"有几个基本类和组件共同构成了这个系统\",{\"1\":{\"140\":1}}],[\"有时也会注意一下\",{\"1\":{\"388\":1}}],[\"有时也称为脚本内存系统\",{\"1\":{\"96\":1}}],[\"有时你想隐藏一些\",{\"1\":{\"183\":1}}],[\"有时就是没有干净的方法来优化\",{\"1\":{\"171\":1}}],[\"有时\",{\"1\":{\"134\":1,\"281\":1}}],[\"有些开发者会在游戏开始启用一个协程\",{\"1\":{\"404\":1}}],[\"有些开发者写了队列调度策略\",{\"1\":{\"403\":1}}],[\"有些版本\",{\"1\":{\"397\":1}}],[\"有些方法可能需要彻底删除\",{\"1\":{\"273\":1}}],[\"有些是持久的\",{\"1\":{\"200\":1}}],[\"有些不兼容\",{\"1\":{\"129\":1}}],[\"有些对象与\",{\"1\":{\"129\":1}}],[\"有两个要求\",{\"1\":{\"129\":1}}],[\"有两种处理内存不足情况的主要机制\",{\"1\":{\"388\":1}}],[\"有两种基本方法来填充滚动视图\",{\"1\":{\"170\":1}}],[\"有两种方法可以从\",{\"1\":{\"112\":1}}],[\"有两种方法可以做到这一点\",{\"1\":{\"106\":1}}],[\"有两种主要方法可以组合网格\",{\"1\":{\"111\":1}}],[\"有五种分配器类型\",{\"1\":{\"98\":1}}],[\"有关其他信息\",{\"1\":{\"301\":1}}],[\"有关安装\",{\"1\":{\"298\":1}}],[\"有关使用\",{\"1\":{\"254\":1}}],[\"有关比较\",{\"1\":{\"250\":1}}],[\"有关\",{\"1\":{\"221\":1,\"263\":1,\"289\":1,\"305\":1}}],[\"有关分析托管内存和如何优化内存的更多信息\",{\"1\":{\"188\":1}}],[\"有关详细信息\",{\"1\":{\"172\":1}}],[\"有关替代解决方案\",{\"1\":{\"155\":1}}],[\"有关更多详细信息\",{\"1\":{\"154\":1,\"216\":1,\"234\":1,\"237\":1}}],[\"有关更多信息和提示\",{\"1\":{\"216\":1}}],[\"有关更多信息和代码示例\",{\"1\":{\"116\":1}}],[\"有关更多信息\",{\"1\":{\"96\":1,\"97\":1,\"104\":2,\"108\":1,\"110\":1,\"112\":2,\"116\":1,\"197\":1,\"205\":1,\"215\":2,\"242\":1}}],[\"有关此问题的潜在解决方法\",{\"1\":{\"168\":1}}],[\"有关此问题的进一步讨论\",{\"1\":{\"149\":1}}],[\"有关此内容的更多信息\",{\"1\":{\"96\":1}}],[\"有关单个元素的位置如何受\",{\"1\":{\"145\":1}}],[\"有关光照通道的更多信息\",{\"1\":{\"120\":1}}],[\"有关示例\",{\"1\":{\"118\":1}}],[\"有关可用选项开关的信息\",{\"1\":{\"118\":1}}],[\"有关可通过\",{\"1\":{\"104\":1}}],[\"有关优化方法优先级的更多信息\",{\"1\":{\"114\":1}}],[\"有关网格和动态生成的几何体之间的内部差异的信息\",{\"1\":{\"110\":1}}],[\"有关静态批处理的性能影响的信息\",{\"1\":{\"109\":1}}],[\"有关静态批处理的性能影响的更多信息\",{\"1\":{\"109\":1}}],[\"有关组合网格的更多信息\",{\"1\":{\"108\":1}}],[\"有关每种\",{\"1\":{\"108\":1}}],[\"有关如何在运行时启用和禁用垃圾回收的详细信息\",{\"1\":{\"276\":1}}],[\"有关如何执行此操作的示例\",{\"1\":{\"120\":1}}],[\"有关如何执行此操作的信息\",{\"1\":{\"114\":1}}],[\"有关如何设置这些块大小的信息\",{\"1\":{\"99\":1}}],[\"有关如何使用此\",{\"1\":{\"109\":1}}],[\"有关如何使用\",{\"1\":{\"97\":1,\"120\":1}}],[\"有深度和广度的问题\",{\"1\":{\"73\":1}}],[\"有深度的例子\",{\"1\":{\"52\":1}}],[\"有哪些优化方法\",{\"1\":{\"69\":1}}],[\"有更深入的疑问\",{\"1\":{\"66\":1,\"72\":1}}],[\"有何不同\",{\"1\":{\"60\":1}}],[\"有什么了解\",{\"1\":{\"90\":1}}],[\"有什么要求\",{\"1\":{\"58\":1}}],[\"有什么区别\",{\"0\":{\"47\":1,\"49\":1}}],[\"有\",{\"1\":{\"43\":1,\"201\":1}}],[\"合理划分\",{\"0\":{\"178\":1},\"1\":{\"178\":1}}],[\"合并的规则为\",{\"1\":{\"379\":1}}],[\"合并成一个网格\",{\"1\":{\"379\":1}}],[\"合并成一个大\",{\"1\":{\"43\":1}}],[\"合并工具\",{\"1\":{\"317\":1}}],[\"合并压缩模型贴图\",{\"1\":{\"317\":1,\"318\":1}}],[\"合并\",{\"1\":{\"317\":1}}],[\"合并网格主要有两种方法\",{\"1\":{\"288\":1}}],[\"合并为一个网格\",{\"1\":{\"288\":1}}],[\"合并cbuffer\",{\"1\":{\"60\":1}}],[\"合并mesh\",{\"1\":{\"60\":1}}],[\"合作上\",{\"1\":{\"401\":1}}],[\"合作\",{\"1\":{\"52\":1}}],[\"合批\",{\"1\":{\"41\":1,\"43\":1,\"55\":1,\"74\":1,\"83\":1}}],[\"会涨一大截\",{\"1\":{\"402\":1}}],[\"会对整体回收内存池的贡献有多少\",{\"1\":{\"400\":1}}],[\"会回收多少内存\",{\"1\":{\"400\":1}}],[\"会极大拖慢游戏的启动时间\",{\"1\":{\"395\":1}}],[\"会持续对游戏造成内存压力\",{\"1\":{\"395\":1}}],[\"会依次将\",{\"1\":{\"394\":1}}],[\"会序列化到\",{\"1\":{\"394\":1}}],[\"会用一个默认值来序列化\",{\"1\":{\"394\":1}}],[\"会建议改成\",{\"1\":{\"392\":1}}],[\"会把同样的代码排列组合都编译一边\",{\"1\":{\"393\":1}}],[\"会把声音设为双声道\",{\"1\":{\"392\":1}}],[\"会把公共库所使用的内存平摊到所有调用这个库的\",{\"1\":{\"388\":1}}],[\"会有一个\",{\"1\":{\"392\":1}}],[\"会造成\",{\"1\":{\"392\":1}}],[\"会需要一个额外的\",{\"1\":{\"390\":1}}],[\"会消耗很多时间\",{\"1\":{\"389\":1}}],[\"会随着页面进出\",{\"1\":{\"387\":1}}],[\"会去主内存拿一段完整的指令到\",{\"1\":{\"387\":1}}],[\"会加载程序集\",{\"1\":{\"371\":1}}],[\"会加载着色器的所有子着色器\",{\"1\":{\"242\":1}}],[\"会覆盖站点配置中的\",{\"1\":{\"365\":1}}],[\"会重新编译项目中的脚本以创建新的程序集\",{\"1\":{\"294\":1}}],[\"会重用\",{\"1\":{\"200\":1}}],[\"会多一个\",{\"1\":{\"291\":1}}],[\"会获取包含程序集定义资产的文件夹中的所有脚本\",{\"1\":{\"290\":1}}],[\"会绘制整个合并网格\",{\"1\":{\"288\":1}}],[\"会绘制整个组合网格\",{\"1\":{\"111\":1}}],[\"会实例化此类的一个副本\",{\"1\":{\"283\":1}}],[\"会删除这些未被引用的对象\",{\"1\":{\"274\":1}}],[\"会检查堆中的所有对象\",{\"1\":{\"274\":1}}],[\"会运行垃圾回收器\",{\"1\":{\"274\":1}}],[\"会生成一个\",{\"1\":{\"390\":1}}],[\"会生成一个匿名类\",{\"1\":{\"283\":1}}],[\"会生成额外代码\",{\"1\":{\"275\":1}}],[\"会生成相同数量的线程\",{\"1\":{\"269\":1}}],[\"会生成带有实例化\",{\"1\":{\"119\":1}}],[\"会显示\",{\"1\":{\"269\":1}}],[\"会尝试为这些线程提供相同的时间\",{\"1\":{\"269\":1}}],[\"会跟踪感兴趣的列表中的对象的回调\",{\"1\":{\"267\":1}}],[\"会启用阴影投射和接收\",{\"1\":{\"248\":1}}],[\"会在生成数据类型序列化的时候\",{\"1\":{\"394\":1}}],[\"会在\",{\"1\":{\"339\":1,\"350\":1}}],[\"会在一次\",{\"1\":{\"288\":1}}],[\"会在每次实例化模型时创建一个大型变换层级视图来镜像模型的骨骼结构\",{\"1\":{\"248\":1}}],[\"会在加载纹理时解压缩纹理\",{\"1\":{\"247\":1}}],[\"会要求启用此标志\",{\"1\":{\"248\":1}}],[\"会导致\",{\"1\":{\"392\":1,\"394\":1}}],[\"会导致声音的延迟\",{\"1\":{\"392\":1}}],[\"会导致两种问题\",{\"1\":{\"392\":1}}],[\"会导致再次调用此代码片段\",{\"1\":{\"246\":1}}],[\"会导致整个\",{\"1\":{\"178\":1}}],[\"会阻塞主线程并唤醒所有资源\",{\"1\":{\"222\":1}}],[\"会直接从预加载作业转到\",{\"1\":{\"222\":1}}],[\"会直接修改\",{\"1\":{\"45\":1}}],[\"会根据你的\",{\"1\":{\"390\":1}}],[\"会根据剩余可用帧时间调整垃圾回收的时间分配\",{\"1\":{\"275\":1}}],[\"会根据\",{\"1\":{\"221\":1,\"394\":1}}],[\"会清除以防止帧缓冲区恢复\",{\"1\":{\"212\":1}}],[\"会处理细节\",{\"1\":{\"212\":1}}],[\"会分页到磁盘\",{\"1\":{\"203\":1}}],[\"会构建一个包含构建中每个程序集中的每个类型和方法的映射\",{\"1\":{\"195\":1}}],[\"会尽最大努力消除所有未使用的\",{\"1\":{\"194\":1}}],[\"会遍历类型和方法之间的依赖关系图\",{\"1\":{\"195\":1}}],[\"会遍历当前分配或活动的后备字体资源列表\",{\"1\":{\"169\":1}}],[\"会遍历整个场景\",{\"1\":{\"77\":1}}],[\"会迅速用许多不同大小的字形淹没图集\",{\"1\":{\"168\":1}}],[\"会迅速超出\",{\"1\":{\"142\":1}}],[\"会收集所有属性并在\",{\"1\":{\"126\":1}}],[\"会收集所有属性并将它们绑定到\",{\"1\":{\"112\":1}}],[\"会破坏\",{\"1\":{\"123\":1}}],[\"会从内置资源中剥离所有特定于它的着色器\",{\"1\":{\"244\":1}}],[\"会从预加载线程\",{\"1\":{\"222\":1}}],[\"会从代码库中移除任何你未使用的代码路径\",{\"1\":{\"191\":1}}],[\"会从\",{\"1\":{\"120\":1,\"192\":1}}],[\"会从引用的材质中获取默认值\",{\"1\":{\"118\":1}}],[\"会剥离实例化着色器变体\",{\"1\":{\"119\":1}}],[\"会创建另一个批处理\",{\"1\":{\"109\":1}}],[\"会为非角色模型导入通用骨架\",{\"1\":{\"248\":1}}],[\"会为每个通道绘制它\",{\"1\":{\"215\":1}}],[\"会为每个选定的目标架构构建二进制文件\",{\"1\":{\"190\":1}}],[\"会为每个对象一起渲染后面的通道\",{\"1\":{\"120\":1}}],[\"会为每个\",{\"1\":{\"109\":1}}],[\"会为任何不再有任何引用指向它的原生对象执行此操作\",{\"1\":{\"97\":1}}],[\"会自动创建目录\",{\"1\":{\"345\":1}}],[\"会自动创建一个实例\",{\"1\":{\"216\":1}}],[\"会自动设置实例\",{\"1\":{\"120\":1}}],[\"会自动计算实例化数据数组大小\",{\"1\":{\"118\":1}}],[\"会自动将每帧剩余的空闲时间用于增量式垃圾回收\",{\"1\":{\"275\":1}}],[\"会自动将它们批处理到同一绘制调用中\",{\"1\":{\"110\":1}}],[\"会自动将指定的静态网格批处理到同一绘制调用中\",{\"1\":{\"109\":1}}],[\"会自动加载其依赖的ab包\",{\"1\":{\"60\":1}}],[\"会禁用该网格的动态批处理\",{\"1\":{\"106\":1}}],[\"会禁用该\",{\"1\":{\"106\":1}}],[\"会使用时间切片\",{\"1\":{\"222\":1}}],[\"会使用\",{\"1\":{\"114\":1,\"369\":1}}],[\"会使用优先级最高的方法\",{\"1\":{\"106\":1}}],[\"会使用虚拟内存\",{\"1\":{\"99\":1}}],[\"会按特定顺序优先考虑绘制调用优化方法\",{\"1\":{\"106\":1}}],[\"会设置资源并更改\",{\"1\":{\"106\":1}}],[\"会向图形\",{\"1\":{\"106\":1}}],[\"会增加块大小\",{\"1\":{\"102\":1}}],[\"会触发\",{\"1\":{\"97\":1}}],[\"会更高效\",{\"1\":{\"169\":1}}],[\"会更高\",{\"1\":{\"74\":1}}],[\"会保留在内存中\",{\"1\":{\"70\":1}}],[\"会保存当前函数的执行状态\",{\"1\":{\"49\":1}}],[\"会卸载最近最少使用的纹理\",{\"1\":{\"222\":1}}],[\"会卸载\",{\"1\":{\"65\":1,\"70\":1}}],[\"会怎么写\",{\"1\":{\"60\":1}}],[\"会将名为\",{\"1\":{\"307\":1}}],[\"会将几乎所有的游戏脚本编译到预定义\",{\"1\":{\"289\":1}}],[\"会将这些标记为根\",{\"1\":{\"196\":1}}],[\"会将这个被调用的类型和方法标记为正在使用\",{\"1\":{\"195\":1}}],[\"会将用户程序集中的所有类型和方法标记为根\",{\"1\":{\"196\":1}}],[\"会将它们标记为根\",{\"1\":{\"196\":1}}],[\"会将许多类型和方法标记为\",{\"1\":{\"195\":1}}],[\"会将值设置为\",{\"1\":{\"118\":1}}],[\"会将执行权交还给主线程\",{\"1\":{\"60\":1}}],[\"会将同类数据\",{\"1\":{\"46\":1}}],[\"会发生什么\",{\"1\":{\"60\":2}}],[\"会拖慢\",{\"1\":{\"59\":1}}],[\"会释放线程\",{\"1\":{\"57\":1}}],[\"会订阅这个事件\",{\"1\":{\"56\":1}}],[\"会复制一份完整的数据\",{\"1\":{\"48\":1}}],[\"会耗尽\",{\"1\":{\"43\":1}}],[\"会产生闭包和迭代器对象\",{\"1\":{\"74\":1}}],[\"会产生一个新的\",{\"1\":{\"42\":1}}],[\"会产生\",{\"1\":{\"42\":1}}],[\"嘿\",{\"1\":{\"43\":1}}],[\"绘制顺序\",{\"1\":{\"215\":1}}],[\"绘制镜面反射\",{\"1\":{\"215\":1}}],[\"绘制漫反射\",{\"1\":{\"215\":1}}],[\"绘制的所有几何体都将在\",{\"1\":{\"142\":1}}],[\"绘制的一般流程为\",{\"1\":{\"106\":1}}],[\"绘制调用优化至关重要\",{\"1\":{\"216\":1}}],[\"绘制调用批处理\",{\"0\":{\"216\":1},\"1\":{\"216\":2}}],[\"绘制调用的位置取决于正在绘制的\",{\"1\":{\"149\":1}}],[\"绘制调用的开销通常要低得多\",{\"1\":{\"110\":1}}],[\"绘制调用的资源需求取决于许多因素\",{\"1\":{\"110\":1}}],[\"绘制调用\",{\"1\":{\"106\":1}}],[\"绘制调用告诉图形\",{\"1\":{\"106\":1}}],[\"绘制成百上千个相同的\",{\"1\":{\"43\":1}}],[\"绘制\",{\"1\":{\"43\":1}}],[\"绘制大量相同\",{\"1\":{\"41\":1}}],[\"向外复制时进行解压缩\",{\"1\":{\"387\":1}}],[\"向量\",{\"1\":{\"325\":1}}],[\"向量计算\",{\"1\":{\"323\":1}}],[\"向下滚动并取消选中\",{\"1\":{\"225\":1}}],[\"向下滚动到\",{\"1\":{\"190\":1,\"192\":1,\"232\":1,\"234\":1,\"244\":1}}],[\"向多通道着色器添加每实例数据时\",{\"1\":{\"120\":1}}],[\"向\",{\"0\":{\"120\":1},\"1\":{\"43\":1,\"168\":1,\"183\":1}}],[\"定向光\",{\"1\":{\"329\":1}}],[\"定向包围盒\",{\"1\":{\"326\":1}}],[\"定期宣讲最佳实践\",{\"1\":{\"60\":1}}],[\"定位性能瓶颈并实施优化\",{\"1\":{\"66\":1}}],[\"定位\",{\"1\":{\"55\":1}}],[\"定位到是animator\",{\"1\":{\"52\":1}}],[\"定位问题\",{\"1\":{\"41\":1}}],[\"定制性差\",{\"1\":{\"50\":1}}],[\"定义的\",{\"1\":{\"308\":1}}],[\"定义的符号\",{\"1\":{\"301\":1}}],[\"定义程序集\",{\"0\":{\"290\":1}}],[\"定义了平台相关的\",{\"1\":{\"201\":1}}],[\"定义了\",{\"1\":{\"139\":1}}],[\"定义具有指定类型和名称的每实例着色器属性\",{\"1\":{\"118\":1}}],[\"定义\",{\"1\":{\"43\":1,\"45\":1}}],[\"什么是内存\",{\"0\":{\"387\":1}}],[\"什么是内存泄漏\",{\"1\":{\"93\":1}}],[\"什么是闭包\",{\"1\":{\"93\":1}}],[\"什么是拆装箱\",{\"1\":{\"93\":1}}],[\"什么是值类型\",{\"0\":{\"48\":1}}],[\"什么是\",{\"0\":{\"43\":1,\"45\":1,\"51\":1},\"1\":{\"58\":1,\"136\":1}}],[\"它需要向\",{\"1\":{\"392\":1}}],[\"它需要仔细编程以避免产生死锁和竞争条件\",{\"1\":{\"254\":1}}],[\"它把很多张图片放置在一张图集上\",{\"1\":{\"379\":1}}],[\"它把一次大的\",{\"1\":{\"55\":1}}],[\"它比数组的效率还要差\",{\"1\":{\"369\":1}}],[\"它比纯\",{\"1\":{\"254\":1}}],[\"它并没有对多线程做任何加锁或其他同步操作\",{\"1\":{\"369\":1}}],[\"它同时也会作为\",{\"1\":{\"347\":1}}],[\"它提供了这种可重用对象池技术的实现\",{\"1\":{\"279\":1}}],[\"它必须能够访问其依赖项的编译版本\",{\"1\":{\"291\":1}}],[\"它必须能够访问该脚本所依赖的任何类型或其他代码\",{\"1\":{\"291\":1}}],[\"它必须清理分布在数千个单独分配中的\",{\"1\":{\"278\":1}}],[\"它必须满足以下要求\",{\"1\":{\"112\":1}}],[\"它不会停止应用程序以进行垃圾回收\",{\"1\":{\"276\":1}}],[\"它不能是粒子\",{\"1\":{\"112\":1}}],[\"它最适合游戏设计参数和其他内容\",{\"1\":{\"254\":1}}],[\"它以\",{\"1\":{\"251\":1}}],[\"它包括\",{\"1\":{\"239\":1}}],[\"它包含物品\",{\"1\":{\"56\":1}}],[\"它包含任务\",{\"1\":{\"56\":1}}],[\"它开始在另一个后备缓冲区中渲染\",{\"1\":{\"230\":1}}],[\"它通常会添加来自\",{\"1\":{\"228\":1}}],[\"它通过\",{\"1\":{\"80\":1}}],[\"它拥有真实的图形设备\",{\"1\":{\"225\":1}}],[\"它被称为\",{\"1\":{\"225\":1}}],[\"它被箭头和红色框突出显示\",{\"1\":{\"151\":1}}],[\"它表明存在多个相机\",{\"1\":{\"213\":1}}],[\"它计算成本高昂\",{\"1\":{\"212\":1}}],[\"它可能会导致称为撕裂\",{\"1\":{\"230\":1}}],[\"它可能会显著影响性能\",{\"1\":{\"212\":1}}],[\"它可以显著提高性能\",{\"1\":{\"213\":1}}],[\"它可以将事件转发给复合控件中每个感兴趣的组件\",{\"1\":{\"166\":1}}],[\"它可以在加载\",{\"1\":{\"98\":1}}],[\"它可以\",{\"1\":{\"57\":1}}],[\"它基本上涵盖了\",{\"1\":{\"206\":1}}],[\"它基本上是进程内部无法分页到磁盘的\",{\"1\":{\"205\":1}}],[\"它显示了与进程关联的虚拟内存量\",{\"1\":{\"205\":1}}],[\"它按使用量从高到低列出进程的内存使用情况\",{\"1\":{\"205\":1}}],[\"它主要是\",{\"1\":{\"205\":1}}],[\"它考虑了内存共享\",{\"1\":{\"205\":1}}],[\"它报告有关每个\",{\"1\":{\"205\":1}}],[\"它占用了大约\",{\"1\":{\"194\":1}}],[\"它获取\",{\"1\":{\"179\":1}}],[\"它生成代表\",{\"1\":{\"178\":1}}],[\"它为测试的每个大小增量在图集中生成字形\",{\"1\":{\"168\":1}}],[\"它为什么能提升性能\",{\"1\":{\"58\":1}}],[\"它为什么通常比\",{\"1\":{\"57\":1}}],[\"它遍历所有将\",{\"1\":{\"166\":1}}],[\"它都将被绘制\",{\"1\":{\"157\":1}}],[\"它运行实际的\",{\"1\":{\"150\":1}}],[\"它存在与前面描述的相同的问题\",{\"1\":{\"148\":1}}],[\"它由两个时间线和一个批处理查看器组成\",{\"1\":{\"148\":1}}],[\"它首先解释自定义\",{\"1\":{\"118\":1}}],[\"它首先将\",{\"1\":{\"57\":1}}],[\"它使用\",{\"1\":{\"150\":1}}],[\"它使用相同的材质在单个绘制调用中渲染网格的多个副本\",{\"1\":{\"113\":1}}],[\"它使材质数据持久保存在\",{\"1\":{\"112\":1}}],[\"它与\",{\"1\":{\"112\":1}}],[\"它与线程\",{\"1\":{\"80\":1}}],[\"它无法批处理每个像素灯光的额外绘制调用\",{\"1\":{\"110\":1}}],[\"它批处理移动的\",{\"1\":{\"110\":1}}],[\"它组合不移动的网格以减少\",{\"1\":{\"109\":1}}],[\"它组合网格以便\",{\"1\":{\"108\":1}}],[\"它还包括垃圾回收器管理的内存\",{\"1\":{\"274\":1}}],[\"它还限制了\",{\"1\":{\"248\":1}}],[\"它还为距离相机更远的距离组提供较低细节的网格\",{\"1\":{\"218\":1}}],[\"它还经常导致图集溢出\",{\"1\":{\"168\":1}}],[\"它还减少了设备在运行您的应用程序时产生的热量\",{\"1\":{\"106\":1}}],[\"它还会触发\",{\"1\":{\"97\":1}}],[\"它结合了\",{\"1\":{\"101\":2}}],[\"它也区分了托管内存和原生内存\",{\"1\":{\"206\":1}}],[\"它也包括帧缓冲区\",{\"1\":{\"205\":1}}],[\"它也将被加载\",{\"1\":{\"169\":1}}],[\"它也可以节省移动设备上的电池寿命\",{\"1\":{\"134\":1}}],[\"它也有一些缺点\",{\"1\":{\"108\":1}}],[\"它也需要有效地使用该内存\",{\"1\":{\"98\":1}}],[\"它也去订阅\",{\"1\":{\"56\":1}}],[\"它曾经占用的内存可以被回收并用于其他用途\",{\"1\":{\"97\":1}}],[\"它具有一个受控环境\",{\"1\":{\"96\":1}}],[\"它仍然在主线程上执行\",{\"1\":{\"80\":1}}],[\"它代表\",{\"1\":{\"74\":1}}],[\"它实现了\",{\"1\":{\"60\":1}}],[\"它分两个阶段完成此操作\",{\"1\":{\"168\":1}}],[\"它分两步\",{\"1\":{\"47\":1}}],[\"它分为五个章节\",{\"1\":{\"139\":1}}],[\"它分配在堆上\",{\"1\":{\"60\":1}}],[\"它高\",{\"1\":{\"60\":1}}],[\"它是非压缩式的\",{\"1\":{\"401\":1}}],[\"它是一种与即时编译\",{\"1\":{\"371\":1}}],[\"它是一个\",{\"1\":{\"168\":1}}],[\"它是进程内部无法分页到磁盘的\",{\"1\":{\"205\":1}}],[\"它是所有向\",{\"1\":{\"141\":1}}],[\"它是全场景遍历\",{\"1\":{\"59\":1}}],[\"它是什么\",{\"1\":{\"58\":1}}],[\"它在较低\",{\"1\":{\"218\":1}}],[\"它在某些情况下有缓存\",{\"1\":{\"59\":1}}],[\"它在构建时就完成了所有编译\",{\"1\":{\"57\":1}}],[\"它在主线程上运行\",{\"1\":{\"57\":1}}],[\"它调用目标平台\",{\"1\":{\"57\":1}}],[\"它本质上是时间分片\",{\"1\":{\"57\":1}}],[\"它们由\",{\"1\":{\"371\":1}}],[\"它们会进入由你的程序集定义创建的新程序集中\",{\"1\":{\"307\":1}}],[\"它们也可能会一遍又一遍地出现\",{\"1\":{\"279\":1}}],[\"它们都小到可以忽略不计\",{\"1\":{\"271\":1}}],[\"它们都依赖于相同的底层数据\",{\"1\":{\"163\":1}}],[\"它们很快就会变得不具有性能\",{\"1\":{\"262\":1}}],[\"它们最简单的用法是为每个属性名称声明一个静态只读整数变量\",{\"1\":{\"257\":1}}],[\"它们没有组合在一个缓冲区中\",{\"1\":{\"232\":1}}],[\"它们接受非线程安全的数据\",{\"1\":{\"228\":1}}],[\"它们看起来会很棒\",{\"1\":{\"216\":1}}],[\"它们直接位于\",{\"1\":{\"181\":1}}],[\"它们维护自己的几何体并执行自己的批处理\",{\"1\":{\"178\":1}}],[\"它们主要由\",{\"1\":{\"169\":1}}],[\"它们不依赖于\",{\"1\":{\"141\":1}}],[\"它们不会像\",{\"1\":{\"56\":1}}],[\"它们提供了同名的组件\",{\"1\":{\"141\":1}}],[\"它们的源代码可以在\",{\"1\":{\"139\":1}}],[\"它们的原理是什么\",{\"1\":{\"65\":1}}],[\"它们为每个灯光处理一个额外的渲染通道\",{\"1\":{\"110\":1}}],[\"它们必须指向相同的光照贴图位置\",{\"1\":{\"110\":1}}],[\"它们可在日志中找到\",{\"1\":{\"104\":1}}],[\"它们比较的是引用\",{\"1\":{\"56\":1}}],[\"它们指向堆上同一份数据\",{\"1\":{\"48\":1}}],[\"它独立于场景存在\",{\"1\":{\"56\":1}}],[\"它有生命周期\",{\"1\":{\"56\":1}}],[\"它有一个\",{\"1\":{\"56\":1}}],[\"它和传统的\",{\"1\":{\"60\":1}}],[\"它和\",{\"1\":{\"56\":1}}],[\"它只测试\",{\"1\":{\"179\":1}}],[\"它只是一个兼容性比较强的组件而已\",{\"1\":{\"369\":1}}],[\"它只是减少\",{\"1\":{\"135\":1}}],[\"它只是将任务分片到不同的帧\",{\"1\":{\"49\":1}}],[\"它只需要从那个大缓冲区中根据偏移量\",{\"1\":{\"58\":1}}],[\"它只管发事件\",{\"1\":{\"56\":1}}],[\"它的每个可显示的元素都是通过3d模型网格的形式构建起来的\",{\"1\":{\"379\":1}}],[\"它的速度非常慢\",{\"1\":{\"254\":1}}],[\"它的性能不高\",{\"1\":{\"159\":1}}],[\"它的实现原理是什么\",{\"1\":{\"60\":1}}],[\"它的\",{\"1\":{\"56\":1}}],[\"它告诉\",{\"1\":{\"51\":1}}],[\"它会回退到双缓冲并使用两个帧缓冲区\",{\"1\":{\"231\":1}}],[\"它会迅速被缓存和其他用途占用\",{\"1\":{\"205\":1}}],[\"它会转储系统服务和应用程序的状态信息\",{\"1\":{\"205\":1}}],[\"它会在分析应用程序内存时产生不稳定的结果\",{\"1\":{\"204\":1}}],[\"它会增长\",{\"1\":{\"189\":1}}],[\"它会保留所有网格和顶点\",{\"1\":{\"183\":1}}],[\"它会保留扩展后的堆\",{\"1\":{\"97\":1}}],[\"它会继续沿着\",{\"1\":{\"181\":1}}],[\"它会访问\",{\"1\":{\"180\":1}}],[\"它会使用游戏的主\",{\"1\":{\"180\":1}}],[\"它会使渲染的物体\",{\"1\":{\"60\":1}}],[\"它会清除该块\",{\"1\":{\"103\":1}}],[\"它会以先前扩展量的两倍进行扩展\",{\"1\":{\"97\":1}}],[\"它会运行\",{\"1\":{\"97\":1}}],[\"它会自动识别并加载所有所需的\",{\"1\":{\"76\":1}}],[\"它会有一个\",{\"1\":{\"56\":1}}],[\"它会触发一个事件\",{\"1\":{\"56\":1}}],[\"它会释放主线程\",{\"1\":{\"49\":1}}],[\"它会定期扫描堆\",{\"1\":{\"42\":1}}],[\"它解决了什么问题\",{\"0\":{\"46\":1}}],[\"它继承自\",{\"1\":{\"45\":1}}],[\"它能高效地将使用不同\",{\"1\":{\"43\":1}}],[\"它将一个字符串数组组合成一个字符串\",{\"1\":{\"280\":1}}],[\"它将屏幕\",{\"1\":{\"179\":1}}],[\"它将使用\",{\"1\":{\"169\":1}}],[\"它将包含用于运行重建过程的代码\",{\"1\":{\"150\":1}}],[\"它将显示\",{\"1\":{\"149\":1}}],[\"它将上述着色器示例中的\",{\"1\":{\"123\":1}}],[\"它将目标设备上的最大常量缓冲区大小除以包含所有每实例属性的结构的大小\",{\"1\":{\"118\":1}}],[\"它将组合的网格变换到世界空间并为它们构建一个共享的顶点和索引缓冲区\",{\"1\":{\"109\":1}}],[\"它将两级隔离适配\",{\"1\":{\"99\":1}}],[\"它将所有material的属性\",{\"1\":{\"60\":1}}],[\"它将\",{\"1\":{\"42\":1,\"47\":1}}],[\"副本\",{\"1\":{\"42\":1}}],[\"循环引用\",{\"0\":{\"293\":1}}],[\"循环首次进入首次退出\",{\"1\":{\"98\":1}}],[\"循环或将集合泛型化\",{\"1\":{\"74\":1}}],[\"循环和索引器\",{\"1\":{\"60\":1}}],[\"循环迭代一个\",{\"1\":{\"60\":1}}],[\"循环在迭代\",{\"1\":{\"60\":1}}],[\"循环展开\",{\"1\":{\"57\":1}}],[\"循环\",{\"1\":{\"42\":1,\"135\":1}}],[\"==\",{\"1\":{\"146\":1,\"181\":5,\"252\":3,\"262\":2,\"275\":3,\"309\":2,\"369\":2}}],[\"=>\",{\"1\":{\"57\":1,\"145\":4,\"283\":2}}],[\"=\",{\"1\":{\"42\":1,\"48\":1,\"53\":1,\"62\":2,\"67\":2,\"100\":8,\"112\":1,\"121\":10,\"122\":3,\"123\":5,\"128\":1,\"136\":2,\"144\":18,\"145\":2,\"146\":2,\"160\":11,\"181\":11,\"238\":1,\"246\":2,\"252\":6,\"253\":1,\"260\":2,\"262\":2,\"271\":10,\"279\":8,\"280\":15,\"281\":5,\"282\":2,\"283\":3,\"284\":2,\"285\":22,\"303\":1,\"304\":7,\"309\":1,\"335\":1,\"336\":1,\"360\":1,\"361\":1,\"369\":10,\"377\":6}}],[\"字数\",{\"1\":{\"363\":1}}],[\"字段来控制帧率\",{\"1\":{\"275\":1}}],[\"字段始终会被忽略\",{\"1\":{\"275\":1}}],[\"字段\",{\"1\":{\"180\":1,\"275\":1,\"301\":1,\"362\":1}}],[\"字段中列出的所有字体加载到内存中\",{\"1\":{\"168\":1}}],[\"字段中列出的字体顺序决定\",{\"1\":{\"168\":1}}],[\"字段中列出的任何字体都将用作如果在主字体中找不到字形时的后备字体\",{\"1\":{\"168\":1}}],[\"字段中列出大量字体\",{\"1\":{\"168\":1}}],[\"字符\",{\"1\":{\"168\":1,\"169\":1}}],[\"字符串格式\",{\"1\":{\"360\":1}}],[\"字符串方法只执行字符串哈希处理\",{\"1\":{\"257\":1}}],[\"字符串\",{\"1\":{\"252\":1,\"358\":1}}],[\"字符串和文本的处理不当是\",{\"1\":{\"250\":1}}],[\"字符串和文本\",{\"0\":{\"250\":1}}],[\"字符串和数组通常要大得多\",{\"1\":{\"97\":1}}],[\"字符串操作\",{\"1\":{\"81\":1}}],[\"字符串拼接\",{\"1\":{\"42\":1,\"74\":1}}],[\"字体资源一个\",{\"1\":{\"169\":1}}],[\"字体资源创建\",{\"1\":{\"169\":2}}],[\"字体资源中缺失时\",{\"1\":{\"169\":1}}],[\"字体和内存使用\",{\"1\":{\"169\":1}}],[\"字体图集重建是由每个更改的\",{\"1\":{\"168\":1}}],[\"字体图集将有一个字形\",{\"1\":{\"168\":1}}],[\"字体的纹理图集必须重建\",{\"1\":{\"168\":1}}],[\"字节的内存\",{\"1\":{\"266\":1}}],[\"字节的垃圾\",{\"1\":{\"253\":1}}],[\"字节码\",{\"1\":{\"57\":1}}],[\"字节\",{\"1\":{\"9\":1,\"278\":1}}],[\"这块内存才会被返还到系统\",{\"1\":{\"399\":1}}],[\"这时候可以把\",{\"1\":{\"394\":1}}],[\"这时在进行层级划分时\",{\"1\":{\"383\":1}}],[\"这导致了\",{\"1\":{\"392\":1}}],[\"这部分\",{\"1\":{\"387\":1}}],[\"这就是演化式架构思维\",{\"1\":{\"382\":1}}],[\"这就是组合\",{\"1\":{\"382\":1}}],[\"这就是分解\",{\"1\":{\"382\":1}}],[\"这就是我们常常在ui系统制作中提到的图集概念\",{\"1\":{\"379\":1}}],[\"这才能让各系统各尽其职\",{\"1\":{\"381\":1}}],[\"这增加了迭代代码的整体编译时间\",{\"1\":{\"289\":1}}],[\"这加起来就是\",{\"1\":{\"278\":1}}],[\"这加快了渲染速度\",{\"1\":{\"112\":1}}],[\"这称为\",{\"1\":{\"275\":1}}],[\"这一点对于尝试在后台将\",{\"1\":{\"269\":1}}],[\"这一影响相对较小\",{\"1\":{\"252\":1}}],[\"这只会降低最终音频剪辑的质量\",{\"1\":{\"249\":1}}],[\"这只是推送到\",{\"1\":{\"135\":1}}],[\"这使用匿名方法来控制列表的排序顺序\",{\"1\":{\"283\":1}}],[\"这使您可以控制着色器占用的内存量\",{\"1\":{\"243\":1}}],[\"这使得\",{\"1\":{\"275\":1}}],[\"这使得测量时间并更容易查看命令队列\",{\"1\":{\"228\":1}}],[\"这使得透明队列中的对象容易受到过度绘制的影响\",{\"1\":{\"215\":1}}],[\"这使得从内存中获取瓦片变得非常便宜\",{\"1\":{\"212\":1}}],[\"这使得查看总内存更加困难\",{\"1\":{\"203\":1}}],[\"这允许您在运行时选择加载时间对性能的影响\",{\"1\":{\"237\":1}}],[\"这允许它们通过\",{\"1\":{\"141\":1}}],[\"这消除了在将命令提交到\",{\"1\":{\"228\":1}}],[\"这通过利用\",{\"1\":{\"225\":1}}],[\"这通常会导致帧率卡顿\",{\"1\":{\"269\":1}}],[\"这通常会强制字体图集在计算出适当的字体大小后至少再重建一次\",{\"1\":{\"168\":1}}],[\"这通常比依赖\",{\"1\":{\"172\":1}}],[\"这通常适用于使用良好约束字符集\",{\"1\":{\"168\":1}}],[\"这通常由\",{\"1\":{\"164\":1}}],[\"这通常是由于大量重叠的\",{\"1\":{\"154\":1}}],[\"这通常意味着\",{\"1\":{\"55\":1}}],[\"这有时会被计算两次\",{\"1\":{\"205\":1}}],[\"这有助于防止内存泄漏\",{\"1\":{\"97\":1}}],[\"这主要用于带有单声道扬声器的移动平台\",{\"1\":{\"201\":1}}],[\"这不会卸载关联的资源\",{\"1\":{\"200\":1}}],[\"这不会禁用隐藏\",{\"1\":{\"173\":1}}],[\"这很容易导致帧率卡顿\",{\"1\":{\"269\":1}}],[\"这很重要\",{\"1\":{\"197\":1}}],[\"这很有用\",{\"1\":{\"118\":1}}],[\"这最终导致构建时间略长\",{\"1\":{\"193\":1}}],[\"这应该会影响你决定哪种是适合你情况的选择\",{\"1\":{\"190\":1}}],[\"这应该接近\",{\"1\":{\"134\":1}}],[\"这始终作为\",{\"1\":{\"174\":1}}],[\"这也取决于您的\",{\"1\":{\"217\":1}}],[\"这也被视为用户程序集\",{\"1\":{\"196\":1}}],[\"这也会导致\",{\"1\":{\"173\":1}}],[\"这也意味着您可以对\",{\"1\":{\"96\":1}}],[\"这确保禁用\",{\"1\":{\"173\":1}}],[\"这避免了需要重建移动的\",{\"1\":{\"170\":1}}],[\"这往往会增加渲染\",{\"1\":{\"170\":1}}],[\"这被认为是糟糕的视觉\",{\"1\":{\"169\":1}}],[\"这具有提高性能的优势\",{\"1\":{\"169\":1}}],[\"这进一步增加了生成字体图集所需的时间\",{\"1\":{\"168\":1}}],[\"这包括编写回调调用\",{\"1\":{\"269\":1}}],[\"这包括原生分配或运行时元数据\",{\"1\":{\"205\":1}}],[\"这包括父\",{\"1\":{\"168\":1}}],[\"这包括运行动态布局代码\",{\"1\":{\"161\":1}}],[\"这将非常有用\",{\"1\":{\"282\":1}}],[\"这将消耗\",{\"1\":{\"247\":1}}],[\"这将导致更少的绘制调用\",{\"1\":{\"218\":1}}],[\"这将导致\",{\"1\":{\"173\":1}}],[\"这将把重建限制在仅重新父级的元素\",{\"1\":{\"170\":1}}],[\"这将大大减少必须批处理的\",{\"1\":{\"170\":1}}],[\"这将确保字形图集只需要重建一次\",{\"1\":{\"168\":1}}],[\"这将确保此\",{\"1\":{\"163\":1}}],[\"这将发生在所有平台上\",{\"1\":{\"165\":1}}],[\"这在构建时非常有益\",{\"1\":{\"221\":1}}],[\"这在桌面\",{\"1\":{\"216\":1}}],[\"这在运行时不是好事\",{\"1\":{\"180\":1}}],[\"这在包含象形字体\",{\"1\":{\"168\":1}}],[\"这在实践中实际上相当困难\",{\"1\":{\"163\":1}}],[\"这在多核机器上特别有用\",{\"1\":{\"102\":1}}],[\"这两种解决方案都有问题\",{\"1\":{\"170\":1}}],[\"这两种操作都可以在\",{\"1\":{\"162\":1}}],[\"这两个版本的执行时间显示了从这一特定代码片段中减少\",{\"1\":{\"271\":1}}],[\"这两个方法都在\",{\"1\":{\"271\":1}}],[\"这两个事件都会触发\",{\"1\":{\"170\":1}}],[\"这两个问题都趋于变得严重\",{\"1\":{\"161\":1}}],[\"这两个问题都可能导致极高的过度绘制水平\",{\"1\":{\"154\":1}}],[\"这两个选项的默认值为\",{\"1\":{\"118\":1}}],[\"这减少了必须分层在一起以实现所需设计的元素数量\",{\"1\":{\"159\":1}}],[\"这涉及计算每个\",{\"1\":{\"150\":1}}],[\"这特别有用\",{\"1\":{\"148\":1}}],[\"这并不意味着您不受\",{\"1\":{\"134\":1}}],[\"这类似于\",{\"1\":{\"205\":1}}],[\"这类隐性参数都放在一起\",{\"1\":{\"127\":1}}],[\"这类脚本语言进行逻辑热更\",{\"1\":{\"65\":1}}],[\"这里的主要问题是\",{\"1\":{\"271\":1}}],[\"这里按照父节点数量进行的排序\",{\"1\":{\"145\":1}}],[\"这里\",{\"1\":{\"127\":1,\"130\":1}}],[\"这段视频展示了\",{\"1\":{\"125\":1}}],[\"这对于测试很有用\",{\"1\":{\"308\":1}}],[\"这对于实时应用程序\",{\"1\":{\"275\":1}}],[\"这对于\",{\"1\":{\"118\":1,\"247\":1}}],[\"这对于绘制在场景中多次出现的内容很有用\",{\"1\":{\"113\":1}}],[\"这对于您在运行时以程序方式生成的网格特别有用\",{\"1\":{\"109\":1}}],[\"这对于突出分配器性能差异特别有用\",{\"1\":{\"104\":1}}],[\"这可以像复制\",{\"1\":{\"165\":1}}],[\"这可以通过两种方式完成\",{\"1\":{\"168\":1}}],[\"这可以通过两种方式解决\",{\"1\":{\"162\":1}}],[\"这可以通过使用\",{\"1\":{\"148\":1}}],[\"这可以通过单击\",{\"1\":{\"148\":1}}],[\"这可以防止块变得太大而保留大量内存\",{\"1\":{\"100\":1}}],[\"这可能使得重构和改进代码更加困难\",{\"1\":{\"289\":1}}],[\"这可能导致\",{\"1\":{\"275\":1}}],[\"这可能导致与\",{\"1\":{\"205\":1}}],[\"这可能会导致大量的垃圾回收时间\",{\"1\":{\"278\":1}}],[\"这可能会导致性能问题\",{\"1\":{\"96\":1}}],[\"这可能会改变世界中任何对象的状态\",{\"1\":{\"227\":1}}],[\"这可能很昂贵\",{\"1\":{\"169\":1}}],[\"这可能意味着您有太多不同的着色器变体\",{\"1\":{\"135\":1}}],[\"这决定了分配应该去哪里\",{\"1\":{\"98\":1}}],[\"这意味着不需要字符串连接\",{\"1\":{\"280\":1}}],[\"这意味着托管堆需要扩展\",{\"1\":{\"278\":1}}],[\"这意味着过多变化可能导致增量式垃圾回收器不堪重负\",{\"1\":{\"275\":1}}],[\"这意味着垃圾回收器将其工作负载分摊到多个帧中\",{\"1\":{\"275\":1}}],[\"这意味着所有帧的\",{\"1\":{\"274\":1}}],[\"这意味着通过某种构建步骤将文本数据\",{\"1\":{\"254\":1}}],[\"这意味着有许多选项如果管理不当\",{\"1\":{\"211\":1}}],[\"这意味着如果合并网格的一部分在屏幕上\",{\"1\":{\"288\":1}}],[\"这意味着如果您将方法引用作为参数传递\",{\"1\":{\"283\":1}}],[\"这意味着如果任何场景或脚本引用了你包含在构建中的\",{\"1\":{\"194\":1}}],[\"这意味着如果组合网格的一部分在屏幕上\",{\"1\":{\"111\":1}}],[\"这意味着着色器变体已更改\",{\"1\":{\"135\":1}}],[\"这意味着该批处理使用的着色器关键字与前一批处理中的关键字不同\",{\"1\":{\"135\":1}}],[\"这意味着该\",{\"1\":{\"112\":1}}],[\"这意味着\",{\"1\":{\"110\":1,\"212\":1}}],[\"这意味着动态批处理只有在变换工作比执行绘制调用更不耗费资源时才是一种优化\",{\"1\":{\"110\":1}}],[\"这意味着相同的几何体在组合的网格中多次出现\",{\"1\":{\"109\":1}}],[\"这意味着要从\",{\"1\":{\"108\":1}}],[\"这意味着新设置在每次构建时都会生效\",{\"1\":{\"104\":1}}],[\"这意味着即使有足够的总空间用于大内存分配\",{\"1\":{\"97\":1}}],[\"这意味着您无法访问已释放的内存\",{\"1\":{\"97\":1}}],[\"这意味着您可以移动\",{\"1\":{\"109\":1}}],[\"这意味着您可以以安全简便的方式操作应用程序的数据\",{\"1\":{\"96\":1}}],[\"这意味着您可以通过\",{\"1\":{\"96\":1}}],[\"这意味着您的应用程序不太可能过早释放内存\",{\"1\":{\"96\":1}}],[\"这发生在对其组成网格之一进行更改时\",{\"1\":{\"143\":1}}],[\"这发生在堆中有大量可用内存\",{\"1\":{\"97\":1}}],[\"这发生在垃圾回收器必须停止以释放和分配内存时\",{\"1\":{\"96\":1}}],[\"这样会导致协程\",{\"1\":{\"404\":1}}],[\"这样会更有说服力\",{\"1\":{\"92\":1}}],[\"这样可以保证最大限度地利用内存\",{\"1\":{\"402\":1}}],[\"这样不太好\",{\"1\":{\"394\":1}}],[\"这样的抽象做法\",{\"1\":{\"382\":1}}],[\"这样的工具可以自动化\",{\"1\":{\"218\":1}}],[\"这样就生成几个大网格和几个不同图集的材质球\",{\"1\":{\"379\":1}}],[\"这样导航栏的文字\",{\"1\":{\"360\":1}}],[\"这样将大约节省加载纹理所需的内存的三分之一\",{\"1\":{\"247\":1}}],[\"这样做并不合理\",{\"1\":{\"377\":1}}],[\"这样做可能导致精确度的轻微损失\",{\"1\":{\"248\":1}}],[\"这样做的好处是\",{\"1\":{\"244\":1}}],[\"这样做会生成一个静态网格\",{\"1\":{\"218\":1}}],[\"这样做会减少运行时内存和磁盘空间\",{\"1\":{\"201\":1}}],[\"这样\",{\"1\":{\"205\":1,\"275\":1}}],[\"这样设计师可以创建大型层级化\",{\"1\":{\"178\":1}}],[\"这样您的代码就不需要每帧分配一个新的列表\",{\"1\":{\"282\":1}}],[\"这样您就不需要通过显式方法调用来分配和释放这些内存块\",{\"1\":{\"97\":1}}],[\"这样您才能有效地管理代码\",{\"1\":{\"97\":1}}],[\"这样它们就可以共享同一个\",{\"1\":{\"43\":1}}],[\"这会带来一些问题\",{\"1\":{\"289\":1}}],[\"这会影响预定义程序集和你使用程序集定义创建的程序集\",{\"1\":{\"292\":1}}],[\"这会影响应用程序的性能\",{\"1\":{\"278\":1}}],[\"这会影响性能分析数据\",{\"1\":{\"274\":1}}],[\"这会增加构建大小\",{\"1\":{\"241\":1}}],[\"这会增加原生内存碎片的风险\",{\"1\":{\"99\":1}}],[\"这会加快迭代时间\",{\"1\":{\"198\":1}}],[\"这会导致在调用大量每帧都执行的方法时延长帧时间\",{\"1\":{\"267\":1}}],[\"这会导致单个客户端在执行高级渲染命令时占用主线程\",{\"1\":{\"224\":1}}],[\"这会导致你的代码大小增加\",{\"1\":{\"197\":1}}],[\"这会导致旧字形被踢出图集\",{\"1\":{\"168\":1}}],[\"这会强制材质更改\",{\"1\":{\"120\":1}}],[\"这会对性能产生负面影响\",{\"1\":{\"110\":1}}],[\"这会阻止\",{\"1\":{\"108\":1}}],[\"这会降低电池耗尽的速度\",{\"1\":{\"106\":1}}],[\"这会尝试释放足够的空间来满足分配请求\",{\"1\":{\"97\":1}}],[\"这会在构建时从所有着色器中移除处理这些设置的变体\",{\"1\":{\"241\":1}}],[\"这会在主线程上造成少量调度开销\",{\"1\":{\"228\":1}}],[\"这会在命令行中打印以下信息\",{\"1\":{\"205\":1}}],[\"这会在\",{\"1\":{\"108\":1,\"275\":1}}],[\"这会在渲染帧中对物理位置进行平滑过渡或预测\",{\"1\":{\"74\":1}}],[\"这会在堆上分配内存并产生\",{\"1\":{\"48\":1}}],[\"这会非常有说服力\",{\"1\":{\"72\":1}}],[\"这会产生临时垃圾对象\",{\"1\":{\"68\":1}}],[\"这比\",{\"1\":{\"103\":1}}],[\"这比直接给出一个\",{\"1\":{\"72\":1}}],[\"这比直接给出答案更重要\",{\"1\":{\"66\":1}}],[\"这比空谈理论更有说服力\",{\"1\":{\"66\":1}}],[\"这些不需要的就关闭它\",{\"1\":{\"396\":1}}],[\"这些文件夹可能散布在你的\",{\"1\":{\"307\":1}}],[\"这些自动引用意味着当你更新任何一个预编译程序集时\",{\"1\":{\"300\":1}}],[\"这些问题和工作流程会影响应用程序何时触发垃圾回收\",{\"1\":{\"277\":1}}],[\"这些问题在\",{\"1\":{\"255\":1}}],[\"这些中断称为\",{\"1\":{\"275\":1}}],[\"这些线程随后会与主线程竞争\",{\"1\":{\"269\":1}}],[\"这些列表以侵入式链接列表的形式进行维护\",{\"1\":{\"267\":1}}],[\"这些值是通过\",{\"1\":{\"265\":1}}],[\"这些预编译的正则表达式之后会被重用\",{\"1\":{\"253\":1}}],[\"这些着色器总共占用几十千字节\",{\"1\":{\"237\":1}}],[\"这些着色器将在应用程序的整个生命周期中始终包含在内\",{\"1\":{\"237\":1}}],[\"这些着色器的粒子版本除外\",{\"1\":{\"112\":1}}],[\"这些数字有助于您在\",{\"1\":{\"233\":1}}],[\"这些额外函数是\",{\"1\":{\"228\":1}}],[\"这些作业具有明确定义的输入\",{\"1\":{\"227\":1}}],[\"这些像素在被其他对象过度绘制后最终不可见\",{\"1\":{\"215\":1}}],[\"这些优化适用于基于瓦片延迟渲染\",{\"1\":{\"212\":1}}],[\"这些优秀功能也有一些缺点\",{\"1\":{\"126\":1}}],[\"这些缓慢的内存操作是您应该避免在基于瓦片的\",{\"1\":{\"212\":1}}],[\"这些字体根据\",{\"1\":{\"168\":1}}],[\"这些四边形周围往往有大量的空白空间\",{\"1\":{\"168\":1}}],[\"这些四边形的纹理来自不同的材质\",{\"1\":{\"149\":1}}],[\"这些元素将在\",{\"1\":{\"163\":1}}],[\"这些工具可用于更深入地研究\",{\"1\":{\"150\":1}}],[\"这些标记可以帮助您确定导致\",{\"1\":{\"148\":1}}],[\"这些几何体将被绘制在游戏的世界空间中或之上\",{\"1\":{\"141\":1}}],[\"这些毫秒可用于其他任务\",{\"1\":{\"134\":1}}],[\"这些时间测量显示\",{\"1\":{\"130\":1}}],[\"这些方法采用以下形式之一\",{\"1\":{\"284\":1}}],[\"这些方法执行非常简单的操作\",{\"1\":{\"273\":1}}],[\"这些方法即时编译正则表达式\",{\"1\":{\"253\":1}}],[\"这些方法会将正则表达式视为字符串参数\",{\"1\":{\"253\":1}}],[\"这些方法使用相同的着色器多次渲染相同的网格\",{\"1\":{\"115\":1}}],[\"这些方案的核心都是在\",{\"1\":{\"65\":1}}],[\"这些设置统称为渲染状态\",{\"1\":{\"106\":1}}],[\"这些设置存储在\",{\"1\":{\"104\":1}}],[\"这些设置在构建过程中应用\",{\"1\":{\"104\":1}}],[\"这些分配速度非常快\",{\"1\":{\"102\":1}}],[\"这些\",{\"1\":{\"96\":1,\"251\":1}}],[\"这些都可能产生\",{\"1\":{\"63\":1,\"68\":1}}],[\"这些操作在等待时\",{\"1\":{\"57\":1}}],[\"这背后的内存安全机制\",{\"1\":{\"60\":1}}],[\"这与\",{\"1\":{\"60\":1}}],[\"这三种方案的优缺点\",{\"1\":{\"60\":1}}],[\"这考察的是技术领导力和团队协作\",{\"1\":{\"59\":1}}],[\"这需要用\",{\"1\":{\"58\":1}}],[\"这能避免\",{\"1\":{\"276\":1}}],[\"这能防止主线程卡死\",{\"1\":{\"57\":1}}],[\"这能消除单帧的峰值卡顿\",{\"1\":{\"55\":1}}],[\"这种叫\",{\"1\":{\"403\":1}}],[\"这种程序集之间的循环引用是由于程序集中定义的类内部存在循环引用而发生的\",{\"1\":{\"293\":1}}],[\"这种程序集之间的循环引用是不允许的\",{\"1\":{\"293\":1}}],[\"这种安排对于小型项目来说可以接受\",{\"1\":{\"289\":1}}],[\"这种技术是\",{\"1\":{\"288\":1}}],[\"这种技术更有意义\",{\"1\":{\"254\":1}}],[\"这种编码模式在许多托管语言中很常见\",{\"1\":{\"287\":1}}],[\"这种便利可能会对性能产生影响\",{\"1\":{\"277\":1}}],[\"这种延迟可能持续数百毫秒\",{\"1\":{\"275\":1}}],[\"这种性能差异的主要原因仅仅是向紧凑内循环添加额外方法调用的成本不同\",{\"1\":{\"271\":1}}],[\"这种方式的另一个好处是允许代码在回调没有操作的情况下巧妙地将回调取消订阅\",{\"1\":{\"267\":1}}],[\"这种方式将变得越来越低效\",{\"1\":{\"267\":1}}],[\"这种方案比尝试汇集给定场景中使用的粒子系统的所有可能变体和配置会更具内存使用效率\",{\"1\":{\"266\":1}}],[\"这种方法类似于\",{\"1\":{\"110\":1}}],[\"这种策略提供了最好的性能\",{\"1\":{\"254\":1}}],[\"这种操作的代价相对比较高\",{\"1\":{\"250\":1}}],[\"这种错误操作却是十分常见的\",{\"1\":{\"246\":1}}],[\"这种情况最常发生在将原始值类型变量\",{\"1\":{\"284\":1}}],[\"这种情况下\",{\"1\":{\"274\":1}}],[\"这种情况的一个常见示例是在活动\",{\"1\":{\"215\":1}}],[\"这种情况称为内存碎片\",{\"1\":{\"97\":1}}],[\"这种减速是设备特定的\",{\"1\":{\"212\":1}}],[\"这种较小内存和真实帧缓冲区之间的复制操作可能需要一些时间\",{\"1\":{\"212\":1}}],[\"这种灵活性非常棒\",{\"1\":{\"175\":1}}],[\"这种将创建给定\",{\"1\":{\"159\":1}}],[\"这种高水平的过度绘制\",{\"1\":{\"142\":1}}],[\"这种处理效率低下会对性能产生不利影响\",{\"1\":{\"117\":1}}],[\"这种内存类型被称为\",{\"1\":{\"96\":1}}],[\"这种与\",{\"1\":{\"57\":1}}],[\"这种是否在\",{\"1\":{\"55\":1}}],[\"这组\",{\"1\":{\"43\":1}}],[\"这个就是\",{\"1\":{\"394\":1}}],[\"这个过程就是即时编译\",{\"1\":{\"371\":1}}],[\"这个过程是自动的\",{\"1\":{\"42\":1}}],[\"这个定位并释放未使用内存的过程称为垃圾回收\",{\"1\":{\"274\":1}}],[\"这个选项在具有大量内核的平台上非常强大\",{\"1\":{\"254\":1}}],[\"这个第二层只包含带有手指的遮罩\",{\"1\":{\"218\":1}}],[\"这个数字通常非常小\",{\"1\":{\"205\":1}}],[\"这个克隆的材质不会被垃圾回收\",{\"1\":{\"200\":1}}],[\"这个调用会在\",{\"1\":{\"181\":1}}],[\"这个设置是可选的\",{\"1\":{\"180\":1}}],[\"这个设置对于\",{\"1\":{\"180\":1}}],[\"这个问题在移动设备上很常见\",{\"1\":{\"285\":1}}],[\"这个问题变得越严重\",{\"1\":{\"168\":1}}],[\"这个问题最常发生在文本和精灵彼此靠近时\",{\"1\":{\"162\":1}}],[\"这个内置工具可以通过\",{\"1\":{\"149\":1}}],[\"这个类跟踪必须更新的\",{\"1\":{\"141\":1}}],[\"这个策略为动静分离\",{\"1\":{\"127\":1}}],[\"这个场景展示了许多相似的网格\",{\"1\":{\"125\":1}}],[\"这个条件\",{\"1\":{\"56\":1}}],[\"这个事件\",{\"1\":{\"45\":2}}],[\"这个\",{\"1\":{\"43\":1,\"59\":1,\"127\":1,\"134\":1,\"136\":1,\"173\":1,\"218\":1}}],[\"这是错误的\",{\"1\":{\"404\":1}}],[\"这是不正确的\",{\"1\":{\"307\":1}}],[\"这是不可配置的\",{\"1\":{\"100\":1}}],[\"这是对性能的浪费\",{\"1\":{\"248\":1}}],[\"这是所需的内存\",{\"1\":{\"233\":1}}],[\"这是次优的\",{\"1\":{\"224\":1}}],[\"这是另一个有用的工具\",{\"1\":{\"205\":1}}],[\"这是应用程序销毁时系统将回收的\",{\"1\":{\"205\":1}}],[\"这是指一个可绘制对象插入到两个其他原本可批处理的可绘制对象之间的情况\",{\"1\":{\"162\":1}}],[\"这是通过\",{\"1\":{\"144\":1}}],[\"这是在\",{\"1\":{\"144\":1}}],[\"这是因为大多数平台上从\",{\"1\":{\"247\":1}}],[\"这是因为对元素进行排序和分析的成本与\",{\"1\":{\"161\":1}}],[\"这是因为我们开启了\",{\"1\":{\"134\":1}}],[\"这是因为\",{\"1\":{\"120\":1,\"284\":1}}],[\"这是因为网格的动态批处理每个顶点都有开销\",{\"1\":{\"110\":1}}],[\"这是最优的\",{\"1\":{\"112\":1}}],[\"这是它的块大小\",{\"1\":{\"104\":2}}],[\"这是为了防止在发生进一步的大量分配时需要重新扩展堆\",{\"1\":{\"97\":1}}],[\"这是实现合批的前提\",{\"1\":{\"69\":1}}],[\"这是合批的前提\",{\"1\":{\"64\":1}}],[\"这是setpass的主要开销\",{\"1\":{\"60\":1}}],[\"这是区分中高级开发的关键点\",{\"1\":{\"60\":1}}],[\"这是\",{\"1\":{\"58\":1,\"165\":1,\"205\":1,\"275\":1}}],[\"这是真正的异步\",{\"1\":{\"57\":1}}],[\"这是关键\",{\"1\":{\"56\":1}}],[\"这是值得的\",{\"1\":{\"55\":1}}],[\"这是高级开发的立身之本\",{\"1\":{\"55\":1}}],[\"这是高级开发的核心\",{\"1\":{\"40\":1}}],[\"这是考察你解决实际问题能力和经验深度的\",{\"1\":{\"52\":1}}],[\"这是一个代码示例\",{\"1\":{\"283\":1}}],[\"这是一个在项目中\",{\"1\":{\"246\":1}}],[\"这是一个示例\",{\"1\":{\"218\":1}}],[\"这是一个相对复杂的任务\",{\"1\":{\"172\":1}}],[\"这是一个相当高效的批处理\",{\"1\":{\"135\":1}}],[\"这是一个多步骤的过程\",{\"1\":{\"161\":1}}],[\"这是一个\",{\"1\":{\"144\":1}}],[\"这是一个常见的性能陷阱\",{\"1\":{\"77\":1}}],[\"这是一个常见的误区\",{\"1\":{\"60\":1}}],[\"这是一个典型的\",{\"1\":{\"55\":1}}],[\"这是一个考察架构能力的开放性问题\",{\"1\":{\"44\":1}}],[\"这是一个开放性问题\",{\"1\":{\"41\":1}}],[\"简单方法比较棘手\",{\"1\":{\"273\":1}}],[\"简单方法\",{\"0\":{\"273\":1}}],[\"简单方法的问题\",{\"1\":{\"170\":1}}],[\"简单\",{\"1\":{\"272\":1}}],[\"简单属性\",{\"0\":{\"272\":1}}],[\"简单地比较字符串的每个顺序字节\",{\"1\":{\"251\":1}}],[\"简单的\",{\"1\":{\"170\":1}}],[\"简单来说\",{\"1\":{\"42\":1}}],[\"简化了依赖管理\",{\"1\":{\"84\":1}}],[\"简化\",{\"0\":{\"156\":1},\"1\":{\"41\":1,\"154\":1}}],[\"工厂方法模式\",{\"1\":{\"312\":1}}],[\"工程师\",{\"1\":{\"177\":1}}],[\"工程化广度\",{\"1\":{\"60\":1}}],[\"工作线程不会等到作业完成才开始执行其命令\",{\"1\":{\"227\":1}}],[\"工作线程不用于大型临时分配\",{\"1\":{\"102\":1}}],[\"工作流等\",{\"1\":{\"345\":1}}],[\"工作流迁移到\",{\"1\":{\"60\":1}}],[\"工作流\",{\"1\":{\"57\":1}}],[\"工作流和\",{\"1\":{\"46\":1}}],[\"工作原理\",{\"0\":{\"127\":1},\"1\":{\"42\":1,\"58\":1,\"76\":1,\"80\":1}}],[\"工具监测不到\",{\"1\":{\"389\":1}}],[\"工具在收集此数据时无法识别\",{\"1\":{\"205\":1}}],[\"工具处理\",{\"1\":{\"199\":1}}],[\"工具化\",{\"1\":{\"60\":1}}],[\"工具集成\",{\"1\":{\"58\":1}}],[\"工具类\",{\"1\":{\"30\":1}}],[\"工具包\",{\"1\":{\"24\":1}}],[\"工具\",{\"1\":{\"20\":1,\"24\":1,\"50\":1,\"205\":1,\"317\":1}}],[\"工具网站\",{\"0\":{\"12\":1}}],[\"是升级版的\",{\"1\":{\"401\":1}}],[\"是分代的\",{\"1\":{\"401\":1}}],[\"是分配给进程的物理页数\",{\"1\":{\"205\":1}}],[\"是因为\",{\"1\":{\"400\":1}}],[\"是会返回给操作系统\",{\"1\":{\"399\":1}}],[\"是同一个版本的时候\",{\"1\":{\"394\":1}}],[\"是要很多声音数据的\",{\"1\":{\"392\":1}}],[\"是不分代的\",{\"1\":{\"400\":1}}],[\"是不会进内存的\",{\"1\":{\"389\":1}}],[\"是不是有不必要的\",{\"1\":{\"55\":1}}],[\"是基于\",{\"1\":{\"388\":1}}],[\"是基础\",{\"1\":{\"71\":1}}],[\"是使用长距离寻路的解决方案还是地图数据管理\",{\"1\":{\"383\":1}}],[\"是使用网格栅格还是三角网格\",{\"1\":{\"383\":1}}],[\"是在\",{\"1\":{\"379\":1}}],[\"是在主线程发起的\",{\"1\":{\"57\":1}}],[\"是依次填入需要展示的页面文件的路径\",{\"1\":{\"360\":1}}],[\"是放置所有和\",{\"1\":{\"347\":1}}],[\"是许多参数\",{\"1\":{\"284\":1}}],[\"是类或结构的名称\",{\"1\":{\"284\":1}}],[\"是自动的\",{\"1\":{\"277\":1}}],[\"是为商业应用程序构建的\",{\"1\":{\"251\":1}}],[\"是十分危险的\",{\"1\":{\"246\":1}}],[\"是相对简单的事情\",{\"1\":{\"246\":1}}],[\"是针对特定用例进行泛化的\",{\"1\":{\"244\":1}}],[\"是全局的\",{\"1\":{\"240\":1}}],[\"是组合使用相同非实例化材质的多个静态对象的网格\",{\"1\":{\"218\":1}}],[\"是动画的还是静态的\",{\"1\":{\"217\":1}}],[\"是按相机进行的\",{\"1\":{\"213\":1}}],[\"是资源密集型活动的主要来源\",{\"1\":{\"212\":1}}],[\"是完全未使用的\",{\"1\":{\"205\":1}}],[\"是完全不同的\",{\"1\":{\"60\":1}}],[\"是内核和用户空间可用的总内存量\",{\"1\":{\"205\":1}}],[\"是内核计算的一个指标\",{\"1\":{\"205\":1}}],[\"是进程可访问的总地址空间\",{\"1\":{\"205\":1}}],[\"是仅专用于你的应用程序的未知\",{\"1\":{\"205\":1}}],[\"是系统无法归类到其他更具体项的任何\",{\"1\":{\"205\":1}}],[\"是驱动程序报告的\",{\"1\":{\"205\":1}}],[\"是用于交换空间的\",{\"1\":{\"387\":1}}],[\"是用于文件系统缓存等的\",{\"1\":{\"205\":1}}],[\"是用于\",{\"1\":{\"205\":1,\"257\":2}}],[\"是目前唯一支持剥离未使用\",{\"1\":{\"194\":1}}],[\"是主\",{\"1\":{\"180\":1}}],[\"是主要问题\",{\"1\":{\"55\":1}}],[\"是将输入转换为\",{\"1\":{\"179\":1}}],[\"是解决\",{\"1\":{\"178\":1}}],[\"是运行时性能问题的第二大常见来源\",{\"1\":{\"170\":1}}],[\"是指定发布类型的字母\",{\"1\":{\"304\":1}}],[\"是指具有不同材质的图形对象\",{\"1\":{\"162\":1}}],[\"是指影响\",{\"1\":{\"161\":1}}],[\"是整体\",{\"1\":{\"151\":1}}],[\"是调用\",{\"1\":{\"150\":1}}],[\"是减少\",{\"1\":{\"149\":1}}],[\"是执行\",{\"1\":{\"148\":1}}],[\"是帧的全局指标\",{\"1\":{\"131\":1}}],[\"是包含的\",{\"1\":{\"127\":1}}],[\"是可选的\",{\"1\":{\"118\":1}}],[\"是必需的\",{\"1\":{\"118\":1,\"180\":1}}],[\"是图形\",{\"1\":{\"106\":1}}],[\"是删除队列中的项目数\",{\"1\":{\"101\":1}}],[\"是假并行\",{\"1\":{\"80\":1}}],[\"是真并行\",{\"1\":{\"80\":1}}],[\"是面向数据的技术栈\",{\"1\":{\"75\":1}}],[\"是常客\",{\"1\":{\"71\":1}}],[\"是关键\",{\"1\":{\"70\":1}}],[\"是处理游戏主要逻辑\",{\"1\":{\"67\":1}}],[\"是处理游戏主要逻辑的地方\",{\"1\":{\"62\":1}}],[\"是你通过面试的关键\",{\"1\":{\"66\":1}}],[\"是引用类型\",{\"1\":{\"63\":1}}],[\"是值类型\",{\"1\":{\"63\":1}}],[\"是如何去分配和使用内存的\",{\"1\":{\"389\":1}}],[\"是如何解决\",{\"1\":{\"76\":1}}],[\"是如何影响最终的ab包体结构和依赖关系的\",{\"1\":{\"60\":1}}],[\"是如何工作的\",{\"0\":{\"42\":1},\"1\":{\"57\":1,\"60\":1}}],[\"是c\",{\"1\":{\"60\":1}}],[\"是时间分片\",{\"1\":{\"60\":1}}],[\"是个陷阱\",{\"1\":{\"60\":1}}],[\"是标准做法\",{\"1\":{\"57\":1}}],[\"是纯\",{\"1\":{\"57\":1}}],[\"是变多了的\",{\"1\":{\"55\":1}}],[\"是一组规范\",{\"1\":{\"371\":1}}],[\"是一组连续的\",{\"1\":{\"181\":1}}],[\"是一位或两位数的增量数字\",{\"1\":{\"304\":1}}],[\"是一位或两位数的修订号\",{\"1\":{\"304\":1}}],[\"是一个\",{\"1\":{\"389\":1,\"391\":1}}],[\"是一个字符串\",{\"1\":{\"305\":1}}],[\"是一个通用的最佳实践\",{\"1\":{\"262\":1}}],[\"是一个核心组件\",{\"1\":{\"211\":1}}],[\"是一个在设备上运行的\",{\"1\":{\"205\":1}}],[\"是一个包含在\",{\"1\":{\"199\":1}}],[\"是一个相对简单的实现\",{\"1\":{\"166\":1}}],[\"是一个数据容器资产\",{\"1\":{\"56\":1}}],[\"是一些空闲内存\",{\"1\":{\"97\":1}}],[\"是一种将内存从主内存移动到辅助内存或反之亦然的方法\",{\"1\":{\"203\":1}}],[\"是一种\",{\"1\":{\"108\":1,\"113\":1}}],[\"是一种数据容器资产\",{\"1\":{\"75\":1}}],[\"是一种面向数据\",{\"1\":{\"46\":1}}],[\"是一段运行在\",{\"1\":{\"51\":1}}],[\"是什么很重要\",{\"1\":{\"135\":1}}],[\"是什么以及如何带领团队做得更好\",{\"1\":{\"54\":1}}],[\"是什么\",{\"1\":{\"46\":1,\"55\":1,\"64\":2,\"66\":1,\"69\":2,\"72\":1}}],[\"是\",{\"1\":{\"43\":1,\"45\":1,\"47\":1,\"57\":4,\"60\":2,\"76\":1,\"108\":7,\"109\":4,\"110\":3,\"112\":3,\"114\":4,\"118\":1,\"141\":2,\"149\":1,\"169\":1,\"178\":1,\"205\":1,\"221\":1,\"284\":1,\"289\":1}}],[\"是否要划分区块\",{\"1\":{\"383\":1}}],[\"是否加密assetbundle\",{\"1\":{\"383\":1}}],[\"是否加载与释放assetbundle的管理\",{\"1\":{\"383\":1}}],[\"是否依赖assetbundle资源间的关系\",{\"1\":{\"383\":1}}],[\"是否依然能够运行其他程序而不闪退或崩溃\",{\"1\":{\"381\":1}}],[\"是否对assetbundle资源进行分类\",{\"1\":{\"383\":1}}],[\"是否同样能够继续保持运行而不崩溃\",{\"1\":{\"381\":1}}],[\"是否能通过啥来切分下配置表\",{\"1\":{\"404\":1}}],[\"是否能在添加新的子系统后不影响或者尽可能少影响其他子系统的运作\",{\"1\":{\"381\":1}}],[\"是否能立刻想到是字符串\",{\"1\":{\"60\":1}}],[\"是否标为星标文章\",{\"1\":{\"365\":1}}],[\"是否在列表中置顶\",{\"1\":{\"365\":1}}],[\"是否将该文章添加至文章列表中\",{\"1\":{\"365\":1}}],[\"是否显示变更日志\",{\"1\":{\"364\":1}}],[\"是否显示页面贡献者\",{\"1\":{\"364\":1}}],[\"是否显示页面最后更新时间\",{\"1\":{\"364\":1}}],[\"是否展示编辑此页链接\",{\"1\":{\"364\":1}}],[\"是否原创\",{\"1\":{\"363\":1}}],[\"是否不引用\",{\"1\":{\"291\":1}}],[\"是否自动引用该程序集\",{\"1\":{\"291\":1}}],[\"是否设置为\",{\"1\":{\"246\":1}}],[\"是否会通过\",{\"1\":{\"179\":1}}],[\"是否开启\",{\"1\":{\"134\":1}}],[\"是否理解\",{\"1\":{\"60\":1}}],[\"是否\",{\"1\":{\"56\":1}}],[\"是否还在高频更新\",{\"1\":{\"55\":1}}],[\"是否被频繁重建\",{\"1\":{\"55\":1}}],[\"是否正确配置了\",{\"1\":{\"55\":1}}],[\"是否正确使用了事件系统\",{\"1\":{\"53\":1}}],[\"是否有大型项目的资源管理经验\",{\"1\":{\"60\":1}}],[\"是否有大量重复的\",{\"1\":{\"55\":1}}],[\"是否有多个\",{\"1\":{\"55\":1}}],[\"是否有\",{\"1\":{\"53\":1,\"55\":1}}],[\"是否有明显的性能陷阱\",{\"1\":{\"53\":1}}],[\"是否遵循了项目的设计规范\",{\"1\":{\"53\":1}}],[\"是否过度压力\",{\"1\":{\"151\":1}}],[\"是否过于复杂\",{\"1\":{\"41\":1}}],[\"是否过多\",{\"1\":{\"41\":1}}],[\"是否严重\",{\"1\":{\"41\":1}}],[\"是否频繁\",{\"1\":{\"41\":1}}],[\"是否物理交互体过多\",{\"1\":{\"41\":1}}],[\"是否包含某个attribute\",{\"1\":{\"22\":1}}],[\"代理模式\",{\"1\":{\"312\":1}}],[\"代替全精度\",{\"1\":{\"90\":1}}],[\"代替\",{\"1\":{\"41\":1,\"63\":1,\"68\":1}}],[\"代码也是需要加载进内存的\",{\"1\":{\"393\":1}}],[\"代码和\",{\"1\":{\"371\":1}}],[\"代码生成的\",{\"1\":{\"371\":1}}],[\"代码生成得到了极大的改进\",{\"1\":{\"190\":1}}],[\"代码实时编译成本地机器码\",{\"1\":{\"371\":1}}],[\"代码是线程不安全的\",{\"1\":{\"369\":1}}],[\"代码是否正确实现了需求\",{\"1\":{\"53\":1}}],[\"代码标题\",{\"1\":{\"367\":1}}],[\"代码块\",{\"0\":{\"367\":1}}],[\"代码块不翻译\",{\"1\":{\"14\":1}}],[\"代码混淆\",{\"1\":{\"323\":1}}],[\"代码创建程序集\",{\"0\":{\"297\":1}}],[\"代码库\",{\"1\":{\"289\":1}}],[\"代码时\",{\"1\":{\"284\":1}}],[\"代码仍然必须将分数转换为字符串\",{\"1\":{\"280\":1}}],[\"代码域切换\",{\"1\":{\"267\":1}}],[\"代码放在\",{\"1\":{\"196\":1}}],[\"代码剥离\",{\"0\":{\"195\":1}}],[\"代码大小直接影响磁盘空间和运行时内存\",{\"1\":{\"191\":1}}],[\"代码中的变量\",{\"1\":{\"205\":1}}],[\"代码中完成的\",{\"1\":{\"141\":1}}],[\"代码中切换以下全局变量\",{\"1\":{\"112\":1}}],[\"代码切换此全局变量\",{\"1\":{\"128\":1}}],[\"代码路径渲染\",{\"1\":{\"129\":1}}],[\"代码路径\",{\"1\":{\"112\":1,\"129\":2,\"136\":1}}],[\"代码编译成机器码\",{\"1\":{\"76\":1}}],[\"代码编译为常规\",{\"1\":{\"371\":1}}],[\"代码编译为\",{\"1\":{\"47\":1}}],[\"代码嵌套\",{\"1\":{\"49\":1}}],[\"代码安全\",{\"1\":{\"47\":1}}],[\"代码转换为\",{\"1\":{\"47\":1,\"371\":1}}],[\"代码\",{\"1\":{\"47\":2,\"57\":1,\"65\":2,\"76\":1,\"96\":1,\"150\":1,\"194\":1,\"197\":1,\"206\":1,\"247\":1,\"371\":2,\"389\":1}}],[\"代码阅读\",{\"1\":{\"26\":1}}],[\"将效率发挥到极致\",{\"1\":{\"381\":1}}],[\"将一部分相同类型的图片集合起来合成一张图\",{\"1\":{\"379\":1}}],[\"将代码链接到可执行文件或\",{\"1\":{\"371\":1}}],[\"将以下对应项目设置为\",{\"1\":{\"364\":1}}],[\"将以此方式禁用的\",{\"1\":{\"173\":1}}],[\"将程序集定义资产分配给引用列表中新创建的槽位\",{\"1\":{\"299\":1}}],[\"将你的脚本组织成程序集\",{\"1\":{\"289\":1}}],[\"将闭包传递给方法所需的内存量会大大增加\",{\"1\":{\"283\":1}}],[\"将垃圾回收过程分摊到多个帧中完成\",{\"1\":{\"274\":1,\"275\":1}}],[\"将非常有用\",{\"1\":{\"273\":1}}],[\"将导致不必要地增加最终二进制文件的大小\",{\"1\":{\"272\":1}}],[\"将导入的音频剪辑强制设置为单声道会使其内存消耗减半\",{\"1\":{\"249\":1}}],[\"将加法运算的结果分配给\",{\"1\":{\"271\":1}}],[\"将粒子系统的配置参数提取到数据载体类或结构中可能更有效\",{\"1\":{\"266\":1}}],[\"将音频剪辑强制设置为单声道\",{\"1\":{\"249\":1}}],[\"将网格渲染器添加到预制件或游戏对象时\",{\"1\":{\"248\":1}}],[\"将纹理从\",{\"1\":{\"247\":1}}],[\"将生成同时定义\",{\"1\":{\"241\":1}}],[\"将它们列在\",{\"1\":{\"239\":1}}],[\"将它们组合成更少的通道可以带来更好的性能\",{\"1\":{\"236\":1}}],[\"将它们组合在一起并一起渲染\",{\"1\":{\"108\":1}}],[\"将压缩数据保留在内存中\",{\"1\":{\"238\":1}}],[\"将包含在游戏数据中的着色器压缩到大约压缩大小的总和\",{\"1\":{\"238\":1}}],[\"将包含实际计算表示\",{\"1\":{\"150\":1}}],[\"将使用\",{\"1\":{\"233\":1}}],[\"将使用单线程渲染\",{\"1\":{\"223\":1}}],[\"将分辨率设置为本机分辨率的一半可能并不总是对视觉保真度产生积极影响\",{\"1\":{\"233\":1}}],[\"将分配器设置存储在\",{\"1\":{\"104\":1}}],[\"将镜面高光烘焙到纹理中\",{\"1\":{\"217\":1}}],[\"将场景中\",{\"1\":{\"217\":1}}],[\"将视口设置为\",{\"1\":{\"212\":1}}],[\"将视口\",{\"1\":{\"212\":1}}],[\"将内容从\",{\"1\":{\"212\":1}}],[\"将内容移入或移出图形内存是资源密集型的\",{\"1\":{\"212\":1}}],[\"将播放距离较远或音量较低的声音设置为虚拟\",{\"1\":{\"201\":1}}],[\"将常量存储在\",{\"1\":{\"200\":1}}],[\"将稳定代码迁移到预构建的程序集中\",{\"1\":{\"196\":1}}],[\"将大多数\",{\"1\":{\"196\":1}}],[\"将短暂\",{\"1\":{\"189\":1}}],[\"将持久\",{\"1\":{\"189\":1}}],[\"将对象渲染为透明轮廓\",{\"1\":{\"215\":1}}],[\"将对\",{\"1\":{\"189\":1}}],[\"将直接减少\",{\"1\":{\"179\":1}}],[\"将动态元素与静态元素分开\",{\"1\":{\"178\":1}}],[\"将其移动到所需位置并将游戏对象设置为活动状态\",{\"1\":{\"279\":1}}],[\"将其用于所有渲染\",{\"1\":{\"234\":1}}],[\"将其他类型和方法标记为根\",{\"1\":{\"196\":1}}],[\"将其上的元素与其他\",{\"1\":{\"178\":1}}],[\"将其子项与父项隔离\",{\"1\":{\"141\":1}}],[\"将通过查找带有\",{\"1\":{\"174\":1}}],[\"将要求\",{\"1\":{\"173\":1}}],[\"将在下一帧渲染之前重建其布局和顶点\",{\"1\":{\"170\":1}}],[\"将递归搜索\",{\"1\":{\"169\":1}}],[\"将搜索可能分配给文本对象的任何\",{\"1\":{\"169\":1}}],[\"将保持\",{\"1\":{\"168\":1}}],[\"将维护两个不同的纹理图集\",{\"1\":{\"168\":1}}],[\"将产生相同的输出\",{\"1\":{\"168\":1}}],[\"将每帧运行一次射线检测以检查指针的位置\",{\"1\":{\"165\":1}}],[\"将不再将这些\",{\"1\":{\"307\":1}}],[\"将不再可见\",{\"1\":{\"183\":1}}],[\"将不可批处理对象移动到可批处理对象之上或之下\",{\"1\":{\"162\":1}}],[\"将不会移动的静态物体合并成一个大的网格\",{\"1\":{\"64\":1,\"69\":1}}],[\"将世界的可见部分捕获到渲染纹理中可能更优化\",{\"1\":{\"158\":1}}],[\"将遮挡整个\",{\"1\":{\"157\":1}}],[\"将默认使用\",{\"1\":{\"151\":1}}],[\"将相同层级\",{\"1\":{\"379\":1}}],[\"将相关项目配置为使用\",{\"1\":{\"151\":1}}],[\"将相似的顶点分组在一起\",{\"1\":{\"108\":1}}],[\"将作为\",{\"1\":{\"149\":1,\"169\":1}}],[\"将出现在所选\",{\"1\":{\"149\":1}}],[\"将出现在\",{\"1\":{\"149\":1}}],[\"将控制权传递给\",{\"1\":{\"146\":1}}],[\"将实例\",{\"1\":{\"118\":1}}],[\"将共享相同配置的顶点分组\",{\"1\":{\"106\":1}}],[\"将组合数据发送到\",{\"1\":{\"106\":1}}],[\"将项目中的场景\",{\"1\":{\"96\":1}}],[\"将此类型变量与\",{\"1\":{\"259\":1}}],[\"将此类分配的任何发生记录为\",{\"1\":{\"96\":1}}],[\"将此帧缓冲区\",{\"1\":{\"234\":1}}],[\"将此乘以颜色通道分辨率使用的位数\",{\"1\":{\"233\":1}}],[\"将此选项设置为\",{\"1\":{\"118\":2}}],[\"将此宏与\",{\"1\":{\"118\":2}}],[\"将此问题纳入团队的技术分享或自动化静态代码检查\",{\"1\":{\"77\":1}}],[\"将小图打包\",{\"1\":{\"83\":1}}],[\"将计算从\",{\"1\":{\"76\":1}}],[\"将数据传递给\",{\"1\":{\"76\":1}}],[\"将模型空间坐标转换到裁剪空间\",{\"1\":{\"76\":1}}],[\"将同类型组件数据\",{\"1\":{\"75\":1}}],[\"将所有托管程序集转换为标准\",{\"1\":{\"371\":1}}],[\"将所有东西合并成一个网格是合理的\",{\"1\":{\"288\":1}}],[\"将所有内容组合成一个网格是有意义的\",{\"1\":{\"111\":1}}],[\"将所有可动态批处理的内容构建到一个大的顶点缓冲区中\",{\"1\":{\"110\":1}}],[\"将所有兼容的\",{\"1\":{\"58\":1}}],[\"将所有玩家的装备合并材质\",{\"1\":{\"52\":1}}],[\"将这些网格添加到列表中\",{\"1\":{\"115\":1}}],[\"将这些\",{\"1\":{\"57\":1}}],[\"将任务挂起\",{\"1\":{\"57\":1}}],[\"将顶点坐标从模型空间\",{\"1\":{\"51\":1}}],[\"将值类型\",{\"1\":{\"48\":1}}],[\"将\",{\"1\":{\"47\":2,\"76\":2,\"112\":1,\"118\":2,\"119\":1,\"149\":1,\"151\":1,\"159\":1,\"196\":1,\"201\":2,\"258\":2,\"295\":1,\"307\":1,\"371\":2}}],[\"将多个物体的纹理合并到一张大图\",{\"1\":{\"43\":1}}],[\"将多个纹理合并到一张大图上\",{\"1\":{\"41\":1,\"64\":1,\"69\":1}}],[\"将复杂的计算从\",{\"1\":{\"41\":1}}],[\"减面工具和插件\",{\"1\":{\"317\":1}}],[\"减小到\",{\"1\":{\"102\":1}}],[\"减小透明贴图面积\",{\"1\":{\"41\":1}}],[\"减少重构网格的次数\",{\"1\":{\"379\":1}}],[\"减少到\",{\"1\":{\"194\":1}}],[\"减少了将\",{\"1\":{\"163\":1}}],[\"减少必须采样的像素数量\",{\"1\":{\"154\":1}}],[\"减少批处理数量是提高\",{\"1\":{\"148\":1}}],[\"减少\",{\"1\":{\"106\":1,\"387\":1}}],[\"减少应用程序所需的电量\",{\"1\":{\"106\":1}}],[\"减少绘制调用的总数\",{\"1\":{\"106\":1}}],[\"减少的是设置渲染状态的消耗\",{\"1\":{\"106\":1}}],[\"减少复杂计算\",{\"1\":{\"90\":1}}],[\"减少装箱\",{\"1\":{\"81\":1}}],[\"减少方法调用开销\",{\"0\":{\"271\":1}}],[\"减少方法\",{\"1\":{\"43\":1}}],[\"减少单帧的卡顿峰值\",{\"1\":{\"42\":1}}],[\"减少粒子数量\",{\"1\":{\"41\":1}}],[\"树\",{\"1\":{\"41\":1,\"43\":1,\"55\":1,\"69\":1}}],[\"调动策略\",{\"1\":{\"401\":1}}],[\"调色等技巧\",{\"1\":{\"320\":1}}],[\"调查页面\",{\"1\":{\"205\":1}}],[\"调用仍然存在\",{\"1\":{\"271\":1}}],[\"调用的每个方法都必须在内存中找到该方法的地址\",{\"1\":{\"271\":1}}],[\"调用返回的对象\",{\"1\":{\"269\":1}}],[\"调用以便检测单例预先存在的实例\",{\"1\":{\"262\":1}}],[\"调用替换为\",{\"1\":{\"258\":2}}],[\"调用加载先前帧缓冲区的主要原因\",{\"1\":{\"212\":1}}],[\"调用期间\",{\"1\":{\"150\":1}}],[\"调用冒号后指定的函数\",{\"1\":{\"118\":1}}],[\"调用\",{\"1\":{\"97\":1,\"106\":1,\"115\":2,\"141\":1,\"150\":1,\"181\":3,\"200\":1,\"246\":1,\"271\":6,\"276\":1}}],[\"调整此异步纹理缓冲区\",{\"1\":{\"200\":1}}],[\"调整对象的位置以消除不可见的重叠空间\",{\"1\":{\"162\":1}}],[\"调整大小时\",{\"1\":{\"141\":1}}],[\"调整\",{\"1\":{\"41\":1}}],[\"调试起来会很麻烦\",{\"1\":{\"377\":1}}],[\"调试代码和\",{\"0\":{\"263\":1}}],[\"调试\",{\"0\":{\"316\":1},\"1\":{\"20\":1,\"26\":1}}],[\"避免每次都分配内存的一种方法是利用数组是引用类型这一事实\",{\"1\":{\"281\":1}}],[\"避免文本解析成本的最佳方法是完全取消运行时文本解析\",{\"1\":{\"254\":1}}],[\"避免过度使用多通道着色器\",{\"1\":{\"236\":1}}],[\"避免使用\",{\"0\":{\"180\":1},\"1\":{\"180\":1,\"212\":1}}],[\"避免使用字符串拼接\",{\"1\":{\"63\":1,\"68\":1}}],[\"避免此行为需要实现基于位置变化而不是父级或兄弟顺序变化的对象池化解决方案\",{\"1\":{\"170\":1}}],[\"避免明文存储关键信息\",{\"1\":{\"88\":1}}],[\"避免不必要的装箱\",{\"1\":{\"76\":1}}],[\"避免不必要的\",{\"1\":{\"74\":1}}],[\"避免不必要的堆分配\",{\"1\":{\"63\":1}}],[\"避免主线程卡顿\",{\"1\":{\"70\":1}}],[\"避免值类型与引用类型之间的隐式转换\",{\"1\":{\"81\":1}}],[\"避免值类型与\",{\"1\":{\"68\":1}}],[\"避免卡顿\",{\"1\":{\"65\":1}}],[\"避免重复创建\",{\"1\":{\"63\":1}}],[\"避免频繁的内存分配与回收\",{\"1\":{\"63\":1,\"68\":1}}],[\"避免了垃圾回收器处理托管堆对象时的长时间中断\",{\"1\":{\"275\":1}}],[\"避免了托管内存的\",{\"1\":{\"75\":1}}],[\"避免了\",{\"1\":{\"57\":1}}],[\"避免阻塞主线程\",{\"1\":{\"49\":1}}],[\"避免内存占用过高\",{\"1\":{\"44\":1}}],[\"避免在着色器代码中使用\",{\"1\":{\"241\":1}}],[\"避免在热代码中使用\",{\"1\":{\"74\":1}}],[\"避免在状态类的\",{\"1\":{\"70\":1}}],[\"避免在高频代码中产生堆分配\",{\"1\":{\"68\":1}}],[\"避免在\",{\"1\":{\"42\":1,\"74\":1,\"81\":1}}],[\"避免在循环中进行字符串拼接\",{\"1\":{\"41\":1}}],[\"避免堆分配\",{\"1\":{\"41\":1}}],[\"避免大面积透明\",{\"1\":{\"41\":1}}],[\"避免\",{\"1\":{\"41\":1,\"42\":1,\"83\":1,\"189\":1}}],[\"对主线程的卡顿影响\",{\"1\":{\"401\":1}}],[\"对主线程的影响有多大\",{\"1\":{\"400\":1}}],[\"对各个模块进行分解拆分\",{\"1\":{\"383\":1}}],[\"对数组进行覆盖\",{\"1\":{\"369\":1}}],[\"对待某些特殊名称文件夹中的脚本与其他文件夹中的脚本不同\",{\"1\":{\"307\":1}}],[\"对自动垃圾回收进行微调\",{\"1\":{\"276\":1}}],[\"对粒子系统建池时\",{\"1\":{\"266\":1}}],[\"对字符串的任何操作均会导致分配一个完整的新字符串\",{\"1\":{\"250\":1}}],[\"对性能极为不利\",{\"1\":{\"181\":1}}],[\"对需要\",{\"1\":{\"144\":1}}],[\"对应的数据类型是什么\",{\"1\":{\"394\":1}}],[\"对应的材质球的材质\",{\"1\":{\"127\":1}}],[\"对应数字\",{\"1\":{\"377\":1}}],[\"对应内容\",{\"1\":{\"363\":1}}],[\"对应用程序执行的中断时间更短\",{\"1\":{\"275\":1}}],[\"对应了\",{\"1\":{\"127\":1}}],[\"对一个材质分配一个半\",{\"1\":{\"127\":1}}],[\"对这些方法的每次调用都会发出一个单独的绘制调用\",{\"1\":{\"115\":1}}],[\"对渲染状态的更改\",{\"1\":{\"106\":1}}],[\"对渲染管线中各种\",{\"1\":{\"60\":1}}],[\"对其的引用丢失\",{\"1\":{\"97\":1}}],[\"对c\",{\"1\":{\"60\":1}}],[\"对gc的理解是否深入\",{\"1\":{\"60\":1}}],[\"对事不对人\",{\"1\":{\"59\":1,\"60\":1,\"77\":1}}],[\"对\",{\"1\":{\"58\":1,\"144\":2,\"257\":1,\"272\":1,\"392\":1}}],[\"对于一个无法一次解决的大问题\",{\"1\":{\"382\":1}}],[\"对于一个带有许多抽屉的静态橱柜\",{\"1\":{\"288\":1}}],[\"对于客户端来说\",{\"1\":{\"381\":1}}],[\"对于服务器来说\",{\"1\":{\"381\":1}}],[\"对于多语言\",{\"1\":{\"377\":1}}],[\"对于数字做\",{\"1\":{\"377\":1}}],[\"对于置顶文章\",{\"1\":{\"358\":1}}],[\"对于版本号\",{\"1\":{\"302\":1}}],[\"对于更复杂的方法\",{\"1\":{\"273\":1}}],[\"对于简单的原始类型\",{\"1\":{\"272\":1}}],[\"对于属性尤其如此\",{\"1\":{\"271\":1}}],[\"对于屏幕上看不到的角色\",{\"1\":{\"270\":1}}],[\"对于必须汇集大量不同粒子效果的项目\",{\"1\":{\"266\":1}}],[\"对于必须在\",{\"1\":{\"261\":1}}],[\"对于必须支持大字符集的应用程序\",{\"1\":{\"168\":1}}],[\"对于位于紧凑循环中的矢量和四元数运算\",{\"1\":{\"260\":1}}],[\"对于完全解析为普通\",{\"1\":{\"254\":1}}],[\"对于许多移动应用程序\",{\"1\":{\"247\":1}}],[\"对于任何大规模的项目\",{\"1\":{\"246\":1}}],[\"对于任何显著复杂的滚动\",{\"1\":{\"170\":1}}],[\"对于了解\",{\"1\":{\"215\":1}}],[\"对于较长的循环声音\",{\"1\":{\"201\":1}}],[\"对于较长的剪辑\",{\"1\":{\"201\":3}}],[\"对于经常播放的非常短的剪辑\",{\"1\":{\"201\":1}}],[\"对于内存性能和使用\",{\"1\":{\"197\":1}}],[\"对于引用类型\",{\"1\":{\"197\":1}}],[\"对于公开可用的平台\",{\"1\":{\"193\":1}}],[\"对于很少变化或只在事件响应中短时间变化的元素\",{\"1\":{\"184\":1}}],[\"对于元素数量动态变化的热门\",{\"1\":{\"181\":1}}],[\"对于基础\",{\"1\":{\"169\":1}}],[\"对于在世界空间中显示的文本\",{\"1\":{\"169\":1}}],[\"对于分数\",{\"1\":{\"168\":1}}],[\"对于字符串做\",{\"1\":{\"377\":1}}],[\"对于字符串拼接\",{\"1\":{\"60\":1}}],[\"对于字形已知且各字形之间位置相对固定的情况\",{\"1\":{\"168\":1}}],[\"对于具有多个必须响应指针事件的可绘制\",{\"1\":{\"166\":1}}],[\"对于每个\",{\"1\":{\"166\":1}}],[\"对于每个渲染器\",{\"1\":{\"110\":1}}],[\"对于手写着色器\",{\"1\":{\"112\":1}}],[\"对于带有许多抽屉的静态橱柜\",{\"1\":{\"111\":1}}],[\"对于批处理中的每个渲染器\",{\"1\":{\"110\":1}}],[\"对于可见的网格\",{\"1\":{\"109\":1}}],[\"对于足够小的网格\",{\"1\":{\"108\":1}}],[\"对于电池供电的设备\",{\"1\":{\"106\":1}}],[\"对于需要频繁使用的值类型\",{\"1\":{\"68\":1}}],[\"对于需要稳定帧率的\",{\"1\":{\"55\":1}}],[\"对于场景题\",{\"1\":{\"66\":1,\"72\":1}}],[\"对于频繁创建和销毁的对象\",{\"1\":{\"63\":1,\"68\":1}}],[\"对于\",{\"1\":{\"56\":1,\"59\":2,\"97\":1,\"102\":1,\"108\":1,\"112\":2,\"118\":3,\"144\":1,\"180\":1,\"188\":1,\"248\":1,\"258\":1}}],[\"对于临时数据或小型数据包\",{\"1\":{\"42\":1}}],[\"对共享相同网格和材质的\",{\"1\":{\"115\":1}}],[\"对共享相同\",{\"1\":{\"43\":1}}],[\"对非泛型集合\",{\"1\":{\"42\":1}}],[\"对小型数据结构使用\",{\"1\":{\"41\":1}}],[\"对象格式\",{\"1\":{\"360\":1}}],[\"对象总是被默认为\",{\"1\":{\"269\":1}}],[\"对象不会自动使用\",{\"1\":{\"269\":1}}],[\"对象会显示\",{\"1\":{\"269\":1}}],[\"对象以监控和管理该操作\",{\"1\":{\"269\":1}}],[\"对象设置为结构体\",{\"1\":{\"189\":1}}],[\"对象设置为类\",{\"1\":{\"189\":1}}],[\"对象回到对象池\",{\"1\":{\"182\":1}}],[\"对象缓存池\",{\"0\":{\"182\":1},\"1\":{\"182\":1}}],[\"对象遇到尚未光栅化到字体纹理图集中的字形时\",{\"1\":{\"168\":1}}],[\"对象将维护自己的纹理图集\",{\"1\":{\"168\":1}}],[\"对象下方的\",{\"1\":{\"166\":1}}],[\"对象的\",{\"1\":{\"269\":1}}],[\"对象的数据\",{\"1\":{\"254\":1}}],[\"对象的数量保持在尽可能低的水平\",{\"1\":{\"156\":1}}],[\"对象的复合\",{\"1\":{\"166\":1}}],[\"对象的层次结构顺序决定了它们的排序顺序\",{\"1\":{\"162\":1}}],[\"对象外观的任何更改\",{\"1\":{\"161\":1}}],[\"对象必须是网格\",{\"1\":{\"129\":1}}],[\"对象在运行时为一组\",{\"1\":{\"123\":1}}],[\"对象在运行时设置每实例数据的示例\",{\"1\":{\"120\":1}}],[\"对象中\",{\"1\":{\"280\":1}}],[\"对象中收集所有属性值到一个绘制调用中\",{\"1\":{\"120\":1}}],[\"对象中填充所有属性\",{\"1\":{\"118\":1}}],[\"对象占用的内存被释放\",{\"1\":{\"97\":1}}],[\"对象\",{\"1\":{\"41\":2,\"59\":1,\"64\":1,\"74\":1,\"97\":2,\"267\":1,\"269\":1}}],[\"对象池是预先创建好一组对象并存储在一个集合中的管理系统\",{\"1\":{\"64\":1}}],[\"对象池技术\",{\"1\":{\"61\":1,\"66\":1}}],[\"对象池\",{\"1\":{\"41\":1,\"42\":1,\"69\":1,\"81\":1,\"317\":1}}],[\"对使用相同材质的小型动态物体\",{\"1\":{\"41\":1}}],[\"对静态物体勾选\",{\"1\":{\"41\":1}}],[\"对频繁创建和销毁的对象\",{\"1\":{\"41\":1}}],[\"对称艺术\",{\"1\":{\"30\":1}}],[\"解析完了\",{\"1\":{\"396\":1}}],[\"解析数据的成本可分摊到多个帧\",{\"1\":{\"254\":1}}],[\"解析器快\",{\"1\":{\"254\":1}}],[\"解析器极为灵活\",{\"1\":{\"254\":1}}],[\"解析文本所花费的时间可能超过加载和实例化资源所花费的时间\",{\"1\":{\"254\":1}}],[\"解析文本通常是加载期间所发生的最繁重的操作之一\",{\"1\":{\"254\":1}}],[\"解压会重用之前的内存\",{\"1\":{\"394\":1}}],[\"解压的\",{\"1\":{\"392\":1}}],[\"解压缩\",{\"1\":{\"269\":1}}],[\"解压器\",{\"1\":{\"249\":1}}],[\"解压\",{\"1\":{\"84\":1}}],[\"解释器模式\",{\"1\":{\"312\":1}}],[\"解释器之介绍\",{\"1\":{\"26\":1}}],[\"解释\",{\"1\":{\"59\":1,\"60\":1}}],[\"解释原因\",{\"1\":{\"59\":1,\"77\":1}}],[\"解释一下\",{\"0\":{\"50\":1}}],[\"解决方案\",{\"1\":{\"178\":1,\"179\":2,\"180\":1,\"181\":1,\"182\":1,\"183\":1,\"184\":1}}],[\"解决方案是\",{\"1\":{\"55\":1}}],[\"解决的问题\",{\"1\":{\"75\":1}}],[\"解决\",{\"1\":{\"60\":1,\"74\":1}}],[\"解决了手动管理\",{\"1\":{\"76\":1}}],[\"解决了传统\",{\"1\":{\"75\":1}}],[\"解决了哪些核心痛点\",{\"1\":{\"60\":1}}],[\"解决了什么问题\",{\"1\":{\"46\":1}}],[\"解决什么问题\",{\"1\":{\"58\":1}}],[\"解决问题的能力\",{\"1\":{\"92\":1}}],[\"解决问题的经验\",{\"1\":{\"53\":1}}],[\"解决问题\",{\"1\":{\"41\":1}}],[\"解耦目标\",{\"1\":{\"75\":1}}],[\"解耦\",{\"1\":{\"44\":1,\"56\":2}}],[\"或文件路径\",{\"1\":{\"365\":1}}],[\"或必须安装的\",{\"1\":{\"302\":1}}],[\"或排除\",{\"1\":{\"296\":1}}],[\"或尽可能接近于零\",{\"1\":{\"278\":1}}],[\"或是局部变量超出作用域\",{\"1\":{\"274\":1}}],[\"或类似工具检查通过访问多维数组生成的\",{\"1\":{\"265\":1}}],[\"或通过检查器更改相机的深度纹理模式\",{\"1\":{\"214\":1}}],[\"或从帧缓冲区传输到共享内存\",{\"1\":{\"212\":1}}],[\"或内存开销\",{\"1\":{\"200\":1}}],[\"或到达层级根节点\",{\"1\":{\"181\":1}}],[\"或子\",{\"1\":{\"173\":1}}],[\"或使用\",{\"1\":{\"169\":1}}],[\"或使用平台专用工具如\",{\"1\":{\"41\":1}}],[\"或同级\",{\"1\":{\"163\":1}}],[\"或有多个占据屏幕重要部分的\",{\"1\":{\"154\":1}}],[\"或任何其他\",{\"1\":{\"152\":1}}],[\"或批处理的有趣细节\",{\"1\":{\"148\":1}}],[\"或批处理构建\",{\"1\":{\"141\":1}}],[\"或更多次\",{\"1\":{\"272\":1}}],[\"或更多\",{\"1\":{\"165\":1}}],[\"或更好\",{\"1\":{\"147\":1}}],[\"或更高版本的任何版本\",{\"1\":{\"304\":1}}],[\"或更高版本中打开\",{\"1\":{\"302\":1}}],[\"或更高版本\",{\"1\":{\"135\":1,\"222\":1}}],[\"或全局帧时间\",{\"1\":{\"131\":1}}],[\"或您自己的自定义\",{\"1\":{\"128\":1}}],[\"或您的代码从未有效访问过的内存\",{\"1\":{\"97\":1}}],[\"或附加到与\",{\"1\":{\"115\":1}}],[\"或几百个\",{\"1\":{\"103\":1}}],[\"或加载期间几百个\",{\"1\":{\"102\":1}}],[\"或状态同步\",{\"1\":{\"87\":1}}],[\"或片元\",{\"1\":{\"76\":1}}],[\"或直接缓存\",{\"1\":{\"74\":1}}],[\"或循环中产生堆内存分配\",{\"1\":{\"74\":1}}],[\"或创建\",{\"1\":{\"64\":1}}],[\"或其他\",{\"1\":{\"150\":1}}],[\"或其他非分配方式\",{\"1\":{\"60\":1}}],[\"或其变体\",{\"1\":{\"60\":1}}],[\"或复杂的\",{\"1\":{\"58\":1}}],[\"或定时\",{\"1\":{\"56\":1}}],[\"或动作游戏\",{\"1\":{\"55\":1}}],[\"或非分配\",{\"1\":{\"55\":1}}],[\"或利用多核\",{\"1\":{\"49\":1}}],[\"或将其作为\",{\"1\":{\"104\":1}}],[\"或将\",{\"1\":{\"49\":1}}],[\"或指定时间后\",{\"1\":{\"49\":1,\"57\":1}}],[\"或\",{\"1\":{\"42\":1,\"44\":2,\"47\":1,\"58\":1,\"59\":2,\"60\":2,\"64\":1,\"65\":1,\"68\":1,\"70\":1,\"74\":3,\"77\":1,\"81\":1,\"84\":1,\"85\":1,\"97\":4,\"98\":1,\"104\":1,\"112\":1,\"113\":1,\"115\":1,\"128\":1,\"129\":1,\"136\":3,\"147\":2,\"149\":1,\"150\":1,\"151\":3,\"152\":4,\"155\":1,\"166\":3,\"173\":1,\"174\":3,\"179\":3,\"180\":1,\"190\":3,\"196\":1,\"200\":1,\"201\":2,\"208\":1,\"212\":1,\"221\":1,\"222\":2,\"228\":1,\"232\":1,\"234\":1,\"236\":1,\"247\":1,\"253\":1,\"257\":2,\"273\":1,\"275\":1,\"284\":1,\"302\":2,\"304\":5,\"305\":1,\"365\":1,\"371\":1}}],[\"或静态变量引用的对象\",{\"1\":{\"42\":1}}],[\"或新版的sgen\",{\"1\":{\"42\":1}}],[\"或者升级\",{\"1\":{\"401\":1}}],[\"或者改变了任何元素的参数\",{\"1\":{\"379\":1}}],[\"或者销毁了任何元素\",{\"1\":{\"379\":1}}],[\"或者一个背景时\",{\"1\":{\"379\":1}}],[\"或者一个按钮\",{\"1\":{\"379\":1}}],[\"或者每一列表示一种语言\",{\"1\":{\"377\":1}}],[\"或者翻译任何代码\",{\"1\":{\"371\":1}}],[\"或者组合使用\",{\"1\":{\"367\":1}}],[\"或者你也可以通过主题选项中的\",{\"1\":{\"358\":1}}],[\"或者你在\",{\"1\":{\"299\":1}}],[\"或者将其设置为一个对象来自定义插件\",{\"1\":{\"357\":1}}],[\"或者将相互引用的类放在同一个程序集中\",{\"1\":{\"293\":1}}],[\"或者您想查看自定义对象池如何实现的示例\",{\"1\":{\"279\":1}}],[\"或者您可以通过脚本加载它们\",{\"1\":{\"242\":1}}],[\"或者启用\",{\"1\":{\"275\":1}}],[\"或者解决的可能仅仅是特定的范围内才存在的问题\",{\"1\":{\"264\":1}}],[\"或者如果网格用作\",{\"1\":{\"248\":1}}],[\"或者如果只是拼接数字\",{\"1\":{\"59\":1}}],[\"或者模型的导入设置发生更改时\",{\"1\":{\"246\":1}}],[\"或者从缓冲区中读回先前的内容\",{\"1\":{\"212\":1}}],[\"或者可能有丑陋的副作用\",{\"1\":{\"171\":1}}],[\"或者它似乎每帧都在运行\",{\"1\":{\"152\":1}}],[\"或者具有低效的片段着色器\",{\"1\":{\"151\":1}}],[\"或者变体\",{\"1\":{\"112\":1}}],[\"或者分配对于块来说太大\",{\"1\":{\"103\":1}}],[\"或者传统的\",{\"1\":{\"85\":1}}],[\"或者zwrite设置成了\",{\"1\":{\"60\":1}}],[\"或者在周会上分享\",{\"1\":{\"59\":1}}],[\"或者使用该\",{\"1\":{\"58\":1}}],[\"或者\",{\"1\":{\"41\":1,\"55\":3,\"116\":1,\"226\":1,\"296\":1}}],[\"模糊逻辑\",{\"1\":{\"331\":1}}],[\"模版方法模式\",{\"1\":{\"312\":1}}],[\"模板阴影\",{\"1\":{\"329\":1}}],[\"模板缓冲区使用\",{\"1\":{\"232\":1}}],[\"模板缓冲区为\",{\"1\":{\"232\":1}}],[\"模板缓冲区和深度缓冲区仅在图形功能使用它们时才绑定到帧缓冲区\",{\"1\":{\"232\":1}}],[\"模板缓冲区\",{\"0\":{\"232\":1}}],[\"模板和颜色缓冲区\",{\"1\":{\"229\":1}}],[\"模拟添加物品并验证事件是否正确触发\",{\"1\":{\"56\":1}}],[\"模式并使用\",{\"1\":{\"174\":1}}],[\"模式的进一步解释超出了本指南的范围\",{\"1\":{\"173\":1}}],[\"模式中可见覆盖的每个设置的描述\",{\"1\":{\"131\":1}}],[\"模式下\",{\"1\":{\"112\":1}}],[\"模式\",{\"1\":{\"44\":1,\"49\":1,\"57\":1,\"74\":1,\"130\":1,\"133\":2,\"149\":1,\"215\":1,\"301\":1}}],[\"模块中\",{\"1\":{\"274\":1}}],[\"模块中的组件\",{\"1\":{\"194\":1}}],[\"模块的平台\",{\"1\":{\"194\":1}}],[\"模块剥离\",{\"0\":{\"194\":1}}],[\"模块\",{\"1\":{\"41\":1,\"74\":1,\"194\":4,\"274\":2,\"312\":1}}],[\"模型在默认情况下会启用该标志\",{\"1\":{\"248\":1}}],[\"模型\",{\"0\":{\"248\":1},\"1\":{\"124\":1,\"246\":1,\"313\":1}}],[\"模型不在\",{\"1\":{\"60\":1}}],[\"模型覆盖到的每个屏幕像素都会运行一次\",{\"1\":{\"51\":1}}],[\"模型的纹理的要求\",{\"1\":{\"247\":1}}],[\"模型的\",{\"1\":{\"60\":1,\"248\":1}}],[\"模型的每个顶点都会运行一次\",{\"1\":{\"51\":1}}],[\"模型的单个顶点数据\",{\"1\":{\"51\":1}}],[\"模型加载库\",{\"1\":{\"31\":1}}],[\"模型动画\",{\"1\":{\"30\":2}}],[\"模型下载\",{\"1\":{\"7\":1}}],[\"导航栏\",{\"0\":{\"360\":1},\"1\":{\"359\":1}}],[\"导航栏生成项\",{\"1\":{\"359\":1}}],[\"导入优化\",{\"1\":{\"389\":1}}],[\"导入资源时将回调此类\",{\"1\":{\"246\":1}}],[\"导入为\",{\"1\":{\"201\":1}}],[\"导入或更改\",{\"1\":{\"104\":1}}],[\"导入cs模型到unity3d\",{\"1\":{\"22\":1}}],[\"导致一些他觉得会被释放的东西\",{\"1\":{\"403\":1}}],[\"导致cpu阻塞时间过长\",{\"1\":{\"377\":1}}],[\"导致意外分配数组的一个微妙原因是重复访问返回数组的\",{\"1\":{\"285\":1}}],[\"导致标记阶段因持续有新工作而无法完成\",{\"1\":{\"275\":1}}],[\"导致内存消耗过高\",{\"1\":{\"255\":1}}],[\"导致迭代时间过慢\",{\"1\":{\"190\":1}}],[\"导致后续长期闲置\",{\"1\":{\"69\":1}}],[\"导致摄像机认为它在视锥体外\",{\"1\":{\"60\":1}}],[\"导致无法写入深度\",{\"1\":{\"60\":1}}],[\"导致画面在两个物理帧之间是\",{\"1\":{\"60\":1}}],[\"导致物理效果不确定\",{\"1\":{\"60\":1}}],[\"导致游戏在低端设备上卡顿\",{\"1\":{\"59\":1}}],[\"导致不必要的\",{\"1\":{\"59\":1}}],[\"导致卡顿\",{\"1\":{\"42\":1}}],[\"导致\",{\"1\":{\"41\":1,\"43\":1,\"393\":1}}],[\"时候或者团队配合的时候有问题\",{\"1\":{\"403\":1}}],[\"时都会进行压缩\",{\"1\":{\"387\":1}}],[\"时都会分配新的字符串\",{\"1\":{\"280\":1}}],[\"时应加上安全机制\",{\"1\":{\"369\":1}}],[\"时应对事不对人\",{\"1\":{\"53\":1}}],[\"时要承担更多的压力\",{\"1\":{\"369\":1}}],[\"时包含该程序集\",{\"1\":{\"301\":1}}],[\"时增加一些托管代码的性能开销\",{\"1\":{\"275\":1}}],[\"时订阅了全局更新管理器\",{\"1\":{\"267\":1}}],[\"时分别会在这些列表中添加\",{\"1\":{\"267\":1}}],[\"时会发生这种情况\",{\"1\":{\"216\":1}}],[\"时才会被清除\",{\"1\":{\"200\":1}}],[\"时才会显示此兼容性部分\",{\"1\":{\"129\":1}}],[\"时唯一要考虑的是使用二分搜索来找到正确的大小\",{\"1\":{\"169\":1}}],[\"时本地化项目成为一个问题\",{\"1\":{\"169\":1}}],[\"时优化内存至关重要\",{\"1\":{\"169\":1}}],[\"时最常见\",{\"1\":{\"168\":1}}],[\"时观察这组行\",{\"1\":{\"149\":1}}],[\"时的核心矛盾是在绘制调用和批处理成本之间取得平衡\",{\"1\":{\"139\":1}}],[\"时的速度提升\",{\"1\":{\"137\":1}}],[\"时的这种巨大加速仅限于编辑器\",{\"1\":{\"137\":1}}],[\"时必须使用\",{\"1\":{\"122\":1}}],[\"时更新\",{\"1\":{\"104\":1}}],[\"时写入日志的内存使用报告\",{\"1\":{\"98\":1}}],[\"时通过\",{\"1\":{\"96\":1}}],[\"时渲染的还是\",{\"1\":{\"60\":1}}],[\"时刻\",{\"1\":{\"60\":1}}],[\"时刻更新位置\",{\"1\":{\"60\":1}}],[\"时过载\",{\"1\":{\"60\":1}}],[\"时产生大量开销\",{\"1\":{\"56\":1}}],[\"时遇到了瓶颈\",{\"1\":{\"55\":1}}],[\"时可读性差\",{\"1\":{\"49\":1}}],[\"时间不变\",{\"1\":{\"401\":1}}],[\"时间重映射\",{\"1\":{\"329\":1}}],[\"时间来计算模拟它们的纯视觉元素是种浪费\",{\"1\":{\"270\":1}}],[\"时间和额外的内存\",{\"1\":{\"247\":1}}],[\"时间轴分析器中\",{\"1\":{\"225\":1}}],[\"时间几乎相同\",{\"1\":{\"201\":1}}],[\"时间的浪费\",{\"1\":{\"165\":1}}],[\"时间测量表示一帧中所有\",{\"1\":{\"130\":1}}],[\"时间\",{\"1\":{\"106\":1,\"112\":2,\"133\":1,\"134\":1,\"148\":1,\"152\":2,\"218\":1,\"269\":1,\"277\":1}}],[\"时间复杂度\",{\"1\":{\"71\":1}}],[\"时间反而变长了\",{\"1\":{\"55\":1}}],[\"时间步长\",{\"1\":{\"41\":1}}],[\"时间戳转换工具\",{\"1\":{\"30\":1}}],[\"时\",{\"1\":{\"41\":1,\"60\":5,\"62\":2,\"67\":2,\"100\":2,\"104\":1,\"106\":1,\"109\":1,\"112\":2,\"130\":1,\"150\":1,\"175\":1,\"200\":1,\"212\":1,\"213\":1,\"215\":1,\"218\":2,\"230\":1,\"231\":1,\"234\":1,\"240\":1,\"244\":1,\"247\":1,\"269\":1,\"272\":1,\"282\":1,\"284\":1,\"285\":1,\"292\":1,\"300\":1}}],[\"可看做闭包和匿名函数的一个特例\",{\"1\":{\"404\":1}}],[\"可看出差异很明显\",{\"1\":{\"271\":1}}],[\"可看出遍历非紧凑内存结构的成本\",{\"1\":{\"265\":1}}],[\"可看出额外函数调用的成本\",{\"1\":{\"265\":1}}],[\"可移植性\",{\"1\":{\"400\":1}}],[\"可伸缩性\",{\"1\":{\"381\":1}}],[\"可添加不同类型的系统\",{\"1\":{\"381\":1}}],[\"可渲染多少模型\",{\"1\":{\"381\":1}}],[\"可选\",{\"1\":{\"360\":2}}],[\"可重用对象池\",{\"0\":{\"279\":1}}],[\"可重复使用\",{\"1\":{\"250\":1}}],[\"可使用\",{\"1\":{\"276\":1}}],[\"可使用这些回调来激活\",{\"1\":{\"270\":1}}],[\"可自行计算帧结束前的可用时间\",{\"1\":{\"275\":1}}],[\"可帮助确定垃圾回收器运行的时机和位置\",{\"1\":{\"274\":1}}],[\"可提供应用程序特定帧的详细内存使用信息\",{\"1\":{\"274\":1}}],[\"可完全控制\",{\"1\":{\"274\":1}}],[\"可产生一定的影响\",{\"1\":{\"272\":1}}],[\"可在三个位置控制该优先级\",{\"1\":{\"269\":1}}],[\"可在这里的\",{\"1\":{\"250\":1}}],[\"可将配置数据应用于对象以实现期望的图形效果\",{\"1\":{\"266\":1}}],[\"可识别出为用户提供所需体验而需要的特定数据部分\",{\"1\":{\"254\":1}}],[\"可根据与文本字符有关的多种不同区域性和语言规则来处理字符串\",{\"1\":{\"251\":1}}],[\"可对不同的通道使用不同级别的压缩\",{\"1\":{\"248\":1}}],[\"可寻址内存中\",{\"1\":{\"247\":1}}],[\"可配置\",{\"1\":{\"225\":2,\"228\":2}}],[\"可参考\",{\"1\":{\"178\":1}}],[\"可见性与遮挡\",{\"1\":{\"329\":1}}],[\"可见明显的\",{\"1\":{\"275\":1}}],[\"可见部分的可见\",{\"1\":{\"170\":1}}],[\"可见的每个\",{\"1\":{\"149\":1}}],[\"可显著提高效率\",{\"1\":{\"253\":1}}],[\"可显著提高使用\",{\"1\":{\"112\":1}}],[\"可显示字符来自一个已知的字形集\",{\"1\":{\"168\":1}}],[\"可用字段\",{\"1\":{\"366\":1}}],[\"可用\",{\"1\":{\"363\":1}}],[\"可用性\",{\"1\":{\"225\":1,\"228\":1}}],[\"可用于检查\",{\"1\":{\"162\":1}}],[\"可用于其他操作\",{\"1\":{\"132\":1}}],[\"可用块保存在池中\",{\"1\":{\"103\":1}}],[\"可编程性\",{\"1\":{\"90\":1}}],[\"可编程渲染管线\",{\"1\":{\"50\":1,\"58\":1,\"112\":2,\"125\":1}}],[\"可复用\",{\"1\":{\"75\":1}}],[\"可靠性要求高\",{\"1\":{\"87\":1}}],[\"可靠性\",{\"1\":{\"71\":1}}],[\"可考虑使用\",{\"1\":{\"63\":1}}],[\"可测试\",{\"1\":{\"56\":1}}],[\"可扩展性的关键在于\",{\"1\":{\"381\":1}}],[\"可扩展性\",{\"1\":{\"381\":1,\"400\":1}}],[\"可扩展\",{\"1\":{\"56\":1}}],[\"可维护性\",{\"1\":{\"53\":1}}],[\"可维护项目框架的能力\",{\"1\":{\"43\":1}}],[\"可读性好\",{\"1\":{\"88\":1}}],[\"可读性\",{\"1\":{\"53\":1}}],[\"可定制性\",{\"1\":{\"58\":1}}],[\"可定制\",{\"1\":{\"50\":1}}],[\"可以回收\",{\"1\":{\"401\":1}}],[\"可以省大量内存\",{\"1\":{\"396\":1}}],[\"可以一块一块解压\",{\"1\":{\"394\":1}}],[\"可以节省一半的内存\",{\"1\":{\"392\":1}}],[\"可以把不活跃的内存进行压缩\",{\"1\":{\"387\":1}}],[\"可以理解为构建了一个3d模型\",{\"1\":{\"379\":1}}],[\"可以生成\",{\"1\":{\"371\":1}}],[\"可以定义\",{\"1\":{\"297\":1}}],[\"可以加快编译速度\",{\"1\":{\"292\":1}}],[\"可以手动指定要引用的预编译\",{\"1\":{\"291\":1}}],[\"可以组织代码以促进模块化和可重用性\",{\"1\":{\"289\":1}}],[\"可以重用该数组并重新填充随机数\",{\"1\":{\"281\":1}}],[\"可以用简单的赋值语句替换\",{\"1\":{\"273\":1}}],[\"可以用更少的绘制调用渲染它们\",{\"1\":{\"108\":1}}],[\"可以很好地解决这两个问题\",{\"1\":{\"270\":1}}],[\"可以有效执行此类转换\",{\"1\":{\"261\":1}}],[\"可以预加载着色器并将其保留在内存中\",{\"1\":{\"243\":1}}],[\"可以检查\",{\"1\":{\"239\":1}}],[\"可以消除此延迟并提供最高的帧率\",{\"1\":{\"230\":1}}],[\"可以带来显著的性能优势\",{\"1\":{\"221\":1}}],[\"可以获得更好的渲染性能\",{\"1\":{\"217\":1}}],[\"可以压缩页面\",{\"1\":{\"205\":1}}],[\"可以粗略了解它们的相对权重\",{\"1\":{\"205\":1}}],[\"可以启用\",{\"1\":{\"190\":1}}],[\"可以选择\",{\"1\":{\"190\":1}}],[\"可以指定用于为\",{\"1\":{\"180\":1}}],[\"可以使\",{\"1\":{\"172\":1}}],[\"可以使用以下\",{\"1\":{\"276\":1}}],[\"可以使用下划线\",{\"1\":{\"240\":1}}],[\"可以使用相机组件启用或禁用运动矢量\",{\"1\":{\"214\":1}}],[\"可以使用相同的渲染状态执行多个绘制调用\",{\"1\":{\"106\":1}}],[\"可以使用任意数量的不同材质\",{\"1\":{\"135\":1}}],[\"可以使用\",{\"1\":{\"130\":1,\"151\":1,\"199\":1,\"200\":1,\"218\":1,\"275\":1}}],[\"可以使用委托或事件来解耦状态间的转换条件\",{\"1\":{\"70\":1}}],[\"可以分析底层源数据以检查必须显示多少数据元素\",{\"1\":{\"170\":1}}],[\"可以以无分配且计算\",{\"1\":{\"168\":1}}],[\"可以找到最小化由于重叠\",{\"1\":{\"162\":1}}],[\"可以从构建中剥离着色器\",{\"1\":{\"244\":1}}],[\"可以从头到尾在\",{\"1\":{\"190\":1}}],[\"可以从\",{\"1\":{\"160\":1}}],[\"可以简单地移除它\",{\"1\":{\"155\":1}}],[\"可以禁用放置在全屏\",{\"1\":{\"155\":1}}],[\"可以采取两种措施来减少\",{\"1\":{\"154\":1}}],[\"可以看到此默认\",{\"1\":{\"151\":1}}],[\"可以通过\",{\"1\":{\"215\":1,\"245\":1}}],[\"可以通过禁用运动矢量来避免对性能的影响\",{\"1\":{\"214\":1}}],[\"可以通过实现\",{\"1\":{\"170\":1}}],[\"可以通过简单地更改材质属性来动态改变文本的视觉外观\",{\"1\":{\"169\":1}}],[\"可以通过少至两三个\",{\"1\":{\"163\":1}}],[\"可以通过将元素移动到子\",{\"1\":{\"163\":1}}],[\"可以通过单击\",{\"1\":{\"151\":1}}],[\"可以通过在\",{\"1\":{\"151\":1}}],[\"可以相对简单地最大化\",{\"1\":{\"149\":1}}],[\"可以更好地理解如何优化\",{\"1\":{\"148\":1}}],[\"可以独立于\",{\"1\":{\"141\":1}}],[\"可以参考\",{\"1\":{\"136\":1,\"393\":1}}],[\"可以不必声明它们\",{\"1\":{\"136\":1}}],[\"可以将其设置为\",{\"1\":{\"291\":1}}],[\"可以将该选项设置为\",{\"1\":{\"291\":1}}],[\"可以将解析操作移动到工作线程\",{\"1\":{\"254\":1}}],[\"可以将\",{\"1\":{\"125\":1,\"170\":1,\"358\":1}}],[\"可以提高性能\",{\"1\":{\"118\":2}}],[\"可以对阴影投射器使用动态批处理\",{\"1\":{\"110\":1}}],[\"可以对网格使用\",{\"1\":{\"106\":1}}],[\"可以批处理使用顶点位置\",{\"1\":{\"109\":1}}],[\"可以自动跟踪分配的引用以管理其生命周期\",{\"1\":{\"96\":1}}],[\"可以举例说明\",{\"1\":{\"93\":1}}],[\"可以大幅减少计算量\",{\"1\":{\"76\":1}}],[\"可以轻松推送\",{\"1\":{\"216\":1}}],[\"可以轻松切换本地加载和远程加载\",{\"1\":{\"76\":1}}],[\"可以轻松注入自定义的渲染通道\",{\"1\":{\"50\":1}}],[\"可以利用更成熟的\",{\"1\":{\"76\":1}}],[\"可以考虑适当把包体加大\",{\"1\":{\"394\":1}}],[\"可以考虑使用泛型集合或预装箱策略\",{\"1\":{\"68\":1}}],[\"可以考虑缓存委托实例\",{\"1\":{\"63\":1}}],[\"可以调用\",{\"1\":{\"62\":2,\"67\":2}}],[\"可以在原本等待的时间内进行垃圾回收\",{\"1\":{\"275\":1}}],[\"可以在应用程序加载时预加载着色器变体集合\",{\"1\":{\"242\":1}}],[\"可以在本机平台分析器\",{\"1\":{\"225\":1}}],[\"可以在运行时将多个网格组合成一个网格\",{\"1\":{\"218\":1}}],[\"可以在使用引用类型的泛型之间共享\",{\"1\":{\"197\":1}}],[\"可以在开发期间暂时切换到\",{\"1\":{\"190\":1}}],[\"可以在阴影渲染步骤中批处理箱子\",{\"1\":{\"110\":1}}],[\"可以在构建时和运行时执行静态批处理\",{\"1\":{\"109\":1}}],[\"可以在\",{\"1\":{\"96\":1,\"173\":1,\"190\":1,\"355\":1}}],[\"可以在线程池中执行\",{\"1\":{\"60\":1}}],[\"可以在多个场景中被引用\",{\"1\":{\"45\":1}}],[\"可以为值类型泛型\",{\"1\":{\"57\":1}}],[\"可以直接在\",{\"1\":{\"56\":1}}],[\"可以合并\",{\"1\":{\"55\":1}}],[\"可以避免第二次脏标记旧层级\",{\"1\":{\"182\":1}}],[\"可以避免\",{\"1\":{\"48\":1}}],[\"可以\",{\"1\":{\"45\":2,\"49\":1}}],[\"可以创建一个通过简单地移动其包含的\",{\"1\":{\"170\":1}}],[\"可以创建一个省略未使用操作的自定义着色器\",{\"1\":{\"160\":1}}],[\"可以创建一个\",{\"1\":{\"45\":1}}],[\"可以引用同一个\",{\"1\":{\"45\":1}}],[\"可能你自己的应用没有申请很多内存\",{\"1\":{\"388\":1}}],[\"可能就没有很多角色上的东西\",{\"1\":{\"383\":1}}],[\"可能就不划算了\",{\"1\":{\"55\":1}}],[\"可能已分配并在后续帧中重用的内存\",{\"1\":{\"274\":1}}],[\"可能有必要打破美观编码规则\",{\"1\":{\"273\":1}}],[\"可能的原因是这些优化在实现时非常耗费精力\",{\"1\":{\"264\":1}}],[\"可能导致\",{\"1\":{\"247\":1}}],[\"可能获得性能提升\",{\"1\":{\"218\":1}}],[\"可能还有视差映射\",{\"1\":{\"217\":1}}],[\"可能需要在游戏关卡加载前分配所需的所有内存\",{\"1\":{\"276\":1}}],[\"可能需要分配第二个或第三个块\",{\"1\":{\"200\":1}}],[\"可能需要进一步将动态元素细分为一组不断变化的元素\",{\"1\":{\"163\":1}}],[\"可能难以维护\",{\"1\":{\"171\":1}}],[\"可能效率低下\",{\"1\":{\"169\":1}}],[\"可能超过了\",{\"1\":{\"152\":1}}],[\"可能您使用了太多\",{\"1\":{\"134\":1}}],[\"可能\",{\"1\":{\"130\":1}}],[\"可能很耗费资源\",{\"1\":{\"106\":1}}],[\"可能使用\",{\"1\":{\"85\":1}}],[\"可能它被错误地标记为\",{\"1\":{\"60\":1}}],[\"可能原因\",{\"1\":{\"60\":1}}],[\"可能会看到多一点\",{\"1\":{\"399\":1}}],[\"可能会发生两种情况\",{\"1\":{\"221\":1}}],[\"可能会首先绘制大型背景对象\",{\"1\":{\"215\":1}}],[\"可能会导致性能低下\",{\"1\":{\"211\":1}}],[\"可能会导致\",{\"1\":{\"178\":1}}],[\"可能会得出几个结论\",{\"1\":{\"152\":1}}],[\"可能会改变嵌套在其内部的任何\",{\"1\":{\"145\":1}}],[\"可能会问如何基于不可靠的\",{\"1\":{\"71\":1}}],[\"可能会增加内存占用\",{\"1\":{\"64\":1,\"69\":1}}],[\"可能会高于传递一个引用\",{\"1\":{\"48\":1}}],[\"可能会产生分配\",{\"1\":{\"42\":1}}],[\"可能是加载帧\",{\"1\":{\"99\":1}}],[\"可能是cpu在准备数据\",{\"1\":{\"60\":1}}],[\"可能是\",{\"1\":{\"41\":1}}],[\"可视化编程工具\",{\"1\":{\"312\":1}}],[\"可视化编程\",{\"1\":{\"312\":1}}],[\"可视化\",{\"1\":{\"12\":1}}],[\"过滤掉反向目标\",{\"1\":{\"166\":1}}],[\"过载的项目更可能是受限于填充率过度使用\",{\"1\":{\"139\":1}}],[\"过度脏标记\",{\"1\":{\"139\":1}}],[\"过度利用\",{\"1\":{\"139\":1}}],[\"过度的\",{\"1\":{\"139\":1}}],[\"过度绘制视图效果最佳\",{\"1\":{\"215\":1}}],[\"过度绘制视图中的同一场景\",{\"1\":{\"215\":1}}],[\"过度绘制视图允许您查看\",{\"1\":{\"215\":1}}],[\"过度绘制视图\",{\"1\":{\"215\":1}}],[\"过度绘制将在本指南后面更详细地讨论\",{\"1\":{\"151\":1}}],[\"过度绘制的成本至关重要\",{\"1\":{\"151\":1}}],[\"过度绘制\",{\"1\":{\"41\":1,\"152\":1,\"215\":1}}],[\"过去的渲染架构是为非恒定缓冲区\",{\"1\":{\"126\":1}}],[\"过多地与主内存之间的内存交换产生\",{\"1\":{\"387\":1}}],[\"过多会成为\",{\"1\":{\"64\":1,\"69\":1}}],[\"过多的\",{\"1\":{\"41\":1,\"43\":1}}],[\"过于频繁地重建\",{\"1\":{\"152\":1}}],[\"过于频繁\",{\"1\":{\"55\":1}}],[\"过于复杂\",{\"1\":{\"41\":1}}],[\"过高\",{\"1\":{\"52\":1}}],[\"过大\",{\"1\":{\"48\":1,\"392\":1}}],[\"等会作为\",{\"1\":{\"390\":1}}],[\"等同于\",{\"1\":{\"304\":1}}],[\"等工具进行大量分析\",{\"1\":{\"204\":1}}],[\"等帧捕获工具中显示\",{\"1\":{\"200\":1}}],[\"等低端设备上表现不佳\",{\"1\":{\"160\":1}}],[\"等图形\",{\"1\":{\"126\":1}}],[\"等于或大于半个块的分配会进入虚拟内存系统\",{\"1\":{\"101\":1}}],[\"等空间划分算法用于碰撞检测优化\",{\"1\":{\"71\":1}}],[\"等基础问题\",{\"1\":{\"71\":1}}],[\"等高频方法中\",{\"1\":{\"63\":1,\"68\":1}}],[\"等到下一帧\",{\"1\":{\"60\":1}}],[\"等动画播完后执行下一步\",{\"1\":{\"57\":1}}],[\"等待网络响应\",{\"1\":{\"80\":1}}],[\"等待等操作\",{\"1\":{\"80\":1}}],[\"等待\",{\"1\":{\"49\":1,\"57\":1}}],[\"等平台\",{\"1\":{\"47\":2}}],[\"等是安全的\",{\"1\":{\"42\":1}}],[\"等\",{\"1\":{\"41\":1,\"53\":1,\"65\":1,\"74\":1,\"79\":2,\"127\":1,\"194\":1,\"215\":1,\"339\":1,\"371\":1}}],[\"看起来类似于以下日志\",{\"1\":{\"238\":1}}],[\"看不到\",{\"1\":{\"215\":1}}],[\"看\",{\"1\":{\"41\":1}}],[\"瓶颈解决方案\",{\"1\":{\"74\":1}}],[\"瓶颈\",{\"1\":{\"41\":2,\"43\":1,\"74\":3,\"77\":1}}],[\"视锥剔除\",{\"1\":{\"329\":1}}],[\"视锥体剔除在\",{\"1\":{\"213\":1}}],[\"视锥体剔除的示例\",{\"1\":{\"213\":1}}],[\"视锥体剔除确保相机视锥体\",{\"1\":{\"213\":1}}],[\"视锥体剔除\",{\"1\":{\"83\":1,\"213\":3}}],[\"视锥体\",{\"1\":{\"74\":1}}],[\"视觉感知\",{\"1\":{\"329\":1}}],[\"视觉渲染\",{\"1\":{\"313\":1}}],[\"视差遮蔽贴图\",{\"1\":{\"329\":1}}],[\"视差贴图\",{\"1\":{\"329\":1}}],[\"视口之外的\",{\"1\":{\"170\":1}}],[\"视图或\",{\"1\":{\"109\":1}}],[\"视图高\",{\"1\":{\"74\":1}}],[\"视图\",{\"1\":{\"41\":1}}],[\"视频地址解析\",{\"1\":{\"30\":1}}],[\"视频集成sdk\",{\"1\":{\"19\":1}}],[\"你调用的各种服务\",{\"1\":{\"388\":1}}],[\"你当前的\",{\"1\":{\"388\":1}}],[\"你也可以在\",{\"1\":{\"358\":1,\"364\":1}}],[\"你也可以嵌套\",{\"1\":{\"178\":1}}],[\"你项目的目录结构应该是这样的\",{\"1\":{\"347\":1}}],[\"你不能为预编译\",{\"1\":{\"292\":1}}],[\"你使用程序集定义资产创建的程序集可以使用任何预编译程序集中定义的所有类型\",{\"1\":{\"292\":1}}],[\"你使用程序集定义资产创建的程序集会自动引用所有预编译程序集\",{\"1\":{\"292\":1}}],[\"你无法指定程序集的编译顺序\",{\"1\":{\"290\":1}}],[\"你合并的网格\",{\"1\":{\"288\":1}}],[\"你应该调查应用程序中使用的\",{\"1\":{\"207\":1}}],[\"你始终可以通过修改内核\",{\"1\":{\"203\":1}}],[\"你可能会注意到这种变化\",{\"1\":{\"307\":1}}],[\"你可能需要\",{\"1\":{\"199\":1}}],[\"你可以将\",{\"1\":{\"357\":1,\"358\":1}}],[\"你可以将项目中所有\",{\"1\":{\"290\":1}}],[\"你可以查看部署来了解如何部署你的网站\",{\"1\":{\"351\":1}}],[\"你可以输入单个版本而不带范围括号\",{\"1\":{\"303\":1}}],[\"你可以指定程序集仅在项目中同时安装了给定\",{\"1\":{\"302\":1}}],[\"你可以指定一个计算结果为特定版本或版本范围的逻辑表达式\",{\"1\":{\"302\":1}}],[\"你可以向\",{\"1\":{\"302\":1}}],[\"你可以覆盖自动引用\",{\"1\":{\"300\":1}}],[\"你可以取消勾选\",{\"1\":{\"296\":1}}],[\"你可以更改新的程序集定义引用的设置\",{\"1\":{\"295\":1}}],[\"你可以更改新程序集的设置\",{\"1\":{\"294\":1}}],[\"你可以更容易地在另一个项目中重用\",{\"1\":{\"289\":1}}],[\"你可以在每个\",{\"1\":{\"307\":1}}],[\"你可以在单个表达式中混合使用两种范围类型\",{\"1\":{\"303\":1}}],[\"你可以在名称前加上感叹号来\",{\"1\":{\"301\":1}}],[\"你可以在\",{\"1\":{\"292\":1,\"301\":1,\"350\":1}}],[\"你可以在程序集定义资产的\",{\"1\":{\"292\":2}}],[\"你可以创建\",{\"1\":{\"289\":1}}],[\"你可以手动将多个网格\",{\"1\":{\"288\":1}}],[\"你可以使用方括号中的单个版本指示符来指定确切的版本\",{\"1\":{\"303\":1}}],[\"你可以使用表达式来指定确切的版本或版本范围\",{\"1\":{\"303\":1}}],[\"你可以使用以下符号作为约束\",{\"1\":{\"301\":1}}],[\"你可以使用程序集定义选项中的\",{\"1\":{\"301\":1}}],[\"你可以使用程序集定义资产的选项来控制程序集之间的引用\",{\"1\":{\"291\":1}}],[\"你可以使用预处理器符号来控制一个程序集是否被编译并包含在构建中\",{\"1\":{\"301\":1}}],[\"你可以使用它来查看所有进程的内存使用情况\",{\"1\":{\"205\":1}}],[\"你可以使用\",{\"1\":{\"205\":1,\"302\":1,\"308\":1,\"358\":1}}],[\"你可以获得有关每个\",{\"1\":{\"205\":1}}],[\"你可以尝试以下方法来减少原生运行时内存\",{\"1\":{\"200\":1}}],[\"你可以通过在主题选项中设置如下项目\",{\"1\":{\"364\":1}}],[\"你可以通过在\",{\"1\":{\"358\":1}}],[\"你可以通过将所有进程的\",{\"1\":{\"205\":1}}],[\"你可以通过将稳定代码迁移到预构建的程序集中并允许\",{\"1\":{\"196\":1}}],[\"你可以通过\",{\"1\":{\"200\":1,\"345\":1}}],[\"你可以直接控制它\",{\"1\":{\"200\":1}}],[\"你可以描述如何使用\",{\"1\":{\"66\":1}}],[\"你可以先快速了解一下\",{\"1\":{\"61\":1,\"66\":1}}],[\"你必须切换到每个平台并单独修改\",{\"1\":{\"301\":1}}],[\"你必须重构你的代码以移除循环引用\",{\"1\":{\"293\":1}}],[\"你必须复制使用值类型的函数参数以影响性能\",{\"1\":{\"197\":1}}],[\"你必须是团队里的性能\",{\"1\":{\"55\":1}}],[\"你还可以设置一个\",{\"1\":{\"179\":1}}],[\"你对\",{\"1\":{\"90\":1}}],[\"你对项目中的shader和material有什么硬性要求\",{\"1\":{\"60\":1}}],[\"你们如何处理网络延迟和数据同步问题\",{\"1\":{\"87\":1}}],[\"你们的项目是如何进行资源管理\",{\"1\":{\"84\":1}}],[\"你想让我帮你演练一下其中某一类\",{\"1\":{\"77\":1}}],[\"你在\",{\"1\":{\"77\":1}}],[\"你在项目中遇到的最困难的技术挑战是什么\",{\"0\":{\"52\":1}}],[\"你作为团队的高级开发\",{\"1\":{\"60\":1}}],[\"你遇到了一个棘手的渲染bug\",{\"1\":{\"60\":1}}],[\"你为什么会推荐使用\",{\"1\":{\"76\":1}}],[\"你为什么会推荐团队从传统的\",{\"1\":{\"60\":1}}],[\"你为什么选择它来存数据\",{\"1\":{\"56\":1}}],[\"你担心gc吗\",{\"1\":{\"60\":1}}],[\"你有哪些可立即执行的优化手段\",{\"1\":{\"60\":1}}],[\"你接手一个项目\",{\"1\":{\"60\":1}}],[\"你接手了一个老项目\",{\"1\":{\"59\":1}}],[\"你发现他为了实现一个功能\",{\"1\":{\"59\":1}}],[\"你认为它最大的优势是什么\",{\"1\":{\"58\":1}}],[\"你提到了\",{\"1\":{\"56\":1}}],[\"你会脏标记旧层级一次\",{\"1\":{\"182\":1}}],[\"你会被期待具备扎实的基础知识\",{\"1\":{\"77\":1}}],[\"你会在什么情况下把计算逻辑从\",{\"1\":{\"76\":1}}],[\"你会在什么场景下使用它\",{\"0\":{\"45\":1}}],[\"你会分别为\",{\"1\":{\"60\":1}}],[\"你会如何解决\",{\"1\":{\"74\":1}}],[\"你会如何处理这次\",{\"1\":{\"59\":1}}],[\"你会如何设计\",{\"1\":{\"56\":1}}],[\"你需要考虑自动内存管理的细微差别\",{\"1\":{\"187\":1}}],[\"你需要实现两个功能\",{\"1\":{\"60\":1}}],[\"你需要处理大量系统间的通信\",{\"1\":{\"60\":1}}],[\"你需要设计一个\",{\"1\":{\"56\":1}}],[\"你需要准备一个真实\",{\"1\":{\"52\":1}}],[\"你怎么解释\",{\"1\":{\"55\":1}}],[\"你的应用程序可以使用多少内存\",{\"1\":{\"204\":1}}],[\"你的\",{\"1\":{\"60\":1,\"77\":1}}],[\"你的详细排查步骤\",{\"1\":{\"55\":1}}],[\"你的分析和解决思路是什么\",{\"0\":{\"41\":1}}],[\"你好\",{\"1\":{\"54\":1,\"60\":1,\"73\":1,\"367\":2}}],[\"你关注哪些点\",{\"0\":{\"53\":1}}],[\"你采取了哪些具体行动\",{\"1\":{\"52\":1}}],[\"你是如何解决的\",{\"0\":{\"52\":1}}],[\"你是一位精通简体中文的专业翻译\",{\"1\":{\"14\":1}}],[\"你如何处理和调试线上版本中出现的崩溃或难以复现的\",{\"1\":{\"91\":1}}],[\"你如何看待\",{\"1\":{\"75\":1}}],[\"你如何设计一套通信机制来解耦游戏系统\",{\"1\":{\"75\":1}}],[\"你如何设计一个游戏的\",{\"0\":{\"44\":1}}],[\"你如何确保这类低级性能问题在未来不再重复出现\",{\"1\":{\"60\":1}}],[\"你如何解决这个问题\",{\"1\":{\"60\":1}}],[\"你如何判断这究竟是cpu的锅\",{\"1\":{\"60\":1}}],[\"你如何系统性地分析这个性能问题\",{\"1\":{\"60\":1}}],[\"你如何进行代码审查\",{\"0\":{\"53\":1}}],[\"你如何优化\",{\"0\":{\"42\":1}}],[\"并缩短存储媒介的使用寿命\",{\"1\":{\"387\":1}}],[\"并针对界面基类\",{\"1\":{\"383\":1}}],[\"并重新构建一个\",{\"1\":{\"379\":1}}],[\"并设置一个或多个文章所属的标签\",{\"1\":{\"358\":1}}],[\"并设置一个或多个文章所属的分类\",{\"1\":{\"358\":1}}],[\"并仅指定该程序集实际使用的预编译库的引用\",{\"1\":{\"300\":1}}],[\"并从它们之前的程序集中移除\",{\"1\":{\"294\":1,\"295\":1}}],[\"并会报告错误\",{\"1\":{\"293\":1}}],[\"并生成垃圾回收器必须处理的连续对象流\",{\"1\":{\"280\":1}}],[\"并经常进行性能分析以确保不会触发导致托管堆过大的额外托管分配\",{\"1\":{\"276\":1}}],[\"并禁用\",{\"1\":{\"275\":1}}],[\"并标记未被引用的对象\",{\"1\":{\"274\":1}}],[\"并去掉那些用户不会注意到的行为\",{\"1\":{\"270\":1}}],[\"并显著增加应用程序启动时间\",{\"1\":{\"255\":1}}],[\"并显示事件标记\",{\"1\":{\"148\":1}}],[\"并显示为什么不兼容\",{\"1\":{\"136\":1}}],[\"并防止可能无意中向场景添加不需要的\",{\"1\":{\"248\":1}}],[\"并实现一个或多个\",{\"1\":{\"246\":1}}],[\"并导致难以诊断的内存不足错误\",{\"1\":{\"246\":1}}],[\"并移除所有不需要的图形\",{\"1\":{\"244\":1}}],[\"并选中\",{\"1\":{\"232\":1}}],[\"并选择要包含的特定平台\",{\"1\":{\"296\":1}}],[\"并选择\",{\"1\":{\"112\":1,\"218\":1}}],[\"并启用\",{\"1\":{\"230\":2,\"275\":1}}],[\"并启用原生代码剥离\",{\"1\":{\"193\":1}}],[\"并注意在非常低端的设备上可能几乎没有好处\",{\"1\":{\"225\":1}}],[\"并添加身体的其余部分\",{\"1\":{\"218\":1}}],[\"并使该对象退出批处理\",{\"1\":{\"216\":1}}],[\"并使用该资产定义的名称和其他设置将它们编译成一个程序集\",{\"1\":{\"290\":1}}],[\"并使用每帧的一小段时间\",{\"1\":{\"275\":1}}],[\"并使用\",{\"1\":{\"234\":1,\"283\":1}}],[\"并使用这些事件相应地重新定位其可见元素\",{\"1\":{\"170\":1}}],[\"并使用它来绘制网格\",{\"1\":{\"117\":1}}],[\"并使用指定的参数直接在屏幕上绘制网格\",{\"1\":{\"114\":1}}],[\"并使用烘焙的静态\",{\"1\":{\"52\":1}}],[\"并忽略其他层上的\",{\"1\":{\"213\":1}}],[\"并阅读知识库文章\",{\"1\":{\"208\":1}}],[\"并进行了一些补充\",{\"1\":{\"206\":1}}],[\"并自己编译内核来启用交换支持\",{\"1\":{\"203\":1}}],[\"并按文件夹将用户脚本分配给它们\",{\"1\":{\"198\":1}}],[\"并释放其内存\",{\"1\":{\"189\":1}}],[\"并确保只在需要时使用\",{\"1\":{\"181\":1}}],[\"并确保将文本经常变化的\",{\"1\":{\"169\":1}}],[\"并创建一个系统来跟踪主相机\",{\"1\":{\"180\":1}}],[\"并不是一直开源免费的\",{\"1\":{\"401\":1}}],[\"并不是高效的组件\",{\"1\":{\"369\":1}}],[\"并不会销毁它\",{\"1\":{\"189\":1}}],[\"并不意味着你的\",{\"1\":{\"180\":1}}],[\"并不能立即告诉您优化了多少场景\",{\"1\":{\"131\":1}}],[\"并执行相交检查\",{\"1\":{\"179\":1}}],[\"并向上提供服务\",{\"1\":{\"382\":1}}],[\"并向\",{\"1\":{\"178\":1}}],[\"并覆盖\",{\"1\":{\"175\":1}}],[\"并可能需要重组数据结构\",{\"1\":{\"254\":1}}],[\"并可能占用宝贵的渲染时间\",{\"1\":{\"155\":1}}],[\"并可以确保根据需要传播或不传播生命周期事件\",{\"1\":{\"173\":1}}],[\"并适当调整\",{\"1\":{\"170\":1}}],[\"并强制重建其\",{\"1\":{\"170\":1}}],[\"并强制整个\",{\"1\":{\"152\":1}}],[\"并避免一组文本对象使用不同的点大小\",{\"1\":{\"169\":1}}],[\"并通过代码强制执行这些限制规则\",{\"1\":{\"247\":1}}],[\"并通过底层图形\",{\"1\":{\"225\":1}}],[\"并通过它们自己的后备字体\",{\"1\":{\"169\":1}}],[\"并通过创建\",{\"1\":{\"169\":1}}],[\"并以固定距离彼此出现\",{\"1\":{\"168\":1}}],[\"并过滤掉渲染在相机后面\",{\"1\":{\"166\":1}}],[\"并尝试发现哪些\",{\"1\":{\"165\":1}}],[\"并增加了项目纹理图集的大小\",{\"1\":{\"159\":1}}],[\"并要求它们更新其剪裁信息\",{\"1\":{\"150\":1}}],[\"并控制\",{\"1\":{\"150\":1}}],[\"并检查它们是否存在重叠\",{\"1\":{\"143\":1}}],[\"并讨论了许多用于渲染\",{\"1\":{\"139\":1}}],[\"并非所有\",{\"1\":{\"136\":1}}],[\"并非所有平台都支持此功能\",{\"1\":{\"104\":1}}],[\"并提供了\",{\"1\":{\"364\":1}}],[\"并提供包含\",{\"1\":{\"116\":1}}],[\"并提升整个团队的质量标准\",{\"1\":{\"59\":1}}],[\"并准备它们进行静态批处理\",{\"1\":{\"109\":1}}],[\"并允许加载帧溢出分配\",{\"1\":{\"102\":1}}],[\"并减少内存泄漏的可能性\",{\"1\":{\"97\":1}}],[\"并给你更具体的场景题吗\",{\"1\":{\"77\":1}}],[\"并附上了参考答案和备考建议\",{\"1\":{\"61\":1}}],[\"并附上了答案要点\",{\"1\":{\"40\":1}}],[\"并且把分散开的模型网格合并起来\",{\"1\":{\"379\":1}}],[\"并且没有反向引用\",{\"1\":{\"289\":1}}],[\"并且没有很好的方法可以在分析器中查看原生插件分配\",{\"1\":{\"207\":1}}],[\"并且只能访问指定的其他程序集中的脚本\",{\"1\":{\"289\":1}}],[\"并且你希望\",{\"1\":{\"288\":1}}],[\"并且所有类在\",{\"1\":{\"283\":1}}],[\"并且排序不会创建任何分配\",{\"1\":{\"283\":1}}],[\"并且结果在方法返回后仍然存在\",{\"1\":{\"281\":1}}],[\"并且代码会分配一个全新的字符串\",{\"1\":{\"280\":1}}],[\"并且它们会受到垃圾回收的影响\",{\"1\":{\"280\":1}}],[\"并且它们的原始批处理将被保留\",{\"1\":{\"173\":1}}],[\"并且它以每秒\",{\"1\":{\"278\":1}}],[\"并且在调用时会写入\",{\"1\":{\"263\":1}}],[\"并且在所有新场景中默认启用\",{\"1\":{\"212\":1}}],[\"并且会对性能产生不良影响\",{\"1\":{\"262\":1}}],[\"并且通常在\",{\"1\":{\"262\":1}}],[\"并且将关卡划分到区域中\",{\"1\":{\"254\":1}}],[\"并且创建起来资源密集\",{\"1\":{\"232\":1}}],[\"并且始终存在\",{\"1\":{\"229\":1}}],[\"并且需要禁用多线程渲染设置才能获得正确的结果\",{\"1\":{\"226\":1}}],[\"并且需要额外的艺术家资源来创建\",{\"1\":{\"159\":1}}],[\"并且启用了\",{\"1\":{\"222\":1}}],[\"并且压缩后的内存占用小于未压缩时的内存占用\",{\"1\":{\"221\":1}}],[\"并且您可以看到\",{\"1\":{\"213\":1}}],[\"并且您想对\",{\"1\":{\"114\":1}}],[\"并且不需要与\",{\"1\":{\"254\":1}}],[\"并且不需要骨骼\",{\"1\":{\"218\":1}}],[\"并且不缓存生成的对象\",{\"1\":{\"253\":1}}],[\"并且不会等到纹理在相机视锥体中可见\",{\"1\":{\"222\":1}}],[\"并且不会出现在用户界面中\",{\"1\":{\"100\":1}}],[\"并且不要渲染玩家永远看不到的东西\",{\"1\":{\"217\":1}}],[\"并且不执行深度测试\",{\"1\":{\"215\":1}}],[\"并且不与任何其他进程共享\",{\"1\":{\"205\":1}}],[\"并且系统无法与任何其他进程共享\",{\"1\":{\"205\":1}}],[\"并且系统会丢弃缓存页文件\",{\"1\":{\"203\":1}}],[\"并且访问速度通常比硬盘或闪存驱动器差\",{\"1\":{\"203\":1}}],[\"并且每个进程都运行自己的\",{\"1\":{\"203\":1}}],[\"并且解压缩成本低廉\",{\"1\":{\"201\":1}}],[\"并且可能不是必需的\",{\"1\":{\"241\":1}}],[\"并且可能不适合或不适用于目标平台\",{\"1\":{\"217\":1}}],[\"并且可能对性能产生严重影响\",{\"1\":{\"213\":1}}],[\"并且可能并不总是清楚这如何影响内存消耗\",{\"1\":{\"200\":1}}],[\"并且可以在\",{\"1\":{\"158\":1}}],[\"并且\",{\"1\":{\"172\":1,\"213\":2,\"275\":1,\"278\":1}}],[\"并且还定义了对其他程序集的引用\",{\"1\":{\"289\":1}}],[\"并且还增加了重建\",{\"1\":{\"170\":1}}],[\"并且还假设四边形\",{\"1\":{\"149\":1}}],[\"并且很容易以一种无意中破坏其他\",{\"1\":{\"168\":1}}],[\"并且已经观察到消耗\",{\"1\":{\"165\":1}}],[\"并且已满的分配器导致大量分配溢出\",{\"1\":{\"103\":1}}],[\"并且放置在层次结构中两个可批处理对象之间\",{\"1\":{\"162\":1}}],[\"并且对迭代非常友好\",{\"1\":{\"159\":1}}],[\"并且帧调试器显示片段着色器管道是瓶颈\",{\"1\":{\"152\":1}}],[\"并且仅影响其关联的\",{\"1\":{\"141\":1}}],[\"并且数字仍然相似\",{\"1\":{\"134\":1}}],[\"并且该\",{\"1\":{\"166\":1}}],[\"并且该组件已启用\",{\"1\":{\"109\":2}}],[\"并且该块返回到可用块池中\",{\"1\":{\"103\":1}}],[\"并且必须运行垃圾回收器\",{\"1\":{\"97\":1}}],[\"并且被其他物体遮挡\",{\"1\":{\"60\":1}}],[\"并且为所有平台\",{\"1\":{\"58\":1}}],[\"并抛出异常\",{\"1\":{\"60\":1}}],[\"并解耦了\",{\"1\":{\"60\":1}}],[\"并说明\",{\"1\":{\"62\":1}}],[\"并说明你的排查思路\",{\"1\":{\"60\":1}}],[\"并说明你在这种场景下会最终选择哪一个\",{\"1\":{\"60\":1}}],[\"并说明在什么场景下你会优先选择哪个\",{\"1\":{\"57\":1}}],[\"并定位渲染瓶颈\",{\"1\":{\"58\":1}}],[\"并在游戏首次进入游戏场景时实例化一个正确大小的对象数组\",{\"1\":{\"279\":1}}],[\"并在禁用期间避免额外分配\",{\"1\":{\"276\":1}}],[\"并在实体移动到\",{\"1\":{\"270\":1}}],[\"并在主线程上通过底层图形\",{\"1\":{\"224\":1}}],[\"并在下拉菜单中选择\",{\"1\":{\"234\":1}}],[\"并在下次进入相机视锥体时强制\",{\"1\":{\"222\":1}}],[\"并在下一帧\",{\"1\":{\"49\":1,\"57\":1}}],[\"并在其设置中启用\",{\"1\":{\"218\":1}}],[\"并在针对移动设备时避免使用\",{\"1\":{\"212\":1}}],[\"并在需要时再次解压缩\",{\"1\":{\"205\":1}}],[\"并在帧之间循环使用该池\",{\"1\":{\"200\":1}}],[\"并在重建过程的\",{\"1\":{\"146\":1}}],[\"并在它们关联的\",{\"1\":{\"141\":1}}],[\"并在一个绘制调用中渲染它们\",{\"1\":{\"106\":1,\"108\":1}}],[\"并在你的架构中给出至少三个\",{\"1\":{\"75\":1}}],[\"并在同一帧的稍晚时间点继续执行\",{\"1\":{\"60\":1}}],[\"并在\",{\"1\":{\"57\":1,\"104\":1,\"109\":1,\"200\":1}}],[\"并能清晰地阐述你在其中扮演的关键角色和技术决策\",{\"1\":{\"53\":1}}],[\"并能与\",{\"1\":{\"49\":1}}],[\"并将属于该程序集的脚本移动到文件夹中\",{\"1\":{\"290\":1}}],[\"并将该时间提供给垃圾回收器使用\",{\"1\":{\"275\":1}}],[\"并将发生垃圾回收的帧时间推过了维持\",{\"1\":{\"275\":1}}],[\"并将其中的\",{\"1\":{\"371\":1}}],[\"并将其设置为引用定义目标程序集的程序集定义资产\",{\"1\":{\"290\":1}}],[\"并将其引用的内存块标记为\",{\"1\":{\"274\":1}}],[\"并将其标记为未压缩\",{\"1\":{\"221\":1}}],[\"并将另一个帧推入栈\",{\"1\":{\"271\":1}}],[\"并将它们写入自己的块分配缓冲区\",{\"1\":{\"227\":1}}],[\"并将它们与空项目的内存基线进行比较\",{\"1\":{\"207\":1}}],[\"并将图形命令\",{\"1\":{\"227\":1}}],[\"并将这些瓦片保存在更靠近\",{\"1\":{\"212\":1}}],[\"并将这些元素父级到定位占位符\",{\"1\":{\"170\":1}}],[\"并将环境光照\",{\"1\":{\"212\":1}}],[\"并将内存标记为脏\",{\"1\":{\"205\":1}}],[\"并将处理指针和触摸\",{\"1\":{\"164\":1}}],[\"并将尽可能多的几何体合并到单个网格中以最小化绘制调用\",{\"1\":{\"161\":1}}],[\"并将每个副本插入组合的网格中\",{\"1\":{\"109\":1}}],[\"并将新块大小限制为与帧的峰值使用量匹配\",{\"1\":{\"100\":1}}],[\"并将堆栈信息\",{\"1\":{\"91\":1}}],[\"并将结果缓存在一个私有字段中\",{\"1\":{\"59\":1}}],[\"并将\",{\"1\":{\"51\":1}}],[\"并最终将其渲染到屏幕上的像素\",{\"1\":{\"51\":1}}],[\"并发\",{\"1\":{\"49\":1,\"57\":1}}],[\"并连接\",{\"1\":{\"44\":1}}],[\"并另存为文件\",{\"1\":{\"14\":1}}],[\"分值来确定正在运行的进程的优先级\",{\"1\":{\"388\":1}}],[\"分区\",{\"1\":{\"387\":1}}],[\"分层后再分治\",{\"1\":{\"383\":1}}],[\"分层设计\",{\"0\":{\"383\":1}}],[\"分层思维\",{\"1\":{\"382\":1}}],[\"分治思维\",{\"1\":{\"382\":1}}],[\"分支\",{\"1\":{\"339\":1}}],[\"分支时触发部署\",{\"1\":{\"339\":1}}],[\"分开\",{\"1\":{\"307\":1}}],[\"分组\",{\"1\":{\"215\":1}}],[\"分组嵌套\",{\"1\":{\"22\":1}}],[\"分割成更小的瓦片\",{\"1\":{\"212\":1}}],[\"分页严重依赖于内存映射\",{\"1\":{\"203\":1}}],[\"分页与交换空间\",{\"1\":{\"203\":1}}],[\"分页\",{\"1\":{\"203\":1}}],[\"分发给您的开发人员和构建机器\",{\"1\":{\"175\":1}}],[\"分辨率\",{\"1\":{\"147\":1,\"233\":1}}],[\"分别是计算布局和渲染\",{\"1\":{\"148\":1}}],[\"分别关闭和打开\",{\"1\":{\"132\":1}}],[\"分别做什么\",{\"0\":{\"51\":1}}],[\"分布在所有图形作业上\",{\"1\":{\"130\":1}}],[\"分类与标签\",{\"1\":{\"358\":1}}],[\"分类\",{\"1\":{\"124\":1,\"363\":1,\"365\":1}}],[\"分为以下几种不同类型\",{\"1\":{\"96\":1}}],[\"分为几大类\",{\"1\":{\"40\":1}}],[\"分析渲染\",{\"1\":{\"228\":1}}],[\"分析会自动禁用\",{\"1\":{\"228\":1}}],[\"分析多线程渲染\",{\"0\":{\"226\":1}}],[\"分析有助于您检查和验证所做的优化是否有效\",{\"1\":{\"210\":1}}],[\"分析内存的一个好方法是确保设备有足够的可用内存\",{\"1\":{\"204\":1}}],[\"分析工具步骤中所述\",{\"1\":{\"162\":1}}],[\"分析分析器\",{\"0\":{\"152\":1}}],[\"分析器底部隐藏的小\",{\"1\":{\"151\":1}}],[\"分析器中第一个感兴趣的点是屏幕中心的三个条形图\",{\"1\":{\"151\":1}}],[\"分析器中的类别\",{\"1\":{\"148\":1}}],[\"分析器\",{\"1\":{\"151\":1}}],[\"分析器标记\",{\"1\":{\"125\":1}}],[\"分析这些问题的更多信息\",{\"1\":{\"97\":1}}],[\"分析\",{\"1\":{\"81\":1,\"147\":1,\"210\":1}}],[\"分享\",{\"1\":{\"60\":1}}],[\"分配到不同\",{\"1\":{\"390\":1}}],[\"分配数据\",{\"1\":{\"254\":1}}],[\"分配环形缓冲区内存后\",{\"1\":{\"200\":1}}],[\"分配事件相机\",{\"0\":{\"174\":1}}],[\"分配给\",{\"1\":{\"170\":1}}],[\"分配给托管堆的内存量\",{\"1\":{\"97\":1}}],[\"分配后备字体资源\",{\"1\":{\"169\":1}}],[\"分配这些字体资源或后备字体\",{\"1\":{\"169\":1}}],[\"分配将回退到主堆分配器\",{\"1\":{\"103\":1}}],[\"分配将回退到\",{\"1\":{\"102\":1}}],[\"分配将回退到另一个分配器\",{\"1\":{\"100\":1}}],[\"分配的内存\",{\"1\":{\"205\":1}}],[\"分配的分配器\",{\"1\":{\"104\":1}}],[\"分配的开发版本和发布版本之间的差异\",{\"1\":{\"100\":1}}],[\"分配的粒度\",{\"1\":{\"100\":1}}],[\"分配大小是配置的固定大小的倍数\",{\"1\":{\"100\":1}}],[\"分配必须小于半个块\",{\"1\":{\"99\":1}}],[\"分配器profiler\",{\"1\":{\"104\":1}}],[\"分配器块大小background\",{\"1\":{\"104\":1}}],[\"分配器块大小job\",{\"1\":{\"104\":2}}],[\"分配器块大小足够\",{\"1\":{\"100\":1}}],[\"分配器的共享桶分配器\",{\"1\":{\"104\":1}}],[\"分配器的块大小\",{\"1\":{\"104\":2}}],[\"分配器的峰值使用量为\",{\"1\":{\"99\":1}}],[\"分配器gfx\",{\"1\":{\"104\":1}}],[\"分配器参数名称及其默认值\",{\"1\":{\"104\":1}}],[\"分配器慢得多\",{\"1\":{\"103\":1}}],[\"分配器根据需要最多分配\",{\"1\":{\"103\":1}}],[\"分配器从池中获取一个新块\",{\"1\":{\"103\":1}}],[\"分配器使用后进先出\",{\"1\":{\"102\":1}}],[\"分配器共享一个桶分配器实例\",{\"1\":{\"100\":1}}],[\"分配器为分配保留内存块\",{\"1\":{\"100\":1}}],[\"分配器类型\",{\"1\":{\"98\":1}}],[\"分配器\",{\"1\":{\"98\":9,\"101\":1,\"104\":2}}],[\"分配会溢出到动态堆分配器\",{\"1\":{\"101\":1}}],[\"分配会进入堆和桶分配器\",{\"1\":{\"98\":1}}],[\"分配会引发\",{\"1\":{\"59\":1}}],[\"分配之间的重要区别通常是持久性或分配生命周期\",{\"1\":{\"98\":1}}],[\"分配它们\",{\"1\":{\"97\":1}}],[\"分配\",{\"1\":{\"96\":1,\"233\":2,\"286\":1}}],[\"分配在队列中等待主线程删除它\",{\"1\":{\"101\":1}}],[\"分配在非托管内存中\",{\"1\":{\"60\":1}}],[\"分配在堆\",{\"1\":{\"60\":1}}],[\"分配在栈\",{\"1\":{\"48\":1}}],[\"分散到多个帧去执行\",{\"1\":{\"55\":1}}],[\"分代是指\",{\"1\":{\"401\":1}}],[\"分代\",{\"1\":{\"42\":1}}],[\"更注重编辑器中编辑时的流畅\",{\"1\":{\"389\":1}}],[\"更好的一种方法是维护一个顶点列表\",{\"1\":{\"285\":1}}],[\"更好地处理值类型泛型\",{\"1\":{\"76\":1}}],[\"更快地压缩\",{\"1\":{\"221\":1}}],[\"更容易发现\",{\"1\":{\"215\":1}}],[\"更多信息请参阅\",{\"1\":{\"274\":1}}],[\"更多信息可以在\",{\"1\":{\"218\":1}}],[\"更多资源\",{\"0\":{\"185\":1}}],[\"更多详细内容可参考\",{\"1\":{\"177\":1}}],[\"更方便\",{\"1\":{\"163\":1}}],[\"更改主题设置\",{\"1\":{\"355\":1}}],[\"更改和疲惫不堪的开发人员的误点击可能会暗地里添加性能不良的资源或更改现有资源的导入设置\",{\"1\":{\"246\":1}}],[\"更改默认值可能会导致高内存压力\",{\"1\":{\"222\":1}}],[\"更改组件显示的文本将触发对\",{\"1\":{\"169\":1}}],[\"更改\",{\"1\":{\"161\":1}}],[\"更改材质属性而不会破坏\",{\"1\":{\"108\":1}}],[\"更新日志\",{\"1\":{\"336\":1}}],[\"更新管理器\",{\"0\":{\"267\":1}}],[\"更新过程的部分内容没有正确分类\",{\"1\":{\"148\":1}}],[\"更新顶点缓冲区中的偏移量并提交新的绘制调用\",{\"1\":{\"110\":1}}],[\"更简单\",{\"1\":{\"112\":1}}],[\"更高效\",{\"1\":{\"109\":1}}],[\"更具体地说\",{\"1\":{\"101\":1}}],[\"更具挑战性的追问和答案提示吗\",{\"1\":{\"92\":1}}],[\"更要理解\",{\"1\":{\"92\":1}}],[\"更重要的是\",{\"1\":{\"92\":1}}],[\"更想听\",{\"1\":{\"66\":1,\"72\":1}}],[\"更意味着你具备架构设计\",{\"1\":{\"60\":1}}],[\"更意味着你知道\",{\"1\":{\"54\":1}}],[\"更换\",{\"1\":{\"44\":1}}],[\"更在软件架构\",{\"1\":{\"40\":1}}],[\"更符合中文的表达习惯\",{\"1\":{\"14\":1}}],[\"一直在内存中\",{\"1\":{\"404\":1}}],[\"一直在内存池中\",{\"1\":{\"403\":1}}],[\"一点一点分析\",{\"1\":{\"401\":1}}],[\"一样\",{\"1\":{\"395\":1}}],[\"一部分是实际打包的部分\",{\"1\":{\"394\":1}}],[\"一部分是它的头\",{\"1\":{\"394\":1}}],[\"一是因为移动设备的硬盘\",{\"1\":{\"387\":1}}],[\"一种与特定硬件平台和操作系统无关的中间表示形式\",{\"1\":{\"371\":1}}],[\"一种保守的垃圾回收器\",{\"1\":{\"42\":1}}],[\"一维数组\",{\"1\":{\"265\":1}}],[\"一起发布\",{\"1\":{\"199\":1}}],[\"一起使用的自动\",{\"1\":{\"137\":1}}],[\"一起使用\",{\"1\":{\"118\":3}}],[\"一般是\",{\"1\":{\"388\":1}}],[\"一般\",{\"1\":{\"307\":1}}],[\"一般优化\",{\"0\":{\"256\":1}}],[\"一般来说\",{\"1\":{\"197\":1,\"283\":1,\"287\":1}}],[\"一般准则\",{\"1\":{\"163\":1}}],[\"一旦页中的内存发生变化\",{\"1\":{\"205\":1}}],[\"一旦\",{\"1\":{\"195\":1}}],[\"一旦确定此最佳大小\",{\"1\":{\"169\":1}}],[\"一共分配了\",{\"1\":{\"127\":1}}],[\"一些开发团队更喜欢在数组值方法需要返回空集时返回空数组而不是\",{\"1\":{\"287\":1}}],[\"一些\",{\"1\":{\"112\":1,\"148\":1,\"237\":1,\"286\":1}}],[\"一些已释放的对象用灰色虚线表示\",{\"1\":{\"97\":1}}],[\"一帧中\",{\"1\":{\"102\":1,\"103\":1}}],[\"一块内存\",{\"1\":{\"97\":2}}],[\"一定分配在栈\",{\"1\":{\"60\":1}}],[\"一线有多年经验的开发者\",{\"1\":{\"54\":1}}],[\"一个内存的时候会立刻返回内存给系统\",{\"1\":{\"390\":1}}],[\"一个架构能承载多少个逻辑系统\",{\"1\":{\"381\":1}}],[\"一个开源\",{\"1\":{\"371\":1}}],[\"一个跨平台\",{\"1\":{\"371\":1}}],[\"一个基于\",{\"1\":{\"371\":1}}],[\"一个计算结果为特定版本或版本范围的表达式\",{\"1\":{\"302\":1}}],[\"一个工作线程处理缓冲的中间图形命令\",{\"1\":{\"227\":1}}],[\"一个专门用于渲染的工作线程\",{\"1\":{\"225\":1}}],[\"一个最佳情况的示例\",{\"1\":{\"218\":1}}],[\"一个书柜近距离由独特的部件组成\",{\"1\":{\"218\":1}}],[\"一个进程使用了多少内存乍一看并不清楚\",{\"1\":{\"202\":1}}],[\"一个可能但有点\",{\"1\":{\"173\":1}}],[\"一个简单的两列布局可以通过两个\",{\"1\":{\"172\":1}}],[\"一个例子可能是分数显示\",{\"1\":{\"168\":1}}],[\"一个例子可能是进度条和倒计时计时器\",{\"1\":{\"163\":1}}],[\"一个主要问题是\",{\"1\":{\"168\":1}}],[\"一个用于\",{\"1\":{\"168\":2}}],[\"一个用于小型分配的桶分配器\",{\"1\":{\"101\":1}}],[\"一个用于主线程的无锁分配器\",{\"1\":{\"101\":1}}],[\"一个子部分中可容纳\",{\"1\":{\"100\":2}}],[\"一个受控的内存层\",{\"1\":{\"96\":1}}],[\"一个点到直线的距离怎么求\",{\"1\":{\"93\":1}}],[\"一个点对一个面的镜像点怎么求\",{\"1\":{\"93\":1}}],[\"一个仅用于检测穿透\",{\"1\":{\"67\":1}}],[\"一个仅用于检测\",{\"1\":{\"62\":1}}],[\"一个参与物理模拟并产生阻挡\",{\"1\":{\"67\":1}}],[\"一个参与物理模拟\",{\"1\":{\"62\":1}}],[\"一个模型在场景中完全不可见\",{\"1\":{\"60\":1}}],[\"一个百人同屏的\",{\"1\":{\"52\":1}}],[\"一个\",{\"1\":{\"45\":1,\"46\":2,\"49\":1,\"64\":1,\"116\":2,\"246\":1,\"308\":1,\"388\":1}}],[\"一次回收\",{\"1\":{\"400\":1}}],[\"一次矢量乘法\",{\"1\":{\"260\":1}}],[\"一次整数乘法\",{\"1\":{\"260\":1}}],[\"一次保存在\",{\"1\":{\"247\":2}}],[\"一次更新可以更新一片\",{\"1\":{\"127\":1}}],[\"一次\",{\"1\":{\"43\":1}}],[\"一次绘制更多的东西\",{\"1\":{\"43\":1}}],[\"一\",{\"0\":{\"40\":1,\"78\":1},\"1\":{\"317\":1}}],[\">=\",{\"1\":{\"56\":1,\"252\":2,\"303\":1,\"369\":2}}],[\">\",{\"1\":{\"33\":1,\"52\":3,\"74\":1,\"100\":3,\"104\":2,\"106\":2,\"109\":2,\"110\":2,\"112\":6,\"119\":1,\"190\":2,\"192\":4,\"212\":2,\"215\":2,\"225\":2,\"232\":2,\"234\":2,\"236\":1,\"237\":2,\"244\":3,\"274\":4,\"275\":9,\"279\":1,\"294\":2,\"295\":2,\"305\":1,\"346\":1,\"358\":1,\"369\":3}}],[\"网址\",{\"1\":{\"339\":1}}],[\"网站上找到该清单\",{\"1\":{\"250\":1}}],[\"网站\",{\"1\":{\"210\":1,\"263\":1}}],[\"网格下建立起来的\",{\"1\":{\"379\":1}}],[\"网格\",{\"1\":{\"178\":1}}],[\"网格修改器\",{\"1\":{\"150\":1}}],[\"网格必须来自以下来源\",{\"1\":{\"115\":1}}],[\"网格的渲染\",{\"1\":{\"379\":1}}],[\"网格的每个副本称为一个实例\",{\"1\":{\"113\":1}}],[\"网格的动态批处理通过在\",{\"1\":{\"110\":1}}],[\"网格的动态批处理旨在优化旧低端设备的性能\",{\"1\":{\"110\":1}}],[\"网格的动态批处理\",{\"1\":{\"110\":3}}],[\"网格的顶点数大于\",{\"1\":{\"109\":1}}],[\"网格尚未与其他网格组合\",{\"1\":{\"109\":1}}],[\"网格启用了读\",{\"1\":{\"109\":1}}],[\"网络游戏项目前期我们会对网络这块内容进行决策\",{\"1\":{\"383\":1}}],[\"网络层\",{\"1\":{\"383\":1}}],[\"网络层设计\",{\"1\":{\"383\":1}}],[\"网络插件\",{\"1\":{\"314\":1}}],[\"网络编程\",{\"0\":{\"314\":1}}],[\"网络与数据\",{\"0\":{\"86\":1}}],[\"网络\",{\"1\":{\"71\":1}}],[\"网络同步\",{\"1\":{\"66\":1}}],[\"网络同步或特定的项目经历\",{\"1\":{\"66\":1}}],[\"网络模拟\",{\"1\":{\"33\":1}}],[\"网页版\",{\"1\":{\"7\":1}}],[\"杂项\",{\"0\":{\"32\":1},\"1\":{\"215\":1}}],[\"油小猴\",{\"1\":{\"30\":1}}],[\"素材\",{\"1\":{\"30\":1}}],[\"牌上的花色\",{\"1\":{\"30\":1}}],[\"玩家要刺杀某个npc\",{\"1\":{\"93\":1}}],[\"玩家数据变化如何通知\",{\"1\":{\"75\":1}}],[\"玩家\",{\"1\":{\"30\":1}}],[\"汉化\",{\"1\":{\"30\":1}}],[\"数值大的文章会排列在前面\",{\"1\":{\"358\":2}}],[\"数学函数\",{\"1\":{\"383\":1}}],[\"数学\",{\"0\":{\"325\":1},\"1\":{\"323\":1}}],[\"数学教学软件\",{\"1\":{\"30\":1}}],[\"数量增长到数百或数千时\",{\"1\":{\"267\":1}}],[\"数量增加\",{\"1\":{\"170\":1}}],[\"数量\",{\"1\":{\"135\":2,\"150\":1,\"170\":1}}],[\"数量以优化\",{\"1\":{\"135\":1}}],[\"数字变量加密封装\",{\"1\":{\"383\":1}}],[\"数字越大\",{\"1\":{\"365\":2}}],[\"数字越高\",{\"1\":{\"205\":1}}],[\"数字孪生\",{\"1\":{\"321\":1}}],[\"数字人\",{\"1\":{\"321\":1}}],[\"数字应该大幅下降\",{\"1\":{\"134\":1}}],[\"数字\",{\"1\":{\"134\":1,\"168\":1,\"205\":1}}],[\"数目\",{\"1\":{\"127\":1}}],[\"数组类型\",{\"1\":{\"265\":1}}],[\"数组上进行\",{\"1\":{\"265\":1}}],[\"数组的数组\",{\"0\":{\"265\":1}}],[\"数组\",{\"1\":{\"46\":1,\"60\":1,\"358\":1}}],[\"数组等\",{\"1\":{\"42\":1}}],[\"数据表\",{\"1\":{\"383\":1}}],[\"数据表与程序\",{\"0\":{\"376\":1}}],[\"数据管理\",{\"1\":{\"383\":1}}],[\"数据库\",{\"1\":{\"323\":1}}],[\"数据存储\",{\"1\":{\"312\":1}}],[\"数据操作\",{\"1\":{\"312\":1}}],[\"数据应在名为\",{\"1\":{\"136\":1}}],[\"数据持久性\",{\"1\":{\"127\":1}}],[\"数据所需的\",{\"1\":{\"126\":1}}],[\"数据和遮挡数据\",{\"1\":{\"116\":1}}],[\"数据和逻辑分离\",{\"1\":{\"75\":1}}],[\"数据进行采样\",{\"1\":{\"116\":1}}],[\"数据的\",{\"1\":{\"116\":1}}],[\"数据的序列化\",{\"1\":{\"57\":1}}],[\"数据加密\",{\"1\":{\"88\":1}}],[\"数据传输\",{\"1\":{\"87\":1}}],[\"数据结构紧凑\",{\"1\":{\"88\":1}}],[\"数据结构\",{\"1\":{\"66\":1,\"70\":1,\"71\":1}}],[\"数据层\",{\"1\":{\"57\":1}}],[\"数据驱动的系统\",{\"1\":{\"85\":1}}],[\"数据驱动\",{\"1\":{\"56\":1,\"75\":1}}],[\"数据驱动类技能\",{\"1\":{\"30\":1}}],[\"数据\",{\"1\":{\"51\":1,\"136\":2,\"173\":1}}],[\"数据本身存储在堆\",{\"1\":{\"48\":1}}],[\"数据访问\",{\"1\":{\"46\":1}}],[\"数据与逻辑分离\",{\"1\":{\"45\":1}}],[\"数据来画一个东西\",{\"1\":{\"43\":1}}],[\"搜索数组以找到数组中的第一个非活动抛射物\",{\"1\":{\"279\":1}}],[\"搜索结束后\",{\"1\":{\"274\":1}}],[\"搜索\",{\"1\":{\"30\":2}}],[\"免费的游戏素材\",{\"1\":{\"30\":1}}],[\"免费的在线文档翻译\",{\"1\":{\"30\":1}}],[\"免费模型网站\",{\"1\":{\"30\":1}}],[\"免费kinddle电子书\",{\"1\":{\"30\":1}}],[\"豆瓣\",{\"1\":{\"30\":1}}],[\"豆包\",{\"1\":{\"7\":1}}],[\"链家\",{\"1\":{\"30\":1}}],[\"链接已失效\",{\"1\":{\"20\":2}}],[\"水木社区\",{\"1\":{\"30\":1}}],[\"租房\",{\"1\":{\"30\":1}}],[\"第\",{\"1\":{\"394\":1}}],[\"第四章\",{\"0\":{\"378\":1}}],[\"第四部分\",{\"0\":{\"58\":1,\"77\":1}}],[\"第五部分\",{\"0\":{\"59\":1}}],[\"第三章\",{\"0\":{\"376\":1}}],[\"第三部分\",{\"0\":{\"57\":1,\"76\":1}}],[\"第三步\",{\"1\":{\"55\":1}}],[\"第二次把实际的东西\",{\"1\":{\"394\":1}}],[\"第二次为\",{\"1\":{\"100\":1}}],[\"第二章\",{\"0\":{\"370\":1}}],[\"第二版\",{\"1\":{\"312\":1}}],[\"第二种可行的方法是将必须解析的数据拆分为较小的数据块\",{\"1\":{\"254\":1}}],[\"第二种解决方案在当前\",{\"1\":{\"170\":1}}],[\"第二个类型\",{\"1\":{\"291\":1}}],[\"第二个时间线显示批处理\",{\"1\":{\"148\":1}}],[\"第二个通道渲染\",{\"1\":{\"110\":1}}],[\"第二部分\",{\"0\":{\"56\":1,\"75\":1}}],[\"第二步\",{\"1\":{\"55\":1}}],[\"第一章\",{\"0\":{\"380\":1}}],[\"第一种解决方案随着要表示的项目数量增加\",{\"1\":{\"170\":1}}],[\"第一个类型\",{\"1\":{\"291\":1}}],[\"第一个示例是更\",{\"1\":{\"271\":1}}],[\"第一个时间线显示在两个类别中花费的\",{\"1\":{\"148\":1}}],[\"第一个通道是灯光预通道\",{\"1\":{\"110\":1}}],[\"第一次先把\",{\"1\":{\"394\":1}}],[\"第一次加载\",{\"1\":{\"200\":1}}],[\"第一次分配后\",{\"1\":{\"200\":1}}],[\"第一次分配为\",{\"1\":{\"100\":1}}],[\"第一次使用某个系统时出现\",{\"1\":{\"200\":1}}],[\"第一次出现要在括号里面写上英文原文\",{\"1\":{\"14\":1}}],[\"第一步\",{\"1\":{\"55\":1}}],[\"第一部分\",{\"0\":{\"55\":1,\"74\":1}}],[\"第六版\",{\"1\":{\"30\":2}}],[\"泰课在线\",{\"1\":{\"30\":1}}],[\"学习系统\",{\"0\":{\"332\":1}}],[\"学习类网站\",{\"1\":{\"30\":1}}],[\"学习网站\",{\"1\":{\"20\":1}}],[\"皮卡丘打排球\",{\"1\":{\"30\":1}}],[\"樱花动漫2\",{\"1\":{\"30\":1}}],[\"樱花动漫1\",{\"1\":{\"30\":1}}],[\"娱乐类\",{\"1\":{\"30\":1}}],[\"图片\",{\"1\":{\"313\":1,\"379\":1}}],[\"图片在线拼接\",{\"1\":{\"30\":1}}],[\"图像\",{\"1\":{\"181\":1}}],[\"图中标注的\",{\"1\":{\"97\":1}}],[\"图形管线\",{\"1\":{\"329\":1}}],[\"图形管线的过程\",{\"1\":{\"143\":1}}],[\"图形学\",{\"1\":{\"318\":1}}],[\"图形计算器在\",{\"1\":{\"313\":1,\"318\":1}}],[\"图形线程的资源并导致帧率不稳\",{\"1\":{\"269\":1}}],[\"图形作业的可用性取决于图形\",{\"1\":{\"228\":1}}],[\"图形作业没有渲染线程来调度作业\",{\"1\":{\"228\":1}}],[\"图形作业将命令直接转换为例如\",{\"1\":{\"228\":1}}],[\"图形作业通过调用\",{\"1\":{\"228\":1}}],[\"图形作业\",{\"0\":{\"228\":1},\"1\":{\"222\":1,\"223\":1}}],[\"图形驱动程序会在帧缓冲区上执行加载和存储操作\",{\"1\":{\"212\":1}}],[\"图形驱动程序\",{\"1\":{\"96\":1}}],[\"图形\",{\"0\":{\"330\":1},\"1\":{\"96\":1,\"179\":1,\"206\":1,\"225\":1,\"228\":1}}],[\"图形与物理\",{\"1\":{\"61\":1}}],[\"图集扩展为\",{\"1\":{\"168\":1}}],[\"图集信息值\",{\"1\":{\"118\":1}}],[\"图集\",{\"1\":{\"41\":1,\"43\":1,\"83\":1,\"168\":1,\"317\":1,\"318\":1}}],[\"图标和链接会自动通过对应文件生成\",{\"1\":{\"360\":1}}],[\"图标触发\",{\"1\":{\"151\":1}}],[\"图标\",{\"0\":{\"359\":1},\"1\":{\"30\":2,\"56\":1,\"359\":1}}],[\"图生模型\",{\"1\":{\"7\":1}}],[\"古诗词网\",{\"1\":{\"30\":1}}],[\"科学上网\",{\"1\":{\"30\":1}}],[\"语法\",{\"1\":{\"312\":1}}],[\"语句通常放在名为\",{\"1\":{\"308\":1}}],[\"语雀\",{\"1\":{\"30\":1}}],[\"语言原生支持\",{\"1\":{\"75\":1}}],[\"语言层面的异步编程模型\",{\"1\":{\"49\":1,\"57\":1}}],[\"语言\",{\"0\":{\"28\":1}}],[\"亿图脑图\",{\"1\":{\"30\":1}}],[\"亿图在线作图\",{\"1\":{\"30\":1}}],[\"编码我们称为托管代码\",{\"1\":{\"371\":1}}],[\"编码会添加静音\",{\"1\":{\"201\":1}}],[\"编码表\",{\"1\":{\"30\":1}}],[\"编写\",{\"1\":{\"284\":1}}],[\"编写一个创建新数组\",{\"1\":{\"281\":1}}],[\"编写一小段代码来禁止将\",{\"1\":{\"246\":1}}],[\"编写表面着色器\",{\"1\":{\"216\":1}}],[\"编写代码来更新\",{\"1\":{\"180\":1}}],[\"编写这种专门的数字显示系统相对简单\",{\"1\":{\"168\":1}}],[\"编写自己的代码或补间系统\",{\"1\":{\"184\":1}}],[\"编写自己的兼容着色器的\",{\"0\":{\"136\":1}}],[\"编写自定义组件来显示这些字形的精灵要有利得多\",{\"1\":{\"168\":1}}],[\"编写上\",{\"1\":{\"90\":1}}],[\"编辑此页链接\",{\"1\":{\"364\":1}}],[\"编辑此页\",{\"1\":{\"364\":1}}],[\"编辑可配置值\",{\"1\":{\"104\":1}}],[\"编辑器基本使用\",{\"1\":{\"313\":1}}],[\"编辑器扩展精讲\",{\"1\":{\"312\":1}}],[\"编辑器扩展\",{\"1\":{\"312\":1}}],[\"编辑器之外移动文件而没有同时移动\",{\"1\":{\"299\":1}}],[\"编辑器的工作方式与构建版本不同\",{\"1\":{\"274\":1}}],[\"编辑器\",{\"1\":{\"199\":1}}],[\"编辑器中的\",{\"1\":{\"137\":1,\"317\":1}}],[\"编辑器中的加速效果相当惊人\",{\"1\":{\"137\":1}}],[\"编辑器有一个非常灵活的渲染引擎\",{\"1\":{\"126\":1}}],[\"编辑器专用\",{\"1\":{\"79\":1}}],[\"编辑器下编译快\",{\"1\":{\"47\":1}}],[\"编译执行\",{\"1\":{\"371\":1}}],[\"编译的应用\",{\"1\":{\"371\":1}}],[\"编译一个脚本时\",{\"1\":{\"291\":1}}],[\"编译器会根据目标平台的特性生成优化后的机器码\",{\"1\":{\"371\":1}}],[\"编译器\",{\"1\":{\"76\":1}}],[\"编译器优化技术\",{\"1\":{\"76\":1}}],[\"编译器优化\",{\"1\":{\"57\":1,\"76\":1}}],[\"编译后的\",{\"1\":{\"57\":1,\"76\":1}}],[\"编译时间\",{\"1\":{\"47\":1}}],[\"编译\",{\"1\":{\"47\":2}}],[\"编程能力\",{\"0\":{\"312\":1}}],[\"编程指南\",{\"1\":{\"263\":1}}],[\"编程与内存管理\",{\"0\":{\"63\":1,\"68\":1}}],[\"编程基础\",{\"1\":{\"61\":1}}],[\"编程\",{\"0\":{\"36\":1},\"1\":{\"66\":1,\"72\":1,\"312\":2}}],[\"编程语言\",{\"0\":{\"2\":1,\"328\":1}}],[\"知识体系构建\",{\"1\":{\"312\":1}}],[\"知识在线问答工具\",{\"1\":{\"30\":1}}],[\"知道怎么做\",{\"1\":{\"54\":1}}],[\"知轩藏书\",{\"1\":{\"30\":1}}],[\"知乎\",{\"1\":{\"22\":1}}],[\"栈分配器\",{\"0\":{\"102\":1}}],[\"栈\",{\"1\":{\"26\":1,\"44\":1,\"98\":2,\"102\":1,\"206\":1}}],[\"+=\",{\"1\":{\"160\":1,\"271\":4,\"280\":1}}],[\"++i\",{\"1\":{\"144\":2,\"181\":1,\"279\":1}}],[\"+\",{\"1\":{\"26\":2,\"42\":1,\"53\":3,\"59\":1,\"160\":1,\"206\":3,\"238\":3,\"280\":2,\"299\":1,\"300\":1,\"301\":1,\"302\":1,\"341\":1,\"369\":2}}],[\"与实际\",{\"1\":{\"401\":1}}],[\"与托管内存堆不一样\",{\"1\":{\"390\":1}}],[\"与交错数组\",{\"0\":{\"265\":1}}],[\"与自定义实现相比\",{\"1\":{\"252\":1}}],[\"与桌面平台不同\",{\"1\":{\"232\":1}}],[\"与其他编程语言\",{\"1\":{\"277\":1}}],[\"与其他模式类似\",{\"1\":{\"228\":1}}],[\"与其他领域的最佳实践一样\",{\"1\":{\"139\":1}}],[\"与命令行工具报告类似\",{\"1\":{\"206\":1}}],[\"与更简单的\",{\"1\":{\"160\":1}}],[\"与材质\",{\"0\":{\"126\":1}}],[\"与构建时的静态批处理不同\",{\"1\":{\"109\":1}}],[\"与结构体相对比\",{\"1\":{\"93\":1}}],[\"与技术标准\",{\"1\":{\"77\":1}}],[\"与资源实际的打包位置解耦\",{\"1\":{\"76\":1}}],[\"与内存管理\",{\"1\":{\"66\":1}}],[\"与帧率无关\",{\"1\":{\"62\":1,\"67\":1}}],[\"与unity生命周期和时间紧密绑定\",{\"1\":{\"60\":1}}],[\"与引擎底层\",{\"0\":{\"57\":1}}],[\"与\",{\"0\":{\"259\":1},\"1\":{\"26\":1,\"46\":1,\"57\":1,\"71\":1,\"79\":1,\"108\":1,\"112\":2,\"114\":1,\"122\":1,\"150\":1,\"163\":1,\"169\":1,\"190\":1,\"205\":1,\"207\":1,\"261\":1,\"387\":1,\"388\":1}}],[\"八叉树\",{\"1\":{\"71\":1}}],[\"八\",{\"1\":{\"26\":1}}],[\"书签\",{\"1\":{\"30\":1}}],[\"书签备忘\",{\"1\":{\"1\":1}}],[\"书籍\",{\"1\":{\"24\":1,\"30\":1,\"216\":1}}],[\"浏览器中的内容也会自动更新\",{\"1\":{\"350\":1}}],[\"浏览器\",{\"1\":{\"24\":1}}],[\"规范\",{\"1\":{\"24\":1}}],[\"规则请参阅\",{\"1\":{\"302\":1}}],[\"规则\",{\"1\":{\"14\":1}}],[\"姿势识别\",{\"1\":{\"22\":1}}],[\"姿态识别\",{\"1\":{\"22\":2}}],[\"从客户端角度\",{\"1\":{\"381\":1}}],[\"从客户端的角度\",{\"1\":{\"381\":1}}],[\"从头创建项目\",{\"1\":{\"355\":1}}],[\"从原理到应用\",{\"1\":{\"317\":1}}],[\"从原生代码调用托管代码回调有一个很小但很明显的开销\",{\"1\":{\"267\":1}}],[\"从零开始\",{\"1\":{\"341\":1}}],[\"从零开始的\",{\"1\":{\"312\":2}}],[\"从零开始实现\",{\"1\":{\"26\":1}}],[\"从预制件\",{\"1\":{\"279\":1}}],[\"从字符串哈希创建的属性\",{\"1\":{\"257\":1}}],[\"从帧缓冲区复制到较小的瓦片内存中\",{\"1\":{\"212\":1}}],[\"从基准测试开始很有用\",{\"1\":{\"210\":1}}],[\"从构建中移除\",{\"1\":{\"200\":1}}],[\"从动画中移除冗余的关键帧\",{\"1\":{\"200\":1}}],[\"从网格中移除未使用的通道\",{\"1\":{\"200\":1}}],[\"从脚本中\",{\"1\":{\"174\":1}}],[\"从本地化字体\",{\"1\":{\"169\":1}}],[\"从列表中的第一个后备字体开始\",{\"1\":{\"169\":1}}],[\"从后向前构建\",{\"1\":{\"162\":1}}],[\"从多边形栅格化\",{\"1\":{\"142\":1}}],[\"从性能角度来看\",{\"1\":{\"142\":1,\"168\":1}}],[\"从上到下\",{\"1\":{\"131\":1,\"149\":1}}],[\"从输入结构复制到\",{\"1\":{\"118\":1}}],[\"从托管堆的空闲空间\",{\"1\":{\"97\":1}}],[\"从一个称为堆\",{\"1\":{\"97\":1}}],[\"从项目的整体架构\",{\"1\":{\"92\":1}}],[\"从源头上解决问题\",{\"1\":{\"77\":1}}],[\"从服务器异步下载一个5mb的资源包\",{\"1\":{\"60\":1}}],[\"从移动端到\",{\"1\":{\"58\":1}}],[\"从\",{\"1\":{\"51\":1,\"137\":1,\"165\":2,\"169\":1,\"190\":1,\"196\":1,\"234\":1,\"261\":1,\"266\":1,\"312\":1,\"371\":1}}],[\"从该点继续\",{\"1\":{\"49\":1}}],[\"从而省出内存给更频繁分配的内存\",{\"1\":{\"401\":1}}],[\"从而保证了不会在不同的版本序列化中出错\",{\"1\":{\"394\":1}}],[\"从而在编译的时候将自己的脚本编译到目标程序集\",{\"1\":{\"290\":1}}],[\"从而在运行时不可用\",{\"1\":{\"100\":1}}],[\"从而将性能影响降至最低\",{\"1\":{\"275\":1}}],[\"从而释放内存\",{\"1\":{\"274\":1}}],[\"从而控制那些仅应在实体可见时才需要运行的行为\",{\"1\":{\"270\":1}}],[\"从而限制资源加载对帧时间的影响\",{\"1\":{\"269\":1}}],[\"从而减少\",{\"1\":{\"379\":1}}],[\"从而减少每帧必须调用的大量函数\",{\"1\":{\"267\":1}}],[\"从而减少驱动程序需要在\",{\"1\":{\"212\":1}}],[\"从而确保在固定时间进行列表更新\",{\"1\":{\"267\":1}}],[\"从而节省磁盘空间\",{\"1\":{\"244\":1}}],[\"从而更容易进行批处理\",{\"1\":{\"216\":1}}],[\"从而降低了一帧内的\",{\"1\":{\"127\":1}}],[\"从而实现对象的复用\",{\"1\":{\"64\":1}}],[\"从而使合批成为可能\",{\"1\":{\"43\":1}}],[\"从而进行合批\",{\"1\":{\"41\":1}}],[\"从入门到精通\",{\"1\":{\"22\":1}}],[\"从文档进来的\",{\"1\":{\"9\":1}}],[\"毛星云\",{\"1\":{\"22\":3}}],[\"雨松\",{\"1\":{\"22\":1}}],[\"腾讯手游优化之路\",{\"1\":{\"22\":1}}],[\"贪吃蛇\",{\"1\":{\"22\":1}}],[\"项目激活匹配\",{\"1\":{\"360\":1}}],[\"项目图标\",{\"1\":{\"360\":1}}],[\"项目链接\",{\"1\":{\"360\":1}}],[\"项目文字\",{\"1\":{\"360\":1}}],[\"项目的\",{\"1\":{\"340\":1}}],[\"项目的重要组成部分\",{\"1\":{\"219\":1}}],[\"项目需要设置为可读可写\",{\"1\":{\"339\":1}}],[\"项目需要设置为\",{\"1\":{\"339\":1}}],[\"项目根目录下创建\",{\"0\":{\"338\":1}}],[\"项目也经常包含类似于以下的代码\",{\"1\":{\"285\":1}}],[\"项目都能从增量式垃圾回收中受益\",{\"1\":{\"275\":1}}],[\"项目中所有使用程序集定义创建的程序集都会自动引用所有预编译程序集\",{\"1\":{\"300\":1}}],[\"项目中最常见的意外临时内存分配来源之一\",{\"1\":{\"284\":1}}],[\"项目中许多常见问题的来源\",{\"1\":{\"255\":1}}],[\"项目中性能问题的常见原因\",{\"1\":{\"250\":1}}],[\"项目中用到了哪些设计模式\",{\"1\":{\"93\":1}}],[\"项目上强制执行某些最低标准\",{\"1\":{\"246\":1}}],[\"项目导入\",{\"0\":{\"237\":1}}],[\"项目设置为自动选择图形\",{\"1\":{\"151\":1}}],[\"项目模板\",{\"1\":{\"131\":1}}],[\"项目选择的脚本运行时\",{\"1\":{\"97\":2}}],[\"项目性能规范\",{\"1\":{\"77\":1}}],[\"项目背景是什么\",{\"1\":{\"52\":1}}],[\"项目\",{\"1\":{\"22\":1,\"52\":1,\"151\":1,\"360\":2}}],[\"iuk\",{\"1\":{\"385\":1}}],[\"i18n\",{\"1\":{\"335\":1,\"336\":1,\"361\":1}}],[\"ik\",{\"1\":{\"322\":1}}],[\"igcmd\",{\"1\":{\"227\":2}}],[\"ignoreprojector\",{\"1\":{\"160\":1}}],[\"ian\",{\"1\":{\"177\":1,\"178\":2}}],[\"iphone\",{\"1\":{\"160\":1,\"246\":1}}],[\"ipa\",{\"1\":{\"208\":1}}],[\"ipad\",{\"1\":{\"151\":1}}],[\"ipairs\",{\"1\":{\"71\":1}}],[\"it\",{\"1\":{\"145\":1,\"181\":1,\"279\":1,\"280\":1,\"281\":1,\"283\":1,\"285\":1,\"340\":1,\"404\":2}}],[\"iteration\",{\"1\":{\"285\":1}}],[\"iterated\",{\"1\":{\"145\":1}}],[\"iterator\",{\"1\":{\"49\":1,\"57\":1,\"60\":1}}],[\"items\",{\"1\":{\"369\":15}}],[\"itemso\",{\"1\":{\"56\":2}}],[\"item\",{\"1\":{\"56\":2,\"369\":2}}],[\"if\",{\"1\":{\"144\":2,\"146\":3,\"181\":6,\"241\":1,\"246\":1,\"262\":2,\"263\":1,\"267\":1,\"279\":3,\"280\":2,\"369\":10}}],[\"ifdef\",{\"1\":{\"118\":1,\"160\":1}}],[\"i++\",{\"1\":{\"144\":2,\"271\":4,\"280\":2,\"281\":2,\"285\":6}}],[\"island\",{\"1\":{\"390\":2,\"401\":1}}],[\"isoriginal\",{\"1\":{\"363\":1}}],[\"iserializationcallbackreceiver\",{\"1\":{\"254\":1}}],[\"ismatch\",{\"1\":{\"253\":1}}],[\"isreadable\",{\"1\":{\"246\":4}}],[\"isactiveandenabled\",{\"1\":{\"181\":1}}],[\"isactive\",{\"1\":{\"181\":1}}],[\"is\",{\"1\":{\"62\":2,\"67\":2,\"145\":1,\"181\":2,\"280\":2,\"281\":2,\"283\":1,\"285\":1,\"340\":1}}],[\"icon\",{\"1\":{\"359\":4,\"360\":3,\"361\":3,\"365\":1}}],[\"iconify\",{\"1\":{\"359\":2}}],[\"iconpark\",{\"1\":{\"30\":1}}],[\"icanvasraycastfilter\",{\"1\":{\"166\":2}}],[\"icanvaselement\",{\"1\":{\"144\":1,\"145\":2,\"146\":1}}],[\"iclippable\",{\"1\":{\"150\":1}}],[\"iclipregion\",{\"1\":{\"150\":1}}],[\"icheckcondition\",{\"1\":{\"56\":1}}],[\"i\",{\"1\":{\"49\":2,\"57\":1,\"60\":1,\"122\":2,\"144\":14,\"181\":3,\"202\":1,\"222\":1,\"271\":12,\"279\":2,\"280\":6,\"281\":6,\"285\":24,\"392\":1}}],[\"idisposable\",{\"1\":{\"60\":1}}],[\"id\",{\"0\":{\"257\":1},\"1\":{\"46\":1,\"56\":3,\"98\":1,\"118\":9,\"120\":4,\"122\":7,\"257\":4,\"377\":1}}],[\"idm\",{\"1\":{\"33\":1}}],[\"idea\",{\"1\":{\"338\":1}}],[\"identity\",{\"1\":{\"272\":1}}],[\"ide\",{\"0\":{\"9\":1},\"1\":{\"30\":1,\"284\":1,\"313\":1}}],[\"immutable\",{\"1\":{\"280\":1}}],[\"imaskable\",{\"1\":{\"141\":1}}],[\"image组件仅能展示图集中的图元\",{\"1\":{\"379\":1}}],[\"images\",{\"1\":{\"367\":2}}],[\"image\",{\"1\":{\"31\":1,\"141\":1,\"150\":1,\"379\":1}}],[\"implications\",{\"1\":{\"109\":1}}],[\"important\",{\"1\":{\"366\":2}}],[\"importantinfonotetipwarningcaution\",{\"1\":{\"366\":1}}],[\"imports\",{\"0\":{\"237\":1}}],[\"importer\",{\"1\":{\"30\":1,\"248\":1}}],[\"import\",{\"1\":{\"30\":1,\"201\":1,\"335\":1,\"336\":2,\"346\":3,\"355\":2,\"357\":2,\"358\":1,\"359\":1,\"360\":3,\"361\":1,\"362\":1,\"367\":4}}],[\"imgui\",{\"1\":{\"31\":1}}],[\"iokit\",{\"1\":{\"233\":1}}],[\"ios\",{\"1\":{\"47\":3,\"57\":1,\"65\":1,\"76\":1,\"147\":1,\"151\":1,\"165\":1,\"190\":3,\"193\":1,\"201\":2,\"208\":2,\"221\":4,\"225\":1,\"228\":1,\"232\":1,\"233\":1,\"234\":1,\"249\":1,\"254\":1,\"275\":1,\"323\":1,\"387\":1,\"392\":1}}],[\"io\",{\"1\":{\"30\":1,\"339\":3,\"387\":2}}],[\"ilspy\",{\"1\":{\"265\":1}}],[\"ilayoutgroup\",{\"1\":{\"181\":1}}],[\"ilayoutcontroller\",{\"1\":{\"145\":2}}],[\"ilayoutelement\",{\"1\":{\"145\":2}}],[\"illumination\",{\"1\":{\"116\":2}}],[\"ilruntime\",{\"1\":{\"61\":1,\"65\":2}}],[\"il\",{\"1\":{\"24\":1,\"47\":3,\"57\":1,\"65\":1,\"76\":1,\"192\":1,\"265\":1,\"284\":3,\"371\":5,\"404\":1}}],[\"il2cpp\",{\"0\":{\"47\":1},\"1\":{\"42\":1,\"47\":2,\"57\":4,\"65\":1,\"76\":4,\"96\":1,\"97\":3,\"147\":1,\"150\":1,\"190\":11,\"192\":1,\"197\":4,\"208\":2,\"259\":1,\"271\":1,\"371\":5,\"389\":2,\"393\":1,\"399\":1,\"400\":1,\"401\":2}}],[\"il2cpp逆向工程\",{\"1\":{\"22\":1}}],[\"il2cppdumper\",{\"1\":{\"22\":1}}],[\"indexof\",{\"1\":{\"369\":1}}],[\"index\",{\"1\":{\"361\":1,\"369\":6}}],[\"indexedset\",{\"1\":{\"150\":1,\"152\":1}}],[\"init\",{\"1\":{\"346\":2}}],[\"initial\",{\"1\":{\"102\":2,\"103\":1,\"367\":1}}],[\"inertia\",{\"1\":{\"326\":1}}],[\"inactiveobjects\",{\"1\":{\"279\":5}}],[\"inout\",{\"1\":{\"121\":1}}],[\"input\",{\"1\":{\"118\":1,\"121\":2,\"122\":2,\"164\":2,\"165\":2,\"174\":1,\"285\":11,\"313\":1}}],[\"included\",{\"1\":{\"237\":1,\"244\":1}}],[\"include\",{\"1\":{\"122\":1,\"160\":2}}],[\"incompatible\",{\"1\":{\"112\":1}}],[\"incremental\",{\"1\":{\"42\":1,\"55\":1,\"74\":1,\"274\":3,\"275\":4,\"401\":2}}],[\"insert\",{\"1\":{\"369\":1}}],[\"instruments\",{\"0\":{\"150\":1},\"1\":{\"147\":2,\"150\":1,\"233\":1}}],[\"instanceid\",{\"1\":{\"118\":1}}],[\"instance\",{\"1\":{\"118\":3,\"120\":2,\"122\":6,\"144\":1,\"262\":8}}],[\"instancedcolorsurfaceshader\",{\"1\":{\"121\":1}}],[\"instanced\",{\"1\":{\"113\":1,\"118\":5,\"121\":2,\"122\":2}}],[\"instancing\",{\"1\":{\"41\":1,\"43\":1,\"52\":1,\"55\":2,\"69\":1,\"74\":1,\"83\":1,\"106\":4,\"112\":1,\"113\":1,\"114\":1,\"115\":3,\"118\":12,\"119\":2,\"121\":2,\"122\":3,\"125\":1,\"137\":1,\"216\":2}}],[\"instantiate\",{\"1\":{\"41\":1,\"42\":1,\"56\":1,\"279\":1}}],[\"installs\",{\"1\":{\"160\":1}}],[\"install\",{\"1\":{\"39\":1,\"339\":1,\"343\":1}}],[\"inspector\",{\"1\":{\"106\":1,\"109\":2,\"112\":4,\"115\":2,\"128\":1,\"129\":1,\"216\":1,\"292\":3,\"294\":1,\"295\":1,\"296\":1,\"299\":1,\"300\":3,\"301\":1,\"302\":1,\"306\":2}}],[\"infinite\",{\"1\":{\"329\":1}}],[\"infinity\",{\"1\":{\"30\":1}}],[\"information\",{\"1\":{\"116\":1,\"306\":1}}],[\"info\",{\"1\":{\"91\":1,\"360\":1,\"366\":1}}],[\"invalid\",{\"1\":{\"302\":1}}],[\"invisible\",{\"1\":{\"79\":1}}],[\"inventory\",{\"1\":{\"60\":1}}],[\"inventorymanager\",{\"1\":{\"56\":4}}],[\"intro\",{\"1\":{\"361\":2}}],[\"introduction\",{\"1\":{\"335\":1,\"336\":1}}],[\"intelligence\",{\"1\":{\"331\":1}}],[\"intel\",{\"0\":{\"151\":1},\"1\":{\"147\":2,\"150\":2}}],[\"intentionally\",{\"1\":{\"114\":1}}],[\"intersection\",{\"1\":{\"326\":1}}],[\"interaction\",{\"1\":{\"326\":2}}],[\"interface\",{\"1\":{\"313\":1,\"361\":1}}],[\"internal\",{\"1\":{\"238\":4,\"290\":2}}],[\"internalsvisibleto\",{\"1\":{\"308\":2}}],[\"internals\",{\"1\":{\"26\":1}}],[\"interpolate\",{\"1\":{\"74\":1}}],[\"interpolation\",{\"1\":{\"60\":1,\"74\":1}}],[\"intermediate\",{\"1\":{\"47\":1,\"57\":1,\"192\":1}}],[\"interoperation\",{\"1\":{\"26\":1}}],[\"int>\",{\"1\":{\"56\":1}}],[\"int\",{\"1\":{\"48\":2,\"56\":1,\"59\":1,\"144\":7,\"145\":1,\"181\":1,\"252\":6,\"260\":1,\"271\":10,\"279\":2,\"280\":7,\"281\":3,\"283\":5,\"284\":2,\"285\":7,\"369\":4,\"377\":1}}],[\"into\",{\"1\":{\"30\":1,\"201\":2}}],[\"in\",{\"0\":{\"50\":1,\"244\":1},\"1\":{\"22\":1,\"24\":1,\"26\":1,\"30\":2,\"31\":1,\"47\":1,\"50\":1,\"57\":1,\"58\":1,\"96\":1,\"108\":1,\"110\":1,\"120\":1,\"121\":2,\"123\":1,\"145\":1,\"160\":7,\"190\":1,\"205\":4,\"238\":1,\"244\":1,\"279\":2,\"309\":2,\"326\":2,\"331\":4,\"339\":1,\"340\":2,\"371\":1,\"393\":2,\"404\":1}}],[\"资产打包\",{\"1\":{\"60\":1}}],[\"资产寻址\",{\"1\":{\"60\":1}}],[\"资产化管理\",{\"1\":{\"60\":1,\"75\":1}}],[\"资产\",{\"1\":{\"45\":1,\"56\":1,\"289\":1}}],[\"资源加密\",{\"1\":{\"323\":1}}],[\"资源加载调用\",{\"1\":{\"269\":1}}],[\"资源加载\",{\"1\":{\"80\":1}}],[\"资源商店明星素材配套教程\",{\"1\":{\"313\":1}}],[\"资源都必须\",{\"1\":{\"269\":1}}],[\"资源审计不仅有助于恢复纹理的性能\",{\"1\":{\"220\":1}}],[\"资源审计\",{\"0\":{\"220\":1},\"1\":{\"220\":1}}],[\"资源审核\",{\"1\":{\"124\":1}}],[\"资源和代码与运行时内存直接成比例\",{\"1\":{\"208\":1}}],[\"资源在运行时会对原生内存和托管内存产生影响\",{\"1\":{\"200\":1}}],[\"资源引用\",{\"1\":{\"169\":1}}],[\"资源以及分配给此\",{\"1\":{\"169\":1}}],[\"资源就越多\",{\"1\":{\"126\":1}}],[\"资源优化\",{\"1\":{\"124\":1,\"317\":1}}],[\"资源中的任何部分\",{\"1\":{\"112\":1}}],[\"资源中的某些高级属性\",{\"1\":{\"112\":1}}],[\"资源的任何后备资源\",{\"1\":{\"169\":1}}],[\"资源的方式分配工作\",{\"1\":{\"117\":1}}],[\"资源的属性\",{\"1\":{\"112\":1}}],[\"资源的其他属性\",{\"1\":{\"112\":2}}],[\"资源的\",{\"1\":{\"112\":1}}],[\"资源来生成静态批处理的网格数据\",{\"1\":{\"109\":1}}],[\"资源打包\",{\"1\":{\"93\":1}}],[\"资源与热更新\",{\"1\":{\"61\":1,\"66\":1}}],[\"资源管理及ai上\",{\"1\":{\"383\":1}}],[\"资源管理与高级特性\",{\"0\":{\"65\":1}}],[\"资源管理\",{\"1\":{\"44\":1,\"76\":1,\"269\":1}}],[\"资源\",{\"0\":{\"189\":1},\"1\":{\"43\":1,\"96\":1,\"112\":1,\"169\":1,\"189\":1,\"200\":1,\"255\":1}}],[\"资源查看\",{\"1\":{\"22\":1}}],[\"资料大全\",{\"1\":{\"19\":1}}],[\"w\",{\"1\":{\"396\":1}}],[\"wrapper\",{\"1\":{\"389\":1}}],[\"write\",{\"1\":{\"246\":1,\"247\":3,\"248\":2,\"275\":1,\"339\":1,\"396\":2,\"397\":1}}],[\"writing\",{\"1\":{\"216\":1}}],[\"wwise\",{\"1\":{\"323\":1}}],[\"www\",{\"1\":{\"269\":9}}],[\"weixin\",{\"1\":{\"385\":1,\"394\":1}}],[\"weiser\",{\"1\":{\"275\":1,\"404\":1}}],[\"we\",{\"1\":{\"145\":1,\"181\":3}}],[\"webapps\",{\"1\":{\"341\":1}}],[\"webpack\",{\"1\":{\"335\":1,\"336\":1}}],[\"websocket\",{\"1\":{\"314\":1}}],[\"webviews\",{\"1\":{\"205\":2}}],[\"webgl\",{\"1\":{\"114\":1,\"190\":1,\"193\":1,\"194\":2,\"274\":2,\"275\":1,\"301\":2,\"330\":1}}],[\"web\",{\"1\":{\"10\":1,\"30\":1,\"275\":1,\"358\":1}}],[\"when\",{\"1\":{\"280\":2,\"369\":1}}],[\"while\",{\"1\":{\"181\":1,\"252\":2,\"279\":1}}],[\"which\",{\"1\":{\"145\":1}}],[\"white\",{\"1\":{\"121\":1,\"160\":1}}],[\"why\",{\"1\":{\"59\":1,\"60\":1,\"77\":1}}],[\"what\",{\"1\":{\"59\":1}}],[\"whole\",{\"1\":{\"30\":1}}],[\"willrendercanvas\",{\"1\":{\"152\":1}}],[\"willrendercanvases\",{\"1\":{\"141\":1,\"144\":1,\"148\":1}}],[\"wikipedia\",{\"1\":{\"108\":1}}],[\"wiki\",{\"1\":{\"60\":1}}],[\"windows\",{\"1\":{\"57\":1,\"100\":1,\"199\":1,\"371\":1}}],[\"window\",{\"1\":{\"44\":1,\"112\":1,\"149\":1,\"212\":1,\"218\":1}}],[\"with\",{\"1\":{\"22\":1,\"121\":1,\"280\":1,\"281\":1,\"285\":2,\"293\":1,\"331\":1,\"339\":4,\"340\":3,\"359\":1}}],[\"ways\",{\"1\":{\"340\":1}}],[\"waline\",{\"1\":{\"363\":1}}],[\"walks\",{\"1\":{\"331\":1}}],[\"wallpaper\",{\"1\":{\"205\":1}}],[\"wally\",{\"1\":{\"30\":1}}],[\"water\",{\"1\":{\"326\":2}}],[\"warning\",{\"1\":{\"91\":1,\"366\":1}}],[\"waitfortargetrender\",{\"1\":{\"74\":1}}],[\"waitforpresent\",{\"1\":{\"60\":1,\"74\":1}}],[\"waitforseconds\",{\"1\":{\"41\":1,\"42\":1,\"74\":2,\"81\":1}}],[\"wunderboy\",{\"1\":{\"30\":1}}],[\"would\",{\"1\":{\"145\":1}}],[\"word\",{\"1\":{\"363\":1}}],[\"works\",{\"1\":{\"369\":1}}],[\"workshop\",{\"1\":{\"30\":1}}],[\"workflows\",{\"1\":{\"339\":1}}],[\"workflow\",{\"1\":{\"339\":4}}],[\"work\",{\"1\":{\"285\":2,\"331\":1}}],[\"worker\",{\"1\":{\"102\":2,\"104\":25}}],[\"working\",{\"1\":{\"59\":1}}],[\"worldcamera\",{\"1\":{\"174\":1}}],[\"worldspace\",{\"1\":{\"169\":1,\"179\":1}}],[\"worldposition\",{\"1\":{\"160\":3}}],[\"worldtransformparams\",{\"1\":{\"136\":1}}],[\"worldtoobject\",{\"1\":{\"136\":1}}],[\"world\",{\"1\":{\"51\":1,\"55\":1,\"149\":2,\"174\":3,\"180\":6,\"275\":1}}],[\"wolframalpha\",{\"1\":{\"30\":1}}],[\"和声音的\",{\"1\":{\"396\":1}}],[\"和你的\",{\"1\":{\"394\":1}}],[\"和运行时会变快\",{\"1\":{\"394\":1}}],[\"和运行时泛型开销\",{\"1\":{\"57\":1}}],[\"和项目\",{\"0\":{\"302\":1}}],[\"和创建测试程序集的说明\",{\"1\":{\"298\":1}}],[\"和作为\",{\"1\":{\"292\":1}}],[\"和编译器不会发出关于装箱的警告\",{\"1\":{\"284\":1}}],[\"和分数显示存储在两个不同的\",{\"1\":{\"280\":1}}],[\"和稀有条件评估所需的时间\",{\"1\":{\"267\":1}}],[\"和其他回调分发给感兴趣的对象\",{\"1\":{\"267\":1}}],[\"和其他长格式文本解析\",{\"0\":{\"254\":1}}],[\"和顶点位置不压缩\",{\"1\":{\"248\":1}}],[\"和顶点切线\",{\"1\":{\"110\":1}}],[\"和顶点切线的网格\",{\"1\":{\"109\":1}}],[\"和过度着色器通道\",{\"1\":{\"236\":1}}],[\"和兆字节\",{\"1\":{\"233\":1}}],[\"和深度缓冲区\",{\"0\":{\"232\":1}}],[\"和深度测试\",{\"1\":{\"215\":1}}],[\"和目标平台\",{\"1\":{\"228\":1}}],[\"和目标平台有条件地启用或禁用多线程渲染\",{\"1\":{\"225\":1}}],[\"和曲面细分\",{\"1\":{\"217\":1}}],[\"和片段着色器\",{\"1\":{\"215\":1}}],[\"和遮挡剔除\",{\"1\":{\"213\":1}}],[\"和流式传输\",{\"1\":{\"212\":1}}],[\"和模板缓冲区\",{\"1\":{\"212\":1}}],[\"和恢复缓冲区\",{\"1\":{\"212\":1}}],[\"和显卡基准测试\",{\"1\":{\"210\":1}}],[\"和基准测试\",{\"1\":{\"210\":1}}],[\"和图形作业\",{\"0\":{\"223\":1},\"1\":{\"210\":1}}],[\"和桌面\",{\"1\":{\"201\":1}}],[\"和内存之间传输的数据量\",{\"1\":{\"212\":1}}],[\"和内存开销\",{\"1\":{\"200\":1}}],[\"和内置管线\",{\"0\":{\"50\":1},\"1\":{\"58\":1}}],[\"和托管内存\",{\"1\":{\"187\":1}}],[\"和兄弟\",{\"1\":{\"178\":1}}],[\"和任何子\",{\"1\":{\"173\":1}}],[\"和布局系统下需要大量代码才能正确实现\",{\"1\":{\"170\":1}}],[\"和小范围大小的\",{\"1\":{\"168\":1}}],[\"和一个常规\",{\"1\":{\"168\":1}}],[\"和一组仅偶尔更改的元素\",{\"1\":{\"163\":1}}],[\"和优化批处理\",{\"1\":{\"163\":1}}],[\"和现代桌面\",{\"1\":{\"143\":1}}],[\"和输入步骤中的修复填充率问题\",{\"1\":{\"152\":1}}],[\"和输入组件性能的方法\",{\"1\":{\"139\":1}}],[\"和输入\",{\"0\":{\"153\":1},\"1\":{\"139\":1}}],[\"和材质球\",{\"1\":{\"127\":1}}],[\"和每个材质自己的\",{\"1\":{\"127\":1}}],[\"和隐性的参数\",{\"1\":{\"127\":1}}],[\"和非实例化变体编译不同\",{\"1\":{\"118\":1}}],[\"和通用渲染管线\",{\"1\":{\"112\":1}}],[\"和静态批处理\",{\"1\":{\"106\":1}}],[\"和缓冲区\",{\"1\":{\"106\":1}}],[\"和后台\",{\"1\":{\"104\":1}}],[\"和发布版本生成不同的使用报告\",{\"1\":{\"100\":1}}],[\"和帧时优先使用更快\",{\"1\":{\"98\":1}}],[\"和所有\",{\"1\":{\"97\":1}}],[\"和热更新的\",{\"1\":{\"84\":1}}],[\"和计算光照信息\",{\"1\":{\"76\":1}}],[\"和主机平台\",{\"1\":{\"76\":1}}],[\"和主机的唯一选择\",{\"1\":{\"47\":1}}],[\"和场景\",{\"1\":{\"75\":1}}],[\"和触发器\",{\"1\":{\"62\":1,\"67\":1}}],[\"和性能\",{\"1\":{\"60\":1,\"168\":1,\"169\":1}}],[\"和知识广度\",{\"1\":{\"60\":1}}],[\"和生命周期管理\",{\"1\":{\"57\":1}}],[\"和动画\",{\"1\":{\"55\":1}}],[\"和光栅化后确定的屏幕像素位置\",{\"1\":{\"51\":1}}],[\"和延迟渲染\",{\"1\":{\"50\":1}}],[\"和引用类型\",{\"0\":{\"48\":1},\"1\":{\"63\":1,\"68\":1}}],[\"和挂载的脚本\",{\"1\":{\"44\":1}}],[\"和粒子特效上\",{\"1\":{\"41\":1}}],[\"和团队协作方面有深入的理解和实践经验\",{\"1\":{\"40\":1}}],[\"和\",{\"0\":{\"47\":1,\"48\":1,\"49\":1,\"51\":1,\"230\":1,\"262\":1,\"305\":1},\"1\":{\"22\":1,\"41\":1,\"42\":1,\"44\":2,\"45\":1,\"46\":1,\"50\":1,\"55\":3,\"56\":1,\"57\":1,\"58\":2,\"59\":2,\"60\":12,\"62\":1,\"67\":1,\"70\":1,\"71\":1,\"72\":1,\"74\":2,\"75\":1,\"76\":1,\"83\":3,\"87\":1,\"93\":1,\"96\":2,\"97\":2,\"100\":3,\"101\":1,\"104\":5,\"106\":1,\"108\":2,\"110\":1,\"112\":2,\"116\":2,\"118\":4,\"119\":1,\"120\":3,\"122\":2,\"125\":1,\"127\":1,\"129\":2,\"130\":1,\"137\":1,\"139\":1,\"141\":3,\"144\":3,\"147\":1,\"148\":3,\"149\":3,\"150\":3,\"151\":2,\"152\":2,\"162\":1,\"163\":1,\"165\":1,\"166\":1,\"169\":2,\"172\":2,\"174\":1,\"190\":5,\"193\":1,\"204\":1,\"205\":8,\"211\":1,\"212\":2,\"225\":1,\"227\":1,\"233\":2,\"234\":1,\"238\":1,\"241\":1,\"247\":1,\"251\":1,\"252\":2,\"254\":1,\"257\":2,\"259\":1,\"262\":1,\"267\":2,\"269\":2,\"271\":2,\"275\":2,\"284\":1,\"286\":1,\"287\":1,\"289\":2,\"302\":1,\"304\":1,\"305\":2,\"307\":1,\"346\":1,\"362\":1,\"387\":1,\"389\":1,\"394\":2,\"395\":1,\"400\":1,\"401\":1}}],[\"常驻内存大小\",{\"1\":{\"388\":1}}],[\"常驻集大小\",{\"1\":{\"205\":1}}],[\"常量\",{\"1\":{\"272\":1}}],[\"常量缓冲区中的材质属性\",{\"1\":{\"112\":1}}],[\"常量缓冲区中声明新的材质属性\",{\"1\":{\"112\":1}}],[\"常量缓冲区\",{\"1\":{\"112\":1}}],[\"常规帧缓冲区\",{\"1\":{\"230\":1}}],[\"常规窗口层\",{\"1\":{\"44\":1}}],[\"常见\",{\"1\":{\"316\":1}}],[\"常见于编译为\",{\"1\":{\"291\":1}}],[\"常见的优化思路\",{\"1\":{\"93\":1}}],[\"常见的包括\",{\"1\":{\"65\":1}}],[\"常见问题\",{\"0\":{\"134\":1},\"1\":{\"19\":1}}],[\"常用库\",{\"1\":{\"383\":1}}],[\"常用库这几个模块\",{\"1\":{\"383\":1}}],[\"常用模块\",{\"1\":{\"313\":1}}],[\"常用于相机跟随\",{\"1\":{\"67\":1}}],[\"常用于依赖其他对象初始化完成的逻辑\",{\"1\":{\"62\":1,\"67\":1}}],[\"常用于初始化变量或设置脚本间的引用\",{\"1\":{\"62\":1}}],[\"常用工具集\",{\"1\":{\"22\":1}}],[\"zombie\",{\"0\":{\"403\":1},\"1\":{\"403\":2}}],[\"zone\",{\"1\":{\"339\":1}}],[\"zero\",{\"1\":{\"272\":1}}],[\"zygote\",{\"1\":{\"205\":1}}],[\"zram\",{\"1\":{\"205\":1,\"387\":6}}],[\"zw\",{\"1\":{\"160\":1}}],[\"zwrite\",{\"1\":{\"160\":1}}],[\"ztest\",{\"1\":{\"160\":1}}],[\"z\",{\"1\":{\"30\":1,\"60\":1,\"118\":1,\"215\":3,\"247\":2,\"285\":12,\"304\":1}}],[\"zip\",{\"1\":{\"22\":1}}],[\"zhsidebarconfig\",{\"1\":{\"361\":1}}],[\"zhnavbarconfig\",{\"1\":{\"360\":1}}],[\"zhuyu\",{\"1\":{\"12\":1}}],[\"zh\",{\"1\":{\"0\":1,\"335\":38,\"336\":34,\"360\":6,\"361\":7}}],[\"dd\",{\"1\":{\"365\":2}}],[\"db\",{\"1\":{\"338\":1}}],[\"dbvt\",{\"1\":{\"326\":1}}],[\"ds\",{\"1\":{\"338\":1}}],[\"dsp\",{\"1\":{\"201\":4,\"392\":3,\"396\":1}}],[\"d\",{\"1\":{\"241\":1,\"280\":1,\"346\":2,\"355\":2,\"357\":1}}],[\"d3d11\",{\"1\":{\"238\":2}}],[\"d3d9\",{\"1\":{\"238\":2}}],[\"dumpsys\",{\"0\":{\"205\":1},\"1\":{\"204\":1,\"205\":12,\"206\":2,\"233\":1}}],[\"dundore\",{\"1\":{\"177\":1}}],[\"dual\",{\"0\":{\"101\":1},\"1\":{\"98\":1,\"101\":1}}],[\"dx11\",{\"1\":{\"125\":1}}],[\"divide\",{\"1\":{\"382\":1}}],[\"displayfooter\",{\"1\":{\"362\":1}}],[\"dispatch\",{\"1\":{\"339\":1}}],[\"dist\",{\"1\":{\"338\":1,\"339\":1,\"347\":1,\"351\":1}}],[\"distances\",{\"1\":{\"213\":2}}],[\"disabled\",{\"1\":{\"276\":1}}],[\"disabledenabledmanual\",{\"1\":{\"274\":1}}],[\"disable\",{\"1\":{\"232\":1}}],[\"disablebatching\",{\"1\":{\"109\":1}}],[\"discard\",{\"1\":{\"212\":1}}],[\"dir\",{\"1\":{\"339\":1}}],[\"directional\",{\"1\":{\"329\":1}}],[\"direct\",{\"1\":{\"226\":1}}],[\"directx\",{\"1\":{\"132\":1,\"228\":1,\"330\":1,\"333\":2}}],[\"directx9\",{\"1\":{\"126\":1}}],[\"dirty\",{\"1\":{\"141\":1,\"144\":1,\"203\":1,\"205\":12}}],[\"dirtying\",{\"1\":{\"139\":1}}],[\"diffuse\",{\"1\":{\"121\":1,\"200\":1,\"215\":1,\"329\":1}}],[\"different\",{\"1\":{\"112\":1,\"135\":1,\"213\":1}}],[\"dictionary\",{\"0\":{\"373\":1},\"1\":{\"70\":1,\"81\":1,\"145\":1,\"331\":1}}],[\"dictionary<itemso\",{\"1\":{\"56\":1}}],[\"dll\",{\"1\":{\"65\":1,\"175\":3,\"190\":1,\"196\":2,\"289\":1,\"291\":2,\"306\":1,\"371\":2}}],[\"driven\",{\"1\":{\"56\":1}}],[\"drawable\",{\"1\":{\"141\":1}}],[\"drawmeshinstancedindirect\",{\"1\":{\"118\":1}}],[\"drawmeshinstanced\",{\"1\":{\"112\":1,\"114\":1,\"116\":2,\"118\":1}}],[\"drawcall\",{\"0\":{\"106\":1,\"108\":1},\"1\":{\"106\":4,\"108\":8,\"109\":4,\"110\":3,\"111\":2,\"112\":1,\"113\":1,\"124\":2,\"126\":1,\"127\":4,\"135\":4,\"288\":4,\"317\":1,\"379\":1}}],[\"draw\",{\"0\":{\"43\":2,\"216\":1},\"1\":{\"41\":2,\"43\":4,\"52\":1,\"55\":2,\"58\":1,\"61\":1,\"64\":3,\"66\":1,\"69\":4,\"74\":2,\"83\":2,\"106\":2,\"108\":1,\"112\":3,\"113\":1,\"125\":2,\"130\":2,\"135\":3,\"178\":1,\"215\":1,\"216\":3}}],[\"drawio\",{\"1\":{\"33\":1}}],[\"date\",{\"1\":{\"363\":2,\"365\":1}}],[\"data\",{\"1\":{\"46\":1,\"56\":1,\"75\":1,\"120\":1,\"199\":1,\"217\":1,\"331\":1,\"335\":1}}],[\"danger\",{\"1\":{\"339\":1}}],[\"dalvik\",{\"1\":{\"203\":1,\"205\":9,\"206\":1,\"207\":1}}],[\"dalipan\",{\"1\":{\"30\":1}}],[\"dynamics\",{\"1\":{\"326\":1}}],[\"dynamic\",{\"0\":{\"99\":1},\"1\":{\"41\":1,\"43\":1,\"60\":1,\"64\":1,\"69\":1,\"74\":1,\"83\":1,\"98\":1,\"101\":1,\"108\":1,\"110\":2,\"168\":1,\"326\":2}}],[\"dosomething\",{\"1\":{\"285\":3}}],[\"doesn\",{\"1\":{\"283\":1}}],[\"double\",{\"0\":{\"230\":1}}],[\"dont\",{\"1\":{\"275\":1}}],[\"don\",{\"1\":{\"212\":1,\"275\":1,\"285\":1,\"404\":1}}],[\"docsbranch\",{\"1\":{\"364\":1}}],[\"docsdir\",{\"1\":{\"364\":1}}],[\"docsrepo\",{\"1\":{\"364\":1}}],[\"docs\",{\"1\":{\"185\":1,\"339\":6,\"346\":6,\"347\":3,\"350\":6,\"351\":3,\"360\":1,\"361\":1,\"394\":2}}],[\"documentation\",{\"1\":{\"27\":1,\"298\":1,\"394\":2}}],[\"doc\",{\"1\":{\"25\":1,\"34\":1}}],[\"dotpeek\",{\"1\":{\"284\":1}}],[\"dots$\",{\"1\":{\"79\":1}}],[\"dots\",{\"0\":{\"46\":1},\"1\":{\"75\":3,\"137\":3,\"317\":5,\"387\":1}}],[\"dota2\",{\"1\":{\"30\":2}}],[\"dotnet\",{\"1\":{\"24\":1,\"371\":1}}],[\"dotween\",{\"1\":{\"22\":1,\"322\":1}}],[\"dotweenpro\",{\"1\":{\"22\":1}}],[\"download\",{\"1\":{\"22\":1,\"30\":1,\"31\":1}}],[\"delete\",{\"1\":{\"390\":1,\"396\":2}}],[\"delegate\",{\"1\":{\"268\":1}}],[\"demo\",{\"1\":{\"360\":1,\"361\":2}}],[\"demers\",{\"1\":{\"275\":1,\"404\":1}}],[\"deep\",{\"1\":{\"332\":1}}],[\"deepseek\",{\"1\":{\"7\":2,\"30\":1}}],[\"decision\",{\"1\":{\"331\":2,\"332\":2}}],[\"decal\",{\"1\":{\"318\":1,\"319\":1}}],[\"decomposition\",{\"1\":{\"326\":1}}],[\"decompress\",{\"1\":{\"201\":1}}],[\"decoupling\",{\"1\":{\"44\":1,\"56\":1}}],[\"deploy\",{\"1\":{\"339\":1}}],[\"deployment\",{\"1\":{\"335\":1,\"336\":1}}],[\"dependent\",{\"1\":{\"301\":1}}],[\"depthtexturemode\",{\"1\":{\"214\":1}}],[\"depth\",{\"0\":{\"232\":1},\"1\":{\"24\":1,\"60\":1,\"212\":1,\"214\":1,\"215\":1,\"232\":1,\"339\":1}}],[\"detection\",{\"1\":{\"326\":2}}],[\"detected\",{\"1\":{\"293\":1}}],[\"details\",{\"1\":{\"366\":1}}],[\"detail\",{\"0\":{\"218\":1},\"1\":{\"55\":1,\"83\":1,\"218\":1,\"390\":1}}],[\"death\",{\"1\":{\"205\":2}}],[\"deadmemory\",{\"1\":{\"387\":1}}],[\"dead\",{\"1\":{\"132\":1}}],[\"dex\",{\"1\":{\"205\":2}}],[\"definitions\",{\"1\":{\"289\":1}}],[\"definition\",{\"0\":{\"198\":1},\"1\":{\"196\":1,\"291\":1,\"294\":1,\"295\":2,\"299\":1}}],[\"defineuserconfig\",{\"1\":{\"346\":2,\"355\":2,\"360\":2,\"367\":4}}],[\"defines\",{\"1\":{\"241\":1,\"301\":1,\"302\":3}}],[\"define\",{\"0\":{\"303\":1},\"1\":{\"118\":3,\"121\":1,\"122\":1,\"301\":6,\"302\":3,\"303\":1}}],[\"defaultcapacity\",{\"1\":{\"369\":1}}],[\"defaulttheme\",{\"1\":{\"346\":2,\"367\":4}}],[\"default\",{\"1\":{\"99\":1,\"101\":3,\"149\":1,\"151\":2,\"160\":2,\"212\":1,\"237\":1,\"335\":2,\"336\":2,\"346\":3,\"355\":1,\"357\":2,\"358\":1,\"359\":1,\"360\":1,\"362\":1,\"367\":4,\"369\":1}}],[\"deferred\",{\"1\":{\"50\":1,\"101\":2,\"110\":1,\"212\":1}}],[\"debug调试工具\",{\"1\":{\"383\":1}}],[\"debug\",{\"1\":{\"91\":1,\"112\":2,\"144\":2,\"151\":1,\"263\":3,\"279\":2,\"309\":2,\"338\":1,\"395\":1}}],[\"debugger区分这两者\",{\"1\":{\"60\":1}}],[\"debugger\",{\"0\":{\"149\":1,\"151\":1},\"1\":{\"41\":2,\"55\":1,\"112\":6,\"113\":1,\"135\":1,\"147\":3,\"148\":1,\"149\":1,\"151\":3,\"162\":3,\"215\":2,\"218\":1}}],[\"destory\",{\"1\":{\"404\":1}}],[\"destroyed\",{\"1\":{\"279\":2}}],[\"destroy\",{\"1\":{\"41\":1,\"42\":1,\"97\":1,\"189\":1,\"404\":2}}],[\"desktop\",{\"1\":{\"225\":1,\"228\":1,\"275\":1}}],[\"description\",{\"1\":{\"205\":1,\"365\":2}}],[\"desireddivisor\",{\"1\":{\"283\":5}}],[\"desirefx\",{\"1\":{\"30\":1}}],[\"designer\",{\"1\":{\"322\":1}}],[\"design\",{\"1\":{\"22\":1,\"331\":1}}],[\"devdependencies\",{\"1\":{\"355\":1}}],[\"device\",{\"1\":{\"151\":2}}],[\"development\",{\"1\":{\"100\":1,\"324\":1}}],[\"developers\",{\"1\":{\"18\":1}}],[\"dev\",{\"1\":{\"17\":2,\"205\":6,\"206\":1,\"350\":4}}],[\"游戏一开始到游戏死掉\",{\"1\":{\"404\":1}}],[\"游戏不能启动\",{\"1\":{\"395\":1}}],[\"游戏测试\",{\"1\":{\"323\":1}}],[\"游戏策划\",{\"1\":{\"323\":1}}],[\"游戏设计\",{\"1\":{\"323\":1}}],[\"游戏特效\",{\"0\":{\"319\":1}}],[\"游戏套件\",{\"1\":{\"313\":1}}],[\"游戏编程\",{\"1\":{\"312\":1}}],[\"游戏编程模式\",{\"1\":{\"21\":1,\"35\":1}}],[\"游戏\",{\"1\":{\"248\":1}}],[\"游戏中有某些类型的对象\",{\"1\":{\"279\":1}}],[\"游戏中优化图形渲染\",{\"1\":{\"215\":1}}],[\"游戏中的物体\",{\"1\":{\"45\":1}}],[\"游戏中的技能系统设计\",{\"1\":{\"30\":1}}],[\"游戏核心架构\",{\"1\":{\"85\":1}}],[\"游戏客户端程序\",{\"1\":{\"77\":1}}],[\"游戏配置数据\",{\"1\":{\"45\":1,\"75\":1}}],[\"游戏逻辑或太多物理元素\",{\"1\":{\"134\":1}}],[\"游戏逻辑模块\",{\"1\":{\"85\":1}}],[\"游戏逻辑更新\",{\"1\":{\"79\":1}}],[\"游戏逻辑的时序控制\",{\"1\":{\"57\":1}}],[\"游戏逻辑\",{\"1\":{\"41\":2,\"131\":1}}],[\"游戏学习\",{\"1\":{\"30\":1}}],[\"游戏类\",{\"1\":{\"30\":1}}],[\"游戏ui设计\",{\"1\":{\"30\":1}}],[\"游戏引擎\",{\"0\":{\"327\":1},\"1\":{\"29\":1}}],[\"游戏开发文档\",{\"1\":{\"324\":1}}],[\"游戏开发前端路线图\",{\"0\":{\"324\":1}}],[\"游戏开发路线图\",{\"1\":{\"310\":1}}],[\"游戏开发从零单排\",{\"1\":{\"22\":1}}],[\"游戏开发\",{\"0\":{\"21\":1}}],[\"纯逻辑\",{\"1\":{\"46\":1}}],[\"纯数据\",{\"1\":{\"46\":1}}],[\"纯数据层\",{\"1\":{\"44\":1}}],[\"纯\",{\"1\":{\"20\":1}}],[\"论坛\",{\"1\":{\"20\":1}}],[\"英文原版\",{\"1\":{\"30\":1}}],[\"英文原站\",{\"1\":{\"20\":1}}],[\"英文是\",{\"1\":{\"0\":1}}],[\"在做加载的时候\",{\"1\":{\"402\":1}}],[\"在刚开始游戏的时候就会加载进内存中\",{\"1\":{\"395\":1}}],[\"在打进包的时候会做一个红黑树\",{\"1\":{\"395\":1}}],[\"在反序列化的时候\",{\"1\":{\"394\":1}}],[\"在导入声音的时候有一个设置\",{\"1\":{\"392\":1}}],[\"在导航栏项中设置\",{\"1\":{\"359\":1}}],[\"在游戏项目中\",{\"1\":{\"383\":1}}],[\"在后面的七分时间里\",{\"1\":{\"382\":1}}],[\"在后台线程\",{\"1\":{\"57\":1}}],[\"在后台运行的任务时\",{\"1\":{\"49\":1}}],[\"在软件系统的整个生命周期中\",{\"1\":{\"382\":1}}],[\"在制作一个图元\",{\"1\":{\"379\":1}}],[\"在程序运行之前就将代码编译成本地机器码\",{\"1\":{\"371\":1}}],[\"在程序集定义中定义的符号仅在该定义创建的程序集中的脚本的作用域内\",{\"1\":{\"302\":1}}],[\"在页面的\",{\"1\":{\"361\":1}}],[\"在侧边栏项中设置\",{\"1\":{\"359\":1}}],[\"在配置中\",{\"1\":{\"359\":1}}],[\"在相关页面的\",{\"1\":{\"358\":1}}],[\"在相关平台的\",{\"1\":{\"226\":1}}],[\"在已有项目中使用该主题\",{\"1\":{\"355\":1}}],[\"在项目已经创建\",{\"1\":{\"348\":1}}],[\"在项目的\",{\"1\":{\"275\":1}}],[\"在创建程序集的时候\",{\"1\":{\"307\":1}}],[\"在创作网格时使用您的资产生成工具\",{\"1\":{\"111\":1}}],[\"在比较版本时\",{\"1\":{\"304\":1}}],[\"在确定约束是否已满足时\",{\"1\":{\"301\":1}}],[\"在确保不再需要时调用\",{\"1\":{\"65\":1}}],[\"在该文件夹中创建一个程序集定义引用资产\",{\"1\":{\"295\":1}}],[\"在该文件夹中创建一个程序集定义资产\",{\"1\":{\"294\":1}}],[\"在默认设置中\",{\"1\":{\"292\":1}}],[\"在你的资源生成工具中创作网格时进行合并\",{\"1\":{\"288\":1}}],[\"在网格彼此靠近且相对位置不变的情况下\",{\"1\":{\"288\":1}}],[\"在网格彼此靠近且不相对移动的情况下\",{\"1\":{\"111\":1}}],[\"在需要访问内存时\",{\"1\":{\"387\":1}}],[\"在需要时填充它\",{\"1\":{\"285\":1}}],[\"在需要避免\",{\"1\":{\"63\":1}}],[\"在为\",{\"1\":{\"284\":1}}],[\"在为独立和主机构建目标构建时\",{\"1\":{\"254\":1}}],[\"在很多情况下\",{\"1\":{\"279\":1}}],[\"在短时间后释放了它包含的许多对象\",{\"1\":{\"278\":1}}],[\"在一分钟内\",{\"1\":{\"278\":1}}],[\"在一个包含\",{\"1\":{\"297\":1}}],[\"在一个控件上使用\",{\"1\":{\"168\":1}}],[\"在一个\",{\"1\":{\"163\":1}}],[\"在一个大型项目中\",{\"1\":{\"75\":1}}],[\"在标记阶段\",{\"1\":{\"275\":1}}],[\"在标准\",{\"1\":{\"135\":1}}],[\"在特定帧的托管堆上分配的字节数\",{\"1\":{\"274\":1}}],[\"在紧凑内部循环中\",{\"1\":{\"273\":1}}],[\"在紧凑循环中运行较小的方法时\",{\"1\":{\"271\":1}}],[\"在有些项目中\",{\"1\":{\"272\":1}}],[\"在有关内置字符串\",{\"1\":{\"271\":1}}],[\"在源代码\",{\"1\":{\"271\":1}}],[\"在循环运行期间不变化\",{\"1\":{\"271\":1}}],[\"在具有大量角色的场景中\",{\"1\":{\"270\":1}}],[\"在具有多个核心的设备上\",{\"1\":{\"163\":1}}],[\"在开发中最好仅运行那些能维持游戏世界可信度的行为\",{\"1\":{\"270\":1}}],[\"在开发期间使用此默认设置会增加你的构建时间\",{\"1\":{\"190\":1}}],[\"在实际制作中的使用及未来计划\",{\"1\":{\"317\":1}}],[\"在实际开发环境中\",{\"1\":{\"270\":1}}],[\"在实例上调用方法实际上是调用引擎代码\",{\"1\":{\"259\":1}}],[\"在每次创建请求时都会生成一个全新的线程\",{\"1\":{\"269\":1}}],[\"在每个\",{\"1\":{\"213\":1}}],[\"在每个实例化绘制调用中\",{\"1\":{\"120\":1}}],[\"在更新管理器中使用\",{\"0\":{\"268\":1}}],[\"在任意其余情况下\",{\"1\":{\"265\":1}}],[\"在任何给定场景中\",{\"1\":{\"112\":1,\"129\":1}}],[\"在三维\",{\"1\":{\"265\":1}}],[\"在提高性能的同时可能会损害代码整洁性或可维护性\",{\"1\":{\"264\":1}}],[\"在代码中消灭\",{\"1\":{\"262\":1}}],[\"在单个帧期间\",{\"1\":{\"268\":1}}],[\"在单个绘制调用中渲染组合的网格\",{\"1\":{\"106\":1,\"111\":1}}],[\"在单例对象的访问器对上述规则来说是个例外\",{\"1\":{\"262\":1}}],[\"在单次运行过程中是不变的\",{\"1\":{\"257\":1}}],[\"在理想的情况下\",{\"1\":{\"254\":1}}],[\"在本例中\",{\"1\":{\"280\":1}}],[\"在本示例中\",{\"1\":{\"253\":1}}],[\"在本指南开头的\",{\"1\":{\"161\":1}}],[\"在与字符串相关的代码中经常出现的核心性能问题之一是无意间使用了缓慢的默认字符串\",{\"1\":{\"251\":1}}],[\"在启用或禁用\",{\"1\":{\"267\":1}}],[\"在启用阴影选项的情况下意外地将网格渲染器添加到场景会为渲染循环添加完整的阴影\",{\"1\":{\"248\":1}}],[\"在启动时通过\",{\"1\":{\"168\":1}}],[\"在给定压缩级别中使用的具体位数在\",{\"1\":{\"248\":1}}],[\"在给定文本对象上禁用自动调整大小\",{\"1\":{\"169\":1}}],[\"在用于最终项目之前\",{\"1\":{\"248\":1}}],[\"在非动画模型上禁用骨架可以避免自动添加\",{\"1\":{\"248\":1}}],[\"在非角色模型上禁用骨架\",{\"1\":{\"248\":1}}],[\"在低端移动设备\",{\"1\":{\"246\":1}}],[\"在预处理步骤之前运行解析\",{\"1\":{\"241\":1}}],[\"在适当的情况下\",{\"1\":{\"236\":1}}],[\"在帧结束时\",{\"1\":{\"234\":1}}],[\"在分辨率为\",{\"1\":{\"233\":1}}],[\"在分析时查看本机调用堆栈中的\",{\"1\":{\"228\":1}}],[\"在分析时调查渲染系统时\",{\"1\":{\"228\":1}}],[\"在不降低性能的情况下支持\",{\"1\":{\"233\":1}}],[\"在不再需要时会将原生内存返回给操作系统\",{\"1\":{\"200\":1}}],[\"在移动平台项目中\",{\"1\":{\"249\":1}}],[\"在移动\",{\"1\":{\"232\":1}}],[\"在移动设备和游戏机上\",{\"1\":{\"219\":1}}],[\"在移动设备基于瓦片\",{\"1\":{\"212\":1}}],[\"在移动设备上\",{\"1\":{\"136\":1,\"142\":1,\"212\":2,\"216\":1,\"236\":1}}],[\"在等待翻转时\",{\"1\":{\"230\":1}}],[\"在同时加载多个纹理时\",{\"1\":{\"222\":1}}],[\"在同一个canvas里\",{\"1\":{\"379\":1}}],[\"在同一项目的发布版本中\",{\"1\":{\"100\":1}}],[\"在同一帧动态合并\",{\"1\":{\"64\":1,\"69\":1}}],[\"在唤醒所有场景\",{\"1\":{\"222\":1}}],[\"在纹理加载完成后立即将其直接上传到\",{\"1\":{\"222\":1}}],[\"在较新的移动设备上\",{\"1\":{\"221\":1}}],[\"在动画模型上启用\",{\"1\":{\"248\":1}}],[\"在动画层中使用\",{\"1\":{\"218\":1}}],[\"在动画器\",{\"1\":{\"218\":1}}],[\"在优化期间\",{\"1\":{\"216\":1}}],[\"在空间不足时创建另一个光照贴图\",{\"1\":{\"216\":1}}],[\"在空项目中剥离\",{\"1\":{\"194\":1}}],[\"在生成由静态部分组成的程序化关卡后\",{\"1\":{\"216\":1}}],[\"在检查器\",{\"1\":{\"216\":1}}],[\"在最佳情况下\",{\"1\":{\"215\":1,\"218\":1}}],[\"在场景中尽可能少地使用纹理\",{\"1\":{\"216\":1}}],[\"在场景视图中查看过度绘制\",{\"1\":{\"215\":1}}],[\"在场景卸载后调用\",{\"1\":{\"200\":1}}],[\"在时间轴视图中显示主线程\",{\"1\":{\"213\":1}}],[\"在加载场景时需要将其从磁盘加载到\",{\"1\":{\"213\":1}}],[\"在逻辑缓冲区中加载或存储数据会占用大量的系统时间和电池电量\",{\"1\":{\"212\":1}}],[\"在基于瓦片的架构上\",{\"1\":{\"212\":1}}],[\"在基于瓦片的\",{\"1\":{\"212\":1}}],[\"在两个进程之间共享的页将贡献其大小的一半给每个进程的\",{\"1\":{\"205\":1}}],[\"在两个不同的级别上工作\",{\"1\":{\"191\":1}}],[\"在应用程序中测量内存的不同时间点\",{\"1\":{\"204\":1}}],[\"在继续阅读之前\",{\"1\":{\"202\":1}}],[\"在早期版本中\",{\"1\":{\"193\":1}}],[\"在退出之前不会清理其内存\",{\"1\":{\"189\":1}}],[\"在没有办法通过现有类或者编写自己的组件版本达成目的的情况下\",{\"1\":{\"175\":1}}],[\"在设计时或初始化时分配其\",{\"1\":{\"174\":1}}],[\"在设计一个大型游戏\",{\"1\":{\"60\":1}}],[\"在显示或隐藏\",{\"1\":{\"173\":1}}],[\"在显示时通常会导致不良的帧速率卡顿\",{\"1\":{\"168\":1}}],[\"在保留使用\",{\"1\":{\"170\":1}}],[\"在保证内容的原意的基础上\",{\"1\":{\"14\":1}}],[\"在填充率问题之后\",{\"1\":{\"170\":1}}],[\"在引导步骤中加载基础\",{\"1\":{\"169\":1}}],[\"在使用\",{\"1\":{\"169\":1,\"233\":1}}],[\"在处理具有许多字体的项目时\",{\"1\":{\"169\":1}}],[\"在处理数据时缓存命中率极高\",{\"1\":{\"75\":1}}],[\"在搜索射线投射过滤器时都会遍历\",{\"1\":{\"166\":1}}],[\"在除最微不足道的情况外\",{\"1\":{\"163\":1}}],[\"在像素落在文本字形内的情况下\",{\"1\":{\"159\":1}}],[\"在渲染纹理中\",{\"1\":{\"158\":1}}],[\"在渲染循环期间检测到新材质时\",{\"1\":{\"112\":1}}],[\"在上方的会话中启用了\",{\"1\":{\"275\":1}}],[\"在上面的示例中将占用\",{\"1\":{\"238\":1}}],[\"在上面的屏幕截图中\",{\"1\":{\"151\":1}}],[\"在上图中\",{\"1\":{\"97\":1}}],[\"在调整\",{\"1\":{\"149\":1}}],[\"在组或绘制调用的详细信息中\",{\"1\":{\"149\":1}}],[\"在许多情况下\",{\"1\":{\"148\":1}}],[\"在前面的屏幕截图中\",{\"1\":{\"148\":1}}],[\"在尝试优化\",{\"1\":{\"139\":1}}],[\"在编辑器下是你一打开\",{\"1\":{\"389\":1}}],[\"在编辑器中执行\",{\"1\":{\"274\":1}}],[\"在编辑器中使用\",{\"1\":{\"137\":1}}],[\"在编写自己的\",{\"1\":{\"136\":1}}],[\"在过去的渲染架构中\",{\"1\":{\"127\":1}}],[\"在缓冲区中声明属性\",{\"1\":{\"118\":2}}],[\"在其任何组成可绘制组件发生变化时都会重新批处理\",{\"1\":{\"163\":1}}],[\"在其\",{\"1\":{\"116\":1}}],[\"在下面的示例中\",{\"1\":{\"112\":1,\"118\":1}}],[\"在着色器的\",{\"1\":{\"112\":1}}],[\"在您的应用程序中使用新的着色器源文件而不是\",{\"1\":{\"112\":1}}],[\"在您的项目中\",{\"1\":{\"85\":1}}],[\"在某些\",{\"1\":{\"205\":1}}],[\"在某些内部系统中使用块分配器\",{\"1\":{\"200\":1}}],[\"在某些情况下\",{\"1\":{\"179\":1,\"254\":1}}],[\"在某些版本的\",{\"1\":{\"151\":1}}],[\"在某些边缘情况下这不成立\",{\"1\":{\"141\":1}}],[\"在某些场景中\",{\"1\":{\"135\":1}}],[\"在某些罕见情况下\",{\"1\":{\"112\":1}}],[\"在某些旧版\",{\"1\":{\"42\":1}}],[\"在资源的\",{\"1\":{\"112\":1}}],[\"在属性\",{\"1\":{\"112\":1}}],[\"在当前部分显示所有可用属性\",{\"1\":{\"112\":1}}],[\"在以下屏幕截图中\",{\"1\":{\"151\":1}}],[\"在以下情况下\",{\"1\":{\"110\":1}}],[\"在以下主线程使用报告中\",{\"1\":{\"102\":1}}],[\"在运行时禁用垃圾回收\",{\"1\":{\"276\":1}}],[\"在运行时\",{\"1\":{\"238\":1}}],[\"在运行时会对原生内存和托管内存产生影响\",{\"1\":{\"189\":1}}],[\"在运行时动态生成的几何体\",{\"1\":{\"110\":1}}],[\"在运行时不会使用任何\",{\"1\":{\"109\":1}}],[\"在密集的森林环境中将树木标记为静态可能会对内存产生严重影响\",{\"1\":{\"109\":1}}],[\"在构建脚本中获取程序集信息\",{\"0\":{\"309\":1}}],[\"在构建项目时总是会重新压缩音频\",{\"1\":{\"249\":1}}],[\"在构建中包含哪些着色器\",{\"1\":{\"237\":1}}],[\"在构建期间会自动剥离代码\",{\"1\":{\"191\":1}}],[\"在构建应用程序之前存在于场景中\",{\"1\":{\"109\":1}}],[\"在构建时解析\",{\"1\":{\"254\":1}}],[\"在构建时将所有标记为静态的网格组合成一个大型网格\",{\"1\":{\"216\":1}}],[\"在构建时将其\",{\"1\":{\"43\":1}}],[\"在构建时启用和禁用\",{\"1\":{\"112\":1}}],[\"在构建时批处理您的\",{\"1\":{\"109\":1}}],[\"在构建时自动生成依赖关系图\",{\"1\":{\"76\":1}}],[\"在屏幕上绘制所需的所有信息\",{\"1\":{\"106\":1}}],[\"在主题选项设置中\",{\"1\":{\"358\":1}}],[\"在主题选项\",{\"1\":{\"357\":1}}],[\"在主机或现代\",{\"1\":{\"110\":1}}],[\"在主要分配器之间共享的桶分配器\",{\"1\":{\"104\":1}}],[\"在主线程更新\",{\"1\":{\"57\":1}}],[\"在主线程上继续执行\",{\"1\":{\"57\":1}}],[\"在第二个\",{\"1\":{\"163\":1}}],[\"在第二个示例中\",{\"1\":{\"102\":1,\"271\":1}}],[\"在第一次\",{\"1\":{\"62\":1,\"67\":1}}],[\"在这个\",{\"1\":{\"390\":1}}],[\"在这些情况下\",{\"1\":{\"158\":1}}],[\"在这里\",{\"1\":{\"112\":1}}],[\"在这两种情况下\",{\"1\":{\"103\":1}}],[\"在这\",{\"1\":{\"99\":1}}],[\"在这种情况下\",{\"1\":{\"99\":1,\"132\":1,\"155\":1,\"206\":1,\"279\":1}}],[\"在此模式下使用\",{\"1\":{\"276\":1}}],[\"在此测试中\",{\"1\":{\"205\":1}}],[\"在此之下还有其他几个方法\",{\"1\":{\"150\":1}}],[\"在此表中\",{\"1\":{\"131\":1}}],[\"在此上下文中\",{\"1\":{\"116\":1}}],[\"在此示例使用报告中\",{\"1\":{\"103\":1}}],[\"在此示例中\",{\"1\":{\"99\":1,\"284\":1,\"306\":1}}],[\"在此设置中\",{\"1\":{\"100\":1}}],[\"在此基础上\",{\"1\":{\"71\":1}}],[\"在托管堆上分配它们\",{\"1\":{\"280\":1}}],[\"在托管堆上分配的内存被称为\",{\"1\":{\"96\":1}}],[\"在托管堆扩展时不会定期释放分配给托管堆的内存\",{\"1\":{\"97\":1}}],[\"在大量经过压缩的\",{\"1\":{\"269\":1}}],[\"在大多数基准测试中\",{\"1\":{\"254\":1}}],[\"在大多数现代芯片组上可用\",{\"1\":{\"221\":1}}],[\"在大多数其他情况下\",{\"1\":{\"163\":1}}],[\"在大多数平台上\",{\"1\":{\"97\":2,\"118\":1}}],[\"在大多数情况下\",{\"1\":{\"96\":2}}],[\"在大型\",{\"1\":{\"75\":1}}],[\"在片元着色器中避免不必要的计算\",{\"1\":{\"90\":1}}],[\"在多个后台线程执行繁重操作\",{\"1\":{\"269\":1}}],[\"在多个进程之间共享内存页\",{\"1\":{\"205\":1}}],[\"在多人联机游戏中\",{\"1\":{\"87\":1}}],[\"在多线程中访问它们会产生\",{\"1\":{\"60\":1}}],[\"在什么情况下应该使用它\",{\"1\":{\"80\":1}}],[\"在热代码中会导致严重的\",{\"1\":{\"77\":1}}],[\"在执行剔除\",{\"1\":{\"74\":1}}],[\"在闲置对象过多时如何优化\",{\"1\":{\"69\":1}}],[\"在unity中\",{\"1\":{\"68\":1}}],[\"在函数参数传递时有何不同\",{\"1\":{\"68\":1}}],[\"在所有\",{\"1\":{\"67\":1}}],[\"在固定的物理时间步长调用\",{\"1\":{\"67\":1}}],[\"在固定的时间间隔调用\",{\"1\":{\"62\":1}}],[\"在合适场景下\",{\"1\":{\"63\":1,\"68\":1}}],[\"在脚本第一次启用后\",{\"1\":{\"62\":1,\"67\":1}}],[\"在ci\",{\"1\":{\"60\":1}}],[\"在进行分析时\",{\"1\":{\"210\":1}}],[\"在进行\",{\"1\":{\"60\":1}}],[\"在性能极度敏感的代码中\",{\"1\":{\"60\":1}}],[\"在目标中端机上运行复杂场景时\",{\"1\":{\"60\":1}}],[\"在内部\",{\"1\":{\"267\":1}}],[\"在内部渲染循环中\",{\"1\":{\"126\":1}}],[\"在内存中\",{\"1\":{\"75\":1}}],[\"在内存中是分散的\",{\"1\":{\"46\":1}}],[\"在内置管线中\",{\"1\":{\"58\":1}}],[\"在转换为\",{\"1\":{\"57\":1}}],[\"在架构中\",{\"1\":{\"57\":1}}],[\"在写游戏逻辑时很方便\",{\"1\":{\"57\":1}}],[\"在现代台式机上运行\",{\"1\":{\"271\":1}}],[\"在现代消费级硬件上\",{\"1\":{\"110\":1}}],[\"在现代\",{\"1\":{\"43\":1}}],[\"在\",{\"0\":{\"184\":1},\"1\":{\"41\":1,\"42\":1,\"47\":2,\"50\":1,\"55\":2,\"56\":1,\"58\":1,\"59\":2,\"60\":3,\"63\":2,\"68\":1,\"70\":1,\"74\":1,\"81\":1,\"90\":1,\"96\":1,\"104\":1,\"106\":1,\"108\":1,\"109\":3,\"110\":1,\"111\":1,\"112\":12,\"118\":3,\"119\":1,\"125\":1,\"127\":2,\"130\":1,\"134\":1,\"135\":2,\"137\":1,\"142\":1,\"144\":1,\"148\":2,\"150\":1,\"151\":1,\"163\":1,\"165\":1,\"168\":1,\"169\":2,\"170\":1,\"178\":1,\"184\":1,\"187\":1,\"190\":1,\"192\":1,\"193\":1,\"199\":2,\"200\":1,\"201\":2,\"204\":1,\"205\":3,\"210\":1,\"212\":2,\"213\":1,\"215\":1,\"217\":1,\"220\":2,\"221\":5,\"225\":1,\"234\":2,\"247\":1,\"250\":1,\"258\":1,\"265\":1,\"274\":1,\"275\":1,\"277\":1,\"288\":1,\"294\":1,\"295\":2,\"296\":1,\"299\":2,\"300\":4,\"301\":3,\"302\":2,\"306\":2,\"340\":1,\"351\":1,\"355\":2,\"359\":2,\"387\":1,\"389\":1,\"390\":1,\"391\":1}}],[\"在准备数据给\",{\"1\":{\"41\":1}}],[\"在线\",{\"1\":{\"30\":1,\"35\":1}}],[\"在线工具箱\",{\"1\":{\"30\":1}}],[\"在线混合\",{\"1\":{\"20\":1}}],[\"echo\",{\"1\":{\"346\":1}}],[\"ecosystem\",{\"1\":{\"335\":2,\"336\":3}}],[\"ecs模式的设计思想\",{\"1\":{\"93\":1}}],[\"ecs\",{\"0\":{\"46\":1},\"1\":{\"46\":3,\"66\":1,\"75\":4,\"85\":2,\"317\":2,\"387\":1}}],[\"equation\",{\"1\":{\"329\":1}}],[\"equals\",{\"1\":{\"251\":2,\"284\":3}}],[\"epa\",{\"1\":{\"326\":2}}],[\"euler\",{\"1\":{\"325\":1}}],[\"europe\",{\"1\":{\"245\":1}}],[\"effect\",{\"1\":{\"319\":2}}],[\"effects\",{\"1\":{\"214\":1}}],[\"emptyarray\",{\"1\":{\"369\":1}}],[\"empty\",{\"1\":{\"236\":1}}],[\"es\",{\"1\":{\"231\":1,\"330\":2}}],[\"eglsurface\",{\"1\":{\"234\":1}}],[\"eglwindowsurface\",{\"1\":{\"231\":1}}],[\"egl\",{\"1\":{\"205\":4,\"206\":1,\"233\":1}}],[\"each\",{\"1\":{\"145\":1}}],[\"easy\",{\"1\":{\"22\":1,\"185\":1,\"312\":1}}],[\"else\",{\"1\":{\"241\":1,\"279\":1,\"369\":1}}],[\"elements\",{\"1\":{\"369\":1}}],[\"element\",{\"1\":{\"144\":3,\"170\":1,\"181\":6}}],[\"ellanjiang\",{\"1\":{\"22\":3}}],[\"e\",{\"1\":{\"144\":4,\"145\":8,\"280\":1,\"343\":2}}],[\"error\",{\"1\":{\"91\":1,\"340\":1}}],[\"edge\",{\"1\":{\"33\":1}}],[\"editlink\",{\"1\":{\"364\":1}}],[\"edit\",{\"1\":{\"109\":1,\"110\":1,\"119\":1,\"151\":1,\"190\":1,\"225\":1,\"232\":1,\"234\":1,\"237\":1,\"244\":1,\"275\":2}}],[\"editors\",{\"1\":{\"338\":1}}],[\"editor\",{\"0\":{\"297\":1},\"1\":{\"30\":1,\"34\":1,\"98\":3,\"102\":1,\"103\":1,\"104\":18,\"109\":5,\"112\":2,\"116\":1,\"141\":1,\"149\":2,\"162\":1,\"199\":1,\"200\":1,\"238\":1,\"246\":1,\"289\":5,\"290\":1,\"291\":2,\"297\":8,\"306\":2,\"307\":14,\"309\":1,\"318\":1,\"319\":1,\"322\":1,\"389\":2}}],[\"edition\",{\"1\":{\"20\":2,\"30\":2}}],[\"even\",{\"1\":{\"369\":1}}],[\"events\",{\"1\":{\"170\":1}}],[\"eventsystem\",{\"1\":{\"22\":1}}],[\"event和delegate的区别\",{\"1\":{\"93\":1}}],[\"event\",{\"1\":{\"44\":3,\"45\":1,\"56\":1,\"60\":3,\"75\":6,\"168\":1,\"174\":1,\"180\":5}}],[\"every\",{\"1\":{\"275\":2,\"280\":2,\"281\":1,\"282\":2,\"283\":1,\"285\":1}}],[\"everything\",{\"1\":{\"33\":1}}],[\"etc\",{\"1\":{\"221\":1}}],[\"etc2\",{\"1\":{\"221\":5}}],[\"et\",{\"1\":{\"22\":1}}],[\"exl导为二进制文件\",{\"1\":{\"383\":1}}],[\"export\",{\"1\":{\"335\":1,\"336\":1,\"346\":1,\"355\":1,\"357\":2,\"358\":1,\"359\":1,\"360\":2,\"361\":1,\"362\":1,\"367\":2}}],[\"expanding\",{\"1\":{\"326\":1}}],[\"experimental\",{\"1\":{\"304\":3}}],[\"expert\",{\"1\":{\"60\":1}}],[\"expressions\",{\"1\":{\"302\":1}}],[\"expression\",{\"1\":{\"302\":2}}],[\"example\",{\"1\":{\"280\":5,\"281\":2,\"282\":2,\"283\":2,\"285\":6}}],[\"exampleobjectpool\",{\"1\":{\"279\":1}}],[\"examplescript\",{\"1\":{\"280\":5,\"281\":2}}],[\"examples\",{\"1\":{\"22\":3}}],[\"executing\",{\"1\":{\"145\":2}}],[\"excerptlength\",{\"1\":{\"358\":1}}],[\"excerpt\",{\"1\":{\"358\":1}}],[\"exceptionresource\",{\"1\":{\"369\":1}}],[\"exceptionargument\",{\"1\":{\"369\":1}}],[\"exception\",{\"1\":{\"144\":2}}],[\"excel\",{\"1\":{\"22\":1}}],[\"extendable\",{\"1\":{\"335\":1}}],[\"extensions\",{\"1\":{\"22\":1}}],[\"extra\",{\"1\":{\"248\":1,\"335\":1}}],[\"extrapolate\",{\"1\":{\"74\":1}}],[\"exit\",{\"1\":{\"62\":2,\"67\":2,\"70\":2}}],[\"encountering\",{\"1\":{\"369\":1}}],[\"encodetopng\",{\"1\":{\"22\":1}}],[\"ensurecapacity\",{\"1\":{\"369\":2}}],[\"ensures\",{\"1\":{\"369\":1}}],[\"env\",{\"1\":{\"339\":1}}],[\"environment\",{\"1\":{\"212\":2}}],[\"energy\",{\"1\":{\"333\":1}}],[\"enum\",{\"1\":{\"144\":1}}],[\"enumerator\",{\"1\":{\"60\":2,\"189\":1}}],[\"endcontractblock\",{\"1\":{\"369\":2}}],[\"endcg\",{\"1\":{\"121\":1,\"122\":1,\"160\":1}}],[\"endswith\",{\"1\":{\"252\":5,\"271\":1}}],[\"endsample\",{\"1\":{\"144\":5}}],[\"endif\",{\"1\":{\"160\":1,\"241\":1,\"263\":1}}],[\"end\",{\"1\":{\"118\":2,\"121\":1,\"122\":1,\"136\":1,\"217\":2,\"236\":2}}],[\"enable\",{\"1\":{\"115\":2,\"263\":1}}],[\"enablesrp\",{\"1\":{\"112\":1}}],[\"enabled\",{\"1\":{\"62\":1,\"121\":1,\"246\":1,\"247\":3,\"248\":2}}],[\"entail\",{\"1\":{\"145\":1}}],[\"enter\",{\"1\":{\"70\":2}}],[\"entities\",{\"1\":{\"46\":1}}],[\"entity\",{\"1\":{\"46\":2,\"75\":1,\"85\":1}}],[\"enhanced\",{\"1\":{\"33\":1}}],[\"engine\",{\"0\":{\"327\":1},\"1\":{\"23\":1,\"30\":2,\"31\":1,\"190\":1,\"193\":3,\"291\":1,\"327\":1}}],[\"en\",{\"1\":{\"0\":1}}],[\"0+\",{\"1\":{\"343\":1}}],[\"0a7\",{\"1\":{\"302\":1}}],[\"04mb\",{\"1\":{\"238\":2}}],[\"04s\",{\"1\":{\"60\":1}}],[\"07\",{\"1\":{\"233\":1}}],[\"05\",{\"1\":{\"217\":1}}],[\"0f11\",{\"1\":{\"304\":1}}],[\"0f\",{\"1\":{\"123\":6}}],[\"024\",{\"1\":{\"100\":1}}],[\"02s\",{\"1\":{\"60\":4}}],[\"03s\",{\"1\":{\"60\":2}}],[\"01s\",{\"1\":{\"60\":1}}],[\"06s\",{\"1\":{\"60\":1}}],[\"0\",{\"1\":{\"20\":1,\"60\":9,\"99\":6,\"100\":3,\"101\":9,\"102\":12,\"103\":3,\"109\":1,\"114\":1,\"118\":1,\"121\":7,\"123\":3,\"130\":1,\"134\":1,\"144\":6,\"155\":1,\"160\":1,\"163\":1,\"168\":1,\"172\":5,\"181\":1,\"201\":1,\"205\":69,\"206\":1,\"217\":3,\"238\":10,\"252\":5,\"271\":8,\"272\":6,\"275\":4,\"278\":1,\"279\":2,\"280\":2,\"281\":2,\"285\":6,\"303\":10,\"305\":1,\"312\":2,\"339\":1,\"355\":2,\"358\":1,\"367\":2,\"369\":6}}],[\"000\",{\"1\":{\"271\":1}}],[\"00\",{\"1\":{\"19\":1}}],[\"rc\",{\"1\":{\"355\":1}}],[\"rcmd\",{\"1\":{\"224\":1,\"225\":1,\"227\":2}}],[\"rpg\",{\"1\":{\"313\":1}}],[\"rr\",{\"1\":{\"304\":1}}],[\"rrznn\",{\"1\":{\"304\":1}}],[\"rrggbbaa\",{\"1\":{\"261\":1}}],[\"rss\",{\"1\":{\"205\":4,\"388\":3}}],[\"rgb\",{\"1\":{\"121\":2}}],[\"rts\",{\"1\":{\"87\":1}}],[\"rigging\",{\"1\":{\"322\":1}}],[\"rig\",{\"1\":{\"218\":1}}],[\"rigidbody\",{\"1\":{\"60\":3,\"62\":1,\"67\":1,\"74\":2}}],[\"ringbuffer\",{\"1\":{\"222\":1}}],[\"ring\",{\"1\":{\"200\":1}}],[\"richard\",{\"1\":{\"254\":1}}],[\"richwhitehouse\",{\"1\":{\"30\":1}}],[\"richtext关于字符串截取的bug\",{\"1\":{\"19\":1}}],[\"r\",{\"1\":{\"52\":1,\"123\":2,\"396\":1}}],[\"ruby\",{\"1\":{\"313\":1}}],[\"runs\",{\"1\":{\"339\":1}}],[\"run\",{\"1\":{\"49\":2,\"57\":2,\"60\":1,\"151\":1,\"339\":2}}],[\"runtime\",{\"1\":{\"47\":1,\"109\":2,\"120\":1,\"218\":1,\"307\":1,\"308\":1,\"371\":1,\"389\":3,\"390\":2,\"399\":2}}],[\"rust开发的应用\",{\"1\":{\"29\":1}}],[\"rust\",{\"0\":{\"29\":1},\"1\":{\"29\":2,\"328\":1}}],[\"rawimage\",{\"1\":{\"379\":1}}],[\"rawset方法是干什么用的\",{\"1\":{\"93\":1}}],[\"rasterization\",{\"1\":{\"329\":1}}],[\"rasterized\",{\"1\":{\"142\":1}}],[\"ray\",{\"1\":{\"329\":1,\"333\":3}}],[\"raycastall\",{\"1\":{\"258\":1,\"286\":1}}],[\"raycaster\",{\"0\":{\"179\":1},\"1\":{\"164\":1,\"165\":1,\"166\":5,\"179\":9,\"180\":2}}],[\"raycastnonalloc\",{\"1\":{\"41\":1,\"55\":1,\"258\":1,\"286\":1}}],[\"raycast\",{\"1\":{\"41\":1,\"55\":1,\"166\":17,\"179\":2}}],[\"raising\",{\"1\":{\"177\":1,\"185\":1}}],[\"raise\",{\"1\":{\"45\":1}}],[\"rate\",{\"1\":{\"139\":1}}],[\"randomlist\",{\"1\":{\"281\":3}}],[\"randomization\",{\"1\":{\"205\":1}}],[\"random\",{\"1\":{\"123\":3,\"281\":3,\"331\":1}}],[\"range\",{\"1\":{\"121\":2,\"123\":3}}],[\"ram\",{\"1\":{\"97\":1,\"203\":1,\"205\":18,\"213\":2,\"387\":3}}],[\"race\",{\"1\":{\"60\":2}}],[\"reinforcements\",{\"1\":{\"332\":1}}],[\"revision\",{\"1\":{\"304\":3}}],[\"review\",{\"0\":{\"53\":1},\"1\":{\"59\":2,\"60\":1,\"77\":2}}],[\"removeat\",{\"1\":{\"369\":1}}],[\"remove\",{\"1\":{\"336\":1,\"369\":2}}],[\"removed\",{\"1\":{\"280\":1}}],[\"removing\",{\"1\":{\"114\":1}}],[\"retrace\",{\"1\":{\"230\":1}}],[\"returns\",{\"1\":{\"285\":1}}],[\"returnobjecttopool\",{\"1\":{\"279\":1}}],[\"return\",{\"1\":{\"41\":1,\"49\":1,\"57\":1,\"60\":1,\"74\":1,\"80\":1,\"81\":2,\"122\":2,\"145\":1,\"146\":1,\"160\":2,\"181\":3,\"252\":2,\"262\":1,\"267\":1,\"272\":2,\"279\":2,\"280\":2,\"281\":1,\"369\":1}}],[\"re\",{\"1\":{\"181\":1,\"281\":1,\"282\":1}}],[\"repo\",{\"1\":{\"364\":1}}],[\"report\",{\"0\":{\"199\":1,\"238\":1},\"1\":{\"199\":1}}],[\"reproduction\",{\"1\":{\"329\":1}}],[\"repeated\",{\"1\":{\"280\":1,\"281\":1}}],[\"replace\",{\"1\":{\"253\":1}}],[\"replacement\",{\"1\":{\"169\":1}}],[\"repack\",{\"1\":{\"30\":1,\"33\":1}}],[\"requestcharactersintexture\",{\"1\":{\"168\":2}}],[\"requested\",{\"1\":{\"99\":1,\"101\":2}}],[\"reusing\",{\"1\":{\"145\":1}}],[\"rebuiltfont\",{\"1\":{\"168\":1}}],[\"rebuild\",{\"0\":{\"144\":1},\"1\":{\"55\":1,\"74\":1,\"141\":1,\"144\":10,\"145\":3,\"146\":2,\"150\":1}}],[\"rebatch\",{\"1\":{\"141\":1}}],[\"readingtime\",{\"1\":{\"363\":1}}],[\"readme\",{\"1\":{\"335\":1,\"346\":1,\"347\":1,\"360\":3,\"361\":3}}],[\"readonly\",{\"1\":{\"272\":2}}],[\"readonlymodelpostprocessor\",{\"1\":{\"246\":1}}],[\"read\",{\"1\":{\"246\":1,\"247\":3,\"248\":2,\"339\":1,\"396\":2,\"397\":1}}],[\"readallbytesasync\",{\"1\":{\"57\":1}}],[\"readability\",{\"1\":{\"53\":1}}],[\"realtime\",{\"1\":{\"205\":2}}],[\"real\",{\"1\":{\"201\":2,\"333\":1}}],[\"real4\",{\"1\":{\"136\":5}}],[\"reason\",{\"1\":{\"148\":1}}],[\"redis\",{\"1\":{\"323\":1}}],[\"reduction\",{\"1\":{\"104\":1}}],[\"redblobgames\",{\"1\":{\"20\":1}}],[\"recipients\",{\"1\":{\"205\":2}}],[\"rect\",{\"1\":{\"170\":1,\"181\":8}}],[\"recttransform\",{\"0\":{\"172\":1},\"1\":{\"146\":1,\"166\":1,\"170\":2,\"172\":5,\"179\":1,\"181\":5}}],[\"recttransforms\",{\"1\":{\"141\":3,\"152\":1,\"170\":2,\"172\":1}}],[\"rectmask2d\",{\"1\":{\"41\":1,\"150\":2,\"170\":1,\"379\":1}}],[\"reconciliation\",{\"1\":{\"87\":1}}],[\"reflect\",{\"1\":{\"321\":1}}],[\"reflection\",{\"1\":{\"96\":1,\"308\":3,\"329\":1}}],[\"ref\",{\"1\":{\"68\":1}}],[\"referenced\",{\"1\":{\"291\":1,\"292\":6}}],[\"references\",{\"1\":{\"289\":1,\"291\":4,\"292\":1,\"293\":1,\"299\":1,\"300\":4}}],[\"reference\",{\"0\":{\"48\":1},\"1\":{\"20\":1,\"26\":1,\"48\":1,\"63\":1,\"68\":1,\"97\":2,\"280\":1,\"284\":1,\"295\":1,\"330\":1,\"335\":11,\"336\":10,\"339\":1}}],[\"release\",{\"1\":{\"64\":1,\"181\":2}}],[\"restitution\",{\"1\":{\"326\":1}}],[\"restore\",{\"1\":{\"212\":1}}],[\"resharper\",{\"1\":{\"284\":1}}],[\"resolving\",{\"1\":{\"335\":1}}],[\"resolution\",{\"0\":{\"233\":1},\"1\":{\"230\":1,\"232\":1,\"233\":1,\"234\":1}}],[\"resource\",{\"1\":{\"31\":1,\"44\":1,\"302\":1,\"395\":4}}],[\"resources\",{\"0\":{\"255\":1,\"395\":1},\"1\":{\"22\":1,\"30\":1,\"44\":1,\"84\":1,\"97\":1,\"196\":2,\"200\":5,\"222\":2,\"255\":4,\"269\":2}}],[\"resident\",{\"1\":{\"200\":1,\"205\":1,\"388\":1}}],[\"reset\",{\"1\":{\"79\":1}}],[\"result<int>\",{\"1\":{\"369\":1}}],[\"results\",{\"1\":{\"145\":2}}],[\"result\",{\"1\":{\"52\":1,\"92\":1,\"280\":4,\"281\":3}}],[\"renderqueue\",{\"1\":{\"215\":1}}],[\"renderoverlays\",{\"1\":{\"149\":1}}],[\"renderthread\",{\"1\":{\"225\":2}}],[\"rendertexture\",{\"1\":{\"212\":2}}],[\"rendertextures\",{\"1\":{\"97\":1}}],[\"rendertype\",{\"1\":{\"121\":1,\"122\":1,\"160\":1}}],[\"rendermeshindirect\",{\"1\":{\"115\":1}}],[\"rendermeshinstanced\",{\"1\":{\"115\":1}}],[\"rendermesh\",{\"1\":{\"115\":1}}],[\"renderers\",{\"1\":{\"108\":6,\"110\":2,\"116\":2,\"148\":1,\"168\":1,\"170\":1}}],[\"renderer\",{\"1\":{\"50\":1,\"58\":1,\"108\":4,\"109\":2,\"112\":1,\"116\":1,\"123\":3,\"141\":1,\"143\":1,\"146\":1,\"151\":5,\"152\":1,\"200\":1,\"214\":1,\"216\":2,\"286\":2}}],[\"rendering\",{\"0\":{\"210\":1,\"223\":1,\"224\":1,\"225\":1,\"226\":1,\"227\":1,\"333\":1},\"1\":{\"50\":3,\"110\":1,\"120\":1,\"134\":2,\"148\":2,\"200\":1,\"210\":2,\"212\":4,\"215\":3,\"223\":3,\"225\":2,\"228\":1,\"329\":1,\"333\":1}}],[\"renderdoc\",{\"1\":{\"41\":1}}],[\"renderloopnewbatcher\",{\"1\":{\"112\":1}}],[\"renderloop\",{\"1\":{\"41\":1,\"55\":2,\"58\":1,\"60\":3,\"74\":2,\"125\":1,\"130\":1}}],[\"render\",{\"0\":{\"50\":1},\"1\":{\"41\":1,\"45\":1,\"50\":1,\"55\":2,\"58\":2,\"60\":6,\"74\":2,\"106\":1,\"108\":2,\"112\":3,\"120\":1,\"144\":2,\"149\":5,\"151\":1,\"174\":1,\"179\":1,\"180\":1}}],[\"regex\",{\"1\":{\"30\":1,\"253\":4}}],[\"registry的可视化器\",{\"1\":{\"26\":1}}],[\"rom\",{\"1\":{\"325\":1}}],[\"roots\",{\"0\":{\"196\":1},\"1\":{\"195\":1}}],[\"root\",{\"1\":{\"181\":1,\"390\":4}}],[\"roocode\",{\"1\":{\"9\":1}}],[\"robin\",{\"1\":{\"98\":1}}],[\"routes\",{\"1\":{\"335\":1}}],[\"router\",{\"1\":{\"9\":1}}],[\"round\",{\"1\":{\"98\":1}}],[\"roslyn\",{\"1\":{\"60\":1}}],[\"五种场景与解决\",{\"1\":{\"74\":1}}],[\"五子棋\",{\"1\":{\"22\":1}}],[\"五\",{\"1\":{\"19\":1,\"22\":1}}],[\"的东西都是要占内存的\",{\"1\":{\"404\":1}}],[\"的头比数据还要大\",{\"1\":{\"394\":1}}],[\"的头都剔除出来\",{\"1\":{\"394\":1}}],[\"的版本一模一样\",{\"1\":{\"394\":1}}],[\"的解析会快很多\",{\"1\":{\"392\":1}}],[\"的解决方法是将要显示\",{\"1\":{\"173\":1}}],[\"的解决方法\",{\"1\":{\"139\":1}}],[\"的声音会变成\",{\"1\":{\"392\":1}}],[\"的声音\",{\"1\":{\"392\":1}}],[\"的指令\",{\"1\":{\"392\":1}}],[\"的指令是连续的\",{\"1\":{\"387\":1}}],[\"的表现\",{\"1\":{\"389\":1}}],[\"的表格\",{\"1\":{\"136\":1}}],[\"的数量\",{\"1\":{\"388\":1}}],[\"的数据是未压缩的\",{\"1\":{\"238\":1}}],[\"的数据容器\",{\"1\":{\"45\":1}}],[\"的缓存中\",{\"1\":{\"387\":1}}],[\"的缓冲区池中\",{\"1\":{\"200\":1}}],[\"的缓冲区\",{\"1\":{\"98\":1}}],[\"的黑盒世界\",{\"0\":{\"385\":1},\"1\":{\"384\":1,\"385\":1}}],[\"的运行时部分\",{\"1\":{\"371\":1}}],[\"的运动看起来会卡顿\",{\"1\":{\"60\":1}}],[\"的底层原理\",{\"0\":{\"371\":1}}],[\"的底层是数组\",{\"1\":{\"71\":1}}],[\"的执行顺序\",{\"1\":{\"369\":1}}],[\"的时候\",{\"1\":{\"390\":1,\"391\":2,\"394\":1,\"395\":1}}],[\"的时候也是同理\",{\"1\":{\"369\":1}}],[\"的时间很大程度上取决于屏幕分辨率\",{\"1\":{\"236\":1}}],[\"的时间轴\",{\"1\":{\"55\":1}}],[\"的源文件目录\",{\"1\":{\"347\":1}}],[\"的顶点运算\",{\"1\":{\"323\":1}}],[\"的顶层文件夹中\",{\"1\":{\"297\":1}}],[\"的音乐小课堂\",{\"1\":{\"313\":1}}],[\"的音频文件设置为\",{\"1\":{\"201\":1}}],[\"的相关信息\",{\"1\":{\"309\":1}}],[\"的特定版本时才应使用\",{\"1\":{\"302\":1}}],[\"的插件\",{\"1\":{\"291\":1}}],[\"的行为与上述类似\",{\"1\":{\"285\":1}}],[\"的频率超过必要的频率\",{\"1\":{\"285\":1}}],[\"的频率和耗时\",{\"1\":{\"81\":1}}],[\"的频率和层级\",{\"1\":{\"41\":1}}],[\"的旧版本\",{\"1\":{\"279\":1}}],[\"的临时内存\",{\"1\":{\"278\":2}}],[\"的详细信息\",{\"1\":{\"274\":1}}],[\"的当前值\",{\"1\":{\"271\":1}}],[\"的字符串库提供了一个绝佳的案例研究\",{\"1\":{\"271\":1}}],[\"的字体资源在场景或项目中引用时加载\",{\"1\":{\"169\":1}}],[\"的委托实现方式适用于较低频率的订阅和取消订阅以及少量的回调\",{\"1\":{\"268\":1}}],[\"的预制件时延长实例化时间\",{\"1\":{\"267\":1}}],[\"的预构建可编程渲染管线中使用\",{\"1\":{\"112\":1}}],[\"的非分配版本\",{\"1\":{\"258\":2}}],[\"的精彩讨论\",{\"1\":{\"254\":1}}],[\"的精彩演讲\",{\"1\":{\"177\":1}}],[\"的垃圾回收器使用\",{\"1\":{\"275\":1}}],[\"的垃圾回收策略往往会更频繁地产生内存碎片\",{\"1\":{\"97\":1}}],[\"的垃圾\",{\"1\":{\"253\":1}}],[\"的效率非常低\",{\"1\":{\"252\":1}}],[\"的未压缩纹理会占用\",{\"1\":{\"246\":1}}],[\"的配套内容\",{\"1\":{\"245\":1}}],[\"的视觉伪影\",{\"1\":{\"230\":1}}],[\"的图形内存用于帧缓冲区\",{\"1\":{\"233\":1}}],[\"的图形\",{\"1\":{\"228\":1}}],[\"的图形系统\",{\"1\":{\"141\":1}}],[\"的更多信息\",{\"1\":{\"221\":1}}],[\"的更快内存中\",{\"1\":{\"212\":1}}],[\"的脚本是很常见的做法\",{\"1\":{\"261\":1}}],[\"的脚本参考\",{\"1\":{\"246\":1}}],[\"的脚本\",{\"1\":{\"218\":1,\"269\":1}}],[\"的脚本后端只有在存在引用变量能够定位堆中的对象时才能访问该对象\",{\"1\":{\"274\":1}}],[\"的脚本后端\",{\"1\":{\"57\":1,\"97\":1}}],[\"的几何复杂性保持在最低限度至关重要\",{\"1\":{\"217\":1}}],[\"的部分中\",{\"1\":{\"271\":1}}],[\"的部分解决方案\",{\"1\":{\"254\":1}}],[\"的部分\",{\"1\":{\"216\":1,\"280\":1}}],[\"的默认输出目录\",{\"1\":{\"339\":1}}],[\"的默认优先级来自于\",{\"1\":{\"269\":1}}],[\"的默认天空盒\",{\"1\":{\"212\":1}}],[\"的默认值\",{\"1\":{\"103\":1}}],[\"的良好概述\",{\"1\":{\"210\":1}}],[\"的良好替代方案\",{\"1\":{\"111\":1}}],[\"的分析结果应该是什么样的\",{\"1\":{\"210\":1}}],[\"的分配器确实对小分配和大分配使用不同的内存池\",{\"1\":{\"284\":1}}],[\"的分配器\",{\"1\":{\"104\":1}}],[\"的分配器以适应每个应用程序的大小和要求\",{\"1\":{\"98\":1}}],[\"的分配时间不应超过几帧\",{\"1\":{\"103\":1}}],[\"的分配\",{\"1\":{\"55\":1}}],[\"的报告不同\",{\"1\":{\"205\":1}}],[\"的另一种选择是\",{\"1\":{\"205\":1}}],[\"的总和\",{\"1\":{\"205\":2}}],[\"的总工作量\",{\"1\":{\"55\":1}}],[\"的演讲\",{\"1\":{\"202\":1}}],[\"的值\",{\"1\":{\"201\":1}}],[\"的引用\",{\"1\":{\"292\":1}}],[\"的引用设置为\",{\"1\":{\"189\":1}}],[\"的引用以及链接不翻译\",{\"1\":{\"14\":1}}],[\"的脏标记过程增加一个\",{\"1\":{\"181\":1}}],[\"的父对象上寻找有效的\",{\"1\":{\"181\":1}}],[\"的交互\",{\"1\":{\"179\":1}}],[\"的基础组件\",{\"1\":{\"178\":1}}],[\"的基本过程的细节\",{\"1\":{\"139\":1}}],[\"的基本概念\",{\"1\":{\"138\":1,\"139\":1}}],[\"的离散部分时\",{\"1\":{\"173\":1}}],[\"的锚点\",{\"1\":{\"172\":1}}],[\"的自动内存管理降低了内存泄漏和其他编程错误的风险\",{\"1\":{\"277\":1}}],[\"的自定义子类或编写自定义\",{\"1\":{\"170\":1}}],[\"的自研技术\",{\"1\":{\"47\":1}}],[\"的整个内容\",{\"1\":{\"170\":1}}],[\"的调用\",{\"1\":{\"169\":1}}],[\"的调用顺序与用途\",{\"1\":{\"67\":1}}],[\"的替代品\",{\"1\":{\"169\":1}}],[\"的文件中\",{\"1\":{\"308\":1}}],[\"的文件夹中的所有脚本编译到预定义的\",{\"1\":{\"307\":1}}],[\"的文本组件数量越多\",{\"1\":{\"168\":1}}],[\"的文档来获取更多信息\",{\"1\":{\"339\":1}}],[\"的文档\",{\"1\":{\"96\":1,\"97\":1,\"120\":1}}],[\"的动态字体在字体的纹理图集中为每个大小\",{\"1\":{\"168\":1}}],[\"的最佳使用方式\",{\"1\":{\"179\":1}}],[\"的最佳使用\",{\"0\":{\"179\":1}}],[\"的最常见方法是启用\",{\"1\":{\"168\":1}}],[\"的最大填充率\",{\"1\":{\"151\":1}}],[\"的所有版本\",{\"1\":{\"305\":1}}],[\"的所有组件\",{\"1\":{\"166\":1}}],[\"的所有其他潜在变量也应声明为\",{\"1\":{\"136\":1}}],[\"的元素\",{\"1\":{\"166\":1}}],[\"的活动\",{\"1\":{\"165\":1}}],[\"的需求\",{\"1\":{\"163\":1}}],[\"的某些部分必须与其他层的绘制深度分开控制的情况\",{\"1\":{\"163\":1}}],[\"的背景纹理上\",{\"1\":{\"159\":1}}],[\"的装饰\",{\"1\":{\"159\":1}}],[\"的实现中\",{\"1\":{\"168\":1}}],[\"的实现\",{\"1\":{\"152\":1}}],[\"的实体\",{\"1\":{\"46\":1}}],[\"的像素填充率\",{\"1\":{\"152\":1}}],[\"的摘要视图应如下所示\",{\"1\":{\"151\":1}}],[\"的各个部分的成本以及监视\",{\"1\":{\"151\":1}}],[\"的各项功能\",{\"1\":{\"40\":1}}],[\"的转译\",{\"1\":{\"150\":1}}],[\"的情况下\",{\"1\":{\"248\":1,\"269\":1}}],[\"的情况\",{\"1\":{\"149\":1,\"277\":1}}],[\"的设计者无意中重叠了多个不同的四边形\",{\"1\":{\"149\":1}}],[\"的子组出现在\",{\"1\":{\"149\":1}}],[\"的子组\",{\"1\":{\"149\":1}}],[\"的子部分\",{\"1\":{\"100\":1}}],[\"的树视图\",{\"1\":{\"148\":1}}],[\"的性能分析会话\",{\"1\":{\"275\":2}}],[\"的性能\",{\"1\":{\"147\":1,\"170\":1}}],[\"的性能瓶颈\",{\"1\":{\"64\":1}}],[\"的项目\",{\"1\":{\"145\":1,\"339\":1}}],[\"的项是已释放对象占用的内存空间\",{\"1\":{\"97\":1}}],[\"的位置和大小基于其父级缩放\",{\"1\":{\"172\":1}}],[\"的位置和大小\",{\"1\":{\"145\":1}}],[\"的填充率容量\",{\"1\":{\"142\":1}}],[\"的每一种类型都有很多数据结构的改变\",{\"1\":{\"394\":1}}],[\"的每个像素都将被采样\",{\"1\":{\"142\":1}}],[\"的每实例常量缓冲区的结束\",{\"1\":{\"118\":1}}],[\"的每实例常量缓冲区的开始\",{\"1\":{\"118\":1}}],[\"的属性内容如下所示\",{\"1\":{\"272\":1}}],[\"的属性\",{\"1\":{\"141\":1}}],[\"的变量被自动转换为引用类型\",{\"1\":{\"284\":1}}],[\"的变化导致子\",{\"1\":{\"141\":1}}],[\"的变体\",{\"1\":{\"58\":1,\"241\":1}}],[\"的尝试应从性能分析开始\",{\"1\":{\"139\":1}}],[\"的用户界面是一门艺术\",{\"1\":{\"138\":1,\"139\":1}}],[\"的用途与区别\",{\"1\":{\"62\":1}}],[\"的布局的\",{\"1\":{\"172\":1}}],[\"的布局替换\",{\"1\":{\"172\":1}}],[\"的布局\",{\"0\":{\"172\":1},\"1\":{\"136\":1}}],[\"的一些历史原因\",{\"1\":{\"400\":1}}],[\"的一些说明\",{\"1\":{\"133\":1}}],[\"的一部分\",{\"1\":{\"298\":1}}],[\"的一个很好的替代方案\",{\"1\":{\"288\":1}}],[\"的一种\",{\"1\":{\"50\":1}}],[\"的速度提升\",{\"1\":{\"130\":1}}],[\"的单个\",{\"1\":{\"129\":2,\"136\":1}}],[\"的单个常量缓冲区中声明所有材质属性\",{\"1\":{\"112\":1}}],[\"的单个常量缓冲区中声明所有内置引擎属性\",{\"1\":{\"112\":1}}],[\"的隐性参数则是\",{\"1\":{\"127\":1}}],[\"的显性参数分配到了一个\",{\"1\":{\"127\":1}}],[\"的显示层级\",{\"1\":{\"44\":1}}],[\"的渲染器上\",{\"1\":{\"212\":1}}],[\"的渲染系统使用\",{\"1\":{\"141\":1}}],[\"的渲染架构中\",{\"1\":{\"127\":1}}],[\"的渲染管线\",{\"1\":{\"90\":1}}],[\"的绝佳机会\",{\"1\":{\"127\":1}}],[\"的优化\",{\"1\":{\"124\":1,\"388\":1}}],[\"的优缺点\",{\"1\":{\"75\":1}}],[\"的全局光照\",{\"1\":{\"116\":1}}],[\"的着色器\",{\"1\":{\"115\":1}}],[\"的编译着色器源代码复制到新的着色器源文件中\",{\"1\":{\"112\":1}}],[\"的编程范式\",{\"1\":{\"46\":1}}],[\"的常量缓冲区中\",{\"1\":{\"112\":1}}],[\"的说明操作\",{\"1\":{\"112\":1}}],[\"的应用程序的性能\",{\"1\":{\"112\":1}}],[\"的阴影\",{\"1\":{\"110\":1}}],[\"的材质\",{\"1\":{\"109\":1,\"146\":1}}],[\"的比例为\",{\"1\":{\"108\":2}}],[\"的绘制调用数量的\",{\"1\":{\"139\":1}}],[\"的绘制调用\",{\"1\":{\"108\":1}}],[\"的内部\",{\"1\":{\"269\":1}}],[\"的内部类在场景中或\",{\"1\":{\"196\":1}}],[\"的内容\",{\"1\":{\"170\":1}}],[\"的内置简单属性也替换成了\",{\"1\":{\"272\":1}}],[\"的内置\",{\"1\":{\"151\":1,\"168\":1,\"174\":1,\"254\":1}}],[\"的内置drawcall\",{\"1\":{\"108\":1}}],[\"的内存还可以分为引擎管理的内存和用户管理器的内存两类\",{\"1\":{\"389\":1}}],[\"的内存分配是完全不同的\",{\"1\":{\"389\":1}}],[\"的内存管理基本单位是\",{\"1\":{\"388\":1}}],[\"的内存管理和\",{\"1\":{\"388\":1}}],[\"的内存可供垃圾回收器使用\",{\"1\":{\"278\":1}}],[\"的内存\",{\"1\":{\"99\":1,\"205\":1,\"246\":1}}],[\"的网格不被绘制\",{\"1\":{\"173\":1}}],[\"的网格\",{\"1\":{\"106\":1,\"109\":1}}],[\"的次数\",{\"1\":{\"106\":1}}],[\"的信息\",{\"1\":{\"106\":1,\"109\":1,\"220\":1,\"391\":1}}],[\"的新值仅在下次\",{\"1\":{\"104\":1}}],[\"的新对象的内存无法容纳在堆中\",{\"1\":{\"97\":1}}],[\"的包文档\",{\"1\":{\"104\":1}}],[\"的平台对\",{\"1\":{\"104\":1}}],[\"的线性分配器\",{\"1\":{\"104\":1}}],[\"的大部分资源准备过程\",{\"1\":{\"218\":1}}],[\"的大小和位置计算将由\",{\"1\":{\"172\":1}}],[\"的大小和位置\",{\"1\":{\"141\":1}}],[\"的大小\",{\"1\":{\"104\":2,\"205\":1}}],[\"的大量绘制\",{\"1\":{\"83\":1}}],[\"的块大小太小\",{\"1\":{\"103\":1}}],[\"的快速线程共享临时分配器\",{\"1\":{\"103\":1}}],[\"的共享桶分配器\",{\"1\":{\"100\":1}}],[\"的峰值内存为\",{\"1\":{\"99\":1}}],[\"的对象是需要添加到堆中的新对象\",{\"1\":{\"97\":1}}],[\"的中央池中分配存储它所需的内存\",{\"1\":{\"97\":1}}],[\"的托管内存系统使用\",{\"1\":{\"97\":1}}],[\"的托管内存系统是基于\",{\"1\":{\"97\":1}}],[\"的使用和\",{\"1\":{\"394\":1}}],[\"的使用\",{\"1\":{\"96\":1,\"114\":1}}],[\"的使用经验\",{\"1\":{\"84\":1}}],[\"的组成结构\",{\"1\":{\"93\":1}}],[\"的组件数据在内存中是分散的\",{\"1\":{\"75\":1}}],[\"的目标\",{\"1\":{\"90\":1}}],[\"的延时\",{\"1\":{\"80\":1}}],[\"的问题不会发生\",{\"1\":{\"169\":1}}],[\"的问题\",{\"1\":{\"77\":1}}],[\"的繁琐和易错性\",{\"1\":{\"76\":1}}],[\"的依赖管理问题的\",{\"1\":{\"76\":1}}],[\"的跨平台解决方案\",{\"1\":{\"76\":1}}],[\"的工作原理\",{\"1\":{\"371\":1}}],[\"的工作原理和它带来的性能优势\",{\"1\":{\"76\":1}}],[\"的工作缓冲区\",{\"1\":{\"103\":1}}],[\"的工作分摊到多个帧中执行\",{\"1\":{\"42\":1}}],[\"的意义是什么\",{\"1\":{\"76\":1}}],[\"的高级应用场景\",{\"1\":{\"75\":1}}],[\"的事件\",{\"1\":{\"135\":1}}],[\"的事件系统\",{\"1\":{\"75\":1}}],[\"的事件或\",{\"1\":{\"44\":1}}],[\"的地方\",{\"1\":{\"67\":1}}],[\"的能力\",{\"1\":{\"65\":1}}],[\"的概念\",{\"1\":{\"64\":1}}],[\"的操作\",{\"1\":{\"62\":1,\"67\":1}}],[\"的生命周期回调\",{\"1\":{\"173\":1}}],[\"的生命周期中\",{\"1\":{\"67\":1}}],[\"的生命周期\",{\"1\":{\"62\":1}}],[\"的管理与卸载\",{\"1\":{\"61\":1}}],[\"的作用是什么\",{\"1\":{\"65\":1}}],[\"的作用\",{\"1\":{\"61\":2,\"66\":1,\"394\":1}}],[\"的gcalloc会如何导致卡顿\",{\"1\":{\"60\":1}}],[\"的耗时和\",{\"1\":{\"60\":1}}],[\"的近裁或远裁平面之外\",{\"1\":{\"60\":1}}],[\"的物理位置\",{\"1\":{\"60\":1}}],[\"的物体时\",{\"1\":{\"58\":1}}],[\"的步长进行模拟\",{\"1\":{\"60\":1}}],[\"的具体游戏场景\",{\"1\":{\"60\":1}}],[\"的成员去依次分配\",{\"1\":{\"390\":1}}],[\"的成员变量时\",{\"1\":{\"60\":1}}],[\"的成就\",{\"1\":{\"56\":1}}],[\"的异步编程模型\",{\"1\":{\"60\":1}}],[\"的价值\",{\"1\":{\"59\":1}}],[\"的主要用途是执行比较分析\",{\"1\":{\"148\":1}}],[\"的主要子类是\",{\"1\":{\"141\":1}}],[\"的主要瓶颈\",{\"1\":{\"76\":1}}],[\"的主要职责和性能权衡\",{\"1\":{\"76\":1}}],[\"的主要性能瓶颈\",{\"1\":{\"69\":1}}],[\"的主要\",{\"1\":{\"58\":1}}],[\"的主要区别是什么\",{\"1\":{\"63\":1,\"68\":1}}],[\"的主要区别\",{\"0\":{\"50\":1}}],[\"的代码是开放的\",{\"1\":{\"58\":1}}],[\"的核心区别和各自的适用场景\",{\"1\":{\"60\":1}}],[\"的核心区别是什么\",{\"1\":{\"60\":1}}],[\"的核心\",{\"1\":{\"58\":1}}],[\"的开发依赖中\",{\"1\":{\"355\":1}}],[\"的开发者\",{\"1\":{\"60\":1}}],[\"的开销\",{\"1\":{\"57\":1,\"58\":1,\"201\":1}}],[\"的开放世界游戏\",{\"1\":{\"56\":1}}],[\"的原生内存交互\",{\"1\":{\"96\":1}}],[\"的原生\",{\"1\":{\"57\":1,\"261\":1}}],[\"的原理是\",{\"1\":{\"55\":1}}],[\"的纯\",{\"1\":{\"57\":1}}],[\"的协程\",{\"1\":{\"57\":1}}],[\"的存在\",{\"1\":{\"56\":1,\"75\":1}}],[\"的权衡\",{\"1\":{\"55\":1,\"74\":1}}],[\"的循环可以优化\",{\"1\":{\"55\":1}}],[\"的瓶颈\",{\"1\":{\"51\":1}}],[\"的传统管线\",{\"1\":{\"50\":1}}],[\"的选择\",{\"1\":{\"48\":1}}],[\"的过程\",{\"1\":{\"48\":1,\"382\":2}}],[\"的区别在于\",{\"1\":{\"387\":1}}],[\"的区别是什么\",{\"1\":{\"62\":1,\"67\":1}}],[\"的区别\",{\"0\":{\"48\":1},\"1\":{\"71\":1,\"79\":1,\"93\":1}}],[\"的虚拟机\",{\"1\":{\"47\":1}}],[\"的多核\",{\"1\":{\"46\":1}}],[\"的理解\",{\"0\":{\"46\":1},\"1\":{\"60\":1,\"75\":1}}],[\"的通信\",{\"1\":{\"44\":1}}],[\"的加载和卸载\",{\"1\":{\"44\":1}}],[\"的小\",{\"1\":{\"43\":1}}],[\"的静态物体\",{\"1\":{\"43\":1}}],[\"的结果\",{\"1\":{\"41\":1}}],[\"的\",{\"0\":{\"47\":1,\"49\":1},\"1\":{\"41\":1,\"42\":1,\"43\":1,\"44\":1,\"45\":1,\"55\":1,\"57\":5,\"60\":4,\"65\":1,\"71\":1,\"74\":1,\"75\":1,\"96\":3,\"97\":1,\"104\":1,\"106\":1,\"109\":2,\"112\":2,\"115\":2,\"116\":3,\"118\":2,\"119\":2,\"120\":1,\"127\":1,\"136\":1,\"139\":2,\"141\":2,\"144\":3,\"147\":2,\"148\":1,\"149\":1,\"150\":2,\"151\":3,\"165\":2,\"166\":2,\"168\":2,\"170\":4,\"179\":1,\"180\":1,\"194\":1,\"199\":1,\"200\":2,\"210\":1,\"212\":1,\"215\":1,\"233\":1,\"254\":2,\"270\":1,\"274\":3,\"284\":1,\"300\":1,\"301\":1,\"305\":1,\"306\":1,\"321\":1,\"388\":2,\"389\":1,\"390\":2,\"393\":1,\"394\":3,\"400\":1,\"401\":2}}],[\"的lua官方加密的解密方法\",{\"1\":{\"19\":1}}],[\"xxx\",{\"1\":{\"339\":1}}],[\"x86\",{\"1\":{\"190\":1}}],[\"xy\",{\"1\":{\"160\":1}}],[\"x2\",{\"1\":{\"137\":1}}],[\"xor\",{\"1\":{\"88\":1}}],[\"xml\",{\"0\":{\"254\":1},\"1\":{\"88\":1,\"196\":1,\"254\":1}}],[\"xcode\",{\"0\":{\"151\":1},\"1\":{\"41\":1,\"147\":3,\"150\":1,\"151\":9,\"200\":1,\"225\":1}}],[\"xnode\",{\"1\":{\"22\":1,\"312\":1}}],[\"xlua\",{\"1\":{\"22\":4}}],[\"x3\",{\"1\":{\"19\":1}}],[\"x\",{\"1\":{\"19\":2,\"30\":1,\"81\":1,\"118\":1,\"145\":2,\"172\":2,\"205\":1,\"221\":1,\"233\":2,\"260\":3,\"265\":2,\"283\":4,\"284\":3,\"285\":12,\"303\":6,\"304\":2,\"336\":2}}],[\"joints\",{\"1\":{\"326\":1}}],[\"johnson\",{\"1\":{\"326\":1}}],[\"john\",{\"1\":{\"313\":1}}],[\"jobified\",{\"0\":{\"227\":1},\"1\":{\"213\":1,\"223\":1}}],[\"jobsystem\",{\"1\":{\"317\":1}}],[\"jobs\",{\"0\":{\"223\":1,\"228\":1},\"1\":{\"210\":1,\"222\":1,\"223\":1,\"339\":1}}],[\"jobtemp\",{\"1\":{\"103\":1,\"367\":1}}],[\"jobhandle\",{\"1\":{\"60\":1}}],[\"job\",{\"1\":{\"46\":2,\"59\":1,\"60\":1,\"75\":1,\"96\":2,\"98\":1,\"102\":2,\"103\":6,\"104\":15,\"317\":1,\"367\":1}}],[\"jaunt\",{\"1\":{\"313\":1}}],[\"jar\",{\"1\":{\"205\":1}}],[\"java\",{\"1\":{\"18\":1,\"205\":5,\"206\":1,\"287\":1}}],[\"j++\",{\"1\":{\"144\":1}}],[\"j\",{\"1\":{\"144\":3}}],[\"just\",{\"1\":{\"47\":1,\"57\":1,\"190\":1,\"371\":1}}],[\"jit\",{\"1\":{\"47\":1,\"57\":3,\"76\":2,\"190\":1,\"205\":1,\"371\":5}}],[\"jiumodiary\",{\"1\":{\"30\":1}}],[\"jrkankan\",{\"1\":{\"30\":1}}],[\"jetbra\",{\"1\":{\"30\":1}}],[\"json或其他格式\",{\"1\":{\"383\":1}}],[\"jsonutility\",{\"1\":{\"254\":1}}],[\"json格式化\",{\"1\":{\"30\":1}}],[\"json序列化反序列化\",{\"1\":{\"22\":1}}],[\"json\",{\"0\":{\"254\":1},\"1\":{\"22\":1,\"30\":2,\"88\":1,\"254\":2,\"340\":1,\"347\":1,\"348\":1,\"350\":1,\"355\":1}}],[\"js\",{\"1\":{\"5\":1,\"60\":3,\"194\":1,\"336\":1,\"338\":1,\"339\":1,\"343\":1,\"346\":1,\"347\":1,\"355\":1,\"357\":1}}],[\"nn\",{\"1\":{\"304\":1}}],[\"numbers\",{\"1\":{\"367\":2}}],[\"number\",{\"1\":{\"358\":2,\"365\":2}}],[\"numelements\",{\"1\":{\"281\":3}}],[\"null\",{\"0\":{\"259\":1},\"1\":{\"60\":1,\"146\":1,\"181\":5,\"189\":1,\"259\":2,\"262\":2,\"279\":5,\"287\":1,\"404\":2}}],[\"n\",{\"1\":{\"127\":1,\"225\":5,\"228\":5,\"250\":2,\"305\":2,\"363\":8,\"402\":1}}],[\"npm\",{\"1\":{\"338\":1,\"343\":6}}],[\"npot\",{\"1\":{\"221\":1}}],[\"npoi\",{\"1\":{\"22\":2}}],[\"npc不在aoi范围内\",{\"1\":{\"93\":1}}],[\"n²\",{\"1\":{\"55\":1}}],[\"naive\",{\"1\":{\"332\":1}}],[\"narrow\",{\"1\":{\"326\":1}}],[\"navbarzh\",{\"1\":{\"336\":1}}],[\"navbaroptions\",{\"1\":{\"336\":3}}],[\"navbar\",{\"0\":{\"336\":1},\"1\":{\"360\":4}}],[\"navigator\",{\"1\":{\"151\":1}}],[\"nav\",{\"1\":{\"104\":2}}],[\"navmesh\",{\"1\":{\"104\":1}}],[\"native\",{\"0\":{\"200\":1,\"233\":1,\"390\":1},\"1\":{\"65\":1,\"96\":2,\"141\":1,\"187\":1,\"191\":1,\"205\":6,\"206\":1,\"207\":3,\"230\":1,\"327\":1,\"389\":3,\"391\":2}}],[\"nativearray\",{\"1\":{\"60\":1,\"75\":1,\"96\":1}}],[\"nativecontainer\",{\"1\":{\"60\":3}}],[\"natvis\",{\"1\":{\"26\":1}}],[\"names\",{\"1\":{\"168\":4}}],[\"name\",{\"1\":{\"42\":1,\"309\":1,\"339\":6,\"340\":1}}],[\"nanogpt\",{\"1\":{\"11\":1}}],[\"no\",{\"1\":{\"291\":1,\"340\":1,\"367\":1}}],[\"now\",{\"1\":{\"283\":1}}],[\"noforwardadd\",{\"1\":{\"216\":1}}],[\"note\",{\"1\":{\"366\":1,\"369\":1}}],[\"notepad3\",{\"1\":{\"33\":1}}],[\"not\",{\"1\":{\"181\":1,\"225\":2,\"228\":2,\"405\":1}}],[\"noinstancing\",{\"1\":{\"119\":1}}],[\"nolightmap\",{\"1\":{\"118\":1}}],[\"nolightprobe\",{\"1\":{\"118\":1}}],[\"nolodfade\",{\"1\":{\"118\":1}}],[\"nodejs\",{\"1\":{\"343\":2}}],[\"node\",{\"1\":{\"135\":1,\"335\":1,\"336\":1,\"338\":2,\"339\":4,\"341\":1,\"343\":3,\"348\":1}}],[\"nodes\",{\"1\":{\"112\":1}}],[\"nodegraphprocessor\",{\"1\":{\"22\":1}}],[\"normal\",{\"1\":{\"106\":1,\"200\":1,\"269\":2}}],[\"non\",{\"1\":{\"30\":1,\"126\":1,\"221\":1,\"401\":2}}],[\"nounitycn\",{\"1\":{\"22\":2}}],[\"neutral\",{\"1\":{\"332\":1}}],[\"nearestneighbors\",{\"1\":{\"282\":8}}],[\"nexus\",{\"1\":{\"205\":1}}],[\"next\",{\"1\":{\"145\":1,\"346\":3,\"357\":1}}],[\"need\",{\"1\":{\"181\":1}}],[\"newasroot\",{\"1\":{\"390\":1}}],[\"newamount\",{\"1\":{\"56\":1}}],[\"newcapacity\",{\"1\":{\"369\":6}}],[\"newitems\",{\"1\":{\"369\":3}}],[\"newobj\",{\"1\":{\"279\":3}}],[\"new\",{\"1\":{\"41\":2,\"42\":1,\"55\":1,\"74\":1,\"81\":1,\"123\":2,\"253\":1,\"272\":2,\"279\":1,\"280\":1,\"281\":2,\"282\":3,\"284\":1,\"285\":1,\"302\":1,\"369\":1,\"390\":1,\"404\":2}}],[\"newgraph\",{\"1\":{\"22\":1}}],[\"newtonsoft\",{\"1\":{\"22\":1}}],[\"network\",{\"1\":{\"332\":1}}],[\"networking\",{\"1\":{\"314\":1}}],[\"net\",{\"1\":{\"22\":1,\"24\":3,\"47\":2,\"190\":1,\"250\":1,\"289\":1,\"308\":1,\"371\":16}}],[\"nesting\",{\"1\":{\"22\":1}}],[\"nsight\",{\"1\":{\"20\":1}}],[\"nvidia光追框架\",{\"1\":{\"333\":1}}],[\"nvidia\",{\"1\":{\"20\":1,\"221\":1}}],[\"ndk\",{\"1\":{\"18\":1}}],[\"qq\",{\"1\":{\"385\":1,\"394\":1}}],[\"qa\",{\"1\":{\"323\":1}}],[\"q9\",{\"1\":{\"76\":1}}],[\"q8\",{\"1\":{\"76\":1}}],[\"q7\",{\"1\":{\"76\":1}}],[\"q6\",{\"1\":{\"75\":1}}],[\"q5\",{\"1\":{\"59\":1,\"75\":1}}],[\"quaternion\",{\"1\":{\"272\":2,\"273\":1,\"325\":1}}],[\"quality\",{\"1\":{\"200\":3,\"218\":1}}],[\"qualitysettings\",{\"1\":{\"200\":1,\"275\":2}}],[\"querys\",{\"1\":{\"145\":1}}],[\"queue<t>\",{\"1\":{\"64\":1}}],[\"queue\",{\"1\":{\"60\":2,\"160\":1}}],[\"questmanager\",{\"1\":{\"56\":4}}],[\"questso\",{\"1\":{\"56\":1}}],[\"quest\",{\"1\":{\"56\":1,\"60\":1}}],[\"quickxdev\",{\"1\":{\"34\":2}}],[\"q3\",{\"0\":{\"43\":1,\"46\":1,\"49\":1},\"1\":{\"57\":1,\"74\":1}}],[\"q2\",{\"0\":{\"42\":1,\"45\":1,\"48\":1,\"51\":1,\"53\":1},\"1\":{\"56\":1,\"74\":1}}],[\"q10\",{\"1\":{\"77\":1}}],[\"q1\",{\"0\":{\"41\":1,\"44\":1,\"47\":1,\"50\":1,\"52\":1},\"1\":{\"55\":1,\"74\":1}}],[\"qframework\",{\"1\":{\"22\":1}}],[\"q4\",{\"1\":{\"17\":1,\"58\":1,\"75\":2}}],[\"qwen\",{\"1\":{\"7\":1}}],[\"中生成\",{\"1\":{\"390\":1}}],[\"中生成的文件\",{\"1\":{\"199\":1}}],[\"中以不安全类型写的代码\",{\"1\":{\"371\":1}}],[\"中通过\",{\"1\":{\"358\":1,\"361\":1}}],[\"中将\",{\"1\":{\"358\":2}}],[\"中将所有从不移动的网格\",{\"1\":{\"216\":1}}],[\"中配置\",{\"1\":{\"357\":1,\"362\":1}}],[\"中引入主题\",{\"1\":{\"355\":1}}],[\"中添加一些\",{\"1\":{\"350\":1}}],[\"中介者模式\",{\"1\":{\"312\":1}}],[\"中如何持久化存储数据\",{\"1\":{\"312\":1}}],[\"中级编程\",{\"1\":{\"312\":1}}],[\"中级开发者的水平\",{\"1\":{\"77\":1}}],[\"中国增强版功能介绍\",{\"1\":{\"404\":1}}],[\"中国版\",{\"1\":{\"394\":1}}],[\"中国发布版本\",{\"1\":{\"304\":3}}],[\"中国互联网络信息中心\",{\"1\":{\"30\":1}}],[\"中当前设置的平台\",{\"1\":{\"301\":1}}],[\"中为预编译程序集设置平台兼容性\",{\"1\":{\"300\":1}}],[\"中显式引用它\",{\"1\":{\"292\":1}}],[\"中显示栅格化文本字形的便捷方式\",{\"1\":{\"168\":1}}],[\"中显示的\",{\"1\":{\"115\":1}}],[\"中显示为\",{\"1\":{\"113\":1}}],[\"中关闭\",{\"1\":{\"292\":2}}],[\"中关注\",{\"1\":{\"74\":1}}],[\"中代码的更改不会影响\",{\"1\":{\"289\":1}}],[\"中程序集的一般信息\",{\"1\":{\"289\":1}}],[\"中内置的\",{\"1\":{\"284\":1}}],[\"中内存的工作原理\",{\"1\":{\"96\":1}}],[\"中都是引用类型\",{\"1\":{\"283\":1}}],[\"中设置这些项目来启用\",{\"1\":{\"364\":1}}],[\"中设置\",{\"1\":{\"358\":3,\"359\":1}}],[\"中设置的描述\",{\"1\":{\"358\":1}}],[\"中设置的平台的所有预编译程序集\",{\"1\":{\"300\":1}}],[\"中设置或通过\",{\"1\":{\"275\":1}}],[\"中设置两个层\",{\"1\":{\"218\":1}}],[\"中默认的垃圾回收行为\",{\"1\":{\"275\":1}}],[\"中默认启用\",{\"1\":{\"193\":1}}],[\"中计算所有整数之和\",{\"1\":{\"271\":1}}],[\"中首次引入的\",{\"1\":{\"270\":1}}],[\"中进行性能分析时\",{\"1\":{\"265\":1}}],[\"中进行恰当的内存管理可能具有挑战性\",{\"1\":{\"187\":1}}],[\"中存在\",{\"1\":{\"262\":1}}],[\"中字符串的最佳做法\",{\"1\":{\"250\":1}}],[\"中禁用它们\",{\"1\":{\"241\":1}}],[\"中禁用此设置\",{\"1\":{\"226\":1}}],[\"中不动画手指\",{\"1\":{\"218\":1}}],[\"中不存在\",{\"1\":{\"104\":1}}],[\"中心坐标\",{\"1\":{\"215\":1}}],[\"中减少了剔除开销\",{\"1\":{\"213\":1}}],[\"中渲染合并后的网格\",{\"1\":{\"288\":1}}],[\"中渲染一帧\",{\"1\":{\"230\":1}}],[\"中渲染图形是一项复杂的任务\",{\"1\":{\"210\":1}}],[\"中渲染多个实例\",{\"1\":{\"69\":1}}],[\"中提供的命令行工具外\",{\"1\":{\"206\":1}}],[\"中获得\",{\"1\":{\"205\":1}}],[\"中端和高端设备的不同平台配置\",{\"1\":{\"204\":1}}],[\"中更高细节的网格\",{\"1\":{\"200\":1}}],[\"中但没有\",{\"1\":{\"199\":1}}],[\"中最大的模块之一是\",{\"1\":{\"194\":1}}],[\"中发布的\",{\"1\":{\"193\":1}}],[\"中发现一个明显的性能隐患\",{\"1\":{\"77\":1}}],[\"中移除未使用的类型\",{\"1\":{\"192\":1}}],[\"中调试脚本代码\",{\"1\":{\"190\":1}}],[\"中构建整个游戏的\",{\"1\":{\"178\":1}}],[\"中有基于\",{\"1\":{\"394\":1}}],[\"中有开关可以关掉\",{\"1\":{\"394\":1}}],[\"中有相对少量且固定数量的元素\",{\"1\":{\"172\":1}}],[\"中有哪些热更新方案\",{\"1\":{\"65\":1}}],[\"中旨在简化初始开发的行为的解决方法\",{\"1\":{\"171\":1}}],[\"中布局元素\",{\"1\":{\"170\":1}}],[\"中只需要少量元素\",{\"1\":{\"170\":1}}],[\"中没有动态字体功能\",{\"1\":{\"169\":1}}],[\"中没有特定的热点\",{\"1\":{\"152\":1}}],[\"中纠正\",{\"1\":{\"168\":1}}],[\"中解决\",{\"1\":{\"165\":1}}],[\"中时\",{\"1\":{\"163\":1}}],[\"中完成\",{\"1\":{\"162\":1}}],[\"中大部分时间花费在\",{\"1\":{\"152\":1}}],[\"中绘制\",{\"1\":{\"142\":1}}],[\"中组合用户界面时\",{\"1\":{\"142\":1}}],[\"中找到大型着色器的数据\",{\"1\":{\"238\":1}}],[\"中找到此工具\",{\"1\":{\"199\":1}}],[\"中找到\",{\"1\":{\"139\":1,\"218\":1}}],[\"中增加批处理大小来改进\",{\"1\":{\"137\":1}}],[\"中所有可能\",{\"1\":{\"136\":1}}],[\"中所有的属性\",{\"1\":{\"58\":1}}],[\"中变量的声明顺序也很重要\",{\"1\":{\"136\":1}}],[\"中仅支持\",{\"1\":{\"133\":1}}],[\"中启用它们\",{\"1\":{\"228\":1}}],[\"中启用覆盖\",{\"1\":{\"130\":1}}],[\"中启用构建时的静态批处理\",{\"1\":{\"109\":1}}],[\"中声明的方法调用很可能最后在最终的二进制应用程序中产生方法调用\",{\"1\":{\"271\":1}}],[\"中声明\",{\"1\":{\"129\":2,\"136\":1}}],[\"中访问实例属性\",{\"1\":{\"122\":1}}],[\"中访问每实例数据\",{\"1\":{\"118\":1}}],[\"中包含\",{\"1\":{\"116\":1}}],[\"中选择其中一种模式\",{\"1\":{\"223\":1}}],[\"中选择适当的图形\",{\"1\":{\"151\":1}}],[\"中选择\",{\"1\":{\"115\":1,\"190\":1}}],[\"中分析\",{\"1\":{\"112\":1}}],[\"中分配\",{\"1\":{\"42\":1}}],[\"中激活\",{\"1\":{\"112\":1,\"128\":1}}],[\"中描述的标准\",{\"1\":{\"109\":1,\"110\":1}}],[\"中描述的标准外\",{\"1\":{\"109\":1}}],[\"中查看其属性\",{\"1\":{\"295\":1,\"296\":1,\"299\":1,\"300\":1,\"301\":1,\"302\":1}}],[\"中查看它\",{\"1\":{\"109\":1}}],[\"中查找一次并缓存结果\",{\"1\":{\"77\":1}}],[\"中查找一次\",{\"1\":{\"59\":1}}],[\"中自定义此共享实例\",{\"1\":{\"100\":1}}],[\"中可见的绘制调用数量\",{\"1\":{\"162\":1}}],[\"中可用\",{\"1\":{\"227\":1}}],[\"中可用的方法如下\",{\"1\":{\"106\":1}}],[\"中可用时\",{\"1\":{\"97\":1}}],[\"中可能发生的装箱\",{\"1\":{\"57\":1}}],[\"中频繁创建新的\",{\"1\":{\"81\":1}}],[\"中编写冗长的条件判断\",{\"1\":{\"70\":1}}],[\"中值类型\",{\"1\":{\"63\":1,\"68\":1}}],[\"中把顶点移出了屏幕\",{\"1\":{\"60\":1}}],[\"中施加力会导致力施加的频率不均匀\",{\"1\":{\"74\":1}}],[\"中施加力\",{\"1\":{\"60\":1}}],[\"中执行此操作\",{\"1\":{\"120\":1}}],[\"中执行会怎样\",{\"1\":{\"60\":1}}],[\"中执行\",{\"1\":{\"60\":1,\"74\":1}}],[\"中执行任务\",{\"1\":{\"57\":1}}],[\"中要避免\",{\"1\":{\"59\":1}}],[\"中每帧调用非常耗时\",{\"1\":{\"59\":1}}],[\"中哪怕只有几\",{\"1\":{\"55\":1}}],[\"中哪个函数占用高\",{\"1\":{\"41\":1}}],[\"中效率很高\",{\"1\":{\"50\":1}}],[\"中间语言\",{\"1\":{\"47\":1,\"57\":1,\"76\":1,\"192\":1}}],[\"中间层强制批处理中断\",{\"1\":{\"162\":1}}],[\"中间层\",{\"1\":{\"44\":1,\"162\":1}}],[\"中一种可以创建实例并保存为项目资产\",{\"1\":{\"45\":1}}],[\"中常被称为\",{\"1\":{\"43\":1}}],[\"中开启\",{\"1\":{\"42\":1}}],[\"中的垃圾回收\",{\"1\":{\"384\":1}}],[\"中的垃圾回收器有以下模式\",{\"1\":{\"274\":1}}],[\"中的图标\",{\"1\":{\"359\":1}}],[\"中的图形\",{\"0\":{\"209\":1}}],[\"中的应用\",{\"1\":{\"313\":1,\"318\":1}}],[\"中的程序集\",{\"1\":{\"289\":1}}],[\"中的整数被装箱\",{\"1\":{\"284\":1}}],[\"中的方法引用是引用类型\",{\"1\":{\"283\":1}}],[\"中的一群\",{\"1\":{\"270\":1}}],[\"中的一个变量声明为\",{\"1\":{\"136\":1}}],[\"中的字符串是不可变的引用类型\",{\"1\":{\"280\":1}}],[\"中的字符串的最佳做法清单\",{\"1\":{\"250\":1}}],[\"中的字形发现是递归完成的\",{\"1\":{\"169\":1}}],[\"中的抽象\",{\"1\":{\"225\":1}}],[\"中的多线程渲染实现为单客户端\",{\"1\":{\"225\":1}}],[\"中的多种资源类型\",{\"1\":{\"220\":1}}],[\"中的优化\",{\"0\":{\"245\":1},\"1\":{\"220\":1}}],[\"中的源\",{\"1\":{\"212\":1}}],[\"中的环境\",{\"1\":{\"212\":1}}],[\"中的数据\",{\"1\":{\"206\":1}}],[\"中的数据结构来访问\",{\"1\":{\"96\":1}}],[\"中的每个应用程序都在不同的进程中运行\",{\"1\":{\"203\":1}}],[\"中的每种字体\",{\"1\":{\"169\":1}}],[\"中的音频系统使用以下样本数作为\",{\"1\":{\"201\":1}}],[\"中的代码\",{\"1\":{\"289\":2}}],[\"中的代码放在\",{\"1\":{\"196\":1}}],[\"中的代码剥离\",{\"0\":{\"191\":1},\"1\":{\"208\":1}}],[\"中的资源中直接使用其他程序集中的类型和方法\",{\"1\":{\"196\":1}}],[\"中的内容中使用\",{\"1\":{\"196\":1}}],[\"中的内存管理中的泛型共享部分\",{\"1\":{\"393\":1}}],[\"中的内存管理之\",{\"1\":{\"388\":1}}],[\"中的内存管理至关重要\",{\"1\":{\"188\":1}}],[\"中的内存管理\",{\"0\":{\"186\":1},\"1\":{\"222\":1,\"384\":1,\"388\":1,\"393\":1}}],[\"中的内存\",{\"0\":{\"96\":1},\"1\":{\"95\":1,\"188\":1,\"274\":1,\"384\":1}}],[\"中的默认值对于移动设备来说是很好的值\",{\"1\":{\"201\":1}}],[\"中的默认架构是\",{\"1\":{\"190\":1}}],[\"中的默认目标架构是\",{\"1\":{\"190\":1}}],[\"中的默认目标架构\",{\"1\":{\"190\":1}}],[\"中的任何\",{\"1\":{\"173\":1}}],[\"中的任何组件不会接收输入或\",{\"1\":{\"173\":1}}],[\"中的各个元素很复杂\",{\"1\":{\"170\":1}}],[\"中的输入和射线检测\",{\"0\":{\"164\":1}}],[\"中的输出结构\",{\"1\":{\"118\":1}}],[\"中的中间层\",{\"1\":{\"162\":1}}],[\"中的建议\",{\"1\":{\"152\":1}}],[\"中的调试日志\",{\"1\":{\"151\":1}}],[\"中的该行\",{\"1\":{\"150\":1}}],[\"中的所有内置引擎变量应为\",{\"1\":{\"136\":1}}],[\"中的所有\",{\"1\":{\"129\":1}}],[\"中的所有光照和无光照着色器都符合此要求\",{\"1\":{\"112\":1}}],[\"中的复选框\",{\"1\":{\"128\":1}}],[\"中的工作线程使用循环先进先出\",{\"1\":{\"103\":1}}],[\"中的主线程块大小\",{\"1\":{\"102\":1}}],[\"中的浅拷贝和深拷贝\",{\"1\":{\"93\":1}}],[\"中的list是如何扩容的\",{\"1\":{\"93\":1}}],[\"中的协程\",{\"0\":{\"49\":1}}],[\"中的\",{\"0\":{\"42\":1},\"1\":{\"64\":1,\"69\":1,\"96\":1,\"100\":1,\"143\":1,\"149\":2,\"151\":1,\"197\":1,\"233\":2,\"237\":1,\"246\":1,\"290\":1}}],[\"中\",{\"0\":{\"371\":1},\"1\":{\"41\":1,\"42\":1,\"43\":1,\"46\":2,\"53\":1,\"56\":1,\"58\":1,\"60\":1,\"63\":1,\"74\":1,\"77\":1,\"81\":1,\"98\":1,\"99\":1,\"104\":2,\"108\":1,\"109\":4,\"110\":1,\"112\":5,\"118\":2,\"135\":1,\"144\":1,\"152\":2,\"163\":1,\"196\":2,\"200\":1,\"201\":1,\"217\":1,\"234\":1,\"247\":2,\"250\":1,\"275\":1,\"277\":1,\"278\":1,\"287\":1,\"289\":1,\"306\":1,\"307\":1,\"358\":1,\"359\":1}}],[\"中缓存这个组件\",{\"1\":{\"60\":1}}],[\"中缓存了\",{\"1\":{\"55\":1}}],[\"中缓存\",{\"1\":{\"41\":1}}],[\"中使用闭包\",{\"1\":{\"283\":1}}],[\"中使用并且未被脚本操纵\",{\"1\":{\"248\":1}}],[\"中使用多个图集区域\",{\"1\":{\"116\":1}}],[\"中使用多种方法来优化和减少绘制调用和渲染状态更改\",{\"1\":{\"106\":1}}],[\"中使用托管内存是管理应用程序内存的最简单方法\",{\"1\":{\"96\":1}}],[\"中使用了\",{\"1\":{\"77\":1}}],[\"中使用不会产生gc\",{\"1\":{\"60\":1}}],[\"中使用\",{\"1\":{\"17\":2,\"77\":1,\"111\":1,\"112\":2,\"119\":1,\"120\":1,\"169\":1,\"200\":1,\"288\":1}}],[\"中文版\",{\"1\":{\"30\":2}}],[\"中文文档\",{\"1\":{\"26\":1,\"27\":2,\"33\":1}}],[\"中文在线\",{\"1\":{\"21\":1,\"35\":1}}],[\"中文翻译\",{\"1\":{\"20\":1,\"30\":1}}],[\"中文\",{\"1\":{\"4\":1,\"22\":1,\"311\":1}}],[\"中文手册\",{\"1\":{\"4\":1}}],[\"中文是\",{\"1\":{\"0\":1}}],[\"fetch\",{\"1\":{\"339\":1}}],[\"feature\",{\"1\":{\"59\":1,\"136\":6,\"238\":1,\"240\":2,\"361\":1}}],[\"features\",{\"1\":{\"50\":1,\"58\":1}}],[\"f\",{\"1\":{\"304\":3}}],[\"fmod\",{\"1\":{\"201\":1,\"323\":1,\"392\":2}}],[\"foce\",{\"1\":{\"392\":1}}],[\"four\",{\"1\":{\"361\":2}}],[\"found\",{\"1\":{\"279\":1,\"405\":1}}],[\"following\",{\"1\":{\"340\":1}}],[\"fog\",{\"1\":{\"329\":1}}],[\"footer\",{\"1\":{\"362\":3}}],[\"foo\",{\"1\":{\"253\":2,\"361\":3}}],[\"fontclass\",{\"1\":{\"365\":1}}],[\"fontawesome\",{\"1\":{\"359\":4}}],[\"font\",{\"1\":{\"168\":11}}],[\"force\",{\"1\":{\"201\":1,\"226\":2,\"326\":1,\"392\":2}}],[\"forcemaxcount\",{\"1\":{\"118\":2}}],[\"format\",{\"1\":{\"59\":3,\"60\":2,\"201\":2,\"252\":2,\"392\":2}}],[\"formatlua\",{\"1\":{\"19\":1}}],[\"forward\",{\"1\":{\"50\":2,\"120\":2,\"215\":1}}],[\"foreach\",{\"1\":{\"42\":2,\"60\":3,\"74\":1,\"123\":1,\"309\":1}}],[\"forest\",{\"1\":{\"17\":1}}],[\"for\",{\"1\":{\"30\":2,\"60\":1,\"74\":1,\"121\":1,\"144\":6,\"145\":1,\"177\":1,\"181\":1,\"185\":1,\"271\":4,\"279\":1,\"280\":3,\"281\":2,\"285\":6,\"324\":1,\"326\":2,\"331\":2}}],[\"f9\",{\"1\":{\"130\":1}}],[\"f8\",{\"1\":{\"130\":2}}],[\"fsm\",{\"1\":{\"85\":2}}],[\"faq\",{\"1\":{\"360\":2,\"361\":2}}],[\"fallback\",{\"1\":{\"121\":1,\"361\":2}}],[\"false\",{\"1\":{\"62\":1,\"65\":1,\"67\":1,\"70\":2,\"93\":1,\"144\":2,\"146\":2,\"181\":1,\"246\":3,\"279\":2,\"291\":1,\"358\":2,\"364\":1}}],[\"fast\",{\"1\":{\"102\":1,\"103\":1,\"160\":1,\"260\":1}}],[\"failed\",{\"1\":{\"100\":9}}],[\"fairygui\",{\"1\":{\"22\":1,\"378\":1}}],[\"frozen\",{\"1\":{\"339\":1}}],[\"frontmatter\",{\"1\":{\"335\":1,\"336\":1,\"358\":8,\"359\":1,\"361\":2,\"362\":1,\"363\":1,\"364\":1}}],[\"from\",{\"1\":{\"238\":4,\"335\":1,\"336\":2,\"339\":1,\"346\":3,\"355\":2,\"357\":2,\"358\":1,\"359\":1,\"360\":3,\"361\":1,\"362\":1,\"367\":4}}],[\"friction\",{\"1\":{\"326\":1}}],[\"free\",{\"1\":{\"205\":2,\"390\":1}}],[\"frustum\",{\"1\":{\"60\":1,\"83\":1,\"213\":4,\"329\":1}}],[\"frag\",{\"1\":{\"122\":2,\"160\":2}}],[\"fragmentation\",{\"0\":{\"402\":1},\"1\":{\"97\":1,\"400\":1,\"402\":1}}],[\"fragment\",{\"0\":{\"51\":1,\"122\":1},\"1\":{\"41\":2,\"51\":2,\"76\":6,\"118\":7,\"120\":4,\"122\":4,\"139\":1,\"160\":1,\"215\":1}}],[\"framebuffer\",{\"0\":{\"229\":1},\"1\":{\"212\":2}}],[\"frames\",{\"1\":{\"99\":2,\"101\":3,\"102\":3,\"103\":1,\"367\":1}}],[\"frame\",{\"0\":{\"149\":1,\"151\":1},\"1\":{\"41\":2,\"55\":1,\"99\":1,\"101\":2,\"102\":1,\"112\":6,\"113\":1,\"135\":1,\"147\":3,\"148\":1,\"149\":1,\"151\":4,\"162\":3,\"210\":1,\"215\":1,\"218\":1,\"280\":2,\"282\":2}}],[\"framework\",{\"1\":{\"22\":3,\"24\":2,\"298\":3,\"323\":1,\"371\":2}}],[\"fps\",{\"1\":{\"60\":2,\"87\":1,\"125\":1,\"131\":6,\"132\":2,\"134\":2,\"137\":2,\"151\":1,\"313\":1}}],[\"fps掉到了25\",{\"1\":{\"60\":1}}],[\"fp8\",{\"1\":{\"17\":2}}],[\"fuzzy\",{\"1\":{\"331\":2}}],[\"functions\",{\"1\":{\"228\":1}}],[\"functionname\",{\"1\":{\"118\":1}}],[\"functionality\",{\"1\":{\"53\":1}}],[\"fully\",{\"1\":{\"145\":1}}],[\"fullforwardshadows\",{\"1\":{\"121\":1}}],[\"full\",{\"1\":{\"103\":1,\"367\":1}}],[\"fullserializer\",{\"1\":{\"22\":1}}],[\"flush\",{\"1\":{\"134\":3}}],[\"flux1\",{\"1\":{\"17\":5}}],[\"flux\",{\"0\":{\"17\":1},\"1\":{\"17\":3}}],[\"flash\",{\"1\":{\"203\":1}}],[\"flags\",{\"1\":{\"109\":2,\"116\":1,\"212\":2}}],[\"flatbuffers\",{\"1\":{\"88\":1}}],[\"float4x4\",{\"1\":{\"136\":3}}],[\"float4\",{\"1\":{\"122\":3,\"136\":7,\"160\":4}}],[\"float2\",{\"1\":{\"121\":1,\"160\":2}}],[\"float\",{\"1\":{\"48\":1,\"90\":1,\"123\":3,\"281\":3,\"284\":1,\"285\":3}}],[\"fightwin\",{\"1\":{\"377\":1}}],[\"fine\",{\"1\":{\"254\":1}}],[\"final\",{\"0\":{\"234\":1},\"1\":{\"280\":1,\"322\":1}}],[\"finddistancestonearestneighbors\",{\"1\":{\"282\":2}}],[\"findobjectwithtag\",{\"1\":{\"180\":1}}],[\"findobjectoftype<somesingleton>\",{\"1\":{\"262\":1}}],[\"findobjectoftype\",{\"0\":{\"262\":1},\"1\":{\"41\":1,\"262\":3}}],[\"findwithtag\",{\"1\":{\"174\":1}}],[\"find\",{\"0\":{\"262\":1},\"1\":{\"55\":1,\"59\":5,\"77\":3,\"262\":1}}],[\"firstpassassembly\",{\"1\":{\"291\":2}}],[\"firstpass\",{\"1\":{\"196\":1,\"289\":2}}],[\"fifo\",{\"1\":{\"98\":1,\"103\":1}}],[\"fit\",{\"1\":{\"98\":1,\"150\":1,\"152\":1,\"168\":8,\"169\":3}}],[\"fixed4\",{\"1\":{\"121\":2,\"122\":1,\"160\":4}}],[\"fixed\",{\"1\":{\"60\":1}}],[\"fixedupdate\",{\"1\":{\"41\":2,\"60\":4,\"61\":1,\"62\":2,\"67\":2,\"74\":3,\"79\":3,\"267\":1}}],[\"fill\",{\"1\":{\"139\":1,\"281\":1}}],[\"fillrate\",{\"0\":{\"215\":1},\"1\":{\"41\":1,\"76\":1,\"215\":1}}],[\"filter\",{\"1\":{\"109\":2,\"166\":1,\"358\":1}}],[\"files\",{\"0\":{\"198\":1},\"1\":{\"196\":1,\"199\":1}}],[\"file\",{\"1\":{\"57\":1}}],[\"请配置您的代码以在循环之前捕获顶点数组\",{\"1\":{\"285\":1}}],[\"请务必注意\",{\"1\":{\"269\":1}}],[\"请务必结合你实际做过的项目来回答\",{\"1\":{\"92\":1}}],[\"请尝试最小化单个数学运算的成本\",{\"1\":{\"260\":1}}],[\"请尝试编写具有最少关键字的通用\",{\"1\":{\"135\":1}}],[\"请尝试编写一个通用的多用途着色器\",{\"1\":{\"112\":1}}],[\"请避免在紧凑循环中或每帧运行的代码中进行此类\",{\"1\":{\"259\":1}}],[\"请禁用此标志以节省一半模型内存\",{\"1\":{\"248\":1}}],[\"请手动将这些对象移到队列的末尾\",{\"1\":{\"215\":1}}],[\"请勿在流式传输\",{\"1\":{\"212\":1}}],[\"请阅读构建日志\",{\"1\":{\"237\":1}}],[\"请阅读\",{\"1\":{\"205\":1,\"208\":1,\"215\":1,\"216\":1}}],[\"请订阅\",{\"1\":{\"168\":1}}],[\"请始终记住文本字形实际上是作为单个四边形渲染的\",{\"1\":{\"168\":1}}],[\"请考虑使用专为快速插入\",{\"1\":{\"268\":1}}],[\"请考虑以下两个简单方法\",{\"1\":{\"271\":1}}],[\"请考虑以下伪代码\",{\"1\":{\"267\":1}}],[\"请考虑以下可能的修复方法\",{\"1\":{\"154\":1}}],[\"请考虑三种替代解决方案\",{\"1\":{\"254\":1}}],[\"请考虑拆分\",{\"1\":{\"152\":1}}],[\"请启动项目并查看\",{\"1\":{\"151\":1}}],[\"请启用\",{\"1\":{\"118\":1,\"201\":1}}],[\"请转到\",{\"1\":{\"151\":1,\"190\":1,\"192\":1,\"225\":1,\"232\":1}}],[\"请观察分析器输出中的\",{\"1\":{\"148\":1}}],[\"请求都返回一个\",{\"1\":{\"269\":1}}],[\"请求脏的\",{\"1\":{\"144\":1}}],[\"请求任何注册的\",{\"1\":{\"144\":1}}],[\"请参考\",{\"1\":{\"136\":1}}],[\"请参阅着色器预加载\",{\"1\":{\"237\":1}}],[\"请参阅官方\",{\"1\":{\"234\":1}}],[\"请参阅前面关于可用性的部分\",{\"1\":{\"226\":1}}],[\"请参阅前面的各个分配器部分\",{\"1\":{\"104\":1}}],[\"请参阅后面关于分析渲染的部分\",{\"1\":{\"226\":1}}],[\"请参阅脚本\",{\"1\":{\"215\":1}}],[\"请参阅这篇博客文章\",{\"1\":{\"197\":1}}],[\"请参阅下一步中的\",{\"1\":{\"168\":1}}],[\"请参阅下面屏幕截图中的红色高亮框\",{\"1\":{\"149\":1}}],[\"请参阅拆分\",{\"1\":{\"152\":1}}],[\"请参阅有关\",{\"1\":{\"120\":1}}],[\"请参阅关于纹理图集的\",{\"1\":{\"108\":1}}],[\"请参阅\",{\"1\":{\"96\":2,\"97\":2,\"99\":1,\"104\":2,\"108\":2,\"109\":3,\"110\":2,\"112\":2,\"114\":2,\"115\":1,\"116\":2,\"118\":2,\"120\":2,\"145\":1,\"149\":1,\"152\":4,\"154\":1,\"155\":1,\"172\":1,\"188\":1,\"202\":1,\"210\":1,\"215\":1,\"216\":1,\"221\":1,\"241\":1,\"242\":1,\"246\":1,\"248\":1,\"254\":2,\"263\":1,\"269\":1,\"276\":1,\"289\":1,\"298\":1,\"301\":2,\"305\":1}}],[\"请注意它们至少消耗\",{\"1\":{\"266\":1}}],[\"请注意组件上的设置\",{\"1\":{\"248\":1}}],[\"请注意并记住定期进行分析\",{\"1\":{\"217\":1}}],[\"请注意仍有\",{\"1\":{\"132\":1}}],[\"请注意\",{\"1\":{\"132\":1,\"147\":1,\"148\":1,\"161\":1,\"168\":1,\"169\":1,\"200\":1,\"205\":1,\"218\":1,\"246\":1,\"248\":1,\"255\":1,\"299\":1,\"301\":1,\"302\":1,\"304\":1}}],[\"请注意每次编辑和重新编译\",{\"1\":{\"112\":1}}],[\"请以与通常向着色器添加每实例数据相同的方式向此函数添加每实例数据\",{\"1\":{\"118\":1}}],[\"请将\",{\"1\":{\"116\":1,\"212\":1}}],[\"请将子部分大小\",{\"1\":{\"100\":1}}],[\"请向渲染器添加\",{\"1\":{\"112\":1}}],[\"请尽可能少地使用着色器变体\",{\"1\":{\"112\":1}}],[\"请执行以下操作\",{\"1\":{\"112\":2}}],[\"请改用着色器变体集合\",{\"1\":{\"237\":1}}],[\"请改用\",{\"1\":{\"111\":1,\"226\":1,\"272\":1,\"275\":1,\"288\":1}}],[\"请\",{\"1\":{\"110\":1}}],[\"请确保通过自动脚本关闭它们\",{\"1\":{\"248\":1}}],[\"请确保\",{\"1\":{\"109\":1}}],[\"请确保使用\",{\"1\":{\"108\":1}}],[\"请不要使用\",{\"1\":{\"108\":1}}],[\"请检查\",{\"1\":{\"104\":1}}],[\"请运行一小段时间\",{\"1\":{\"103\":1}}],[\"请增加块大小\",{\"1\":{\"100\":1}}],[\"请按照以下说明进行操作\",{\"1\":{\"201\":1}}],[\"请按照以下\",{\"1\":{\"112\":1}}],[\"请按照\",{\"1\":{\"98\":1,\"104\":1}}],[\"请记住整数数学比浮点数学更快\",{\"1\":{\"260\":1}}],[\"请记住以下几点\",{\"1\":{\"120\":1}}],[\"请记住\",{\"1\":{\"97\":1,\"139\":1,\"142\":1,\"144\":1}}],[\"请描述\",{\"1\":{\"84\":1}}],[\"请描述一个你认为最适合使用\",{\"1\":{\"60\":1}}],[\"请解释\",{\"1\":{\"76\":2}}],[\"请解释为什么物理相关的操作\",{\"1\":{\"74\":1}}],[\"请至少列出五种常见的\",{\"1\":{\"74\":1}}],[\"请设计一个高效的角色状态机系统\",{\"1\":{\"70\":1}}],[\"请详细描述\",{\"1\":{\"79\":1}}],[\"请详细解释\",{\"1\":{\"60\":1}}],[\"请详述\",{\"1\":{\"67\":1}}],[\"请说明对象池\",{\"1\":{\"64\":1}}],[\"请简述\",{\"1\":{\"62\":1}}],[\"请使用交错数组\",{\"1\":{\"265\":1}}],[\"请使用整数值方法而非字符串值方法\",{\"1\":{\"257\":1}}],[\"请使用以下命令行选项\",{\"1\":{\"226\":1}}],[\"请使用此宏\",{\"1\":{\"118\":1}}],[\"请使用\",{\"1\":{\"60\":1,\"104\":1,\"106\":1,\"109\":2,\"112\":1,\"116\":1,\"118\":2,\"250\":1}}],[\"请使用这个\",{\"1\":{\"43\":1}}],[\"请在主题选项中\",{\"1\":{\"364\":1}}],[\"请在主题选项中设置\",{\"1\":{\"358\":1}}],[\"请在这些文件夹中创建程序集定义引用资产并将它们设置为引用此程序集定义\",{\"1\":{\"297\":1}}],[\"请在非子文件夹中创建一个程序集引用资产\",{\"1\":{\"290\":1}}],[\"请在阅读本教程之前参阅\",{\"1\":{\"210\":1}}],[\"请在着色器开头使用\",{\"1\":{\"120\":1}}],[\"请在您的\",{\"1\":{\"112\":1}}],[\"请在尽可能多的\",{\"1\":{\"108\":1}}],[\"请在更改之前和之后对应用程序进行性能分析\",{\"1\":{\"104\":1}}],[\"请在\",{\"1\":{\"60\":1,\"77\":1,\"115\":1,\"221\":1,\"241\":1}}],[\"请具体说明你的沟通方式\",{\"1\":{\"60\":1}}],[\"请你至少列出\",{\"1\":{\"60\":1}}],[\"请你设计一个解耦的通信方案\",{\"1\":{\"60\":1}}],[\"请举出一个\",{\"1\":{\"60\":1}}],[\"请从实现原理和线程模型上\",{\"1\":{\"60\":1}}],[\"请对比\",{\"1\":{\"60\":1,\"75\":1}}],[\"请问根本原因是什么\",{\"1\":{\"60\":1}}],[\"请问\",{\"1\":{\"60\":1}}],[\"请深入对比它们\",{\"1\":{\"57\":1}}],[\"请补全剩余部分\",{\"1\":{\"14\":1}}],[\"请帮我将该\",{\"1\":{\"14\":1}}],[\"使其知道是否需要重新扫描对象\",{\"1\":{\"275\":1}}],[\"使其更易于理解\",{\"1\":{\"14\":1}}],[\"使性能略有改善\",{\"1\":{\"272\":1}}],[\"使你可以轻松访问系统信息\",{\"1\":{\"205\":1}}],[\"使可批处理对象不被不可批处理对象插入\",{\"1\":{\"162\":1}}],[\"使\",{\"1\":{\"112\":1,\"118\":1}}],[\"使渲染器不兼容\",{\"1\":{\"112\":1}}],[\"使着色器不兼容\",{\"1\":{\"112\":1}}],[\"使得实际可用的内存更多\",{\"1\":{\"387\":1}}],[\"使得大量的图片和材质球不需要重复绘制\",{\"1\":{\"379\":1}}],[\"使得垃圾回收\",{\"1\":{\"369\":1}}],[\"使得嵌套的\",{\"1\":{\"181\":1}}],[\"使得可以在任何点大小和分辨率下清晰地渲染文本\",{\"1\":{\"169\":1}}],[\"使得\",{\"1\":{\"75\":1}}],[\"使状态机逻辑清晰\",{\"1\":{\"75\":1}}],[\"使视觉效果流畅\",{\"1\":{\"74\":1}}],[\"使系统更灵活\",{\"1\":{\"70\":1}}],[\"使物体能共享材质\",{\"1\":{\"41\":1}}],[\"使用释放\",{\"1\":{\"402\":1}}],[\"使用时要注意减少模板泛型的滥用\",{\"1\":{\"393\":1}}],[\"使用重载过的分配符去分配内存时\",{\"1\":{\"390\":1}}],[\"使用变量去代表数字\",{\"1\":{\"377\":1}}],[\"使用本机平台编译器编译生成的\",{\"1\":{\"371\":1}}],[\"使用字符串\",{\"1\":{\"305\":1}}],[\"使用包含三个部分的版本指示符\",{\"1\":{\"304\":1}}],[\"使用程序集定义资产的\",{\"1\":{\"301\":1}}],[\"使用程序集定义创建的程序集中的类不能使用在预定义\",{\"1\":{\"291\":1}}],[\"使用空槽位中的下拉列表分配对预编译程序集的引用\",{\"1\":{\"300\":1}}],[\"使用自己的专用线程池\",{\"1\":{\"269\":1}}],[\"使用来自\",{\"1\":{\"261\":1}}],[\"使用序数比较类型大约快\",{\"1\":{\"251\":1}}],[\"使用适合项目目标平台的纹理压缩格式对于节省内存至关重要\",{\"1\":{\"247\":1}}],[\"使用将是非常低效的\",{\"1\":{\"247\":1}}],[\"使用一个名为\",{\"1\":{\"388\":1}}],[\"使用一个带有颜色缓冲区的\",{\"1\":{\"231\":1}}],[\"使用一组旨在利用\",{\"1\":{\"169\":1}}],[\"使用多个帧缓冲区会带来图形内存影响\",{\"1\":{\"230\":1}}],[\"使用多个通道会导致过度绘制\",{\"1\":{\"215\":1}}],[\"使用三个帧缓冲区进行三缓冲\",{\"1\":{\"231\":1}}],[\"使用三个内存管理层来处理应用程序中的内存\",{\"1\":{\"96\":1}}],[\"使用三缓冲时\",{\"1\":{\"230\":1}}],[\"使用双缓冲\",{\"1\":{\"230\":1}}],[\"使用显示列表\",{\"1\":{\"226\":1}}],[\"使用渲染线程\",{\"1\":{\"225\":1}}],[\"使用该纹理\",{\"1\":{\"221\":1}}],[\"使用同步层可以实现\",{\"1\":{\"218\":1}}],[\"使用常量缓冲区\",{\"1\":{\"216\":1}}],[\"使用线程上的作业根据相机视锥体剔除\",{\"1\":{\"213\":1}}],[\"使用具有完整\",{\"1\":{\"205\":1}}],[\"使用转储的\",{\"1\":{\"205\":1}}],[\"使用分页但不利用交换空间\",{\"1\":{\"203\":1}}],[\"使用正确的设置可以节省运行时内存和\",{\"1\":{\"201\":1}}],[\"使用环形缓冲区将纹理推送到\",{\"1\":{\"200\":1}}],[\"使用与其他系统共享的块分配器\",{\"1\":{\"200\":1}}],[\"使用许多不同的原生分配器和缓冲区\",{\"1\":{\"200\":1}}],[\"使用锚点进行比例布局\",{\"1\":{\"181\":1}}],[\"使用文本自动调整大小时\",{\"1\":{\"169\":1}}],[\"使用材质预设来保存和调用这些视觉样式\",{\"1\":{\"169\":1}}],[\"使用有符号距离场\",{\"1\":{\"169\":1}}],[\"使用非分配物理\",{\"0\":{\"258\":1}}],[\"使用非分配的物理\",{\"1\":{\"41\":1}}],[\"使用非引用类型会导致其他问题\",{\"1\":{\"197\":1}}],[\"使用非动态字体并预先配置对所需字形集的支持\",{\"1\":{\"168\":1}}],[\"使用透明渲染队列\",{\"1\":{\"159\":1}}],[\"使用率可能导致应用程序的帧率卡顿\",{\"1\":{\"173\":1}}],[\"使用率的综合度量\",{\"1\":{\"151\":1}}],[\"使用率表示应用程序超过了\",{\"1\":{\"151\":1}}],[\"使用率表示顶点着色器过慢或绘制的顶点数量过多\",{\"1\":{\"151\":1}}],[\"使用率分析器左侧跟踪类别名称旁边的彩色框来完成\",{\"1\":{\"148\":1}}],[\"使用单独的材质\",{\"1\":{\"149\":1}}],[\"使用相同的平台配置\",{\"1\":{\"204\":1}}],[\"使用相同的材质\",{\"1\":{\"149\":1}}],[\"使用相同的网格\",{\"1\":{\"109\":1}}],[\"使用新材质时需要进行大量工作\",{\"1\":{\"126\":1}}],[\"使用这些重载的时候\",{\"1\":{\"390\":1}}],[\"使用这些分配器进行对于桶分配器来说太大的分配\",{\"1\":{\"101\":1}}],[\"使用这个在\",{\"1\":{\"122\":1}}],[\"使用带有\",{\"0\":{\"119\":1},\"1\":{\"170\":1}}],[\"使用实例\",{\"1\":{\"118\":1}}],[\"使用了多少绘制调用\",{\"1\":{\"112\":1}}],[\"使用标准\",{\"1\":{\"112\":1}}],[\"使用不同的内核机制来收集数据\",{\"1\":{\"205\":1}}],[\"使用不同的材质实例\",{\"1\":{\"110\":1}}],[\"使用不同的位置\",{\"1\":{\"43\":1}}],[\"使用动态批处理\",{\"1\":{\"110\":2}}],[\"使用静态批处理需要额外的\",{\"1\":{\"109\":1}}],[\"使用静态批处理\",{\"1\":{\"109\":2}}],[\"使用命令行参数\",{\"1\":{\"104\":1}}],[\"使用报告中的信息可以帮助您选择适合应用程序的块大小\",{\"1\":{\"102\":1}}],[\"使用报告包含分配器所有三个部分的信息\",{\"1\":{\"101\":1}}],[\"使用报告显示使用统计信息\",{\"1\":{\"100\":1}}],[\"使用的都是顺序迭代的方式\",{\"1\":{\"369\":1}}],[\"使用的帧缓冲区数量主要取决于图形驱动程序\",{\"1\":{\"231\":1}}],[\"使用的大小检测不是最优的\",{\"1\":{\"168\":1}}],[\"使用的内置着色器包含对遮罩\",{\"1\":{\"160\":1}}],[\"使用的网格取自附加到\",{\"1\":{\"143\":1}}],[\"使用的着色器必须与\",{\"1\":{\"112\":1}}],[\"使用的类型元数据\",{\"1\":{\"96\":1}}],[\"使用的序列化工具\",{\"1\":{\"22\":1}}],[\"使用托管堆和\",{\"1\":{\"96\":1}}],[\"使用半精度浮点数\",{\"1\":{\"90\":1}}],[\"使用过哪些设计模式或架构\",{\"1\":{\"85\":1}}],[\"使用引用计数管理内存\",{\"1\":{\"84\":1}}],[\"使用缓存或\",{\"1\":{\"81\":1}}],[\"使用哈希表\",{\"1\":{\"70\":1}}],[\"使用图集\",{\"1\":{\"64\":1,\"69\":1,\"74\":1}}],[\"使用图集和\",{\"1\":{\"52\":1}}],[\"使用值类型\",{\"1\":{\"63\":1,\"68\":1}}],[\"使用目标平台的原生\",{\"1\":{\"47\":1,\"76\":1}}],[\"使用场景\",{\"1\":{\"45\":1,\"80\":1}}],[\"使用全局事件总线\",{\"1\":{\"44\":1}}],[\"使用boehm\",{\"1\":{\"42\":1}}],[\"使用更少的纹理采样\",{\"1\":{\"90\":1}}],[\"使用更简单的\",{\"1\":{\"41\":1}}],[\"使用更高效的数据结构\",{\"1\":{\"41\":1}}],[\"使用对象池\",{\"1\":{\"41\":1,\"55\":1,\"63\":1,\"68\":1}}],[\"使用\",{\"0\":{\"115\":1,\"349\":1},\"1\":{\"7\":1,\"22\":2,\"41\":4,\"42\":2,\"44\":1,\"47\":1,\"48\":2,\"49\":1,\"52\":1,\"55\":1,\"59\":1,\"60\":1,\"63\":1,\"65\":3,\"68\":1,\"70\":1,\"72\":1,\"74\":2,\"81\":2,\"83\":1,\"96\":1,\"97\":1,\"104\":1,\"106\":1,\"108\":1,\"109\":2,\"110\":1,\"112\":3,\"114\":2,\"115\":1,\"118\":2,\"134\":1,\"151\":1,\"164\":1,\"168\":1,\"189\":1,\"190\":3,\"196\":3,\"201\":4,\"205\":2,\"216\":1,\"221\":1,\"233\":1,\"240\":2,\"246\":1,\"265\":1,\"269\":1,\"270\":1,\"274\":2,\"309\":1,\"318\":1,\"359\":1,\"371\":1,\"394\":1}}],[\"8~16m\",{\"1\":{\"387\":1}}],[\"88\",{\"1\":{\"206\":1}}],[\"888\",{\"1\":{\"205\":1}}],[\"8751k\",{\"1\":{\"205\":1}}],[\"8715\",{\"1\":{\"100\":1}}],[\"84456k\",{\"1\":{\"205\":1}}],[\"890\",{\"1\":{\"205\":1}}],[\"825\",{\"1\":{\"205\":1}}],[\"8284\",{\"1\":{\"101\":1}}],[\"8283\",{\"1\":{\"101\":1}}],[\"852696\",{\"1\":{\"205\":1}}],[\"8375\",{\"1\":{\"205\":1}}],[\"8677\",{\"1\":{\"205\":1}}],[\"8ms\",{\"1\":{\"134\":1}}],[\"8mbplayer\",{\"1\":{\"104\":1}}],[\"8player\",{\"1\":{\"104\":2}}],[\"8080\",{\"1\":{\"350\":1}}],[\"802\",{\"1\":{\"102\":1}}],[\"80b\",{\"1\":{\"100\":2}}],[\"8\",{\"0\":{\"88\":1},\"1\":{\"14\":1,\"104\":2,\"205\":2,\"206\":2,\"218\":1,\"232\":2,\"233\":5,\"367\":1,\"369\":1,\"394\":1}}],[\"76\",{\"1\":{\"355\":1}}],[\"760\",{\"1\":{\"221\":1}}],[\"7f1\",{\"1\":{\"304\":1}}],[\"75\",{\"1\":{\"271\":1}}],[\"730\",{\"1\":{\"265\":1}}],[\"7308k\",{\"1\":{\"205\":1}}],[\"7301\",{\"1\":{\"205\":1}}],[\"71165\",{\"1\":{\"205\":1}}],[\"7127\",{\"1\":{\"205\":1}}],[\"716\",{\"1\":{\"205\":1}}],[\"7mb\",{\"1\":{\"102\":1}}],[\"78\",{\"1\":{\"101\":1}}],[\"722\",{\"1\":{\"100\":1}}],[\"7th\",{\"1\":{\"20\":1}}],[\"7\",{\"0\":{\"87\":1},\"1\":{\"14\":1,\"19\":1,\"27\":1,\"102\":1,\"180\":1,\"205\":2,\"206\":2,\"233\":1,\"303\":2,\"367\":2,\"394\":1}}],[\"6mb\",{\"1\":{\"278\":2}}],[\"61mb\",{\"1\":{\"238\":2}}],[\"660\",{\"1\":{\"265\":1}}],[\"66355200\",{\"1\":{\"233\":2}}],[\"668\",{\"1\":{\"205\":1}}],[\"6249k\",{\"1\":{\"205\":1}}],[\"6206\",{\"1\":{\"205\":1}}],[\"69\",{\"1\":{\"205\":1}}],[\"6988\",{\"1\":{\"205\":1}}],[\"6568\",{\"1\":{\"205\":1}}],[\"6577\",{\"1\":{\"205\":1}}],[\"68mb\",{\"1\":{\"233\":1}}],[\"68198400\",{\"1\":{\"233\":1}}],[\"6815563691\",{\"1\":{\"205\":1}}],[\"6823482422\",{\"1\":{\"205\":1}}],[\"63240\",{\"1\":{\"205\":1}}],[\"6p\",{\"1\":{\"205\":1}}],[\"60kb\",{\"1\":{\"278\":1}}],[\"60\",{\"1\":{\"230\":1,\"240\":1,\"246\":1,\"275\":1,\"278\":1}}],[\"604\",{\"1\":{\"205\":1}}],[\"6060\",{\"1\":{\"205\":1}}],[\"60hz\",{\"1\":{\"137\":1}}],[\"60fps\",{\"1\":{\"134\":1,\"275\":3}}],[\"67ms\",{\"1\":{\"132\":1}}],[\"64480\",{\"1\":{\"205\":2}}],[\"64000\",{\"1\":{\"109\":1}}],[\"64kb\",{\"1\":{\"102\":2,\"104\":2}}],[\"64b\",{\"1\":{\"100\":4}}],[\"64mb\",{\"1\":{\"99\":1}}],[\"64\",{\"1\":{\"99\":1,\"100\":1,\"101\":2,\"102\":1,\"103\":2,\"104\":2,\"367\":1,\"369\":1}}],[\"6\",{\"0\":{\"85\":1},\"1\":{\"14\":1,\"22\":1,\"100\":1,\"102\":1,\"134\":1,\"160\":1,\"163\":1,\"205\":2,\"227\":1,\"303\":2,\"305\":2,\"371\":1,\"394\":1}}],[\"垃圾回收最佳实践\",{\"0\":{\"277\":1}}],[\"垃圾回收器必须在下次迭代中重新扫描这些对象\",{\"1\":{\"275\":1}}],[\"垃圾回收器执行的时候会划分出一个标记阶段\",{\"1\":{\"275\":1}}],[\"垃圾回收器在每次回收时必须检查整个堆\",{\"1\":{\"275\":1}}],[\"垃圾回收器在\",{\"1\":{\"274\":1}}],[\"垃圾回收器将\",{\"1\":{\"274\":1}}],[\"垃圾回收器会回退到完整的非增量式回收\",{\"1\":{\"275\":1}}],[\"垃圾回收器会扫描所有托管对象以确定哪些对象仍在使用\",{\"1\":{\"275\":1}}],[\"垃圾回收器会暂停应用程序以检查和处理堆中的对象\",{\"1\":{\"274\":1}}],[\"垃圾回收器会遍历所有活动引用变量\",{\"1\":{\"274\":1}}],[\"垃圾回收器会以相同方式处理后续请求\",{\"1\":{\"274\":1}}],[\"垃圾回收器就可以重新分配该内存\",{\"1\":{\"274\":1}}],[\"垃圾回收器运行时\",{\"1\":{\"274\":1}}],[\"垃圾回收器不会清除原生内存对象或其他原生分配\",{\"1\":{\"97\":1}}],[\"垃圾回收器使用方便\",{\"1\":{\"96\":1}}],[\"垃圾回收器\",{\"1\":{\"96\":3,\"97\":2,\"274\":1,\"275\":1,\"284\":1,\"404\":1}}],[\"垃圾回收\",{\"0\":{\"42\":1,\"274\":1},\"1\":{\"14\":1,\"41\":2,\"55\":1,\"61\":1,\"63\":1,\"66\":1,\"74\":1,\"97\":1,\"124\":1,\"274\":1,\"275\":2,\"277\":2}}],[\"如1～3人小团队的快速开发环境\",{\"1\":{\"381\":1}}],[\"如游戏\",{\"1\":{\"275\":1}}],[\"如文档所述\",{\"1\":{\"269\":1}}],[\"如该\",{\"1\":{\"265\":1}}],[\"如字典\",{\"1\":{\"254\":1}}],[\"如需了解更多详细信息\",{\"1\":{\"248\":1}}],[\"如粒子系统或碰撞体\",{\"1\":{\"248\":1}}],[\"如膨胀\",{\"1\":{\"169\":1}}],[\"如日本汉字或中文字符\",{\"1\":{\"168\":1}}],[\"如仅拉丁\",{\"1\":{\"168\":1}}],[\"如前面的步骤所述\",{\"1\":{\"150\":1}}],[\"如前所述\",{\"1\":{\"148\":1}}],[\"如屏幕截图所示\",{\"1\":{\"148\":1}}],[\"如此处所示\",{\"1\":{\"135\":1}}],[\"如下所示\",{\"1\":{\"112\":1,\"135\":1,\"190\":1}}],[\"如上百人协同开发一个复杂系统\",{\"1\":{\"381\":1}}],[\"如上所述\",{\"1\":{\"150\":2,\"215\":1,\"265\":1}}],[\"如上图所示\",{\"1\":{\"97\":1}}],[\"如上万个单位的移动\",{\"1\":{\"46\":1}}],[\"如三角函数\",{\"1\":{\"90\":1}}],[\"如批处理优化\",{\"1\":{\"90\":1}}],[\"如配置\",{\"1\":{\"88\":1}}],[\"如移动\",{\"1\":{\"87\":1}}],[\"如新手引导\",{\"1\":{\"80\":1}}],[\"如所有单位的\",{\"1\":{\"75\":1}}],[\"如所有的\",{\"1\":{\"46\":1}}],[\"如添加序列号\",{\"1\":{\"71\":1}}],[\"如积分\",{\"1\":{\"68\":1}}],[\"如对\",{\"1\":{\"67\":1}}],[\"如输入\",{\"1\":{\"67\":1}}],[\"如相同材质\",{\"1\":{\"64\":1,\"69\":1}}],[\"如物体被弹开\",{\"1\":{\"62\":1,\"67\":1}}],[\"如物品属性\",{\"1\":{\"56\":1}}],[\"如取消事件监听\",{\"1\":{\"62\":1}}],[\"如颜色\",{\"1\":{\"58\":1}}],[\"如后处理\",{\"1\":{\"58\":1}}],[\"如内联\",{\"1\":{\"57\":1}}],[\"如网络层\",{\"1\":{\"57\":1}}],[\"如网络请求\",{\"1\":{\"49\":1,\"57\":1}}],[\"如使用\",{\"1\":{\"57\":1}}],[\"如超大函数\",{\"1\":{\"53\":1}}],[\"如在\",{\"1\":{\"53\":1,\"77\":1}}],[\"如多重纹理采样\",{\"1\":{\"51\":1}}],[\"如模型空间坐标\",{\"1\":{\"51\":1}}],[\"如何绘制场景非常有用\",{\"1\":{\"215\":1}}],[\"如何最高效地做到这一点\",{\"1\":{\"183\":1}}],[\"如何隐藏\",{\"0\":{\"183\":1},\"1\":{\"183\":1}}],[\"如何检查\",{\"0\":{\"135\":1}}],[\"如何知道我是否以最佳方式使用\",{\"1\":{\"134\":1}}],[\"如何启用\",{\"0\":{\"128\":1}}],[\"如何显示\",{\"1\":{\"112\":2}}],[\"如何使用和分配内存非常重要\",{\"1\":{\"96\":1}}],[\"如何避免\",{\"1\":{\"93\":1}}],[\"如何兼顾性能与效果\",{\"1\":{\"90\":1}}],[\"如何在客户端安全\",{\"1\":{\"88\":1}}],[\"如何组织\",{\"1\":{\"85\":1}}],[\"如何有效地管理内存并减少垃圾回收\",{\"1\":{\"81\":1}}],[\"如何保证运动的平滑性\",{\"1\":{\"74\":1}}],[\"如何判断瓶颈在\",{\"1\":{\"74\":1}}],[\"如何系统地追踪和消除游戏中的\",{\"1\":{\"74\":1}}],[\"如何设计水果忍者切水果的机制\",{\"1\":{\"72\":1}}],[\"如何设计一个水果忍者切水果的机制\",{\"1\":{\"66\":1}}],[\"如何实现\",{\"1\":{\"72\":1}}],[\"如何用元表实现面向对象\",{\"1\":{\"71\":1}}],[\"如何优化\",{\"1\":{\"64\":1,\"93\":1}}],[\"如何优化以减少垃圾回收\",{\"1\":{\"63\":1,\"68\":1}}],[\"如何提升性能\",{\"1\":{\"58\":1}}],[\"如何获取\",{\"1\":{\"51\":1}}],[\"如何减少\",{\"0\":{\"43\":1},\"1\":{\"83\":1}}],[\"如合批\",{\"1\":{\"50\":1}}],[\"如遍历一个\",{\"1\":{\"46\":1}}],[\"如武器配置\",{\"1\":{\"45\":1}}],[\"如玩家死亡\",{\"1\":{\"44\":1}}],[\"如玩家数据\",{\"1\":{\"44\":1,\"75\":1}}],[\"如点击按钮后做什么\",{\"1\":{\"44\":1}}],[\"如草\",{\"1\":{\"41\":1,\"55\":1,\"69\":1}}],[\"如子弹\",{\"1\":{\"41\":1,\"63\":1,\"64\":1,\"68\":1,\"81\":1}}],[\"如果看\",{\"1\":{\"404\":1}}],[\"如果我们要进行一次\",{\"1\":{\"401\":1}}],[\"如果我的游戏物理帧率\",{\"1\":{\"60\":1}}],[\"如果我的核心系统\",{\"1\":{\"57\":1}}],[\"如果会压缩内存会把上图空的地方重新排布\",{\"1\":{\"401\":1}}],[\"如果上一个版本的类型在这个版本中没有\",{\"1\":{\"394\":1}}],[\"如果上传速率不够快或主线程停滞\",{\"1\":{\"222\":1}}],[\"如果第一次打开项目\",{\"1\":{\"389\":1}}],[\"如果子问题还无法解决\",{\"1\":{\"382\":1}}],[\"如果移动了任何元素\",{\"1\":{\"379\":1}}],[\"如果移动的网格满足\",{\"1\":{\"110\":1}}],[\"如果把所有数据表的数据都集中在一个数据文件里\",{\"1\":{\"377\":1}}],[\"如果过于频繁使用\",{\"1\":{\"369\":1}}],[\"如果该文件夹的下级目录存在\",{\"1\":{\"307\":1}}],[\"如果存在\",{\"1\":{\"306\":1}}],[\"如果结果显示\",{\"1\":{\"302\":1}}],[\"如果资产文件的元数据文件被删除\",{\"1\":{\"299\":1}}],[\"如果程序集不依赖\",{\"1\":{\"291\":1}}],[\"如果程序集划分合理\",{\"1\":{\"291\":1}}],[\"如果启用的话\",{\"1\":{\"291\":1}}],[\"如果启用了\",{\"1\":{\"166\":1}}],[\"如果网格是静态的\",{\"1\":{\"288\":1}}],[\"如果网格是静态的并且您希望\",{\"1\":{\"111\":1}}],[\"如果重复调用此方法\",{\"1\":{\"281\":1}}],[\"如果输入\",{\"1\":{\"280\":1}}],[\"如果输入点位于\",{\"1\":{\"166\":1}}],[\"如果垃圾回收器每分钟只运行一次\",{\"1\":{\"278\":1}}],[\"如果垃圾回收器尚未运行\",{\"1\":{\"97\":1}}],[\"如果管理不当\",{\"1\":{\"276\":1}}],[\"如果禁用增量模式\",{\"1\":{\"275\":1}}],[\"如果禁用\",{\"1\":{\"274\":1}}],[\"如果对内存块的所有引用都丢失\",{\"1\":{\"274\":1}}],[\"如果对象的\",{\"1\":{\"247\":1}}],[\"如果对象相对于摄像机具有相对不变的\",{\"1\":{\"247\":1}}],[\"如果能够在声明一次功能后在其他地方重用该功能\",{\"1\":{\"273\":1}}],[\"如果任何线程与主线程具有相同的优先级\",{\"1\":{\"269\":1}}],[\"如果任何获取的实例属性包含在\",{\"1\":{\"118\":1}}],[\"如果频繁发生添加\",{\"1\":{\"268\":1}}],[\"如果大量\",{\"1\":{\"267\":1}}],[\"如果大部分被重建的文本实际上没有更改其底层字符串数据\",{\"1\":{\"152\":1}}],[\"如果操作对性能影响较大\",{\"1\":{\"265\":1}}],[\"如果传递给\",{\"1\":{\"263\":1}}],[\"如果正则表达式是不变的字符串字面值\",{\"1\":{\"253\":1}}],[\"如果必须使用正则表达式\",{\"1\":{\"253\":1}}],[\"如果必须在紧凑循环中或每帧期间对字符串进行连接\",{\"1\":{\"250\":1}}],[\"如果必须支持极大范围的字符\",{\"1\":{\"168\":1}}],[\"如果模型没有通过动画系统进行动画处理\",{\"1\":{\"248\":1}}],[\"如果模型在运行时实例化\",{\"1\":{\"248\":1}}],[\"如果模型未在\",{\"1\":{\"248\":1}}],[\"如果项目是以3d人物角色为主的网络游戏\",{\"1\":{\"383\":1}}],[\"如果项目是单机的策略类游戏\",{\"1\":{\"383\":1}}],[\"如果项目在\",{\"1\":{\"302\":1}}],[\"如果项目在运行时通过脚本修改网格\",{\"1\":{\"248\":1}}],[\"如果项目使用\",{\"1\":{\"302\":1}}],[\"如果项目为平台游戏\",{\"1\":{\"254\":1}}],[\"如果项目不需要这些功能中的一个或多个\",{\"1\":{\"248\":1}}],[\"如果项目有此需求\",{\"1\":{\"85\":1}}],[\"如果所选的纹理压缩格式不适合目标平台\",{\"1\":{\"247\":1}}],[\"如果所有块都在使用中\",{\"1\":{\"103\":1}}],[\"如果误添加此类纹理\",{\"1\":{\"246\":1}}],[\"如果设备支持双缓冲或三缓冲\",{\"1\":{\"230\":1}}],[\"如果设备没有可用内存\",{\"1\":{\"204\":1}}],[\"如果没有\",{\"1\":{\"221\":1}}],[\"如果可能\",{\"1\":{\"221\":1}}],[\"如果可以在不引起排序或射线检测问题的情况下启用它\",{\"1\":{\"166\":1}}],[\"如果硬件不支持\",{\"1\":{\"221\":1}}],[\"如果内存允许\",{\"1\":{\"218\":1}}],[\"如果不读取\",{\"1\":{\"389\":1}}],[\"如果不启用的话\",{\"1\":{\"291\":1}}],[\"如果不使用垂直同步或目标帧率\",{\"1\":{\"275\":1}}],[\"如果不使用此块\",{\"1\":{\"118\":1}}],[\"如果不需要它们\",{\"1\":{\"214\":1}}],[\"如果门关闭且相机看不到房间\",{\"1\":{\"213\":1}}],[\"如果相机看不到\",{\"1\":{\"213\":1}}],[\"如果它增长\",{\"1\":{\"207\":1}}],[\"如果它们的尺寸没有改变\",{\"1\":{\"170\":1}}],[\"如果三个进程共享\",{\"1\":{\"205\":1,\"388\":1}}],[\"如果发现一个文件在第\",{\"1\":{\"394\":1}}],[\"如果发现需要\",{\"1\":{\"394\":1}}],[\"如果发现提交后没有发布成功\",{\"1\":{\"340\":1}}],[\"如果发现大型\",{\"1\":{\"159\":1}}],[\"如果发生变化\",{\"1\":{\"205\":1}}],[\"如果系统已经在抖动内存缓存\",{\"1\":{\"204\":1}}],[\"如果系统成功将所有当前使用的字形放入新图集中\",{\"1\":{\"168\":1}}],[\"如果剪辑未设置为\",{\"1\":{\"201\":1}}],[\"如果音频文件不需要立体声\",{\"1\":{\"201\":1}}],[\"如果代码库中有很大一部分类型或方法未使用\",{\"1\":{\"196\":1}}],[\"如果托管堆变得过于碎片化\",{\"1\":{\"189\":1}}],[\"如果找到一个\",{\"1\":{\"181\":1}}],[\"如果使用\",{\"1\":{\"180\":1,\"190\":1}}],[\"如果使用早于\",{\"1\":{\"165\":1}}],[\"如果未启用其他模式\",{\"1\":{\"224\":1}}],[\"如果未设置此属性\",{\"1\":{\"174\":1}}],[\"如果未使用图像\",{\"1\":{\"169\":1}}],[\"如果给定\",{\"1\":{\"172\":1}}],[\"如果引用了默认精灵表资源\",{\"1\":{\"169\":1}}],[\"如果仍然无法定位此字形\",{\"1\":{\"169\":1}}],[\"如果仍然找不到所需的字形\",{\"1\":{\"169\":2}}],[\"如果字体的字符集非常大\",{\"1\":{\"168\":1}}],[\"如果当前使用的字形集无法放入与当前图集相同大小的图集中\",{\"1\":{\"168\":1}}],[\"如果当前图集太小\",{\"1\":{\"168\":1}}],[\"如果新字形适合当前图集\",{\"1\":{\"168\":1}}],[\"如果两个类型位于不同的程序集中\",{\"1\":{\"291\":1}}],[\"如果两个\",{\"1\":{\"168\":2}}],[\"如果文本组件或其任何父\",{\"1\":{\"168\":1}}],[\"如果动态元素数量变得非常大\",{\"1\":{\"163\":1}}],[\"如果元素预计会同时更改\",{\"1\":{\"163\":1}}],[\"如果针对低端设备的应用程序不需要遮罩\",{\"1\":{\"160\":1}}],[\"如果世界的可见部分被\",{\"1\":{\"158\":1}}],[\"如果将数据拆分为每个关卡的独立资源\",{\"1\":{\"254\":1}}],[\"如果将\",{\"1\":{\"157\":1,\"174\":1,\"179\":1,\"275\":1}}],[\"如果打开完全全屏的\",{\"1\":{\"157\":1}}],[\"如果打开具有不透明背景的全屏\",{\"1\":{\"157\":1}}],[\"如果时间花费在\",{\"1\":{\"152\":1}}],[\"如果有疑问\",{\"1\":{\"151\":1}}],[\"如果有更多\",{\"1\":{\"109\":1}}],[\"如果层次结构中的顺序\",{\"1\":{\"149\":1}}],[\"如果顶点数据被标记为脏\",{\"1\":{\"146\":1}}],[\"如果顶点存储相同数量和类型的属性\",{\"1\":{\"106\":1}}],[\"如果场景使用一些蒙皮网格或粒子\",{\"1\":{\"134\":1}}],[\"如果多通道着色器有两个以上的通道\",{\"1\":{\"120\":1}}],[\"如果多个\",{\"1\":{\"109\":1,\"112\":1}}],[\"如果要用一个新的类型\",{\"1\":{\"394\":1}}],[\"如果要从池中取出对象\",{\"1\":{\"182\":1}}],[\"如果要强制所有平台的批处理大小\",{\"1\":{\"118\":1}}],[\"如果要补充\",{\"1\":{\"116\":1}}],[\"如果材质数据被标记为脏\",{\"1\":{\"146\":1}}],[\"如果材质内容没有变化\",{\"1\":{\"127\":1}}],[\"如果材质内容没有更改\",{\"1\":{\"112\":1}}],[\"如果材质没有该属性的默认值\",{\"1\":{\"118\":1}}],[\"如果此选项不可见\",{\"1\":{\"112\":1}}],[\"如果静态网格满足\",{\"1\":{\"109\":1}}],[\"如果图形驱动程序支持\",{\"1\":{\"230\":1}}],[\"如果图形\",{\"1\":{\"106\":1,\"225\":1}}],[\"如果值为\",{\"1\":{\"104\":2}}],[\"如果溢出计数随着运行时间的延长而增加\",{\"1\":{\"103\":1}}],[\"如果溢出计数保持稳定\",{\"1\":{\"103\":1}}],[\"如果溢出计数每帧都在增加\",{\"1\":{\"103\":1}}],[\"如果块大小增加过多\",{\"1\":{\"103\":1}}],[\"如果每帧数量都在增加\",{\"1\":{\"102\":1}}],[\"如果线程的栈分配器已满\",{\"1\":{\"102\":1}}],[\"如果分配器使用量超过配置的块大小\",{\"1\":{\"102\":1}}],[\"如果分配了一个大对象并且没有足够的连续空闲空间来容纳它\",{\"1\":{\"97\":1}}],[\"如果另一个线程删除分配\",{\"1\":{\"101\":1}}],[\"如果报告显示失败计数线性增加\",{\"1\":{\"100\":1}}],[\"如果桶分配器已满\",{\"1\":{\"100\":1,\"101\":1}}],[\"如果应用程序使用\",{\"1\":{\"275\":1}}],[\"如果应用程序内存有限\",{\"1\":{\"98\":1}}],[\"如果应用程序有大量空闲内存\",{\"1\":{\"98\":1}}],[\"如果您添加一个着色器和一个引用它的变体集合\",{\"1\":{\"242\":1}}],[\"如果您通过脚本加载它们\",{\"1\":{\"242\":1}}],[\"如果您不需要着色器设置\",{\"1\":{\"241\":1}}],[\"如果您不需要某些\",{\"1\":{\"136\":1}}],[\"如果您完成深度内存分析\",{\"1\":{\"239\":1}}],[\"如果您知道您的应用程序不需要它们\",{\"1\":{\"232\":1}}],[\"如果您未在\",{\"1\":{\"223\":1}}],[\"如果您从\",{\"1\":{\"222\":1}}],[\"如果您永远看不到靠墙的橱柜背面\",{\"1\":{\"217\":1}}],[\"如果您看到这种情况发生\",{\"1\":{\"215\":1}}],[\"如果您启用遮挡剔除\",{\"1\":{\"213\":1}}],[\"如果您需要将大量字符串连接在一起\",{\"1\":{\"280\":1}}],[\"如果您需要启用客户端设备\",{\"1\":{\"226\":1}}],[\"如果您需要了解其工作原理的基础知识\",{\"1\":{\"210\":1}}],[\"如果您需要在\",{\"1\":{\"118\":1}}],[\"如果您最终遇到可以通过更改\",{\"1\":{\"175\":1}}],[\"如果您怀疑设备上的批处理可能不同\",{\"1\":{\"148\":1}}],[\"如果您能以\",{\"1\":{\"137\":1}}],[\"如果您编译此着色器\",{\"1\":{\"136\":1}}],[\"如果您编写自己的可编程渲染管线\",{\"1\":{\"112\":1}}],[\"如果您正在编写自己的渲染循环\",{\"1\":{\"136\":1}}],[\"如果您正在创建自己的\",{\"1\":{\"135\":1}}],[\"如果您做了许多不同的着色器\",{\"1\":{\"134\":1}}],[\"如果您经常更改和重新编译\",{\"1\":{\"112\":1}}],[\"如果您想为复杂的计算分配临时\",{\"1\":{\"282\":1}}],[\"如果您想更精细地控制加载时间\",{\"1\":{\"237\":1}}],[\"如果您想更早地释放该内存\",{\"1\":{\"97\":1}}],[\"如果您想测量特定场景中\",{\"1\":{\"130\":1}}],[\"如果您想在运行时启用\",{\"1\":{\"128\":1}}],[\"如果您想多次渲染顶点数量较少的网格\",{\"1\":{\"117\":1}}],[\"如果您想使用完全相同的材质渲染许多相同的网格\",{\"1\":{\"112\":1}}],[\"如果您想使用\",{\"1\":{\"112\":1}}],[\"如果您想要批处理具有光照贴图的\",{\"1\":{\"110\":1}}],[\"如果您的代码访问数组值的\",{\"1\":{\"285\":1}}],[\"如果您的应用程序在繁重的资源加载操作期间生成大量临时对象\",{\"1\":{\"278\":1}}],[\"如果您的目标设备上没有\",{\"1\":{\"221\":1}}],[\"如果您的场景中没有启用\",{\"1\":{\"119\":1}}],[\"如果您的项目不包含同时使用\",{\"1\":{\"118\":2}}],[\"如果您的项目使用\",{\"1\":{\"108\":1,\"114\":1}}],[\"如果您的项目使用可编程渲染管线\",{\"1\":{\"106\":1}}],[\"如果您的着色器使用顶点位置\",{\"1\":{\"110\":2}}],[\"如果您希望保持较小的内存占用\",{\"1\":{\"109\":1}}],[\"如果您在着色器中使用以下定义\",{\"1\":{\"241\":1}}],[\"如果您在连续两帧中渲染到视图的颜色缓冲区和纹理\",{\"1\":{\"212\":1}}],[\"如果您在\",{\"1\":{\"120\":1,\"221\":1}}],[\"如果您在构建时执行静态批处理\",{\"1\":{\"109\":1}}],[\"如果您在运行时创建\",{\"1\":{\"109\":1}}],[\"如果您无法使用\",{\"1\":{\"108\":1}}],[\"如果您有两个材质资源除了它们的纹理之外完全相同\",{\"1\":{\"108\":1}}],[\"如果您将\",{\"1\":{\"106\":2}}],[\"如果您增加块大小\",{\"1\":{\"99\":1}}],[\"如果您保留了对已清理对象的引用\",{\"1\":{\"97\":1}}],[\"如果您使用的是不包含\",{\"1\":{\"279\":1}}],[\"如果您使用这些调用的非阻塞版本\",{\"1\":{\"222\":1}}],[\"如果您使用\",{\"1\":{\"96\":1,\"112\":2,\"222\":2}}],[\"如果是这样\",{\"1\":{\"134\":1}}],[\"如果是\",{\"1\":{\"74\":2,\"246\":1}}],[\"如果岗位要求或你简历中提及\",{\"1\":{\"71\":1}}],[\"如果你只想让主题展示你指定的摘要或在\",{\"1\":{\"358\":1}}],[\"如果你希望在文章列表中置顶特定文章\",{\"1\":{\"358\":1}}],[\"如果你不希望该列表包含一些特定的文章\",{\"1\":{\"358\":1}}],[\"如果你不想把编辑器脚本放在\",{\"1\":{\"297\":1}}],[\"如果你为一个文件夹定义了程序集\",{\"1\":{\"307\":1}}],[\"如果你需要根据项目是否使用特定版本的\",{\"1\":{\"302\":1}}],[\"如果你有其他包含\",{\"1\":{\"297\":1}}],[\"如果你遇到循环引用错误\",{\"1\":{\"293\":1}}],[\"如果你在一个其下有\",{\"1\":{\"307\":1}}],[\"如果你在\",{\"1\":{\"275\":1}}],[\"如果你在场景中或包含在\",{\"1\":{\"196\":1}}],[\"如果你想设置的摘要并不是你要在文章开头展示的内容\",{\"1\":{\"358\":1}}],[\"如果你想要全局禁用这些项目的显示\",{\"1\":{\"364\":1}}],[\"如果你想要为文章添加摘要\",{\"1\":{\"358\":1}}],[\"如果你想要访问\",{\"1\":{\"290\":1}}],[\"如果你想了解\",{\"1\":{\"208\":1}}],[\"如果你想访问只读材质\",{\"1\":{\"200\":1}}],[\"如果你能减小它们\",{\"1\":{\"208\":1}}],[\"如果你将映射到每个进程的所有物理\",{\"1\":{\"205\":1}}],[\"如果你的项目使用\",{\"1\":{\"196\":1}}],[\"如果你从一个空项目中移除\",{\"1\":{\"194\":1}}],[\"如果你对某个特定领域\",{\"1\":{\"66\":1,\"72\":1}}],[\"如果你发现\",{\"1\":{\"55\":1}}],[\"如果委托会被频繁添加\",{\"1\":{\"63\":1}}],[\"如果开启了遮挡剔除\",{\"1\":{\"60\":1}}],[\"如果一个程序每帧分配\",{\"1\":{\"278\":1}}],[\"如果一个类型的某个方法调用了另一个类型的某个方法\",{\"1\":{\"195\":1}}],[\"如果一个实例缺少属性\",{\"1\":{\"118\":1}}],[\"如果一个\",{\"1\":{\"60\":1,\"108\":1,\"136\":1,\"168\":1}}],[\"如果在垃圾回收器运行后\",{\"1\":{\"97\":1}}],[\"如果在\",{\"1\":{\"60\":3,\"130\":1,\"152\":2,\"166\":1,\"169\":1,\"180\":1}}],[\"如果需要一个具有多个维度的数组\",{\"1\":{\"265\":1}}],[\"如果需要暴露模型骨骼结构上的特定位置\",{\"1\":{\"248\":1}}],[\"如果需要本地化\",{\"1\":{\"169\":1}}],[\"如果需要\",{\"1\":{\"59\":1}}],[\"如果这些类仅在\",{\"1\":{\"267\":1}}],[\"如果这种情况频繁发生\",{\"1\":{\"173\":1}}],[\"如果这个字符串是用于\",{\"1\":{\"59\":1}}],[\"如果这里高\",{\"1\":{\"41\":1,\"55\":1}}],[\"如果\",{\"1\":{\"43\":1,\"57\":1,\"58\":1,\"106\":1,\"109\":1,\"110\":1,\"114\":1,\"116\":1,\"134\":3,\"149\":1,\"152\":4,\"155\":1,\"157\":1,\"161\":2,\"166\":3,\"168\":1,\"170\":3,\"180\":1,\"196\":1,\"222\":1,\"262\":1,\"275\":3,\"392\":2,\"395\":1}}],[\"如果闭包捕获了堆上的变量\",{\"1\":{\"42\":1}}],[\"如果高\",{\"1\":{\"41\":1}}],[\"如果游戏出现卡顿\",{\"0\":{\"41\":1}}],[\"如\",{\"1\":{\"14\":1,\"41\":2,\"42\":1,\"45\":1,\"46\":2,\"47\":2,\"48\":6,\"49\":2,\"51\":1,\"53\":1,\"55\":1,\"57\":3,\"58\":1,\"60\":5,\"61\":1,\"62\":1,\"65\":1,\"66\":1,\"70\":1,\"71\":1,\"72\":1,\"74\":1,\"75\":2,\"76\":1,\"79\":1,\"85\":1,\"88\":1,\"91\":1,\"110\":2,\"127\":1,\"131\":1,\"150\":2,\"152\":1,\"162\":1,\"169\":1,\"173\":1,\"212\":1,\"246\":1,\"269\":1,\"277\":1,\"284\":1,\"371\":1}}],[\"4s\",{\"1\":{\"246\":1}}],[\"4k\",{\"1\":{\"246\":2,\"388\":2}}],[\"4kb\",{\"1\":{\"198\":1}}],[\"454\",{\"1\":{\"238\":1}}],[\"466\",{\"1\":{\"238\":1}}],[\"460\",{\"1\":{\"205\":1}}],[\"4262400\",{\"1\":{\"233\":1}}],[\"424\",{\"1\":{\"102\":1,\"205\":1}}],[\"4340k\",{\"1\":{\"205\":1}}],[\"412\",{\"1\":{\"205\":1}}],[\"480\",{\"1\":{\"238\":1}}],[\"482\",{\"1\":{\"238\":5}}],[\"4824k\",{\"1\":{\"205\":1}}],[\"48668k\",{\"1\":{\"205\":1}}],[\"4867\",{\"1\":{\"205\":1}}],[\"48\",{\"1\":{\"104\":2}}],[\"48b\",{\"1\":{\"100\":2}}],[\"474\",{\"1\":{\"238\":1}}],[\"4742\",{\"1\":{\"100\":1}}],[\"4731\",{\"1\":{\"205\":1}}],[\"470\",{\"1\":{\"205\":1}}],[\"47261\",{\"1\":{\"205\":1}}],[\"47\",{\"1\":{\"101\":1,\"132\":1}}],[\"4778\",{\"1\":{\"100\":1}}],[\"492\",{\"1\":{\"205\":3}}],[\"49\",{\"1\":{\"100\":1,\"205\":1}}],[\"49766400\",{\"1\":{\"233\":1}}],[\"497\",{\"1\":{\"99\":1}}],[\"44\",{\"1\":{\"100\":1,\"205\":1}}],[\"4411\",{\"1\":{\"100\":1}}],[\"4mb\",{\"1\":{\"99\":1,\"100\":2,\"102\":2,\"104\":4,\"200\":1}}],[\"404\",{\"1\":{\"405\":1}}],[\"4096k\",{\"1\":{\"216\":1}}],[\"4095\",{\"1\":{\"201\":1}}],[\"40b\",{\"1\":{\"100\":1}}],[\"40\",{\"1\":{\"99\":2,\"101\":1,\"206\":1,\"367\":1}}],[\"4\",{\"0\":{\"83\":1,\"390\":1},\"1\":{\"14\":1,\"19\":1,\"26\":1,\"74\":2,\"75\":1,\"77\":1,\"100\":2,\"101\":1,\"102\":3,\"103\":1,\"104\":2,\"125\":4,\"132\":2,\"143\":1,\"144\":1,\"160\":1,\"163\":1,\"165\":4,\"168\":1,\"201\":1,\"205\":12,\"221\":2,\"227\":1,\"233\":1,\"252\":2,\"254\":1,\"275\":1,\"285\":1,\"303\":10,\"304\":4,\"367\":3,\"369\":1}}],[\"格式为\",{\"1\":{\"304\":1}}],[\"格式之间进行转换的应用程序来说\",{\"1\":{\"261\":1}}],[\"格式的颜色字符串\",{\"1\":{\"261\":1}}],[\"格式\",{\"1\":{\"14\":1,\"221\":1,\"305\":1,\"365\":1}}],[\"1kb\",{\"1\":{\"278\":1}}],[\"15mb\",{\"1\":{\"238\":1}}],[\"15\",{\"1\":{\"205\":1,\"238\":1}}],[\"15908\",{\"1\":{\"205\":1}}],[\"196\",{\"1\":{\"240\":1}}],[\"196934\",{\"1\":{\"205\":1}}],[\"1920\",{\"1\":{\"233\":2}}],[\"19\",{\"1\":{\"205\":1,\"233\":1,\"343\":1}}],[\"199\",{\"1\":{\"205\":1}}],[\"19788\",{\"1\":{\"205\":1}}],[\"19504\",{\"1\":{\"205\":1}}],[\"136396800\",{\"1\":{\"233\":1}}],[\"137\",{\"1\":{\"252\":1}}],[\"13744\",{\"1\":{\"205\":1}}],[\"13792k\",{\"1\":{\"205\":1}}],[\"132128\",{\"1\":{\"205\":1}}],[\"13\",{\"1\":{\"132\":1,\"233\":1,\"367\":1}}],[\"135\",{\"1\":{\"101\":1}}],[\"1231\",{\"1\":{\"205\":1}}],[\"12\",{\"1\":{\"205\":2,\"228\":1,\"233\":1,\"238\":1,\"377\":1}}],[\"1240\",{\"1\":{\"205\":1}}],[\"1264\",{\"1\":{\"205\":1}}],[\"1270\",{\"1\":{\"205\":1}}],[\"12168\",{\"1\":{\"205\":1}}],[\"12mb\",{\"1\":{\"194\":1,\"238\":1}}],[\"12ms\",{\"1\":{\"132\":1}}],[\"128\",{\"1\":{\"101\":1,\"271\":1}}],[\"128b\",{\"1\":{\"100\":2}}],[\"1m~2m\",{\"1\":{\"394\":1}}],[\"1m\",{\"1\":{\"392\":1}}],[\"1ms\",{\"1\":{\"130\":1}}],[\"1mb\",{\"1\":{\"104\":2}}],[\"14mb\",{\"1\":{\"238\":1}}],[\"1440\",{\"1\":{\"205\":1,\"233\":2}}],[\"14\",{\"1\":{\"102\":1,\"205\":2,\"238\":1}}],[\"14299\",{\"1\":{\"100\":1}}],[\"16588800\",{\"1\":{\"233\":1}}],[\"16x16\",{\"1\":{\"212\":1}}],[\"168\",{\"1\":{\"206\":1}}],[\"16397\",{\"1\":{\"205\":1}}],[\"166356\",{\"1\":{\"205\":1}}],[\"161\",{\"1\":{\"205\":1}}],[\"16mbplayer\",{\"1\":{\"104\":1}}],[\"16mb\",{\"1\":{\"102\":1,\"104\":5}}],[\"169583\",{\"1\":{\"100\":1}}],[\"16b\",{\"1\":{\"100\":5,\"104\":2}}],[\"16kb\",{\"1\":{\"100\":2}}],[\"16\",{\"1\":{\"99\":4,\"100\":1,\"101\":3,\"102\":1,\"104\":2,\"136\":1,\"168\":1,\"205\":1,\"212\":1,\"233\":3,\"275\":1,\"280\":1,\"367\":1,\"369\":1}}],[\"115\",{\"1\":{\"252\":1}}],[\"11858\",{\"1\":{\"205\":1}}],[\"112\",{\"1\":{\"205\":2}}],[\"112b\",{\"1\":{\"100\":2}}],[\"11666\",{\"1\":{\"205\":1}}],[\"116\",{\"1\":{\"205\":2}}],[\"11\",{\"1\":{\"30\":1,\"127\":1,\"132\":1}}],[\"1872\",{\"1\":{\"205\":1}}],[\"18724\",{\"1\":{\"100\":1}}],[\"180\",{\"1\":{\"110\":1,\"246\":1}}],[\"18\",{\"1\":{\"27\":1,\"102\":2}}],[\"17587k\",{\"1\":{\"205\":1}}],[\"1732\",{\"1\":{\"205\":1}}],[\"17760\",{\"1\":{\"205\":1}}],[\"1760\",{\"1\":{\"205\":1}}],[\"17mb\",{\"1\":{\"194\":1}}],[\"17\",{\"1\":{\"19\":1,\"100\":2,\"205\":1}}],[\"102297600\",{\"1\":{\"233\":1}}],[\"1024x1024\",{\"1\":{\"247\":1}}],[\"1024\",{\"1\":{\"201\":2,\"233\":2}}],[\"1080\",{\"1\":{\"233\":2}}],[\"1080p\",{\"1\":{\"233\":2}}],[\"10834k\",{\"1\":{\"205\":1}}],[\"10890859209\",{\"1\":{\"205\":1}}],[\"10882940478\",{\"1\":{\"205\":1}}],[\"1096\",{\"1\":{\"205\":1}}],[\"109\",{\"1\":{\"135\":1}}],[\"100x100x100\",{\"1\":{\"265\":1}}],[\"100k\",{\"1\":{\"252\":1}}],[\"100\",{\"1\":{\"52\":1,\"56\":1,\"122\":1,\"205\":1,\"216\":1,\"230\":1,\"265\":2,\"271\":2}}],[\"10\",{\"0\":{\"91\":1},\"1\":{\"19\":1,\"27\":1,\"48\":1,\"52\":1,\"102\":1,\"103\":1,\"127\":4,\"134\":1,\"137\":1,\"180\":1,\"251\":1,\"265\":1,\"271\":1,\"279\":1,\"339\":1,\"340\":1,\"394\":3}}],[\"1\",{\"0\":{\"60\":1,\"79\":1,\"387\":1},\"1\":{\"14\":1,\"17\":1,\"26\":2,\"27\":1,\"57\":1,\"60\":2,\"74\":2,\"75\":2,\"76\":2,\"77\":1,\"99\":1,\"100\":3,\"101\":2,\"102\":2,\"103\":1,\"104\":2,\"108\":2,\"114\":5,\"121\":6,\"122\":4,\"123\":3,\"124\":1,\"125\":1,\"130\":1,\"132\":3,\"136\":10,\"144\":1,\"148\":2,\"160\":7,\"163\":1,\"169\":2,\"172\":3,\"197\":1,\"200\":2,\"201\":1,\"203\":1,\"205\":9,\"206\":2,\"213\":2,\"217\":2,\"233\":1,\"236\":1,\"238\":2,\"241\":1,\"247\":1,\"250\":1,\"252\":2,\"254\":1,\"270\":1,\"271\":3,\"272\":1,\"275\":3,\"284\":1,\"292\":1,\"302\":2,\"303\":12,\"304\":1,\"305\":2,\"312\":1,\"321\":1,\"360\":1,\"369\":2,\"377\":1,\"388\":1,\"394\":1}}],[\"吴恩达老师的反思式三步翻译法\",{\"1\":{\"14\":1}}],[\"翻译不完整\",{\"1\":{\"14\":1}}],[\"翻译专业术语的时候\",{\"1\":{\"14\":1}}],[\"翻译要遵循原文\",{\"1\":{\"14\":1}}],[\"翻译\",{\"0\":{\"14\":1},\"1\":{\"14\":1,\"30\":1}}],[\"排序与剪裁\",{\"1\":{\"326\":1}}],[\"排序和分析其几何形状的可绘制元素列表中\",{\"1\":{\"170\":1}}],[\"排序算法\",{\"1\":{\"66\":1,\"71\":1}}],[\"排版实践\",{\"1\":{\"169\":1}}],[\"排列顺序\",{\"1\":{\"93\":1}}],[\"排行版\",{\"1\":{\"13\":1}}],[\"排名越靠前\",{\"1\":{\"365\":2}}],[\"排名\",{\"0\":{\"13\":1}}],[\"lzma\",{\"1\":{\"394\":5}}],[\"lz4hc\",{\"1\":{\"394\":1}}],[\"lz4\",{\"1\":{\"394\":6}}],[\"lmk\",{\"1\":{\"388\":4}}],[\"lmarena\",{\"1\":{\"13\":2}}],[\"ll\",{\"1\":{\"145\":1}}],[\"llm\",{\"1\":{\"12\":1}}],[\"lwrp\",{\"1\":{\"128\":2,\"129\":1,\"132\":1,\"136\":2}}],[\"l2cache\",{\"1\":{\"387\":1}}],[\"l2\",{\"1\":{\"116\":1}}],[\"l1cache\",{\"1\":{\"387\":1}}],[\"l1\",{\"1\":{\"116\":1}}],[\"l0\",{\"1\":{\"116\":1}}],[\"lppv\",{\"1\":{\"116\":3}}],[\"lsp\",{\"1\":{\"34\":1}}],[\"lastupdated\",{\"1\":{\"364\":1}}],[\"launcher2\",{\"1\":{\"205\":1}}],[\"latest\",{\"1\":{\"339\":1}}],[\"latestbuild\",{\"1\":{\"199\":1}}],[\"latency\",{\"1\":{\"201\":1}}],[\"lateprerender\",{\"1\":{\"144\":2}}],[\"lateupdate\",{\"1\":{\"41\":1,\"67\":2,\"74\":1,\"79\":2,\"267\":2}}],[\"layoutroot\",{\"1\":{\"181\":6}}],[\"layoutrebuilder\",{\"1\":{\"145\":1,\"181\":2}}],[\"layoutrebuildqueue\",{\"1\":{\"144\":6}}],[\"layoutelement\",{\"1\":{\"181\":1}}],[\"layoutgroup\",{\"1\":{\"170\":1}}],[\"layouts\",{\"1\":{\"145\":4}}],[\"layoutcomplete\",{\"1\":{\"144\":1}}],[\"layout\",{\"0\":{\"145\":1,\"181\":1},\"1\":{\"100\":1,\"139\":1,\"141\":5,\"144\":8,\"145\":7,\"150\":2,\"152\":3,\"170\":4,\"172\":5,\"181\":18,\"205\":1,\"358\":1,\"361\":1}}],[\"layer\",{\"1\":{\"44\":1,\"60\":1,\"213\":4,\"218\":1}}],[\"layermask\",{\"1\":{\"41\":1}}],[\"large\",{\"1\":{\"99\":1,\"100\":2,\"101\":3,\"103\":1,\"112\":1,\"367\":1}}],[\"lag\",{\"1\":{\"87\":1}}],[\"label\",{\"1\":{\"60\":1,\"76\":1,\"305\":2,\"390\":4}}],[\"labs\",{\"1\":{\"17\":1}}],[\"lambda\",{\"1\":{\"42\":1,\"55\":1,\"74\":1}}],[\"languagekey\",{\"1\":{\"377\":3}}],[\"languagemgr\",{\"1\":{\"377\":4}}],[\"languages\",{\"0\":{\"328\":1}}],[\"language\",{\"1\":{\"34\":1,\"47\":1,\"57\":1,\"192\":1,\"330\":2,\"371\":1,\"377\":1}}],[\"lantern\",{\"1\":{\"31\":1}}],[\"live\",{\"1\":{\"274\":2}}],[\"limitations\",{\"0\":{\"204\":1}}],[\"lit\",{\"1\":{\"129\":1}}],[\"lightbulb\",{\"1\":{\"361\":1}}],[\"lighting\",{\"1\":{\"121\":1,\"160\":1,\"210\":1,\"212\":3,\"329\":1}}],[\"lightprobes\",{\"1\":{\"116\":1,\"317\":1}}],[\"lightprobeusage\",{\"1\":{\"116\":2}}],[\"lightmaps\",{\"1\":{\"118\":1,\"216\":1,\"236\":1}}],[\"lightmap\",{\"1\":{\"116\":3,\"118\":1,\"216\":1,\"236\":1}}],[\"light\",{\"1\":{\"116\":6,\"118\":2,\"121\":1,\"216\":1,\"329\":6}}],[\"lifo\",{\"1\":{\"98\":1,\"102\":1}}],[\"list的\",{\"1\":{\"369\":1}}],[\"listofnumbers\",{\"1\":{\"283\":4}}],[\"listpool<component>\",{\"1\":{\"181\":3}}],[\"list\",{\"0\":{\"369\":1,\"372\":1},\"1\":{\"66\":1,\"71\":1,\"81\":1,\"271\":3,\"282\":4,\"283\":1,\"309\":1,\"343\":1,\"369\":6,\"372\":1}}],[\"list<vector3>\",{\"1\":{\"285\":2}}],[\"list<float>\",{\"1\":{\"282\":4,\"283\":2}}],[\"list<int>\",{\"1\":{\"57\":1,\"60\":1,\"271\":1}}],[\"list<queststate>\",{\"1\":{\"56\":1}}],[\"list<t>\",{\"1\":{\"42\":1,\"48\":1,\"60\":5,\"74\":1}}],[\"listen\",{\"1\":{\"45\":1}}],[\"license\",{\"1\":{\"34\":1,\"362\":1}}],[\"line\",{\"1\":{\"108\":1,\"110\":1,\"367\":2}}],[\"linear\",{\"0\":{\"103\":1},\"1\":{\"98\":1,\"325\":2,\"326\":1}}],[\"linq等问题\",{\"1\":{\"60\":1}}],[\"linq\",{\"1\":{\"55\":1,\"68\":1,\"74\":2}}],[\"link\",{\"1\":{\"31\":1,\"196\":1,\"335\":2,\"336\":9,\"360\":1}}],[\"linux\",{\"1\":{\"30\":2,\"100\":1,\"205\":2,\"387\":1,\"388\":2}}],[\"library\",{\"1\":{\"30\":1,\"199\":1,\"289\":2}}],[\"libs\",{\"1\":{\"22\":1}}],[\"lib\",{\"1\":{\"22\":1}}],[\"liblibai\",{\"1\":{\"12\":1}}],[\"lemon\",{\"1\":{\"313\":1}}],[\"len\",{\"1\":{\"271\":4}}],[\"length\",{\"1\":{\"252\":4,\"280\":2,\"281\":1,\"285\":5,\"369\":7}}],[\"legacy\",{\"1\":{\"110\":1}}],[\"level\",{\"0\":{\"218\":1},\"1\":{\"55\":1,\"60\":2,\"83\":1,\"98\":1,\"192\":3,\"218\":1,\"330\":2}}],[\"leetcode\",{\"1\":{\"30\":1,\"31\":1}}],[\"leaks\",{\"1\":{\"96\":1}}],[\"leaderboard\",{\"1\":{\"13\":2}}],[\"learning\",{\"0\":{\"332\":1},\"1\":{\"22\":1,\"23\":1,\"332\":4}}],[\"learnopengl\",{\"1\":{\"20\":3}}],[\"learn\",{\"1\":{\"4\":1,\"22\":1,\"393\":1}}],[\"ldo\",{\"1\":{\"26\":2}}],[\"lockfile\",{\"1\":{\"339\":1}}],[\"localhost\",{\"1\":{\"350\":1}}],[\"local\",{\"0\":{\"102\":1},\"1\":{\"98\":1,\"205\":2}}],[\"locality\",{\"1\":{\"46\":1,\"75\":1}}],[\"loop\",{\"1\":{\"285\":1}}],[\"lots\",{\"1\":{\"280\":1}}],[\"low\",{\"1\":{\"104\":1,\"217\":1,\"236\":1,\"388\":2}}],[\"logo\",{\"1\":{\"367\":4}}],[\"logic\",{\"1\":{\"331\":2}}],[\"logerror\",{\"1\":{\"279\":1}}],[\"logexception\",{\"1\":{\"144\":2}}],[\"logwarning\",{\"1\":{\"279\":1}}],[\"logmsg\",{\"1\":{\"263\":2}}],[\"logmessagereceived\",{\"1\":{\"91\":1}}],[\"logs\",{\"1\":{\"263\":1}}],[\"logger\",{\"1\":{\"263\":1}}],[\"log\",{\"1\":{\"98\":1,\"200\":1,\"238\":1,\"263\":2,\"309\":2,\"338\":1}}],[\"lods\",{\"1\":{\"218\":2}}],[\"lodgroups\",{\"1\":{\"200\":1}}],[\"lodfade\",{\"1\":{\"136\":1}}],[\"lod\",{\"0\":{\"218\":1},\"1\":{\"52\":1,\"55\":2,\"83\":1,\"118\":1,\"121\":1,\"122\":1,\"218\":16,\"242\":1,\"317\":1}}],[\"loxodon\",{\"1\":{\"22\":1}}],[\"loadfromcacheordownload\",{\"1\":{\"269\":2}}],[\"loadfromfile\",{\"1\":{\"65\":1,\"70\":1}}],[\"loadasync\",{\"1\":{\"269\":2}}],[\"loadassetasync\",{\"1\":{\"222\":1,\"269\":2}}],[\"loadasset\",{\"1\":{\"222\":1}}],[\"loadscene\",{\"1\":{\"222\":1}}],[\"load\",{\"1\":{\"17\":1,\"201\":1,\"222\":2}}],[\"luban\",{\"1\":{\"22\":2,\"377\":1}}],[\"lua的rawget\",{\"1\":{\"93\":1}}],[\"lua的shader入门玩转\",{\"1\":{\"19\":1}}],[\"lua5\",{\"1\":{\"26\":1}}],[\"lua逆向\",{\"1\":{\"26\":1}}],[\"luadec\",{\"1\":{\"26\":1}}],[\"luajit\",{\"1\":{\"26\":1}}],[\"luaprofiler\",{\"1\":{\"22\":1}}],[\"lua\",{\"0\":{\"26\":1},\"1\":{\"19\":4,\"22\":2,\"26\":14,\"31\":1,\"34\":2,\"65\":1,\"66\":1,\"71\":2,\"389\":1}}],[\"开了不如不开\",{\"1\":{\"397\":1}}],[\"开源的\",{\"1\":{\"371\":1}}],[\"开源库\",{\"0\":{\"11\":1}}],[\"开始\",{\"1\":{\"165\":1,\"169\":1,\"177\":1,\"185\":1,\"234\":1,\"261\":1,\"266\":1,\"371\":1}}],[\"开始时调用此函数\",{\"1\":{\"118\":1}}],[\"开始出现效率低下的阈值取决于\",{\"1\":{\"117\":1}}],[\"开关\",{\"1\":{\"118\":2}}],[\"开启时\",{\"1\":{\"134\":1}}],[\"开启还是关闭\",{\"1\":{\"134\":1}}],[\"开启\",{\"1\":{\"60\":1}}],[\"开销在于设置渲染状态\",{\"1\":{\"58\":1}}],[\"开销\",{\"1\":{\"42\":1,\"43\":1,\"108\":1,\"200\":1}}],[\"开销和着色器\",{\"1\":{\"205\":1}}],[\"开销和\",{\"1\":{\"41\":1}}],[\"开发的\",{\"1\":{\"388\":1}}],[\"开发效率自然就高\",{\"1\":{\"381\":1}}],[\"开发框架\",{\"1\":{\"371\":1}}],[\"开发\",{\"1\":{\"321\":3}}],[\"开发基础课程\",{\"1\":{\"312\":1}}],[\"开发版本和发布版本比较\",{\"1\":{\"100\":2}}],[\"开发环境搭建\",{\"1\":{\"19\":1}}],[\"开发者\",{\"1\":{\"7\":1}}],[\"sgen\",{\"1\":{\"401\":2}}],[\"s9lqyunprpjznnalsb9qoq\",{\"1\":{\"394\":1}}],[\"ss\",{\"1\":{\"365\":1}}],[\"ssh命令详解\",{\"1\":{\"30\":1}}],[\"sfc\",{\"1\":{\"335\":1}}],[\"sb\",{\"1\":{\"280\":4}}],[\"slimsearch\",{\"1\":{\"357\":6}}],[\"slicing\",{\"1\":{\"57\":1,\"222\":1}}],[\"slicol\",{\"1\":{\"22\":1}}],[\"slow\",{\"1\":{\"260\":1}}],[\"symbols\",{\"1\":{\"301\":3}}],[\"sync\",{\"1\":{\"218\":1,\"275\":2}}],[\"systems\",{\"1\":{\"108\":1,\"110\":3}}],[\"system会在editor下检测多线程对同一\",{\"1\":{\"60\":1}}],[\"system\",{\"1\":{\"44\":1,\"46\":4,\"60\":3,\"75\":2,\"76\":1,\"85\":1,\"116\":1,\"181\":3,\"185\":1,\"205\":3,\"276\":5,\"279\":1,\"280\":2,\"281\":2,\"282\":1,\"308\":4,\"313\":1,\"317\":1,\"318\":1,\"319\":2,\"331\":1,\"338\":1}}],[\"s8\",{\"1\":{\"216\":1,\"233\":1}}],[\"s6\",{\"1\":{\"216\":1}}],[\"snapshot\",{\"1\":{\"390\":1}}],[\"snapdragon\",{\"1\":{\"200\":1}}],[\"snipaste\",{\"1\":{\"33\":1}}],[\"snippets\",{\"1\":{\"19\":1}}],[\"swapcached\",{\"1\":{\"205\":1}}],[\"swapped\",{\"1\":{\"205\":2}}],[\"swappss\",{\"1\":{\"205\":2}}],[\"swap\",{\"1\":{\"203\":2,\"205\":2}}],[\"sweep\",{\"1\":{\"195\":1,\"326\":2}}],[\"switching\",{\"1\":{\"212\":1}}],[\"switch\",{\"1\":{\"145\":1,\"146\":1}}],[\"sql\",{\"1\":{\"205\":2}}],[\"sqlite\",{\"1\":{\"33\":1}}],[\"squeezing\",{\"1\":{\"177\":1,\"185\":1}}],[\"sdf\",{\"1\":{\"169\":2}}],[\"sdk\",{\"1\":{\"30\":1,\"206\":1}}],[\"srcalpha\",{\"1\":{\"160\":1}}],[\"srpbatcherprofiler\",{\"1\":{\"130\":2,\"131\":1,\"134\":3}}],[\"srpbatcher\",{\"1\":{\"127\":1}}],[\"srp\",{\"0\":{\"125\":1,\"127\":1,\"128\":1,\"129\":1,\"135\":1,\"136\":1},\"1\":{\"41\":2,\"43\":1,\"50\":2,\"55\":1,\"58\":5,\"60\":4,\"74\":2,\"83\":1,\"106\":7,\"108\":2,\"109\":1,\"110\":1,\"112\":59,\"114\":9,\"115\":1,\"118\":1,\"123\":1,\"124\":2,\"125\":2,\"127\":5,\"128\":5,\"129\":8,\"130\":4,\"131\":1,\"132\":2,\"133\":2,\"134\":8,\"135\":12,\"136\":4,\"137\":6,\"215\":2,\"318\":1}}],[\"sv\",{\"1\":{\"122\":2,\"160\":2}}],[\"svn\",{\"1\":{\"33\":1,\"315\":1}}],[\"smoothness\",{\"1\":{\"121\":2}}],[\"smallcapacity\",{\"1\":{\"369\":1}}],[\"small\",{\"1\":{\"104\":1}}],[\"smell\",{\"1\":{\"53\":1}}],[\"show\",{\"1\":{\"112\":2}}],[\"shell\",{\"1\":{\"97\":2,\"205\":5}}],[\"shape\",{\"1\":{\"322\":1}}],[\"sharing\",{\"0\":{\"197\":1},\"1\":{\"393\":2}}],[\"shar\",{\"1\":{\"112\":1,\"129\":1}}],[\"sharedmaterials\",{\"1\":{\"286\":1}}],[\"sharedmaterial代替\",{\"1\":{\"216\":1}}],[\"sharedmaterial\",{\"1\":{\"108\":1,\"200\":1}}],[\"shared\",{\"1\":{\"100\":3,\"103\":1,\"104\":1,\"212\":2,\"360\":1,\"361\":1}}],[\"sharp\",{\"1\":{\"22\":1}}],[\"sharpziplib\",{\"1\":{\"22\":1}}],[\"shadow\",{\"1\":{\"150\":1,\"152\":1,\"329\":4}}],[\"shadowloop\",{\"1\":{\"125\":1}}],[\"shadows\",{\"1\":{\"121\":1,\"130\":1}}],[\"shadowsocks\",{\"1\":{\"33\":1}}],[\"shadergraph\",{\"1\":{\"318\":3,\"319\":3}}],[\"shaderlab\",{\"1\":{\"228\":1,\"239\":2,\"390\":1}}],[\"shader的ztest设置成了\",{\"1\":{\"60\":1}}],[\"shader问题\",{\"1\":{\"60\":1}}],[\"shaders\",{\"0\":{\"235\":1,\"236\":1,\"244\":1},\"1\":{\"31\":1,\"106\":1,\"112\":1,\"115\":1,\"116\":2,\"118\":7,\"119\":2,\"120\":5,\"160\":1,\"205\":1,\"210\":1,\"216\":1,\"237\":1,\"239\":1,\"244\":1}}],[\"shadertoy\",{\"1\":{\"20\":1}}],[\"shader在线编辑器3\",{\"1\":{\"20\":1}}],[\"shader在线编辑器2\",{\"1\":{\"20\":1}}],[\"shader在线编辑器1\",{\"1\":{\"20\":1}}],[\"shader\",{\"0\":{\"51\":3,\"121\":1,\"122\":1,\"238\":1,\"239\":1,\"240\":1,\"241\":1,\"242\":1,\"243\":1},\"1\":{\"19\":1,\"20\":1,\"41\":6,\"43\":3,\"50\":1,\"51\":5,\"55\":1,\"58\":10,\"60\":2,\"66\":1,\"72\":1,\"74\":1,\"76\":8,\"90\":2,\"93\":1,\"112\":9,\"115\":2,\"118\":7,\"119\":2,\"120\":1,\"121\":3,\"122\":5,\"127\":5,\"135\":1,\"136\":1,\"139\":1,\"149\":1,\"160\":2,\"215\":1,\"237\":2,\"238\":6,\"240\":1,\"244\":1,\"257\":4,\"313\":3,\"317\":1,\"318\":3,\"319\":1,\"322\":1,\"329\":1,\"330\":2,\"390\":5}}],[\"s0nreir\",{\"1\":{\"94\":1}}],[\"skybox\",{\"1\":{\"211\":1,\"212\":2}}],[\"skinned\",{\"1\":{\"108\":1,\"214\":2,\"217\":1}}],[\"skinnedmeshrenderers\",{\"1\":{\"115\":1}}],[\"skinnedmesh\",{\"1\":{\"58\":1}}],[\"sketchfab\",{\"1\":{\"30\":1}}],[\"sunflower\",{\"1\":{\"304\":1}}],[\"super\",{\"1\":{\"240\":1}}],[\"superbible\",{\"1\":{\"20\":2}}],[\"supports\",{\"1\":{\"236\":1}}],[\"supported\",{\"1\":{\"225\":2,\"228\":2}}],[\"summary\",{\"1\":{\"205\":2,\"206\":1}}],[\"sumneko\",{\"1\":{\"34\":1}}],[\"surf\",{\"1\":{\"121\":2}}],[\"surfaceview\",{\"1\":{\"205\":1}}],[\"surfaceoutputstandard\",{\"1\":{\"121\":1}}],[\"surface\",{\"0\":{\"121\":1},\"1\":{\"115\":1,\"116\":1,\"118\":2,\"119\":2,\"120\":2,\"121\":2,\"122\":1,\"216\":1}}],[\"sub\",{\"1\":{\"141\":1,\"143\":1,\"163\":2,\"390\":1}}],[\"substance\",{\"1\":{\"323\":1}}],[\"subshader\",{\"1\":{\"121\":1,\"122\":1,\"160\":1}}],[\"subsections\",{\"1\":{\"100\":9}}],[\"sublimelsp\",{\"1\":{\"34\":1}}],[\"sublime\",{\"0\":{\"34\":1},\"1\":{\"34\":1}}],[\"see\",{\"1\":{\"339\":2}}],[\"separating\",{\"1\":{\"326\":2}}],[\"semantic\",{\"1\":{\"305\":1}}],[\"secrets\",{\"1\":{\"339\":1}}],[\"secret\",{\"1\":{\"339\":1}}],[\"second\",{\"1\":{\"275\":1}}],[\"section\",{\"1\":{\"206\":1}}],[\"segregated\",{\"1\":{\"98\":1}}],[\"sendwillrenderercanvases\",{\"1\":{\"169\":1}}],[\"sendwillrendercanvases\",{\"1\":{\"148\":3,\"150\":3,\"152\":3}}],[\"sendmessage\",{\"1\":{\"41\":1,\"55\":1}}],[\"sentry\",{\"1\":{\"91\":1}}],[\"senior的职责\",{\"1\":{\"60\":1}}],[\"senior\",{\"1\":{\"54\":1,\"59\":1,\"60\":1}}],[\"setactive\",{\"1\":{\"279\":3}}],[\"setalldirty\",{\"1\":{\"170\":1}}],[\"setresolution\",{\"1\":{\"233\":1}}],[\"set\",{\"1\":{\"205\":5,\"257\":1,\"271\":5,\"273\":1,\"343\":2,\"369\":1,\"388\":3}}],[\"setdirty\",{\"1\":{\"181\":1}}],[\"setlayoutvertical\",{\"1\":{\"145\":1}}],[\"setlayouthorizontal\",{\"1\":{\"145\":1}}],[\"setshaderpass\",{\"1\":{\"135\":2}}],[\"setpixel\",{\"1\":{\"247\":1}}],[\"setpropertyblock\",{\"1\":{\"123\":1}}],[\"setpasscall\",{\"1\":{\"127\":1}}],[\"setpass\",{\"1\":{\"41\":2,\"43\":1,\"58\":2,\"60\":1,\"74\":2}}],[\"setcolor\",{\"1\":{\"123\":1}}],[\"setup\",{\"1\":{\"118\":1,\"120\":1,\"122\":3,\"238\":5,\"339\":2,\"340\":1}}],[\"settings\",{\"1\":{\"42\":1,\"100\":2,\"104\":4,\"109\":2,\"110\":2,\"119\":2,\"190\":7,\"192\":4,\"193\":1,\"200\":2,\"201\":3,\"212\":1,\"223\":1,\"225\":2,\"226\":1,\"228\":1,\"232\":2,\"234\":2,\"237\":1,\"241\":1,\"244\":4,\"274\":2,\"275\":5,\"300\":1,\"301\":2}}],[\"search\",{\"1\":{\"31\":1,\"331\":1}}],[\"serialize\",{\"1\":{\"394\":5}}],[\"serializabledictionary\",{\"1\":{\"22\":1}}],[\"services\",{\"1\":{\"205\":1}}],[\"server\",{\"1\":{\"34\":1,\"87\":1,\"205\":1}}],[\"servers\",{\"1\":{\"10\":2}}],[\"signs\",{\"1\":{\"360\":1,\"361\":1}}],[\"since\",{\"1\":{\"181\":1}}],[\"singlethreaded\",{\"0\":{\"224\":1},\"1\":{\"223\":1}}],[\"singleton\",{\"1\":{\"85\":1,\"404\":1}}],[\"singlepassinstanced\",{\"1\":{\"133\":2}}],[\"single\",{\"1\":{\"50\":1}}],[\"simplygon\",{\"1\":{\"218\":1}}],[\"simplestinstancedshader\",{\"1\":{\"122\":1}}],[\"simple\",{\"1\":{\"31\":1}}],[\"similar\",{\"1\":{\"145\":1}}],[\"size++\",{\"1\":{\"369\":2}}],[\"size=<new\",{\"1\":{\"104\":1}}],[\"size\",{\"0\":{\"208\":1,\"393\":1},\"1\":{\"99\":1,\"100\":3,\"101\":3,\"102\":5,\"103\":1,\"104\":41,\"201\":1,\"205\":9,\"233\":1,\"367\":1,\"369\":10,\"388\":3,\"393\":1,\"394\":1}}],[\"sidebarzh\",{\"1\":{\"335\":1}}],[\"sidebaroptions\",{\"1\":{\"335\":2}}],[\"sidebar\",{\"0\":{\"335\":1},\"1\":{\"361\":4}}],[\"side\",{\"1\":{\"87\":1}}],[\"situation\",{\"1\":{\"52\":1,\"92\":1}}],[\"siki学院\",{\"1\":{\"30\":1}}],[\"style\",{\"1\":{\"361\":1}}],[\"sticky\",{\"1\":{\"358\":2,\"365\":1}}],[\"still\",{\"1\":{\"181\":1}}],[\"st\",{\"1\":{\"226\":1}}],[\"store\",{\"1\":{\"169\":1,\"283\":1,\"307\":1,\"313\":1,\"338\":1}}],[\"storing\",{\"1\":{\"145\":1}}],[\"storage\",{\"0\":{\"102\":1},\"1\":{\"98\":1,\"387\":1}}],[\"stop\",{\"1\":{\"55\":1,\"275\":1}}],[\"stuff\",{\"1\":{\"289\":2}}],[\"stutter\",{\"1\":{\"60\":1}}],[\"studio\",{\"0\":{\"206\":1},\"1\":{\"7\":2,\"204\":1,\"206\":2}}],[\"str\",{\"1\":{\"377\":4}}],[\"streaming\",{\"1\":{\"201\":3}}],[\"strip\",{\"1\":{\"192\":1,\"193\":3}}],[\"stripping\",{\"0\":{\"191\":1,\"194\":1},\"1\":{\"119\":1,\"190\":1,\"191\":2,\"192\":2}}],[\"stringarray\",{\"1\":{\"280\":7}}],[\"strings\",{\"1\":{\"280\":3}}],[\"stringtohash\",{\"1\":{\"257\":1}}],[\"stringcomparison\",{\"1\":{\"251\":2,\"252\":1}}],[\"string\",{\"1\":{\"42\":2,\"48\":1,\"55\":1,\"56\":1,\"59\":6,\"60\":2,\"251\":1,\"252\":14,\"263\":1,\"271\":2,\"280\":12,\"365\":4,\"377\":7}}],[\"stringbuilder\",{\"1\":{\"41\":1,\"42\":1,\"55\":1,\"59\":1,\"60\":1,\"63\":1,\"68\":1,\"74\":1,\"81\":1,\"250\":2,\"280\":4}}],[\"structure\",{\"1\":{\"361\":8}}],[\"structures\",{\"1\":{\"331\":1}}],[\"struct\",{\"1\":{\"41\":1,\"42\":1,\"46\":1,\"48\":5,\"55\":1,\"60\":6,\"63\":3,\"68\":1,\"75\":1,\"121\":1,\"122\":2,\"160\":2,\"404\":1}}],[\"structs\",{\"1\":{\"41\":1,\"42\":1,\"189\":1}}],[\"stencil\",{\"0\":{\"232\":1},\"1\":{\"212\":1,\"232\":1,\"329\":1}}],[\"steps\",{\"1\":{\"339\":1}}],[\"step\",{\"1\":{\"41\":1}}],[\"steamcommunity\",{\"1\":{\"30\":1}}],[\"steam\",{\"1\":{\"30\":1,\"394\":1}}],[\"steamworkshopdownloader\",{\"1\":{\"30\":1}}],[\"standalone\",{\"1\":{\"164\":2}}],[\"standardspecular\",{\"1\":{\"119\":1}}],[\"standard\",{\"1\":{\"115\":1,\"116\":1,\"119\":1,\"121\":2,\"134\":2,\"165\":1,\"196\":1,\"238\":5,\"289\":4,\"371\":1}}],[\"stats\",{\"1\":{\"98\":1,\"216\":1}}],[\"state\",{\"1\":{\"75\":1,\"106\":1,\"331\":1}}],[\"staticbatchingutility\",{\"1\":{\"109\":3,\"216\":1}}],[\"static\",{\"1\":{\"41\":2,\"43\":1,\"55\":1,\"60\":1,\"64\":1,\"69\":1,\"74\":1,\"83\":1,\"106\":1,\"108\":2,\"109\":6,\"116\":1,\"145\":1,\"181\":1,\"216\":2,\"217\":1,\"218\":1,\"252\":2,\"263\":2,\"272\":2,\"288\":1,\"309\":2}}],[\"stay\",{\"1\":{\"62\":2,\"67\":2}}],[\"starter\",{\"1\":{\"346\":2}}],[\"started\",{\"1\":{\"335\":1,\"336\":1,\"360\":1,\"361\":2}}],[\"startswith\",{\"1\":{\"252\":5,\"271\":1}}],[\"start\",{\"1\":{\"58\":1,\"59\":1,\"62\":2,\"67\":2,\"77\":1,\"79\":2,\"118\":2,\"121\":1,\"122\":1,\"123\":1,\"136\":1,\"279\":1,\"280\":1}}],[\"startcoroutine\",{\"1\":{\"57\":1}}],[\"star\",{\"1\":{\"52\":1,\"72\":1,\"92\":1,\"358\":2,\"365\":1}}],[\"starforce\",{\"1\":{\"22\":1}}],[\"stack<gameobject>\",{\"1\":{\"279\":2}}],[\"stack<t>\",{\"1\":{\"64\":1}}],[\"stacks\",{\"1\":{\"274\":1}}],[\"stackoverflow\",{\"1\":{\"265\":1}}],[\"stackallocators\",{\"1\":{\"102\":1}}],[\"stack\",{\"0\":{\"102\":1},\"1\":{\"42\":1,\"44\":1,\"48\":1,\"60\":1,\"63\":1,\"68\":1,\"75\":1,\"96\":1,\"97\":1,\"98\":1,\"189\":1,\"205\":4,\"206\":1}}],[\"stackblitz\",{\"1\":{\"30\":1}}],[\"scalability\",{\"1\":{\"400\":1}}],[\"scale\",{\"1\":{\"60\":2,\"113\":1,\"273\":1}}],[\"scattering\",{\"1\":{\"333\":1}}],[\"scm\",{\"1\":{\"315\":3}}],[\"scoretext\",{\"1\":{\"280\":8}}],[\"scoreboarddisplay\",{\"1\":{\"280\":2}}],[\"scoreboardtitle\",{\"1\":{\"280\":2}}],[\"scoreboard\",{\"1\":{\"280\":4}}],[\"score\",{\"1\":{\"280\":20,\"388\":1}}],[\"scoop\",{\"1\":{\"39\":1}}],[\"scheme\",{\"1\":{\"151\":3}}],[\"schnell\",{\"1\":{\"17\":4}}],[\"scratchpad\",{\"1\":{\"200\":1}}],[\"scroll\",{\"0\":{\"170\":1},\"1\":{\"170\":24,\"181\":2}}],[\"screenparams\",{\"1\":{\"160\":1}}],[\"screen\",{\"1\":{\"149\":2,\"157\":1,\"174\":1,\"179\":1,\"180\":2,\"233\":1,\"237\":1}}],[\"scriptreference\",{\"1\":{\"394\":2}}],[\"script\",{\"1\":{\"280\":5,\"281\":2,\"282\":2,\"283\":2,\"285\":6}}],[\"scriptable\",{\"1\":{\"108\":1}}],[\"scriptableobjects\",{\"1\":{\"254\":1}}],[\"scriptableobject\",{\"0\":{\"45\":1},\"1\":{\"22\":1,\"44\":1,\"45\":1,\"56\":3,\"75\":2,\"254\":1}}],[\"scripts\",{\"1\":{\"97\":1,\"148\":1,\"350\":2}}],[\"scripting\",{\"0\":{\"190\":1},\"1\":{\"30\":1,\"96\":1,\"190\":1,\"275\":1,\"301\":3,\"308\":1,\"312\":1,\"371\":1}}],[\"scenemanager\",{\"1\":{\"222\":1}}],[\"scene\",{\"0\":{\"391\":1},\"1\":{\"109\":1,\"215\":1,\"391\":2}}],[\"scenes\",{\"1\":{\"96\":1,\"200\":1,\"210\":1,\"218\":1,\"222\":1}}],[\"sc翻译\",{\"1\":{\"30\":1}}],[\"somehow\",{\"1\":{\"282\":2}}],[\"some\",{\"1\":{\"279\":1}}],[\"someveryrarecondition\",{\"1\":{\"267\":2}}],[\"somesingleton\",{\"1\":{\"262\":3}}],[\"solidcolor\",{\"1\":{\"212\":1}}],[\"solidutilities\",{\"1\":{\"22\":1}}],[\"sorting\",{\"1\":{\"283\":1}}],[\"sorted\",{\"1\":{\"282\":2}}],[\"sortlayoutlist\",{\"1\":{\"145\":1,\"150\":1,\"152\":1}}],[\"sortlayoutfunction\",{\"1\":{\"144\":1}}],[\"sort\",{\"1\":{\"144\":1,\"150\":1,\"152\":1,\"282\":2,\"283\":4,\"326\":2}}],[\"socket\",{\"1\":{\"314\":1,\"383\":1}}],[\"sockets\",{\"1\":{\"205\":2}}],[\"soc\",{\"1\":{\"143\":1}}],[\"sop\",{\"1\":{\"55\":1}}],[\"so\",{\"0\":{\"45\":1},\"1\":{\"45\":5,\"56\":1,\"60\":1,\"75\":8,\"145\":1,\"193\":1,\"205\":2}}],[\"sobooks\",{\"1\":{\"30\":1}}],[\"source\",{\"1\":{\"24\":1,\"30\":4,\"212\":1,\"329\":1}}],[\"sofdec2\",{\"1\":{\"19\":1}}],[\"specify\",{\"1\":{\"340\":1}}],[\"specified\",{\"1\":{\"340\":1}}],[\"specular\",{\"1\":{\"215\":1,\"238\":5,\"329\":1}}],[\"spir\",{\"1\":{\"330\":1}}],[\"spine\",{\"1\":{\"22\":1}}],[\"spot\",{\"1\":{\"329\":1}}],[\"spatial\",{\"1\":{\"326\":1}}],[\"space\",{\"1\":{\"51\":4,\"136\":1,\"149\":4,\"157\":1,\"174\":6,\"179\":1,\"180\":8,\"203\":1,\"205\":1,\"325\":1}}],[\"spline\",{\"1\":{\"325\":1}}],[\"splash\",{\"1\":{\"237\":1}}],[\"sprite\",{\"1\":{\"108\":1,\"148\":1,\"160\":1,\"169\":4,\"221\":1,\"322\":1}}],[\"sprites\",{\"1\":{\"22\":1}}],[\"spherecastnonalloc\",{\"1\":{\"258\":1}}],[\"spherecastall\",{\"1\":{\"258\":1}}],[\"sphere\",{\"1\":{\"41\":1}}],[\"sat\",{\"1\":{\"326\":2}}],[\"sampling\",{\"1\":{\"329\":1}}],[\"sampletype\",{\"1\":{\"144\":4}}],[\"sampler2d\",{\"1\":{\"121\":1,\"160\":1}}],[\"samplecode\",{\"1\":{\"26\":1}}],[\"sample\",{\"1\":{\"22\":1,\"132\":1}}],[\"samsung\",{\"1\":{\"216\":1,\"233\":1}}],[\"same\",{\"1\":{\"145\":1,\"181\":2,\"282\":1}}],[\"safe\",{\"0\":{\"103\":1}}],[\"safety\",{\"1\":{\"60\":1}}],[\"safetensors\",{\"1\":{\"17\":2}}],[\"sabrecsg\",{\"1\":{\"30\":1}}],[\"salttiger\",{\"1\":{\"30\":1}}],[\"saveandreimport\",{\"1\":{\"246\":2}}],[\"save\",{\"1\":{\"30\":1,\"312\":1}}],[\"s\",{\"1\":{\"17\":1,\"30\":1,\"52\":1,\"94\":1,\"144\":1,\"145\":1,\"181\":1,\"285\":1,\"308\":1,\"313\":2,\"385\":1,\"394\":1}}],[\"示例1\",{\"1\":{\"361\":1}}],[\"示例配置\",{\"1\":{\"100\":1}}],[\"示例\",{\"0\":{\"121\":1,\"122\":1},\"1\":{\"10\":1,\"26\":1,\"118\":1,\"120\":1,\"127\":1,\"271\":6,\"347\":1,\"360\":1}}],[\"mkdir\",{\"1\":{\"346\":3}}],[\"md\",{\"1\":{\"335\":33,\"336\":28,\"346\":1,\"347\":1,\"360\":5,\"361\":9,\"388\":1,\"393\":1}}],[\"mdldecompiler\",{\"1\":{\"30\":1}}],[\"mcts\",{\"1\":{\"331\":1}}],[\"mcp\",{\"0\":{\"10\":1},\"1\":{\"10\":5,\"22\":1}}],[\"ml\",{\"1\":{\"321\":1}}],[\"mlapi\",{\"1\":{\"314\":1}}],[\"mrcw\",{\"1\":{\"385\":1}}],[\"mr\",{\"1\":{\"321\":1,\"362\":1}}],[\"mylist\",{\"1\":{\"271\":10}}],[\"myregexp\",{\"1\":{\"253\":3}}],[\"mystring\",{\"1\":{\"251\":1,\"253\":2}}],[\"myobject\",{\"1\":{\"189\":1}}],[\"mtrendering\",{\"1\":{\"226\":1}}],[\"mtrack\",{\"1\":{\"205\":7,\"206\":2,\"233\":1}}],[\"mp\",{\"1\":{\"385\":1,\"394\":1}}],[\"mp8\",{\"1\":{\"221\":1}}],[\"mp3\",{\"1\":{\"201\":5,\"249\":1,\"392\":2}}],[\"mmrpg的难度主要集中在了解角色技能动画\",{\"1\":{\"383\":1}}],[\"mm\",{\"1\":{\"365\":3}}],[\"mmaps\",{\"1\":{\"206\":1}}],[\"mmap\",{\"1\":{\"203\":1,\"205\":13}}],[\"mmo\",{\"1\":{\"52\":1,\"87\":1}}],[\"msdn\",{\"1\":{\"250\":1,\"263\":1}}],[\"ms\",{\"1\":{\"130\":1,\"236\":4,\"265\":3}}],[\"msvc\",{\"1\":{\"47\":1,\"57\":1}}],[\"mutator\",{\"1\":{\"400\":1}}],[\"mul\",{\"1\":{\"160\":1}}],[\"multipass\",{\"1\":{\"236\":1}}],[\"multiple\",{\"1\":{\"145\":1,\"213\":1}}],[\"multithreaded\",{\"0\":{\"223\":1,\"225\":1,\"226\":1},\"1\":{\"210\":1,\"223\":1,\"225\":2}}],[\"multi\",{\"1\":{\"118\":1,\"119\":1,\"122\":1,\"238\":1,\"240\":2,\"241\":2}}],[\"mud中的玩家\",{\"1\":{\"30\":1}}],[\"mb\",{\"1\":{\"99\":8,\"100\":4,\"101\":14,\"102\":5,\"103\":1,\"205\":2,\"206\":8,\"233\":2,\"246\":2,\"367\":1,\"388\":2}}],[\"m在a组\",{\"1\":{\"60\":1}}],[\"m\",{\"1\":{\"60\":1,\"144\":19,\"145\":4,\"146\":4,\"282\":3,\"285\":6}}],[\"mvp\",{\"1\":{\"44\":1,\"53\":1,\"85\":1,\"160\":1}}],[\"mvc\",{\"1\":{\"44\":1,\"53\":1,\"85\":1}}],[\"mvvm\",{\"1\":{\"24\":1,\"44\":1,\"85\":2}}],[\"megabytes\",{\"1\":{\"233\":1}}],[\"megacity\",{\"1\":{\"137\":3}}],[\"meta\",{\"1\":{\"299\":1,\"336\":1}}],[\"metallicity\",{\"1\":{\"333\":1}}],[\"metallic\",{\"1\":{\"121\":5}}],[\"metal\",{\"1\":{\"110\":1,\"151\":3,\"225\":2,\"228\":1,\"238\":3,\"330\":1}}],[\"methods\",{\"1\":{\"404\":1}}],[\"method\",{\"1\":{\"192\":1,\"281\":2,\"282\":2,\"283\":3}}],[\"menuitem\",{\"1\":{\"309\":1}}],[\"menu\",{\"1\":{\"185\":1}}],[\"memfree\",{\"1\":{\"205\":2}}],[\"memtotal\",{\"1\":{\"205\":2}}],[\"meminfo\",{\"1\":{\"205\":11,\"206\":2,\"233\":1}}],[\"memorysettings\",{\"1\":{\"104\":2}}],[\"memorysetup\",{\"1\":{\"104\":29}}],[\"memory\",{\"0\":{\"200\":1,\"202\":1,\"204\":1,\"239\":1,\"402\":1,\"403\":1},\"1\":{\"96\":5,\"97\":3,\"98\":1,\"99\":1,\"100\":1,\"101\":2,\"104\":3,\"187\":2,\"200\":1,\"201\":2,\"205\":7,\"212\":2,\"222\":1,\"233\":2,\"274\":2,\"280\":1,\"283\":1,\"388\":3,\"389\":2,\"390\":7,\"393\":2,\"401\":1,\"402\":1}}],[\"memcpy\",{\"1\":{\"48\":1}}],[\"meshbaker\",{\"1\":{\"322\":1}}],[\"meshcollider\",{\"1\":{\"248\":2}}],[\"meshes\",{\"1\":{\"216\":1,\"217\":1}}],[\"meshrenderer\",{\"1\":{\"60\":1,\"115\":2,\"123\":1}}],[\"mesh的程序化生成\",{\"1\":{\"60\":1}}],[\"mesh\",{\"0\":{\"397\":1},\"1\":{\"30\":1,\"41\":3,\"43\":5,\"51\":1,\"52\":1,\"55\":2,\"58\":2,\"60\":1,\"83\":1,\"104\":2,\"106\":1,\"108\":4,\"109\":5,\"111\":1,\"113\":1,\"116\":3,\"127\":1,\"169\":1,\"178\":3,\"214\":1,\"218\":3,\"248\":1,\"285\":7,\"288\":2,\"317\":2,\"323\":1}}],[\"mermaid\",{\"1\":{\"30\":1}}],[\"mediapipeunityplugin\",{\"1\":{\"22\":1}}],[\"mediapipe\",{\"1\":{\"22\":1}}],[\"more\",{\"1\":{\"358\":1}}],[\"monte\",{\"1\":{\"331\":1}}],[\"monobehaviours\",{\"1\":{\"172\":1,\"173\":3}}],[\"monobehaviour\",{\"1\":{\"45\":1,\"48\":2,\"49\":1,\"56\":2,\"57\":3,\"61\":1,\"62\":1,\"66\":1,\"67\":1,\"75\":1,\"123\":1,\"173\":1,\"267\":8,\"279\":1,\"280\":5,\"281\":2}}],[\"mono\",{\"0\":{\"47\":1},\"1\":{\"42\":1,\"47\":4,\"57\":4,\"76\":2,\"96\":1,\"97\":3,\"190\":11,\"192\":1,\"201\":1,\"205\":1,\"259\":1,\"280\":1,\"371\":2,\"392\":3,\"393\":1,\"399\":2,\"400\":1,\"401\":4}}],[\"moment\",{\"1\":{\"326\":1}}],[\"momo\",{\"1\":{\"22\":1}}],[\"mobile\",{\"0\":{\"236\":1},\"1\":{\"217\":2,\"236\":4,\"245\":2}}],[\"moba\",{\"1\":{\"87\":1}}],[\"motion\",{\"0\":{\"214\":1},\"1\":{\"214\":2,\"322\":1}}],[\"movement\",{\"1\":{\"331\":2}}],[\"movementsystem\",{\"1\":{\"46\":1}}],[\"moveposition\",{\"1\":{\"60\":1}}],[\"modules\",{\"1\":{\"338\":1,\"348\":1}}],[\"module\",{\"0\":{\"194\":1,\"305\":1},\"1\":{\"302\":1,\"305\":1}}],[\"modifymesh\",{\"1\":{\"150\":2,\"152\":3}}],[\"mode\",{\"1\":{\"112\":1,\"149\":1,\"179\":1,\"214\":1,\"215\":1,\"276\":2}}],[\"modeling\",{\"1\":{\"331\":1}}],[\"modelimportermeshcompression\",{\"1\":{\"248\":1}}],[\"modelimporter\",{\"1\":{\"246\":6}}],[\"modelmatrix\",{\"1\":{\"127\":1}}],[\"modelmaterix\",{\"1\":{\"127\":1}}],[\"modelviewmartrix\",{\"1\":{\"127\":1}}],[\"model\",{\"1\":{\"44\":3,\"51\":1,\"85\":2,\"121\":2,\"248\":1,\"326\":2}}],[\"models\",{\"1\":{\"17\":2}}],[\"modelcontextprotocol\",{\"1\":{\"10\":1}}],[\"modding\",{\"1\":{\"30\":1}}],[\"mod\",{\"1\":{\"30\":1}}],[\"mocaponline\",{\"1\":{\"30\":1}}],[\"mocap\",{\"1\":{\"22\":1}}],[\"mip\",{\"1\":{\"396\":1}}],[\"mipmap\",{\"1\":{\"247\":3,\"317\":1}}],[\"mipmapping\",{\"1\":{\"218\":1}}],[\"mipmaps\",{\"1\":{\"200\":1}}],[\"migration\",{\"1\":{\"335\":1,\"336\":1}}],[\"microsurface\",{\"1\":{\"333\":1}}],[\"microsoft\",{\"1\":{\"97\":1,\"250\":1}}],[\"microgame\",{\"1\":{\"313\":2}}],[\"min\",{\"1\":{\"369\":4}}],[\"minor\",{\"1\":{\"304\":2,\"305\":2}}],[\"minimax\",{\"1\":{\"331\":1}}],[\"miniexcel\",{\"1\":{\"22\":1}}],[\"mini\",{\"1\":{\"19\":1}}],[\"miss\",{\"1\":{\"387\":2}}],[\"missing\",{\"1\":{\"169\":1}}],[\"miscellaneous\",{\"1\":{\"215\":1}}],[\"mixer\",{\"1\":{\"201\":1}}],[\"mixamo\",{\"1\":{\"30\":1}}],[\"milkshape3d\",{\"1\":{\"30\":1}}],[\"miku\",{\"1\":{\"22\":1}}],[\"making\",{\"1\":{\"331\":1,\"335\":1}}],[\"mass\",{\"1\":{\"326\":1}}],[\"masks\",{\"1\":{\"144\":1}}],[\"maskablegraphic\",{\"1\":{\"141\":1}}],[\"mask\",{\"1\":{\"22\":1,\"60\":2,\"179\":2,\"313\":1,\"379\":1}}],[\"mariadb\",{\"1\":{\"323\":1}}],[\"marketplace\",{\"1\":{\"336\":1}}],[\"markers\",{\"1\":{\"96\":1}}],[\"markov\",{\"1\":{\"331\":3}}],[\"mark\",{\"1\":{\"195\":1}}],[\"marklayoutrootforrebuild\",{\"1\":{\"181\":1}}],[\"marklayoutforrebuild\",{\"1\":{\"181\":2}}],[\"markdown\",{\"1\":{\"14\":3,\"30\":1,\"33\":1,\"335\":2,\"336\":1,\"347\":1,\"350\":1,\"359\":1,\"360\":1,\"361\":2,\"365\":1}}],[\"maya\",{\"1\":{\"323\":1}}],[\"major\",{\"1\":{\"304\":2,\"305\":2}}],[\"mali\",{\"1\":{\"212\":1,\"221\":2}}],[\"mallocs\",{\"1\":{\"205\":1}}],[\"malloc\",{\"1\":{\"205\":2}}],[\"mathematics\",{\"0\":{\"325\":1}}],[\"math\",{\"1\":{\"324\":1,\"331\":1}}],[\"matching\",{\"1\":{\"322\":1}}],[\"match\",{\"1\":{\"253\":4}}],[\"matrix\",{\"1\":{\"160\":1,\"325\":2}}],[\"materials\",{\"1\":{\"200\":1,\"216\":1}}],[\"materialdirty\",{\"1\":{\"146\":2}}],[\"materialpropertyblockexample\",{\"1\":{\"123\":1}}],[\"materialpropertyblocks\",{\"1\":{\"112\":1,\"123\":1}}],[\"materialpropertyblock\",{\"1\":{\"108\":3,\"112\":1,\"116\":2,\"118\":2,\"120\":2,\"123\":3}}],[\"material\",{\"1\":{\"43\":5,\"58\":5,\"60\":2,\"83\":1,\"108\":2,\"112\":1,\"136\":4,\"200\":1,\"212\":1,\"215\":1,\"216\":1,\"257\":3}}],[\"maxarraylength\",{\"1\":{\"369\":2}}],[\"maximum\",{\"1\":{\"369\":1}}],[\"maxpoolsize\",{\"1\":{\"279\":2}}],[\"max\",{\"1\":{\"201\":2,\"323\":1,\"339\":2}}],[\"maxlod\",{\"1\":{\"200\":1}}],[\"maxupdatevalue\",{\"1\":{\"144\":2}}],[\"maxcount\",{\"1\":{\"118\":2}}],[\"mac\",{\"1\":{\"100\":1,\"199\":1}}],[\"machine\",{\"1\":{\"75\":1,\"331\":1}}],[\"maintex\",{\"1\":{\"58\":1,\"121\":5,\"160\":3}}],[\"maintainability\",{\"1\":{\"53\":1}}],[\"main\",{\"0\":{\"180\":1},\"1\":{\"55\":2,\"60\":1,\"99\":1,\"100\":1,\"101\":3,\"102\":2,\"104\":4,\"174\":1,\"180\":4,\"289\":2,\"336\":2,\"339\":2,\"364\":1}}],[\"mapping\",{\"1\":{\"217\":1,\"329\":1}}],[\"maps\",{\"1\":{\"200\":2}}],[\"map\",{\"1\":{\"30\":1,\"329\":1,\"396\":1}}],[\"maoxian\",{\"1\":{\"30\":1}}],[\"managed\",{\"0\":{\"398\":1},\"1\":{\"96\":2,\"97\":1,\"187\":1,\"188\":1,\"190\":1,\"191\":1,\"192\":2,\"274\":1,\"278\":1,\"389\":1}}],[\"management\",{\"0\":{\"202\":1},\"1\":{\"44\":2,\"388\":1,\"393\":2}}],[\"managers\",{\"1\":{\"56\":1,\"174\":1}}],[\"manager\",{\"0\":{\"267\":1},\"1\":{\"16\":1,\"104\":1,\"164\":2,\"165\":2,\"169\":1,\"173\":3,\"199\":1,\"267\":1}}],[\"manual\",{\"1\":{\"3\":1,\"22\":2,\"26\":1,\"276\":1}}],[\"png\",{\"1\":{\"367\":2,\"394\":1}}],[\"pnpm\",{\"1\":{\"339\":6,\"340\":4,\"343\":3,\"346\":3,\"350\":1,\"351\":1,\"355\":3,\"357\":1}}],[\"pbr\",{\"1\":{\"333\":1}}],[\"p\",{\"1\":{\"304\":2}}],[\"pvrtc\",{\"1\":{\"221\":6}}],[\"pvr\",{\"1\":{\"212\":1}}],[\"pss\",{\"1\":{\"205\":16,\"388\":5}}],[\"publish\",{\"1\":{\"371\":1}}],[\"publicgeneral\",{\"1\":{\"339\":1}}],[\"public\",{\"1\":{\"123\":2,\"144\":1,\"145\":1,\"146\":1,\"168\":1,\"181\":1,\"246\":2,\"252\":2,\"262\":1,\"263\":2,\"279\":5,\"280\":16,\"281\":2,\"309\":2,\"369\":3,\"377\":2}}],[\"pun\",{\"1\":{\"322\":1}}],[\"push\",{\"1\":{\"279\":2,\"339\":2}}],[\"pum7ifjgkkm\",{\"1\":{\"125\":1}}],[\"permissions\",{\"1\":{\"339\":2}}],[\"perception\",{\"1\":{\"329\":1}}],[\"perspective\",{\"1\":{\"325\":1}}],[\"perrendererdata\",{\"1\":{\"160\":1}}],[\"performed\",{\"1\":{\"280\":2}}],[\"performlayoutcontrol\",{\"1\":{\"145\":2}}],[\"performlayoutcalculation\",{\"1\":{\"145\":2}}],[\"perform\",{\"1\":{\"145\":1}}],[\"performing\",{\"1\":{\"145\":1}}],[\"performinggraphicupdate\",{\"1\":{\"144\":2}}],[\"performinglayoutupdate\",{\"1\":{\"144\":2}}],[\"performupdate\",{\"1\":{\"144\":3}}],[\"performance\",{\"0\":{\"40\":1},\"1\":{\"53\":1,\"98\":1,\"109\":1,\"177\":1,\"185\":1,\"225\":1}}],[\"per\",{\"1\":{\"102\":1,\"104\":1,\"112\":1,\"120\":1,\"127\":1,\"136\":5,\"213\":2,\"285\":1}}],[\"peak\",{\"1\":{\"99\":4,\"100\":2,\"101\":11,\"102\":3}}],[\"pc\",{\"1\":{\"47\":1,\"50\":1,\"58\":1,\"125\":1,\"132\":2,\"216\":1,\"387\":4}}],[\"pixyz\",{\"1\":{\"321\":1}}],[\"pixel\",{\"1\":{\"51\":1,\"215\":1,\"233\":1}}],[\"pid\",{\"1\":{\"205\":3}}],[\"pipeline\",{\"0\":{\"50\":1},\"1\":{\"45\":1,\"50\":1,\"58\":1,\"60\":1,\"108\":2,\"112\":1,\"120\":1,\"151\":1,\"210\":1,\"329\":1}}],[\"picture\",{\"1\":{\"30\":2}}],[\"please\",{\"1\":{\"340\":1}}],[\"planning\",{\"1\":{\"331\":1}}],[\"plane\",{\"1\":{\"160\":1}}],[\"plastic\",{\"1\":{\"315\":3}}],[\"plasticscm\",{\"1\":{\"315\":1}}],[\"platform\",{\"1\":{\"217\":1,\"296\":2,\"301\":1}}],[\"platforms\",{\"1\":{\"104\":2}}],[\"playmaker\",{\"1\":{\"322\":1}}],[\"play\",{\"1\":{\"130\":1,\"131\":1,\"149\":1,\"301\":1}}],[\"playstation\",{\"1\":{\"125\":1,\"132\":2}}],[\"playermaker\",{\"1\":{\"312\":1}}],[\"playerwithouttestassemblies\",{\"1\":{\"309\":1}}],[\"playerassemblies\",{\"1\":{\"309\":2}}],[\"playersettings\",{\"1\":{\"226\":1}}],[\"playerstatsso\",{\"1\":{\"75\":1}}],[\"playerstats\",{\"1\":{\"45\":1}}],[\"playerprefs\",{\"1\":{\"88\":1}}],[\"player\",{\"1\":{\"42\":1,\"98\":1,\"100\":1,\"104\":4,\"109\":2,\"110\":1,\"190\":6,\"192\":2,\"193\":1,\"223\":1,\"225\":2,\"226\":1,\"228\":1,\"232\":2,\"234\":2,\"244\":2,\"274\":1,\"275\":4,\"301\":1,\"309\":5}}],[\"plugin\",{\"0\":{\"300\":1},\"1\":{\"291\":1,\"292\":4,\"300\":1,\"335\":3,\"336\":3,\"357\":2,\"364\":1}}],[\"plugins\",{\"0\":{\"9\":1,\"207\":1},\"1\":{\"196\":1,\"289\":1,\"292\":1,\"335\":1,\"336\":1,\"357\":4,\"358\":3,\"359\":1,\"361\":1,\"363\":1}}],[\"plug\",{\"1\":{\"96\":1}}],[\"plus\",{\"1\":{\"30\":2}}],[\"polyhedron\",{\"1\":{\"329\":1}}],[\"polygon\",{\"1\":{\"329\":1}}],[\"polytope\",{\"1\":{\"326\":1}}],[\"pop\",{\"1\":{\"279\":1}}],[\"possible\",{\"1\":{\"369\":1}}],[\"postprocessing\",{\"1\":{\"319\":1}}],[\"post\",{\"1\":{\"214\":1,\"360\":1,\"361\":1}}],[\"postlayout\",{\"1\":{\"144\":3}}],[\"position\",{\"1\":{\"46\":5,\"75\":1,\"106\":1,\"122\":2,\"136\":1,\"160\":2}}],[\"power\",{\"1\":{\"221\":1}}],[\"powervr\",{\"1\":{\"212\":1}}],[\"pow\",{\"1\":{\"90\":1}}],[\"pooled\",{\"1\":{\"279\":1}}],[\"pool\",{\"1\":{\"63\":1,\"64\":1,\"68\":1,\"69\":1,\"279\":2,\"404\":2}}],[\"pooling\",{\"1\":{\"41\":1,\"42\":1,\"55\":1,\"81\":1}}],[\"point\",{\"1\":{\"17\":2,\"329\":1}}],[\"phase\",{\"1\":{\"326\":2}}],[\"photon\",{\"1\":{\"314\":1,\"322\":1}}],[\"photoshop\",{\"1\":{\"30\":1,\"323\":1}}],[\"physically\",{\"1\":{\"121\":1,\"333\":1}}],[\"physics2d\",{\"1\":{\"258\":1}}],[\"physics\",{\"0\":{\"326\":1},\"1\":{\"41\":3,\"55\":2,\"194\":2,\"286\":2}}],[\"pdf\",{\"1\":{\"30\":3,\"33\":1}}],[\"python\",{\"0\":{\"27\":1},\"1\":{\"27\":5,\"328\":1}}],[\"pause\",{\"1\":{\"400\":1}}],[\"pageview\",{\"1\":{\"363\":3}}],[\"page\",{\"1\":{\"335\":1,\"336\":1,\"388\":4}}],[\"pagecache\",{\"1\":{\"205\":2}}],[\"pages\",{\"1\":{\"203\":1,\"330\":1,\"335\":1,\"339\":6,\"341\":2}}],[\"paging\",{\"0\":{\"203\":1}}],[\"patch\",{\"1\":{\"304\":2,\"305\":1}}],[\"path\",{\"1\":{\"110\":1,\"130\":1,\"134\":3,\"215\":1}}],[\"patterns\",{\"1\":{\"30\":2}}],[\"pattern\",{\"1\":{\"22\":1}}],[\"packagemanager\",{\"1\":{\"340\":1}}],[\"package\",{\"0\":{\"302\":1,\"305\":1},\"1\":{\"96\":1,\"169\":1,\"199\":1,\"290\":1,\"298\":2,\"302\":3,\"305\":4,\"340\":1,\"347\":1,\"348\":2,\"350\":1,\"355\":1}}],[\"packages\",{\"1\":{\"34\":1,\"305\":1,\"307\":1}}],[\"pairs\",{\"1\":{\"71\":1}}],[\"passing\",{\"1\":{\"335\":1}}],[\"passed\",{\"1\":{\"281\":1}}],[\"pass\",{\"1\":{\"50\":1,\"58\":1,\"120\":1,\"122\":1,\"160\":1,\"215\":1,\"236\":1,\"248\":1,\"390\":1}}],[\"partitioning\",{\"1\":{\"326\":1}}],[\"particle\",{\"1\":{\"108\":1,\"110\":3,\"319\":1}}],[\"particles\",{\"1\":{\"22\":1}}],[\"part\",{\"1\":{\"326\":1}}],[\"parametercount\",{\"1\":{\"286\":1}}],[\"parameters\",{\"1\":{\"286\":1}}],[\"parallax\",{\"1\":{\"217\":1,\"329\":1}}],[\"parcel\",{\"1\":{\"205\":4}}],[\"parent\",{\"1\":{\"181\":9}}],[\"parentcount\",{\"1\":{\"145\":2}}],[\"parsing\",{\"1\":{\"26\":1}}],[\"ppt\",{\"1\":{\"20\":1}}],[\"pruning\",{\"1\":{\"331\":1}}],[\"prune\",{\"1\":{\"326\":1}}],[\"pragmas\",{\"1\":{\"241\":1}}],[\"pragma\",{\"1\":{\"118\":3,\"119\":2,\"121\":2,\"122\":3,\"160\":2,\"238\":1,\"240\":1,\"241\":2}}],[\"practices\",{\"1\":{\"4\":1,\"22\":1,\"185\":1}}],[\"pr\",{\"1\":{\"59\":1}}],[\"press\",{\"1\":{\"335\":2,\"336\":4}}],[\"preserve\",{\"1\":{\"308\":2}}],[\"presentation\",{\"1\":{\"232\":1,\"234\":1}}],[\"presenter\",{\"1\":{\"44\":2}}],[\"precompiled\",{\"1\":{\"291\":3,\"292\":1}}],[\"predefined\",{\"1\":{\"289\":1,\"291\":3,\"292\":2}}],[\"prediction\",{\"1\":{\"87\":1}}],[\"prelayout\",{\"1\":{\"144\":2}}],[\"preloadmanager\",{\"1\":{\"269\":1}}],[\"preloading\",{\"0\":{\"243\":1},\"1\":{\"237\":1}}],[\"preload\",{\"1\":{\"104\":1}}],[\"prerender\",{\"1\":{\"144\":3,\"146\":2}}],[\"prefix\",{\"1\":{\"343\":1,\"360\":2,\"361\":3}}],[\"preferences\",{\"1\":{\"112\":1}}],[\"prefabtopool\",{\"1\":{\"279\":3}}],[\"prefabs\",{\"1\":{\"163\":1}}],[\"prefab\",{\"1\":{\"44\":2,\"45\":1,\"56\":1,\"61\":1,\"66\":1,\"279\":1}}],[\"previewtype\",{\"1\":{\"160\":1}}],[\"preview\",{\"1\":{\"33\":1,\"303\":4,\"305\":2}}],[\"printassemblynames\",{\"1\":{\"309\":1}}],[\"prince\",{\"1\":{\"33\":1}}],[\"private\",{\"1\":{\"144\":1,\"145\":1,\"205\":10,\"262\":1,\"279\":1,\"280\":1,\"369\":2}}],[\"priority\",{\"1\":{\"114\":1,\"269\":1}}],[\"primitive\",{\"1\":{\"41\":1}}],[\"primer\",{\"1\":{\"30\":4,\"324\":1}}],[\"program\",{\"1\":{\"343\":2}}],[\"programs\",{\"1\":{\"238\":4}}],[\"programming\",{\"0\":{\"328\":1},\"1\":{\"26\":1,\"30\":2,\"325\":1}}],[\"proc\",{\"1\":{\"205\":1}}],[\"procrank\",{\"1\":{\"204\":1,\"205\":4}}],[\"processing\",{\"1\":{\"214\":1}}],[\"process\",{\"1\":{\"205\":2}}],[\"processmouseevent\",{\"1\":{\"165\":1}}],[\"processon\",{\"1\":{\"30\":1}}],[\"procedural\",{\"1\":{\"118\":1}}],[\"protability\",{\"1\":{\"400\":1}}],[\"protected\",{\"1\":{\"181\":1}}],[\"protobuf\",{\"1\":{\"22\":2,\"31\":2,\"88\":1}}],[\"pro\",{\"1\":{\"169\":8}}],[\"product\",{\"1\":{\"151\":1}}],[\"probuilder\",{\"1\":{\"322\":1}}],[\"probably\",{\"1\":{\"145\":1}}],[\"probe\",{\"1\":{\"116\":4,\"118\":1}}],[\"probes\",{\"1\":{\"116\":3,\"118\":1,\"216\":1}}],[\"profiling\",{\"0\":{\"226\":1},\"1\":{\"144\":6,\"210\":1,\"228\":1}}],[\"profile\",{\"1\":{\"81\":1,\"389\":1}}],[\"profiler显示\",{\"1\":{\"60\":1}}],[\"profiler\",{\"0\":{\"148\":1,\"152\":1},\"1\":{\"22\":1,\"41\":2,\"52\":1,\"55\":2,\"66\":1,\"74\":3,\"81\":1,\"96\":4,\"97\":2,\"98\":2,\"100\":2,\"104\":20,\"110\":1,\"112\":1,\"144\":6,\"147\":1,\"148\":5,\"150\":3,\"162\":1,\"185\":1,\"213\":1,\"216\":2,\"239\":2,\"274\":4,\"275\":3,\"313\":1,\"317\":1,\"390\":1,\"391\":1}}],[\"proportional\",{\"1\":{\"205\":2,\"388\":1}}],[\"props\",{\"1\":{\"121\":3,\"122\":3,\"123\":3}}],[\"prop\",{\"1\":{\"118\":4,\"121\":2,\"122\":2}}],[\"propertytoid\",{\"1\":{\"257\":1}}],[\"propertyname\",{\"1\":{\"118\":2}}],[\"property\",{\"1\":{\"112\":1,\"135\":1,\"136\":1}}],[\"properties\",{\"1\":{\"112\":5,\"121\":1,\"122\":1,\"136\":1,\"160\":1}}],[\"proxy\",{\"1\":{\"116\":1,\"205\":2}}],[\"projection\",{\"1\":{\"325\":1}}],[\"projectsettings\",{\"1\":{\"104\":1,\"237\":1,\"275\":1}}],[\"project\",{\"0\":{\"237\":1},\"1\":{\"45\":1,\"56\":1,\"100\":1,\"104\":2,\"109\":1,\"110\":1,\"112\":2,\"119\":2,\"190\":1,\"192\":1,\"225\":1,\"232\":1,\"234\":1,\"244\":2,\"274\":1,\"275\":2,\"294\":1,\"295\":1,\"301\":1,\"306\":1,\"307\":1}}],[\"prompt\",{\"1\":{\"14\":1}}],[\"oom\",{\"1\":{\"388\":1}}],[\"oop\",{\"1\":{\"46\":1,\"75\":1}}],[\"own\",{\"1\":{\"339\":1}}],[\"occluder\",{\"1\":{\"329\":1}}],[\"occlusion\",{\"1\":{\"60\":1,\"74\":1,\"83\":1,\"213\":4,\"329\":1}}],[\"oldscore\",{\"1\":{\"280\":6}}],[\"oledlg\",{\"1\":{\"30\":1}}],[\"oat\",{\"1\":{\"205\":2}}],[\"original\",{\"1\":{\"363\":1}}],[\"orientation\",{\"1\":{\"325\":1}}],[\"oriented\",{\"1\":{\"46\":2,\"75\":1,\"326\":1,\"331\":2}}],[\"org\",{\"1\":{\"336\":2,\"367\":2}}],[\"orthogonal\",{\"1\":{\"325\":1}}],[\"ordinal\",{\"1\":{\"251\":2,\"252\":2}}],[\"order\",{\"1\":{\"215\":1,\"361\":1}}],[\"or\",{\"1\":{\"145\":1,\"279\":1}}],[\"otherstring\",{\"1\":{\"251\":1}}],[\"others\",{\"1\":{\"148\":1}}],[\"other\",{\"1\":{\"109\":1,\"110\":1,\"160\":1,\"190\":1,\"192\":2,\"205\":10,\"206\":1,\"244\":1,\"274\":1,\"275\":1}}],[\"override\",{\"1\":{\"291\":1,\"292\":1,\"300\":2}}],[\"overridesorting\",{\"1\":{\"166\":2}}],[\"overlay\",{\"1\":{\"149\":1,\"157\":1,\"174\":1}}],[\"overhead\",{\"1\":{\"145\":1,\"400\":2}}],[\"over\",{\"1\":{\"139\":1}}],[\"overflowed\",{\"1\":{\"369\":1}}],[\"overflow\",{\"1\":{\"102\":2,\"103\":2,\"205\":2,\"367\":2,\"369\":1}}],[\"overdraw\",{\"1\":{\"41\":2,\"83\":2,\"142\":1,\"215\":6}}],[\"obb\",{\"1\":{\"326\":1}}],[\"obj\",{\"1\":{\"123\":2,\"279\":4}}],[\"objecttodeactivate\",{\"1\":{\"279\":4}}],[\"objecttoworld\",{\"1\":{\"112\":1,\"129\":1,\"136\":1}}],[\"objectpool\",{\"1\":{\"279\":2}}],[\"objectvalidforupdate\",{\"1\":{\"144\":2}}],[\"objects\",{\"1\":{\"97\":3,\"123\":2,\"166\":1,\"205\":2,\"248\":2,\"279\":1}}],[\"object\",{\"0\":{\"259\":1},\"1\":{\"41\":1,\"42\":1,\"45\":1,\"46\":1,\"48\":2,\"55\":1,\"63\":1,\"64\":1,\"68\":2,\"69\":1,\"81\":1,\"112\":1,\"127\":1,\"136\":1,\"180\":1,\"189\":2,\"259\":1,\"262\":1,\"279\":1,\"284\":3,\"390\":1,\"391\":1}}],[\"observer\",{\"1\":{\"85\":1}}],[\"os\",{\"1\":{\"80\":1}}],[\"outcome\",{\"1\":{\"302\":1}}],[\"outside\",{\"1\":{\"279\":1}}],[\"outline\",{\"1\":{\"150\":1,\"152\":1}}],[\"out\",{\"1\":{\"68\":1,\"160\":8}}],[\"o密集型\",{\"1\":{\"60\":1}}],[\"o\",{\"1\":{\"48\":1,\"49\":2,\"55\":1,\"57\":1,\"118\":1,\"121\":5,\"122\":4,\"202\":1,\"222\":1,\"392\":1}}],[\"off\",{\"1\":{\"60\":1,\"160\":3}}],[\"offset\",{\"1\":{\"58\":1,\"60\":1,\"160\":1}}],[\"offs\",{\"1\":{\"54\":1,\"60\":1}}],[\"of\",{\"0\":{\"218\":1},\"1\":{\"47\":1,\"55\":1,\"57\":1,\"76\":1,\"83\":1,\"132\":1,\"190\":1,\"218\":1,\"221\":1,\"280\":1,\"281\":1,\"283\":1,\"285\":3,\"326\":2,\"331\":2,\"333\":1,\"335\":1,\"340\":1,\"371\":1}}],[\"opaque\",{\"1\":{\"121\":1,\"122\":1}}],[\"opaques\",{\"1\":{\"112\":1}}],[\"optix\",{\"1\":{\"333\":1}}],[\"optimize\",{\"1\":{\"248\":2}}],[\"optimizing\",{\"1\":{\"185\":1,\"245\":2}}],[\"optimization\",{\"0\":{\"40\":1},\"1\":{\"114\":1,\"124\":1,\"192\":1,\"388\":1,\"393\":1}}],[\"options\",{\"1\":{\"118\":4,\"151\":1}}],[\"open\",{\"1\":{\"331\":1}}],[\"openssl\",{\"1\":{\"205\":2}}],[\"opengameart\",{\"1\":{\"30\":1}}],[\"opengl®\",{\"1\":{\"330\":2}}],[\"opengl着色语言\",{\"1\":{\"330\":1}}],[\"opengles\",{\"1\":{\"151\":1,\"212\":2,\"225\":1,\"228\":1,\"234\":1}}],[\"opengles3\",{\"1\":{\"151\":1}}],[\"opengl\",{\"0\":{\"20\":1},\"1\":{\"20\":3,\"231\":1,\"330\":2}}],[\"openposeeditor\",{\"1\":{\"12\":2}}],[\"openpose\",{\"1\":{\"11\":1}}],[\"openrouter\",{\"1\":{\"8\":1,\"13\":1}}],[\"once\",{\"1\":{\"285\":1}}],[\"oncollisionenter\",{\"1\":{\"62\":1,\"67\":1}}],[\"only\",{\"1\":{\"280\":3,\"285\":1}}],[\"online\",{\"1\":{\"7\":1,\"24\":1,\"30\":3}}],[\"onpreprocessaudio\",{\"1\":{\"246\":1}}],[\"onpreprocessanimation\",{\"1\":{\"246\":1}}],[\"onpreprocessmodel\",{\"1\":{\"246\":2}}],[\"onpreprocesstexture\",{\"1\":{\"246\":1}}],[\"onpreprocess\",{\"1\":{\"246\":2}}],[\"onpopulatemesh\",{\"1\":{\"150\":2,\"152\":1}}],[\"onboard\",{\"1\":{\"203\":1}}],[\"onbecamevisible\",{\"1\":{\"79\":1}}],[\"ontransformparentchanged\",{\"1\":{\"170\":1}}],[\"ontriggerenter\",{\"1\":{\"62\":1,\"67\":1}}],[\"onapplicationpause\",{\"1\":{\"79\":1}}],[\"ondisable\",{\"1\":{\"79\":1,\"173\":1,\"183\":1}}],[\"ondestroy\",{\"1\":{\"62\":2,\"79\":1}}],[\"onrenderobject\",{\"1\":{\"79\":1}}],[\"onrenderimage\",{\"1\":{\"58\":1}}],[\"ongui\",{\"1\":{\"79\":1}}],[\"on\",{\"0\":{\"203\":1},\"1\":{\"59\":1,\"104\":1,\"118\":5,\"201\":1,\"238\":4,\"339\":2}}],[\"oninventorychanged\",{\"1\":{\"56\":2}}],[\"oneminussrcalpha\",{\"1\":{\"160\":1}}],[\"onenable\",{\"1\":{\"79\":1,\"173\":1,\"183\":1,\"267\":1}}],[\"one\",{\"1\":{\"31\":1,\"285\":2,\"340\":1,\"361\":2}}],[\"odin\",{\"1\":{\"22\":2}}],[\"阿里云百炼\",{\"1\":{\"7\":1}}],[\"国内受限\",{\"1\":{\"7\":1}}],[\"国内镜像\",{\"1\":{\"7\":1}}],[\"hh\",{\"1\":{\"365\":1}}],[\"h1\",{\"1\":{\"365\":1}}],[\"home\",{\"1\":{\"358\":1,\"359\":3}}],[\"hopetheme\",{\"1\":{\"355\":2,\"357\":4,\"358\":2,\"359\":2,\"360\":2,\"362\":2}}],[\"hope\",{\"1\":{\"355\":5,\"357\":2,\"358\":1,\"359\":1,\"360\":1,\"362\":1}}],[\"horizon\",{\"1\":{\"329\":1}}],[\"houdini\",{\"1\":{\"323\":1}}],[\"howto\",{\"1\":{\"4\":1,\"22\":1}}],[\"how\",{\"1\":{\"4\":1,\"22\":2,\"30\":2,\"59\":1,\"60\":1,\"77\":1,\"331\":1}}],[\"hlsl\",{\"1\":{\"318\":1,\"330\":2}}],[\"hz\",{\"1\":{\"230\":1}}],[\"hierarchies\",{\"1\":{\"326\":1}}],[\"hierarchy\",{\"1\":{\"109\":1,\"274\":1,\"326\":1}}],[\"hi\",{\"1\":{\"313\":1}}],[\"high\",{\"1\":{\"217\":1,\"218\":1,\"236\":1,\"330\":2}}],[\"haunted\",{\"1\":{\"313\":1}}],[\"has\",{\"1\":{\"279\":1,\"280\":3,\"283\":1}}],[\"hal\",{\"1\":{\"234\":1}}],[\"halo\",{\"1\":{\"194\":1}}],[\"half2\",{\"1\":{\"160\":1}}],[\"half\",{\"1\":{\"90\":1,\"121\":2,\"136\":1,\"160\":1}}],[\"have\",{\"1\":{\"112\":1,\"145\":1,\"279\":1}}],[\"hacky\",{\"1\":{\"173\":1}}],[\"hack\",{\"1\":{\"58\":1}}],[\"hull\",{\"1\":{\"326\":1}}],[\"hud\",{\"1\":{\"44\":1}}],[\"huggingface\",{\"1\":{\"7\":2}}],[\"hello\",{\"1\":{\"346\":1}}],[\"hero\",{\"1\":{\"358\":1}}],[\"hermite\",{\"1\":{\"325\":1}}],[\"here\",{\"1\":{\"285\":1}}],[\"heap\",{\"0\":{\"99\":1},\"1\":{\"41\":1,\"42\":1,\"48\":1,\"60\":1,\"63\":1,\"68\":1,\"96\":1,\"97\":1,\"98\":1,\"101\":1,\"188\":1,\"205\":18,\"206\":2,\"207\":4,\"274\":1,\"278\":1,\"280\":1}}],[\"hedgehog\",{\"1\":{\"22\":1}}],[\"hdrp\",{\"1\":{\"41\":1,\"43\":2,\"55\":1,\"58\":1,\"74\":1,\"90\":2,\"108\":1,\"109\":1,\"110\":1,\"112\":6,\"114\":1,\"118\":1,\"128\":2,\"129\":1,\"132\":2,\"136\":2,\"215\":1,\"318\":1,\"319\":1,\"320\":3}}],[\"html\",{\"1\":{\"33\":1,\"261\":1,\"358\":2,\"394\":2}}],[\"httrack\",{\"1\":{\"33\":1}}],[\"httpclient\",{\"1\":{\"49\":1,\"57\":1}}],[\"https\",{\"1\":{\"22\":3,\"125\":1,\"335\":2,\"336\":8,\"339\":4,\"367\":2,\"385\":1,\"393\":1,\"394\":3}}],[\"http\",{\"1\":{\"22\":1,\"199\":1,\"314\":1,\"350\":1}}],[\"h\",{\"1\":{\"26\":1}}],[\"hybridclr\",{\"1\":{\"22\":1,\"61\":1,\"65\":2}}],[\"5g\",{\"1\":{\"394\":1}}],[\"56mb\",{\"1\":{\"238\":2}}],[\"5667k\",{\"1\":{\"205\":1}}],[\"5774k\",{\"1\":{\"205\":1}}],[\"5771\",{\"1\":{\"100\":1}}],[\"581\",{\"1\":{\"205\":1}}],[\"51\",{\"1\":{\"205\":1}}],[\"516\",{\"1\":{\"205\":1}}],[\"51072\",{\"1\":{\"205\":1}}],[\"512mb\",{\"1\":{\"203\":1}}],[\"512\",{\"1\":{\"201\":3}}],[\"512x1024\",{\"1\":{\"168\":1}}],[\"512x512\",{\"1\":{\"168\":1,\"247\":1}}],[\"55\",{\"1\":{\"178\":1}}],[\"50748k\",{\"1\":{\"205\":1}}],[\"50\",{\"1\":{\"137\":1,\"216\":1}}],[\"500\",{\"1\":{\"118\":1}}],[\"50408\",{\"1\":{\"103\":1,\"367\":1}}],[\"5mb\",{\"1\":{\"103\":1,\"194\":1}}],[\"537912\",{\"1\":{\"205\":1}}],[\"53\",{\"1\":{\"101\":1}}],[\"5909\",{\"1\":{\"100\":1}}],[\"528\",{\"1\":{\"205\":3}}],[\"52\",{\"1\":{\"99\":1}}],[\"542\",{\"1\":{\"252\":1}}],[\"54562\",{\"1\":{\"205\":1}}],[\"54\",{\"1\":{\"99\":2}}],[\"5th\",{\"1\":{\"20\":1,\"30\":2}}],[\"5\",{\"0\":{\"84\":1,\"165\":1,\"398\":1},\"1\":{\"7\":1,\"14\":1,\"26\":4,\"60\":1,\"74\":1,\"77\":1,\"103\":1,\"121\":1,\"134\":1,\"144\":1,\"163\":5,\"165\":5,\"168\":1,\"172\":2,\"201\":2,\"205\":2,\"217\":2,\"222\":2,\"227\":4,\"233\":1,\"236\":1,\"246\":1,\"252\":2,\"253\":1,\"258\":1,\"261\":1,\"265\":1,\"266\":1,\"270\":1,\"303\":4,\"367\":2,\"394\":2}}],[\"2m\",{\"1\":{\"387\":1,\"392\":1}}],[\"2mb\",{\"1\":{\"99\":2,\"100\":1,\"104\":2}}],[\"2x2\",{\"1\":{\"212\":1}}],[\"26956k\",{\"1\":{\"205\":1}}],[\"26964k\",{\"1\":{\"205\":1}}],[\"26\",{\"1\":{\"205\":1}}],[\"26472\",{\"1\":{\"205\":1}}],[\"26136\",{\"1\":{\"205\":1}}],[\"27\",{\"1\":{\"367\":1}}],[\"2774\",{\"1\":{\"205\":1}}],[\"2708\",{\"1\":{\"205\":1}}],[\"21284k\",{\"1\":{\"205\":1}}],[\"21600\",{\"1\":{\"205\":2}}],[\"21920\",{\"1\":{\"205\":1}}],[\"21\",{\"1\":{\"205\":1}}],[\"22903\",{\"1\":{\"205\":1}}],[\"22\",{\"1\":{\"205\":2,\"339\":1}}],[\"225\",{\"1\":{\"110\":2}}],[\"25f1\",{\"1\":{\"304\":1}}],[\"25724k\",{\"1\":{\"205\":1}}],[\"25728k\",{\"1\":{\"205\":1}}],[\"2571\",{\"1\":{\"205\":1}}],[\"25850k\",{\"1\":{\"205\":1}}],[\"25\",{\"1\":{\"205\":1}}],[\"255\",{\"1\":{\"201\":1}}],[\"2560\",{\"1\":{\"205\":1}}],[\"256kb\",{\"1\":{\"104\":5}}],[\"256\",{\"1\":{\"100\":1,\"102\":2,\"117\":1,\"118\":1,\"201\":1}}],[\"29f1\",{\"1\":{\"304\":1}}],[\"2960\",{\"1\":{\"233\":2}}],[\"29\",{\"1\":{\"178\":1}}],[\"24096k\",{\"1\":{\"205\":1}}],[\"24100k\",{\"1\":{\"205\":1}}],[\"24296k\",{\"1\":{\"205\":1}}],[\"244944\",{\"1\":{\"205\":1}}],[\"244\",{\"1\":{\"205\":2}}],[\"24300k\",{\"1\":{\"205\":1}}],[\"243\",{\"1\":{\"205\":1}}],[\"24\",{\"1\":{\"168\":1,\"178\":1,\"232\":2,\"233\":3}}],[\"23s\",{\"1\":{\"238\":1}}],[\"230\",{\"1\":{\"205\":1}}],[\"230899\",{\"1\":{\"205\":2}}],[\"23976\",{\"1\":{\"205\":1}}],[\"232\",{\"1\":{\"205\":1}}],[\"2321\",{\"1\":{\"100\":1}}],[\"23\",{\"1\":{\"132\":1,\"177\":1,\"185\":1,\"205\":1,\"367\":1}}],[\"2d图合并为图集\",{\"1\":{\"383\":1}}],[\"2d动画的制作流程\",{\"1\":{\"383\":1}}],[\"2d动画控制\",{\"1\":{\"383\":1}}],[\"2d\",{\"1\":{\"121\":1,\"160\":2,\"166\":3,\"179\":2,\"248\":1,\"258\":1,\"313\":1,\"322\":1,\"329\":1}}],[\"2gb\",{\"1\":{\"104\":1,\"203\":1}}],[\"2866492\",{\"1\":{\"205\":1}}],[\"28528k\",{\"1\":{\"205\":1}}],[\"28\",{\"1\":{\"100\":1,\"206\":1}}],[\"2024\",{\"1\":{\"362\":1}}],[\"2020\",{\"1\":{\"308\":1,\"321\":1}}],[\"2021\",{\"1\":{\"302\":1,\"304\":1}}],[\"2022\",{\"1\":{\"4\":1,\"197\":1,\"315\":1,\"317\":2}}],[\"2048x2048\",{\"1\":{\"247\":1}}],[\"20mb\",{\"1\":{\"238\":1}}],[\"2073600\",{\"1\":{\"233\":2}}],[\"203\",{\"1\":{\"205\":1}}],[\"2032\",{\"1\":{\"205\":1}}],[\"203020\",{\"1\":{\"205\":1}}],[\"2036\",{\"1\":{\"205\":1}}],[\"20676\",{\"1\":{\"205\":1}}],[\"200k\",{\"1\":{\"217\":1}}],[\"200kb\",{\"1\":{\"201\":2}}],[\"200\",{\"1\":{\"121\":1,\"246\":1}}],[\"20\",{\"1\":{\"55\":1,\"131\":1,\"205\":1,\"238\":1,\"388\":1,\"393\":1}}],[\"2016\",{\"1\":{\"245\":2,\"254\":1}}],[\"201\",{\"1\":{\"205\":2}}],[\"2017\",{\"1\":{\"148\":3,\"168\":1,\"190\":1,\"193\":2,\"213\":2,\"234\":1,\"304\":4}}],[\"2019\",{\"0\":{\"386\":1},\"1\":{\"133\":1,\"304\":4,\"394\":1}}],[\"2018\",{\"1\":{\"125\":1,\"135\":1,\"169\":2,\"205\":1,\"304\":2}}],[\"2015\",{\"1\":{\"20\":1}}],[\"2010\",{\"1\":{\"20\":1}}],[\"2\",{\"0\":{\"80\":1,\"388\":1},\"1\":{\"7\":1,\"14\":1,\"20\":1,\"26\":1,\"27\":1,\"30\":1,\"49\":1,\"57\":2,\"60\":2,\"74\":2,\"75\":2,\"76\":2,\"77\":1,\"99\":3,\"100\":2,\"101\":3,\"102\":3,\"125\":1,\"132\":1,\"133\":1,\"134\":1,\"135\":1,\"136\":2,\"144\":1,\"145\":1,\"151\":1,\"163\":3,\"205\":11,\"217\":1,\"225\":1,\"228\":1,\"234\":1,\"236\":1,\"238\":3,\"254\":4,\"271\":3,\"275\":2,\"283\":2,\"292\":1,\"302\":1,\"303\":10,\"304\":1,\"305\":2,\"326\":1,\"355\":1,\"369\":1,\"377\":1,\"394\":1}}],[\"ghaction\",{\"1\":{\"339\":2}}],[\"gh\",{\"1\":{\"339\":3}}],[\"gjk\",{\"1\":{\"326\":1}}],[\"gdc\",{\"1\":{\"315\":1,\"317\":2}}],[\"gsm\",{\"1\":{\"205\":1}}],[\"gzipped\",{\"1\":{\"194\":1}}],[\"gpa\",{\"0\":{\"151\":1},\"1\":{\"147\":1}}],[\"gpuinstance\",{\"1\":{\"127\":1}}],[\"gpuinstacing\",{\"1\":{\"127\":2}}],[\"gpu\",{\"0\":{\"107\":1,\"113\":1,\"115\":1,\"118\":1,\"119\":1,\"120\":1,\"222\":2},\"1\":{\"41\":6,\"43\":6,\"51\":3,\"52\":1,\"55\":3,\"58\":3,\"60\":1,\"64\":1,\"69\":2,\"74\":4,\"76\":1,\"83\":1,\"106\":7,\"107\":1,\"110\":2,\"112\":16,\"113\":2,\"114\":7,\"115\":9,\"116\":4,\"117\":5,\"118\":8,\"119\":1,\"120\":1,\"124\":1,\"125\":1,\"126\":3,\"127\":9,\"132\":1,\"135\":4,\"136\":1,\"137\":1,\"139\":3,\"142\":1,\"151\":11,\"152\":2,\"154\":1,\"155\":1,\"157\":1,\"159\":1,\"178\":1,\"183\":1,\"200\":3,\"205\":1,\"210\":6,\"212\":11,\"216\":1,\"221\":2,\"222\":5,\"228\":1,\"232\":1,\"247\":4,\"387\":1,\"396\":1}}],[\"guide\",{\"1\":{\"335\":14,\"336\":13,\"360\":2,\"361\":2}}],[\"guid\",{\"1\":{\"299\":1}}],[\"guids\",{\"1\":{\"299\":1}}],[\"guiztestmode\",{\"1\":{\"160\":1}}],[\"gui\",{\"1\":{\"136\":1}}],[\"g\",{\"1\":{\"123\":2,\"343\":1,\"389\":1}}],[\"gilbert\",{\"1\":{\"326\":1}}],[\"gizmo\",{\"1\":{\"216\":1}}],[\"gi\",{\"1\":{\"104\":3,\"116\":1}}],[\"gitignore\",{\"1\":{\"347\":2}}],[\"git\",{\"1\":{\"315\":1,\"339\":1,\"346\":1,\"364\":1}}],[\"gitbook\",{\"1\":{\"33\":1}}],[\"githubactionpages\",{\"1\":{\"339\":1}}],[\"github\",{\"0\":{\"31\":1,\"339\":1},\"1\":{\"4\":1,\"10\":2,\"16\":1,\"17\":1,\"18\":1,\"19\":1,\"20\":1,\"22\":8,\"23\":1,\"29\":1,\"30\":1,\"31\":1,\"34\":1,\"131\":1,\"134\":1,\"220\":1,\"336\":2,\"339\":13,\"340\":2,\"341\":2}}],[\"gfxthreadabledevices\",{\"1\":{\"228\":1}}],[\"gfxthreadabledevice\",{\"1\":{\"228\":2}}],[\"gfxbench\",{\"1\":{\"210\":1}}],[\"gfxdeviceclient\",{\"1\":{\"225\":1,\"227\":1,\"228\":1}}],[\"gfxdevice\",{\"1\":{\"224\":1,\"225\":3,\"227\":1,\"228\":2}}],[\"gfxdev\",{\"1\":{\"206\":1}}],[\"gfx\",{\"1\":{\"60\":1,\"74\":1,\"98\":3,\"104\":8,\"205\":5,\"226\":2}}],[\"gcmodechanged\",{\"1\":{\"274\":1}}],[\"gcmode\",{\"1\":{\"274\":2,\"276\":1}}],[\"gcmd\",{\"1\":{\"224\":1,\"225\":1,\"227\":1,\"228\":1}}],[\"gc产生的原因\",{\"1\":{\"93\":1}}],[\"gc\",{\"0\":{\"42\":2,\"400\":1},\"1\":{\"41\":5,\"42\":9,\"48\":2,\"53\":1,\"55\":9,\"59\":2,\"60\":2,\"61\":2,\"63\":4,\"66\":2,\"68\":2,\"74\":6,\"75\":2,\"81\":2,\"96\":4,\"97\":2,\"205\":1,\"274\":7,\"275\":13,\"276\":5,\"369\":1,\"371\":1,\"399\":2,\"400\":2,\"401\":10,\"402\":1}}],[\"gears\",{\"1\":{\"361\":1}}],[\"general\",{\"1\":{\"300\":1,\"339\":1}}],[\"generates\",{\"1\":{\"280\":1}}],[\"generational\",{\"1\":{\"401\":1}}],[\"generation\",{\"1\":{\"26\":1,\"178\":1}}],[\"generic\",{\"0\":{\"197\":1},\"1\":{\"279\":1,\"393\":2}}],[\"generics\",{\"1\":{\"96\":1}}],[\"geometry\",{\"0\":{\"217\":1},\"1\":{\"60\":1,\"141\":1,\"217\":1,\"325\":2}}],[\"geogebra\",{\"1\":{\"30\":1}}],[\"getassemblies\",{\"1\":{\"309\":1}}],[\"getasync\",{\"1\":{\"57\":1}}],[\"getsharedmaterials\",{\"1\":{\"286\":1}}],[\"getstringasync\",{\"1\":{\"49\":1}}],[\"getparameter\",{\"1\":{\"286\":1}}],[\"getpixel\",{\"1\":{\"247\":2}}],[\"getvertices\",{\"1\":{\"285\":2}}],[\"getdesireddivisor\",{\"1\":{\"283\":1}}],[\"getlistofrandomnumbers\",{\"1\":{\"283\":2}}],[\"getobjectfrompool\",{\"1\":{\"279\":1}}],[\"getcount\",{\"1\":{\"271\":1}}],[\"getcomponents\",{\"1\":{\"145\":2,\"181\":4}}],[\"getcomponent<meshrenderer>\",{\"1\":{\"123\":1}}],[\"getcomponent<transform>\",{\"1\":{\"46\":1}}],[\"getcomponent\",{\"1\":{\"41\":2,\"53\":1,\"55\":2,\"60\":2,\"274\":1}}],[\"gettextstring\",{\"1\":{\"377\":4}}],[\"getter\",{\"1\":{\"262\":2}}],[\"gettouch\",{\"1\":{\"285\":2}}],[\"getting\",{\"1\":{\"59\":1,\"335\":1,\"336\":1}}],[\"get\",{\"1\":{\"64\":1,\"181\":1,\"257\":1,\"262\":1,\"271\":10,\"272\":2,\"285\":1,\"360\":1,\"361\":2,\"369\":1,\"390\":1}}],[\"getenumerator\",{\"1\":{\"60\":1}}],[\"getitemcount\",{\"1\":{\"56\":1}}],[\"gemini\",{\"1\":{\"7\":1,\"9\":1}}],[\"goap\",{\"1\":{\"331\":1}}],[\"goal\",{\"1\":{\"331\":2}}],[\"godot\",{\"1\":{\"327\":1}}],[\"going\",{\"1\":{\"145\":1}}],[\"good\",{\"1\":{\"59\":1,\"280\":1,\"281\":1,\"282\":1,\"283\":1}}],[\"google\",{\"1\":{\"7\":3,\"202\":1,\"205\":1}}],[\"gold\",{\"1\":{\"30\":1}}],[\"goldsource\",{\"1\":{\"30\":1}}],[\"go\",{\"0\":{\"25\":1,\"38\":1},\"1\":{\"25\":2,\"38\":3,\"39\":1}}],[\"gobang\",{\"1\":{\"22\":2}}],[\"grow\",{\"1\":{\"369\":1}}],[\"group\",{\"0\":{\"181\":1},\"1\":{\"60\":1,\"170\":2,\"181\":7}}],[\"groups\",{\"1\":{\"22\":1}}],[\"grep\",{\"1\":{\"205\":1}}],[\"gralloc\",{\"1\":{\"205\":1,\"234\":1}}],[\"granularity\",{\"1\":{\"100\":2,\"104\":4}}],[\"graphicupdatecomplete\",{\"1\":{\"144\":1}}],[\"graphicrebuildqueue\",{\"1\":{\"144\":6}}],[\"graphicraycaster\",{\"1\":{\"74\":1}}],[\"graphic\",{\"0\":{\"146\":1,\"179\":1},\"1\":{\"139\":1,\"141\":6,\"144\":5,\"146\":4,\"150\":3,\"152\":2,\"155\":1,\"164\":1,\"165\":1,\"166\":7,\"170\":5,\"172\":1,\"179\":7,\"180\":2}}],[\"graphicssettings\",{\"1\":{\"112\":1,\"128\":1}}],[\"graphics\",{\"0\":{\"144\":1,\"209\":1,\"223\":1,\"228\":1,\"329\":1,\"330\":1},\"1\":{\"20\":1,\"22\":1,\"112\":1,\"114\":1,\"115\":3,\"116\":2,\"118\":1,\"119\":1,\"141\":1,\"205\":2,\"210\":1,\"222\":1,\"223\":1,\"225\":1,\"228\":1,\"237\":2,\"241\":1,\"244\":1,\"324\":1,\"329\":1}}],[\"graph\",{\"1\":{\"50\":2,\"58\":3,\"112\":8,\"319\":2}}],[\"graphview\",{\"1\":{\"22\":2}}],[\"graphviewbehaviortree\",{\"1\":{\"22\":1}}],[\"glsl\",{\"1\":{\"330\":1}}],[\"glslsandbox\",{\"1\":{\"20\":1}}],[\"glcore\",{\"1\":{\"238\":2}}],[\"glclear\",{\"1\":{\"212\":2}}],[\"glyph\",{\"1\":{\"169\":1}}],[\"gles\",{\"1\":{\"225\":1}}],[\"gles2\",{\"1\":{\"151\":1}}],[\"gles3\",{\"1\":{\"151\":1}}],[\"glossiness\",{\"1\":{\"121\":3}}],[\"global\",{\"1\":{\"26\":1,\"116\":2,\"343\":1}}],[\"glad\",{\"1\":{\"20\":1}}],[\"gl\",{\"1\":{\"20\":3,\"205\":6,\"206\":1}}],[\"glblend\",{\"1\":{\"20\":1}}],[\"galaxy\",{\"1\":{\"233\":1}}],[\"gapps\",{\"1\":{\"205\":1}}],[\"gaming\",{\"1\":{\"20\":1}}],[\"gamer\",{\"1\":{\"313\":1}}],[\"gameframwork\",{\"1\":{\"313\":1}}],[\"gameframework\",{\"1\":{\"22\":1}}],[\"gameplay\",{\"1\":{\"97\":1}}],[\"gameeventso\",{\"1\":{\"75\":1}}],[\"gameevent\",{\"1\":{\"45\":1}}],[\"gameobjects\",{\"1\":{\"106\":1,\"155\":1,\"200\":1}}],[\"gameobject\",{\"1\":{\"42\":2,\"45\":1,\"46\":3,\"56\":3,\"57\":1,\"59\":3,\"60\":1,\"64\":1,\"70\":1,\"75\":3,\"77\":2,\"106\":5,\"108\":6,\"109\":17,\"110\":8,\"112\":11,\"114\":3,\"115\":2,\"118\":2,\"119\":1,\"120\":2,\"123\":3,\"145\":1,\"155\":1,\"156\":1,\"168\":2,\"169\":1,\"170\":1,\"173\":2,\"174\":2,\"181\":2,\"213\":6,\"215\":6,\"216\":3,\"217\":4,\"222\":1,\"262\":1,\"279\":4,\"379\":1,\"391\":3}}],[\"games202\",{\"1\":{\"20\":3}}],[\"games\",{\"1\":{\"20\":2,\"30\":1,\"326\":2,\"331\":2}}],[\"games101\",{\"1\":{\"20\":2}}],[\"game\",{\"0\":{\"327\":1},\"1\":{\"19\":1,\"22\":1,\"30\":2,\"149\":1,\"248\":2,\"324\":1,\"325\":1,\"331\":2}}],[\"garbagecollection\",{\"1\":{\"276\":1}}],[\"garbagecollector\",{\"1\":{\"274\":3,\"275\":1,\"276\":4}}],[\"garbage\",{\"1\":{\"14\":1,\"97\":1,\"189\":2,\"274\":1,\"283\":1}}],[\"gguf\",{\"1\":{\"16\":1,\"17\":2}}],[\"know\",{\"1\":{\"181\":1}}],[\"k++\",{\"1\":{\"144\":1}}],[\"key\",{\"1\":{\"340\":2,\"377\":6}}],[\"keywords\",{\"0\":{\"240\":1},\"1\":{\"135\":1,\"240\":1}}],[\"keerthi\",{\"1\":{\"326\":1}}],[\"keep\",{\"1\":{\"119\":1}}],[\"kb\",{\"1\":{\"102\":7,\"205\":7,\"253\":1}}],[\"killer\",{\"1\":{\"388\":2}}],[\"kilobytes\",{\"1\":{\"205\":2,\"233\":1}}],[\"kinect\",{\"1\":{\"321\":1}}],[\"kindle\",{\"1\":{\"30\":1}}],[\"kimi\",{\"1\":{\"7\":2}}],[\"k\",{\"1\":{\"17\":1,\"55\":1,\"144\":4}}],[\"k2\",{\"1\":{\"7\":2}}],[\"v4\",{\"1\":{\"339\":4,\"340\":1}}],[\"v0\",{\"1\":{\"336\":2}}],[\"v18\",{\"1\":{\"343\":1}}],[\"v1\",{\"1\":{\"336\":2}}],[\"vbo\",{\"1\":{\"173\":1}}],[\"vtune\",{\"0\":{\"150\":1},\"1\":{\"147\":1,\"150\":1}}],[\"v2f\",{\"1\":{\"122\":4,\"160\":4}}],[\"vorbis\",{\"1\":{\"201\":5,\"249\":1}}],[\"voice\",{\"1\":{\"201\":2}}],[\"voices\",{\"1\":{\"201\":1}}],[\"void\",{\"1\":{\"121\":1,\"123\":1,\"144\":1,\"145\":1,\"146\":1,\"168\":1,\"181\":2,\"246\":1,\"263\":1,\"267\":1,\"279\":2,\"280\":4,\"281\":1,\"282\":2,\"285\":3,\"309\":1,\"369\":3}}],[\"volume\",{\"1\":{\"116\":1,\"326\":4}}],[\"v\",{\"1\":{\"118\":2,\"122\":4,\"275\":2,\"330\":1}}],[\"vm\",{\"0\":{\"399\":1},\"1\":{\"96\":8,\"97\":1,\"203\":1,\"205\":2,\"389\":3,\"399\":1,\"404\":1}}],[\"vmf\",{\"1\":{\"30\":2}}],[\"validcontroller\",{\"1\":{\"181\":1}}],[\"valid\",{\"1\":{\"181\":1}}],[\"validlayoutgroup\",{\"1\":{\"181\":4}}],[\"values\",{\"1\":{\"281\":1}}],[\"value>\",{\"1\":{\"104\":1}}],[\"value\",{\"0\":{\"48\":1},\"1\":{\"48\":1,\"63\":1,\"68\":1,\"97\":1,\"271\":4,\"280\":1,\"281\":2,\"283\":1,\"284\":1,\"369\":5,\"377\":1}}],[\"var\",{\"1\":{\"144\":4,\"181\":3,\"253\":1,\"279\":2,\"281\":1,\"285\":1,\"309\":1}}],[\"variants\",{\"0\":{\"241\":1},\"1\":{\"119\":2}}],[\"variant\",{\"0\":{\"242\":1},\"1\":{\"58\":1,\"237\":1}}],[\"vr\",{\"1\":{\"50\":1,\"55\":1,\"133\":3,\"218\":1,\"321\":1}}],[\"vector\",{\"1\":{\"325\":1}}],[\"vectors\",{\"0\":{\"214\":1},\"1\":{\"214\":2}}],[\"vector3\",{\"1\":{\"48\":2,\"260\":3,\"270\":1,\"272\":2,\"273\":1}}],[\"velocity\",{\"1\":{\"46\":2,\"326\":2}}],[\"verison\",{\"1\":{\"339\":1,\"340\":1}}],[\"vertices\",{\"1\":{\"285\":20}}],[\"vertical\",{\"1\":{\"230\":1}}],[\"vertsdirty\",{\"1\":{\"146\":2}}],[\"vert\",{\"1\":{\"60\":1,\"122\":2,\"160\":2}}],[\"vertexinput\",{\"1\":{\"118\":1}}],[\"vertex\",{\"0\":{\"51\":1,\"122\":1},\"1\":{\"41\":1,\"51\":2,\"60\":1,\"76\":4,\"118\":8,\"120\":4,\"122\":9,\"160\":6,\"217\":1}}],[\"ver\",{\"1\":{\"30\":1}}],[\"version++\",{\"1\":{\"369\":2}}],[\"versioning\",{\"1\":{\"305\":2}}],[\"version\",{\"0\":{\"303\":1},\"1\":{\"27\":1,\"281\":1,\"301\":1,\"302\":4,\"303\":1,\"336\":2,\"339\":1,\"340\":2}}],[\"vitebundler\",{\"1\":{\"346\":2}}],[\"vite\",{\"1\":{\"335\":1,\"336\":1,\"346\":2}}],[\"video\",{\"1\":{\"326\":2}}],[\"virtual\",{\"1\":{\"146\":1,\"201\":2,\"205\":1}}],[\"visible\",{\"1\":{\"112\":2}}],[\"visibility\",{\"1\":{\"112\":2,\"329\":1,\"339\":1}}],[\"visualeffectgraph\",{\"1\":{\"319\":1}}],[\"visual\",{\"1\":{\"30\":2,\"312\":1,\"319\":2,\"329\":1}}],[\"visualscripting\",{\"1\":{\"22\":1}}],[\"viewport\",{\"1\":{\"212\":1}}],[\"viewrootimpl\",{\"1\":{\"205\":2}}],[\"views\",{\"0\":{\"170\":1},\"1\":{\"170\":2,\"205\":2}}],[\"viewmodel\",{\"1\":{\"44\":1,\"85\":2}}],[\"view\",{\"1\":{\"44\":4,\"51\":1,\"85\":2,\"149\":1,\"170\":22,\"215\":2}}],[\"viewer\",{\"1\":{\"30\":1}}],[\"vscode\",{\"1\":{\"338\":1}}],[\"vss\",{\"1\":{\"205\":3}}],[\"vsync属性\",{\"1\":{\"275\":1}}],[\"vsynccount\",{\"1\":{\"275\":9}}],[\"vsync\",{\"1\":{\"134\":1,\"230\":3,\"275\":2}}],[\"vs2012以上版本\",{\"1\":{\"26\":1}}],[\"vs\",{\"1\":{\"26\":1,\"30\":1,\"48\":1,\"66\":1,\"79\":1,\"275\":2,\"404\":1}}],[\"vfx\",{\"1\":{\"22\":1,\"50\":1,\"58\":1}}],[\"vulkan\",{\"1\":{\"20\":1,\"225\":2,\"228\":2,\"234\":1,\"330\":2,\"333\":2}}],[\"vuejs\",{\"1\":{\"335\":2,\"336\":6,\"367\":2}}],[\"vuepress2\",{\"1\":{\"341\":1}}],[\"vuepress\",{\"0\":{\"349\":1,\"352\":1},\"1\":{\"335\":1,\"336\":5,\"338\":4,\"339\":3,\"342\":1,\"345\":1,\"346\":15,\"347\":11,\"350\":3,\"351\":1,\"352\":2,\"355\":6,\"357\":4,\"358\":1,\"359\":1,\"360\":3,\"361\":1,\"362\":1,\"364\":1,\"367\":7}}],[\"vue\",{\"0\":{\"5\":1},\"1\":{\"5\":2,\"335\":1,\"346\":2}}],[\"v3\",{\"1\":{\"7\":1}}],[\"azure\",{\"1\":{\"341\":1}}],[\"axis\",{\"1\":{\"326\":3}}],[\"affine\",{\"1\":{\"325\":3}}],[\"agents\",{\"1\":{\"321\":1}}],[\"avoid\",{\"1\":{\"281\":1}}],[\"avoids\",{\"1\":{\"280\":1}}],[\"availability\",{\"1\":{\"225\":1,\"228\":1}}],[\"avprovideo\",{\"1\":{\"22\":1}}],[\"a8\",{\"1\":{\"221\":1}}],[\"author\",{\"1\":{\"363\":3}}],[\"authentication\",{\"1\":{\"339\":1}}],[\"auto\",{\"1\":{\"145\":1,\"291\":1,\"292\":6}}],[\"auditing\",{\"0\":{\"220\":1},\"1\":{\"220\":1}}],[\"audibility\",{\"1\":{\"201\":1}}],[\"audioclip\",{\"1\":{\"201\":2}}],[\"audio\",{\"0\":{\"201\":1,\"392\":1},\"1\":{\"104\":1,\"201\":3}}],[\"attributes\",{\"1\":{\"308\":3}}],[\"attack\",{\"1\":{\"132\":1}}],[\"at\",{\"1\":{\"120\":1,\"285\":1}}],[\"atlases\",{\"1\":{\"148\":1,\"216\":1}}],[\"atlasing\",{\"1\":{\"43\":1}}],[\"atlas\",{\"1\":{\"41\":1,\"64\":1,\"69\":1,\"74\":1,\"83\":1}}],[\"aes\",{\"1\":{\"88\":1}}],[\"aabb\",{\"1\":{\"215\":1,\"326\":1}}],[\"aabao\",{\"1\":{\"30\":1}}],[\"aas会分析依赖\",{\"1\":{\"60\":1}}],[\"aas自动处理依赖\",{\"1\":{\"60\":1}}],[\"aas的\",{\"1\":{\"60\":1}}],[\"aas\",{\"1\":{\"60\":2,\"76\":4}}],[\"about\",{\"1\":{\"339\":1,\"361\":3}}],[\"above\",{\"1\":{\"181\":1}}],[\"abcde\",{\"1\":{\"280\":1}}],[\"abcd\",{\"1\":{\"280\":1}}],[\"abc\",{\"1\":{\"280\":1}}],[\"ab\",{\"1\":{\"60\":1,\"76\":2,\"280\":1}}],[\"acceleration\",{\"1\":{\"326\":1}}],[\"accessed\",{\"1\":{\"285\":2}}],[\"access\",{\"1\":{\"118\":1,\"121\":1,\"122\":1}}],[\"accum\",{\"1\":{\"271\":16}}],[\"acore\",{\"1\":{\"205\":1}}],[\"achievement\",{\"1\":{\"60\":1}}],[\"achievementmanager\",{\"1\":{\"56\":1}}],[\"activematch\",{\"1\":{\"360\":1}}],[\"activities\",{\"1\":{\"205\":2}}],[\"activity\",{\"1\":{\"44\":1}}],[\"actions\",{\"1\":{\"339\":5,\"340\":1}}],[\"action\",{\"1\":{\"52\":1,\"75\":2,\"92\":1,\"145\":1,\"331\":2,\"339\":1,\"340\":3}}],[\"ahead\",{\"1\":{\"47\":1,\"57\":1,\"76\":1,\"190\":1,\"371\":1}}],[\"aot\",{\"1\":{\"47\":2,\"57\":2,\"65\":1,\"76\":1,\"190\":1,\"371\":3}}],[\"a\",{\"1\":{\"42\":2,\"45\":2,\"52\":1,\"60\":4,\"93\":1,\"97\":4,\"121\":1,\"145\":2,\"149\":6,\"168\":4,\"212\":1,\"225\":5,\"228\":5,\"241\":2,\"252\":6,\"260\":3,\"279\":1,\"280\":3,\"281\":1,\"282\":1,\"283\":2,\"304\":2,\"335\":1,\"339\":2,\"363\":8}}],[\"await\",{\"1\":{\"49\":4,\"57\":8,\"60\":6}}],[\"awake\",{\"1\":{\"41\":1,\"55\":1,\"56\":1,\"59\":1,\"60\":1,\"62\":2,\"67\":2,\"77\":1,\"79\":2,\"222\":1,\"267\":1,\"269\":1}}],[\"awesome\",{\"1\":{\"10\":2}}],[\"angular\",{\"1\":{\"326\":1}}],[\"angle\",{\"1\":{\"325\":1}}],[\"any\",{\"1\":{\"296\":2}}],[\"anonymous\",{\"1\":{\"283\":2,\"404\":1}}],[\"anativewindow\",{\"1\":{\"234\":1}}],[\"analyzing\",{\"1\":{\"331\":1}}],[\"analyzer\",{\"1\":{\"60\":1,\"104\":2}}],[\"analysis\",{\"1\":{\"112\":1,\"215\":1}}],[\"anti\",{\"1\":{\"214\":1}}],[\"an\",{\"1\":{\"185\":1,\"281\":1,\"283\":1,\"285\":1}}],[\"animated\",{\"1\":{\"217\":1}}],[\"animator\",{\"0\":{\"184\":1},\"1\":{\"52\":1,\"55\":1,\"184\":4,\"218\":1,\"248\":5,\"257\":4,\"270\":1,\"286\":3}}],[\"animation\",{\"1\":{\"30\":1,\"218\":1,\"322\":1,\"329\":1}}],[\"and\",{\"1\":{\"20\":1,\"26\":2,\"30\":2,\"120\":1,\"195\":1,\"232\":2,\"234\":1,\"255\":1,\"280\":3,\"281\":1,\"283\":1,\"285\":3,\"324\":1,\"325\":1,\"326\":2,\"329\":2,\"330\":1,\"331\":2,\"333\":1,\"335\":1,\"339\":1,\"396\":1,\"404\":1}}],[\"androidsource\",{\"1\":{\"388\":1}}],[\"androiddevelopers\",{\"1\":{\"388\":1}}],[\"androidremote\",{\"1\":{\"322\":1}}],[\"androidmemory\",{\"1\":{\"205\":1}}],[\"androidtest\",{\"1\":{\"205\":2}}],[\"android\",{\"0\":{\"18\":1,\"202\":2,\"203\":2,\"206\":1,\"388\":1},\"1\":{\"18\":1,\"44\":1,\"165\":1,\"190\":2,\"193\":4,\"201\":2,\"202\":4,\"203\":5,\"204\":3,\"205\":17,\"206\":3,\"207\":1,\"208\":1,\"221\":4,\"225\":1,\"228\":1,\"231\":1,\"232\":1,\"233\":1,\"234\":4,\"247\":1,\"249\":1,\"254\":1,\"275\":1,\"323\":1,\"387\":3,\"388\":8,\"392\":1}}],[\"amplify\",{\"1\":{\"318\":1,\"319\":1,\"322\":1}}],[\"amhc\",{\"1\":{\"30\":1}}],[\"amazon\",{\"1\":{\"30\":1}}],[\"algorithm\",{\"1\":{\"326\":1}}],[\"algorithms\",{\"1\":{\"326\":1,\"331\":1}}],[\"algebra\",{\"1\":{\"325\":2}}],[\"aligned\",{\"1\":{\"326\":1}}],[\"aliasing\",{\"1\":{\"214\":1}}],[\"already\",{\"1\":{\"279\":1}}],[\"alen\",{\"1\":{\"252\":2}}],[\"albedo\",{\"1\":{\"121\":2}}],[\"alpahtest和blend的区别\",{\"1\":{\"93\":1}}],[\"alpha阶段\",{\"1\":{\"133\":1}}],[\"alpha\",{\"1\":{\"22\":1,\"121\":1,\"142\":1,\"155\":1,\"215\":3,\"304\":2,\"331\":2}}],[\"always\",{\"1\":{\"60\":1,\"237\":1,\"244\":1}}],[\"allow\",{\"1\":{\"369\":1}}],[\"allocate\",{\"1\":{\"285\":1}}],[\"allocates\",{\"1\":{\"280\":1,\"281\":1,\"282\":1,\"283\":1}}],[\"allocated\",{\"1\":{\"99\":1,\"100\":2,\"101\":3,\"102\":2}}],[\"allocators\",{\"1\":{\"102\":1,\"103\":1,\"104\":5}}],[\"allocator\",{\"0\":{\"99\":1,\"100\":1,\"101\":1,\"102\":1,\"103\":1},\"1\":{\"100\":7,\"101\":1,\"102\":1,\"104\":44,\"200\":1,\"390\":5}}],[\"allocations\",{\"1\":{\"100\":2,\"189\":1,\"281\":1}}],[\"allocation\",{\"1\":{\"41\":1,\"96\":1,\"99\":1,\"101\":4}}],[\"alloc\",{\"1\":{\"41\":1,\"55\":1,\"60\":2,\"63\":1,\"68\":1,\"74\":2,\"96\":1,\"99\":1,\"100\":2,\"101\":4,\"102\":4,\"103\":1,\"205\":2,\"274\":4,\"367\":1,\"390\":1}}],[\"all\",{\"1\":{\"30\":1,\"31\":1,\"112\":3,\"119\":1,\"121\":1,\"279\":1,\"285\":1}}],[\"ashmem\",{\"1\":{\"205\":2}}],[\"asm\",{\"1\":{\"194\":1}}],[\"ascii\",{\"1\":{\"168\":1}}],[\"asyncoperation\",{\"1\":{\"269\":2}}],[\"asyncuploadbuffersize\",{\"1\":{\"200\":1}}],[\"async\",{\"1\":{\"49\":3,\"57\":5,\"60\":3}}],[\"astc\",{\"1\":{\"31\":1,\"221\":12}}],[\"assertion\",{\"1\":{\"336\":1}}],[\"assemblylister\",{\"1\":{\"309\":1}}],[\"assemblycopyright\",{\"1\":{\"308\":1}}],[\"assemblycompany\",{\"1\":{\"308\":1}}],[\"assemblytitle\",{\"1\":{\"308\":1}}],[\"assemblyinfo\",{\"1\":{\"308\":1}}],[\"assembly\",{\"0\":{\"198\":1},\"1\":{\"196\":3,\"289\":8,\"291\":4,\"293\":1,\"294\":1,\"295\":2,\"299\":1,\"300\":2,\"306\":1,\"307\":2,\"308\":9,\"309\":3}}],[\"assembliestype\",{\"1\":{\"309\":3}}],[\"assemblies\",{\"1\":{\"190\":1,\"192\":1,\"196\":1,\"309\":2}}],[\"assetimporter\",{\"1\":{\"246\":1}}],[\"assetpostprocessor\",{\"1\":{\"246\":6}}],[\"assetauditor\",{\"1\":{\"220\":1}}],[\"assetmanagers\",{\"1\":{\"205\":2}}],[\"assetsplugins\",{\"1\":{\"289\":1}}],[\"assetspro\",{\"1\":{\"289\":2}}],[\"assets\",{\"0\":{\"189\":1},\"1\":{\"96\":1,\"189\":1,\"196\":4,\"200\":1,\"205\":2,\"255\":1,\"289\":1,\"294\":1,\"295\":1,\"335\":1,\"336\":1,\"359\":1}}],[\"assetstudio\",{\"1\":{\"22\":1}}],[\"assetstore\",{\"1\":{\"4\":1,\"22\":1}}],[\"assetbunle\",{\"1\":{\"93\":1}}],[\"assetbundles\",{\"1\":{\"196\":1,\"200\":2,\"222\":1,\"255\":1}}],[\"assetbundlemanifestpath\",{\"1\":{\"196\":1}}],[\"assetbundlemanifest\",{\"1\":{\"60\":1,\"76\":1}}],[\"assetbundle\",{\"0\":{\"3\":1,\"394\":1},\"1\":{\"3\":1,\"44\":1,\"60\":2,\"61\":1,\"65\":5,\"66\":1,\"70\":6,\"76\":2,\"84\":2,\"93\":1,\"194\":1,\"200\":2,\"222\":2,\"254\":1,\"269\":6,\"389\":1,\"394\":10,\"395\":1}}],[\"asset\",{\"0\":{\"220\":1},\"1\":{\"22\":1,\"45\":4,\"56\":2,\"60\":1,\"76\":1,\"104\":2,\"112\":1,\"128\":1,\"169\":9,\"200\":1,\"220\":1,\"307\":1,\"313\":1,\"389\":1,\"394\":2}}],[\"assumeuniformscaling\",{\"1\":{\"118\":1}}],[\"assimp\",{\"1\":{\"31\":1}}],[\"assist\",{\"1\":{\"30\":2}}],[\"as\",{\"1\":{\"30\":1,\"145\":4,\"181\":4,\"336\":1}}],[\"adj\",{\"1\":{\"388\":1}}],[\"advanced\",{\"0\":{\"333\":1},\"1\":{\"331\":1,\"335\":11,\"336\":4,\"361\":1}}],[\"adventure\",{\"1\":{\"313\":1}}],[\"adb\",{\"1\":{\"205\":6}}],[\"adblock\",{\"1\":{\"30\":1}}],[\"adpcm\",{\"1\":{\"201\":2}}],[\"add\",{\"1\":{\"346\":2,\"355\":2,\"357\":1,\"369\":2}}],[\"adding\",{\"1\":{\"335\":1}}],[\"additional\",{\"1\":{\"112\":4}}],[\"address\",{\"1\":{\"205\":1}}],[\"addressable\",{\"1\":{\"60\":1,\"76\":1}}],[\"addressables\",{\"1\":{\"22\":1,\"44\":1,\"60\":1,\"84\":3,\"394\":1}}],[\"addforce\",{\"1\":{\"60\":1,\"74\":1}}],[\"adreno\",{\"1\":{\"20\":1,\"212\":2,\"221\":1}}],[\"argumentoutofrange\",{\"1\":{\"369\":1}}],[\"ar\",{\"1\":{\"321\":1}}],[\"are\",{\"1\":{\"279\":1}}],[\"area\",{\"1\":{\"205\":1,\"206\":1}}],[\"artificial\",{\"1\":{\"331\":1,\"332\":1}}],[\"article\",{\"1\":{\"108\":1,\"358\":1,\"365\":1}}],[\"art\",{\"1\":{\"205\":2}}],[\"arial\",{\"1\":{\"168\":4}}],[\"arraytofill\",{\"1\":{\"281\":3}}],[\"array\",{\"1\":{\"48\":1,\"81\":1,\"281\":3,\"285\":4,\"369\":6}}],[\"arraylist\",{\"1\":{\"42\":1}}],[\"architectures\",{\"1\":{\"190\":1}}],[\"architecture\",{\"1\":{\"53\":1,\"85\":1,\"335\":1,\"336\":1}}],[\"archive\",{\"1\":{\"22\":1}}],[\"archetype\",{\"1\":{\"46\":1}}],[\"arm64\",{\"1\":{\"190\":1}}],[\"armv7\",{\"1\":{\"190\":2}}],[\"arm\",{\"1\":{\"20\":1,\"221\":1}}],[\"ap++\",{\"1\":{\"252\":1}}],[\"ap\",{\"1\":{\"252\":7}}],[\"apk\",{\"1\":{\"205\":2,\"208\":1}}],[\"apktool\",{\"1\":{\"18\":2}}],[\"append\",{\"1\":{\"280\":1}}],[\"appcontexts\",{\"1\":{\"205\":2}}],[\"app\",{\"1\":{\"199\":1,\"205\":2,\"206\":1,\"388\":5,\"394\":1}}],[\"appdata\",{\"1\":{\"122\":2,\"160\":2}}],[\"apply\",{\"1\":{\"295\":1,\"296\":1,\"300\":1,\"301\":1,\"302\":1}}],[\"apple\",{\"1\":{\"110\":1,\"147\":1,\"150\":1,\"190\":1,\"212\":1,\"221\":1}}],[\"appleso\",{\"1\":{\"56\":1}}],[\"applications\",{\"1\":{\"205\":2,\"245\":2}}],[\"application\",{\"0\":{\"208\":1},\"1\":{\"91\":1,\"269\":2,\"275\":6}}],[\"apis\",{\"1\":{\"252\":1,\"254\":1,\"262\":1,\"263\":1,\"302\":1}}],[\"api使用榜单\",{\"1\":{\"13\":1}}],[\"api\",{\"0\":{\"8\":1,\"252\":1,\"258\":1,\"285\":1,\"286\":1,\"330\":2},\"1\":{\"7\":2,\"19\":3,\"24\":1,\"41\":1,\"55\":1,\"80\":1,\"88\":1,\"96\":3,\"99\":1,\"106\":5,\"109\":4,\"110\":2,\"114\":1,\"126\":1,\"151\":3,\"199\":1,\"215\":1,\"223\":1,\"224\":1,\"225\":7,\"228\":6,\"238\":1,\"244\":4,\"247\":1,\"251\":2,\"254\":1,\"257\":2,\"258\":2,\"261\":2,\"269\":1,\"270\":1,\"271\":1,\"274\":1,\"276\":2,\"279\":1,\"285\":5,\"286\":5,\"291\":1,\"312\":1,\"323\":1,\"335\":4,\"336\":4,\"371\":1,\"389\":1}}],[\"ai扩展接口\",{\"1\":{\"383\":1}}],[\"ai可视化工具\",{\"1\":{\"383\":1}}],[\"ai层\",{\"1\":{\"383\":1}}],[\"airtest\",{\"1\":{\"22\":1}}],[\"ai模型评估\",{\"1\":{\"13\":1}}],[\"ai\",{\"0\":{\"6\":1,\"12\":1,\"13\":1,\"14\":1,\"15\":1,\"331\":1,\"332\":2},\"1\":{\"7\":3,\"14\":1,\"22\":1,\"55\":1,\"321\":1,\"331\":1,\"383\":1}}],[\"cpp\",{\"1\":{\"389\":1}}],[\"cpu不再需要为每个material切换cbuffer\",{\"1\":{\"60\":1}}],[\"cpu\",{\"1\":{\"41\":8,\"43\":5,\"46\":3,\"49\":1,\"55\":7,\"57\":1,\"58\":3,\"59\":1,\"64\":2,\"69\":2,\"74\":6,\"75\":4,\"77\":1,\"97\":3,\"104\":1,\"106\":3,\"108\":3,\"109\":3,\"110\":2,\"112\":4,\"125\":2,\"126\":2,\"127\":1,\"130\":1,\"132\":1,\"133\":1,\"134\":5,\"135\":2,\"139\":2,\"143\":3,\"147\":1,\"148\":4,\"150\":1,\"152\":3,\"165\":2,\"173\":1,\"175\":1,\"178\":1,\"200\":3,\"201\":3,\"205\":1,\"212\":1,\"213\":1,\"218\":1,\"222\":1,\"247\":3,\"256\":2,\"269\":2,\"270\":2,\"274\":2,\"275\":2,\"276\":1,\"277\":1,\"284\":1,\"285\":3,\"387\":7,\"392\":4,\"396\":1}}],[\"cil\",{\"1\":{\"371\":1}}],[\"circle\",{\"1\":{\"360\":1}}],[\"cinemamachine\",{\"1\":{\"313\":1}}],[\"cd\",{\"1\":{\"346\":1}}],[\"cd流程中自动检测这类问题\",{\"1\":{\"60\":1}}],[\"ccd\",{\"1\":{\"326\":1}}],[\"cclabel文字破碎\",{\"1\":{\"19\":1}}],[\"center\",{\"1\":{\"326\":1}}],[\"cyclic\",{\"1\":{\"293\":1}}],[\"cmdline\",{\"1\":{\"205\":1}}],[\"cmder\",{\"1\":{\"33\":1}}],[\"cbffer\",{\"1\":{\"127\":1}}],[\"cbuffer\",{\"1\":{\"58\":3,\"60\":2,\"126\":1,\"127\":12,\"129\":2,\"136\":8}}],[\"cg\",{\"1\":{\"318\":1,\"321\":1}}],[\"cginc\",{\"1\":{\"122\":1,\"160\":2}}],[\"cgprogram\",{\"1\":{\"121\":1,\"122\":1,\"160\":1}}],[\"capacity\",{\"1\":{\"369\":3}}],[\"capture\",{\"1\":{\"151\":1}}],[\"caution\",{\"1\":{\"366\":1}}],[\"carlo\",{\"1\":{\"331\":1}}],[\"cast\",{\"1\":{\"369\":1}}],[\"cascaded\",{\"1\":{\"329\":1}}],[\"case\",{\"1\":{\"145\":1,\"146\":1}}],[\"can\",{\"1\":{\"281\":1}}],[\"canusespriteatlas\",{\"1\":{\"160\":1}}],[\"canvasrenderer\",{\"1\":{\"146\":2}}],[\"canvasupdateprofilerstrings\",{\"1\":{\"144\":2}}],[\"canvasupdate\",{\"1\":{\"144\":6,\"145\":2,\"146\":2}}],[\"canvasupdateregistry\",{\"1\":{\"141\":1,\"144\":3,\"148\":1,\"150\":1,\"152\":1}}],[\"canvases\",{\"0\":{\"143\":1},\"1\":{\"163\":2}}],[\"canvas\",{\"0\":{\"153\":1,\"161\":1,\"163\":1,\"173\":1,\"178\":1,\"183\":1},\"1\":{\"55\":2,\"74\":1,\"139\":4,\"141\":15,\"142\":1,\"143\":6,\"144\":1,\"146\":1,\"148\":12,\"149\":5,\"150\":7,\"152\":16,\"155\":1,\"157\":1,\"161\":9,\"163\":19,\"165\":1,\"166\":2,\"168\":4,\"169\":6,\"170\":4,\"173\":7,\"174\":4,\"178\":17,\"179\":5,\"180\":8,\"183\":9,\"379\":4}}],[\"catmull\",{\"1\":{\"325\":1}}],[\"cat\",{\"1\":{\"205\":1}}],[\"catch\",{\"1\":{\"144\":2}}],[\"category\",{\"1\":{\"30\":1,\"358\":1,\"363\":2,\"365\":1}}],[\"calculatelayoutinputvertical\",{\"1\":{\"145\":1}}],[\"calculatelayoutinputhorizontal\",{\"1\":{\"145\":1}}],[\"calculateinterpolatedlightandocclusionprobes\",{\"1\":{\"116\":1}}],[\"called\",{\"1\":{\"281\":1,\"283\":1}}],[\"callback\",{\"1\":{\"173\":3}}],[\"call中的cpu开销\",{\"1\":{\"60\":1}}],[\"call\",{\"0\":{\"43\":2,\"216\":1},\"1\":{\"43\":5,\"55\":1,\"58\":2,\"61\":1,\"64\":3,\"66\":1,\"69\":4,\"74\":1,\"83\":2,\"97\":1,\"106\":2,\"108\":1,\"178\":1,\"216\":2,\"274\":1}}],[\"calls\",{\"1\":{\"41\":4,\"52\":1,\"55\":1,\"60\":1,\"74\":3,\"135\":1,\"216\":1}}],[\"cameras\",{\"1\":{\"213\":1}}],[\"camera\",{\"0\":{\"180\":1,\"211\":1},\"1\":{\"55\":1,\"60\":1,\"74\":1,\"112\":1,\"149\":3,\"151\":1,\"174\":8,\"179\":2,\"180\":16,\"194\":1,\"210\":1,\"211\":1,\"212\":1,\"213\":1,\"214\":1}}],[\"cached\",{\"1\":{\"205\":2,\"281\":1}}],[\"cachedwaitforsecondsx\",{\"1\":{\"81\":1}}],[\"cache\",{\"1\":{\"46\":1,\"75\":1,\"104\":2,\"338\":1,\"339\":1,\"343\":2,\"347\":1,\"387\":1}}],[\"cube\",{\"1\":{\"329\":1}}],[\"cull\",{\"1\":{\"144\":3,\"146\":1,\"150\":2,\"160\":1,\"288\":1}}],[\"cullinggroup\",{\"0\":{\"270\":1},\"1\":{\"270\":3}}],[\"cullingupdateprofilerstring\",{\"1\":{\"144\":1}}],[\"cullingmask\",{\"1\":{\"74\":1}}],[\"culling\",{\"0\":{\"213\":1},\"1\":{\"41\":1,\"55\":1,\"60\":5,\"74\":1,\"83\":3,\"211\":1,\"213\":10,\"329\":1}}],[\"customize\",{\"1\":{\"361\":1}}],[\"customstartswith\",{\"1\":{\"252\":1}}],[\"customendswith\",{\"1\":{\"252\":1}}],[\"customrenderer\",{\"1\":{\"200\":1}}],[\"custom\",{\"1\":{\"118\":1,\"121\":1,\"122\":1}}],[\"customprovided\",{\"1\":{\"116\":1}}],[\"curve\",{\"1\":{\"325\":1}}],[\"cur\",{\"1\":{\"181\":4}}],[\"current\",{\"1\":{\"102\":2}}],[\"cursor\",{\"1\":{\"9\":1}}],[\"ctags\",{\"1\":{\"34\":1}}],[\"c语言中文网\",{\"1\":{\"30\":1}}],[\"c++时\",{\"1\":{\"57\":1,\"393\":1}}],[\"c++代码编译成本地机器码\",{\"1\":{\"57\":1}}],[\"c++代码编译为本地机器码\",{\"1\":{\"47\":1}}],[\"c++代码更难被反编译\",{\"1\":{\"47\":1}}],[\"c++编译阶段\",{\"1\":{\"47\":1}}],[\"c++编译优化后\",{\"1\":{\"47\":1}}],[\"c++编译器\",{\"1\":{\"47\":1,\"57\":2}}],[\"c++环境查看\",{\"1\":{\"26\":1}}],[\"c++\",{\"1\":{\"26\":1,\"30\":3,\"47\":2,\"57\":3,\"76\":5,\"96\":2,\"141\":1,\"150\":1,\"190\":1,\"197\":1,\"251\":1,\"277\":2,\"328\":1,\"371\":4,\"389\":4,\"390\":2,\"391\":2}}],[\"cs\",{\"1\":{\"130\":2,\"131\":1,\"134\":1,\"144\":1,\"145\":1,\"170\":1,\"181\":2,\"308\":1}}],[\"csm\",{\"1\":{\"30\":1}}],[\"csharpassembly\",{\"1\":{\"291\":1}}],[\"csharp等\",{\"1\":{\"291\":1}}],[\"csharp\",{\"1\":{\"24\":1,\"196\":2,\"289\":5,\"291\":3,\"307\":2}}],[\"csdn\",{\"1\":{\"22\":1}}],[\"c\",{\"0\":{\"24\":1,\"37\":1,\"47\":1,\"49\":1,\"57\":1,\"63\":1,\"68\":1,\"195\":1,\"268\":1,\"370\":1,\"371\":1},\"1\":{\"24\":3,\"26\":3,\"30\":2,\"44\":1,\"46\":3,\"47\":1,\"49\":1,\"50\":1,\"57\":5,\"60\":8,\"61\":1,\"63\":1,\"65\":2,\"66\":1,\"68\":1,\"72\":1,\"75\":4,\"76\":2,\"93\":3,\"96\":12,\"97\":1,\"108\":1,\"112\":1,\"121\":3,\"128\":1,\"130\":1,\"131\":1,\"134\":1,\"141\":2,\"144\":2,\"148\":1,\"149\":6,\"150\":2,\"175\":1,\"196\":1,\"205\":1,\"241\":2,\"250\":2,\"251\":1,\"252\":1,\"253\":1,\"254\":5,\"259\":1,\"263\":1,\"267\":1,\"268\":3,\"271\":4,\"277\":1,\"280\":7,\"281\":2,\"282\":2,\"283\":6,\"284\":3,\"285\":6,\"287\":1,\"289\":2,\"299\":1,\"304\":2,\"306\":2,\"312\":6,\"317\":1,\"328\":2,\"368\":1,\"371\":4}}],[\"crazy\",{\"1\":{\"339\":2}}],[\"criware\",{\"1\":{\"323\":1}}],[\"cr评论\",{\"1\":{\"60\":1}}],[\"cr\",{\"1\":{\"53\":1,\"60\":1,\"77\":2}}],[\"creating\",{\"1\":{\"280\":1}}],[\"createsomesingleton\",{\"1\":{\"262\":1}}],[\"create\",{\"1\":{\"31\":1,\"280\":1,\"283\":1,\"285\":3,\"294\":1,\"295\":1,\"339\":1,\"345\":1,\"355\":1}}],[\"creator\",{\"1\":{\"19\":1}}],[\"crowbar\",{\"1\":{\"30\":1}}],[\"crystools\",{\"1\":{\"16\":1}}],[\"chunk\",{\"1\":{\"394\":4}}],[\"chunks\",{\"1\":{\"46\":1}}],[\"chinese\",{\"1\":{\"377\":1}}],[\"children\",{\"1\":{\"335\":6,\"336\":9,\"360\":3,\"361\":3}}],[\"child\",{\"0\":{\"162\":1},\"1\":{\"149\":1}}],[\"chen\",{\"1\":{\"362\":1}}],[\"checkout\",{\"1\":{\"339\":1}}],[\"checked\",{\"1\":{\"181\":1}}],[\"checkitemcondition\",{\"1\":{\"56\":1}}],[\"checkpoints\",{\"1\":{\"17\":1}}],[\"checkpoint\",{\"1\":{\"17\":1}}],[\"check\",{\"1\":{\"17\":2,\"56\":2,\"181\":1,\"369\":1}}],[\"character\",{\"1\":{\"331\":1}}],[\"characterinfo\",{\"1\":{\"168\":1}}],[\"chains\",{\"1\":{\"331\":2}}],[\"changelog\",{\"1\":{\"336\":1,\"360\":1,\"361\":1,\"364\":1}}],[\"changed\",{\"1\":{\"280\":2}}],[\"change\",{\"1\":{\"170\":1,\"339\":1}}],[\"changestate\",{\"1\":{\"70\":1}}],[\"changing\",{\"1\":{\"120\":1}}],[\"channel\",{\"1\":{\"45\":1,\"60\":2,\"75\":3,\"233\":1}}],[\"chat\",{\"1\":{\"7\":1}}],[\"coding\",{\"1\":{\"403\":1}}],[\"code\",{\"0\":{\"53\":1,\"191\":1,\"393\":1},\"1\":{\"9\":2,\"22\":1,\"24\":1,\"26\":1,\"35\":1,\"59\":2,\"60\":1,\"77\":2,\"130\":1,\"134\":3,\"141\":1,\"190\":1,\"191\":2,\"193\":3,\"205\":2,\"279\":1,\"335\":1,\"393\":1}}],[\"cookbook\",{\"1\":{\"335\":8,\"336\":2,\"360\":1,\"361\":2}}],[\"copyright\",{\"1\":{\"308\":1,\"362\":2}}],[\"copy\",{\"1\":{\"285\":2,\"369\":4}}],[\"copies\",{\"1\":{\"285\":1}}],[\"could\",{\"1\":{\"136\":1}}],[\"count\",{\"1\":{\"99\":2,\"100\":10,\"101\":7,\"102\":3,\"103\":3,\"104\":6,\"144\":4,\"181\":1,\"201\":2,\"205\":2,\"271\":7,\"275\":1,\"279\":1,\"367\":3,\"394\":1}}],[\"color32\",{\"1\":{\"261\":1}}],[\"colorutility\",{\"0\":{\"261\":1},\"1\":{\"261\":1}}],[\"color2\",{\"1\":{\"136\":3}}],[\"color1\",{\"1\":{\"136\":3}}],[\"color\",{\"0\":{\"231\":1},\"1\":{\"51\":1,\"58\":1,\"113\":1,\"118\":1,\"121\":5,\"122\":5,\"123\":3,\"136\":4,\"160\":11,\"212\":2,\"261\":1,\"329\":1}}],[\"collapsible\",{\"1\":{\"335\":1}}],[\"collision\",{\"1\":{\"326\":2}}],[\"collider\",{\"1\":{\"41\":3,\"55\":1,\"62\":1,\"67\":1}}],[\"collectincremental\",{\"1\":{\"276\":1}}],[\"collection\",{\"1\":{\"97\":1,\"282\":1}}],[\"collections\",{\"0\":{\"242\":1},\"1\":{\"96\":3,\"237\":1,\"279\":1,\"281\":2}}],[\"collected\",{\"1\":{\"189\":1}}],[\"collect\",{\"1\":{\"97\":2,\"276\":5}}],[\"collector\",{\"1\":{\"14\":1,\"274\":1}}],[\"corp\",{\"1\":{\"308\":1}}],[\"coroutines\",{\"1\":{\"189\":1,\"404\":1}}],[\"coroutine\",{\"0\":{\"49\":1},\"1\":{\"49\":1,\"57\":3,\"60\":1}}],[\"core\",{\"1\":{\"22\":1,\"112\":1,\"331\":1,\"336\":2,\"371\":2}}],[\"combination\",{\"1\":{\"218\":2}}],[\"combine\",{\"1\":{\"109\":1,\"268\":1,\"382\":1}}],[\"combinemeshes\",{\"1\":{\"106\":1,\"111\":1,\"218\":1,\"288\":1}}],[\"common\",{\"1\":{\"371\":1}}],[\"comment\",{\"1\":{\"363\":1}}],[\"command\",{\"1\":{\"85\":1}}],[\"commandbuffer\",{\"1\":{\"58\":1}}],[\"commander\",{\"1\":{\"33\":2}}],[\"community\",{\"1\":{\"23\":1,\"261\":1}}],[\"computer\",{\"0\":{\"329\":1},\"1\":{\"329\":1}}],[\"compacting\",{\"1\":{\"401\":1}}],[\"comparison\",{\"1\":{\"330\":1}}],[\"comparisons\",{\"1\":{\"252\":1}}],[\"compareto\",{\"1\":{\"283\":2}}],[\"compatibility\",{\"1\":{\"114\":1}}],[\"compressiont\",{\"1\":{\"392\":1}}],[\"compression\",{\"0\":{\"221\":1},\"1\":{\"201\":2,\"212\":1,\"221\":1,\"394\":1,\"397\":2}}],[\"compressed\",{\"1\":{\"22\":1,\"201\":2,\"238\":4}}],[\"compilationpipeline\",{\"1\":{\"309\":3}}],[\"compilation\",{\"1\":{\"190\":1,\"301\":1,\"309\":2,\"371\":2}}],[\"compiled\",{\"1\":{\"238\":1}}],[\"compile\",{\"1\":{\"118\":1,\"119\":1,\"122\":1,\"238\":1,\"240\":2,\"241\":2}}],[\"compilerservices\",{\"1\":{\"308\":1}}],[\"compiler\",{\"1\":{\"30\":1}}],[\"comps\",{\"1\":{\"181\":7}}],[\"compensation\",{\"1\":{\"87\":1}}],[\"components\",{\"1\":{\"335\":1,\"336\":1,\"391\":1}}],[\"component\",{\"1\":{\"46\":3,\"75\":1,\"85\":2}}],[\"com\",{\"1\":{\"22\":4,\"199\":1,\"205\":6,\"336\":2,\"339\":2,\"385\":1,\"393\":1,\"394\":3}}],[\"comfyui\",{\"0\":{\"16\":1},\"1\":{\"16\":5,\"17\":3}}],[\"cocostudio导出界面置灰及复原lua实现版\",{\"1\":{\"19\":1}}],[\"cocos2dx\",{\"1\":{\"19\":5}}],[\"cocos2d\",{\"1\":{\"19\":4}}],[\"cocos\",{\"0\":{\"19\":1},\"1\":{\"19\":10}}],[\"convex\",{\"1\":{\"326\":3}}],[\"convexity\",{\"1\":{\"326\":1}}],[\"conversion\",{\"1\":{\"280\":2}}],[\"converting\",{\"1\":{\"280\":1}}],[\"concave\",{\"1\":{\"326\":1}}],[\"concatenation\",{\"1\":{\"280\":1}}],[\"concatenations\",{\"1\":{\"280\":1}}],[\"concatenating\",{\"1\":{\"280\":1}}],[\"concatexample\",{\"1\":{\"280\":2}}],[\"concurrent\",{\"1\":{\"275\":1}}],[\"conservation\",{\"1\":{\"333\":1}}],[\"console\",{\"1\":{\"309\":1}}],[\"constraints\",{\"1\":{\"301\":3,\"302\":1}}],[\"const\",{\"1\":{\"272\":6,\"335\":1,\"336\":1,\"360\":1,\"361\":1,\"377\":2}}],[\"constantbuffer\",{\"1\":{\"127\":1}}],[\"constant\",{\"1\":{\"126\":1,\"216\":1}}],[\"considerations\",{\"1\":{\"225\":1}}],[\"consumption\",{\"0\":{\"204\":1}}],[\"configurations\",{\"1\":{\"404\":1}}],[\"configuration\",{\"1\":{\"274\":1,\"275\":2,\"335\":1,\"336\":1}}],[\"configurable\",{\"1\":{\"225\":2,\"228\":2}}],[\"config\",{\"1\":{\"203\":2,\"335\":2,\"336\":1,\"340\":1,\"343\":3,\"346\":1,\"347\":1,\"355\":1,\"357\":1,\"360\":2,\"361\":2,\"367\":1}}],[\"confyui\",{\"1\":{\"17\":2}}],[\"conditional\",{\"1\":{\"263\":6}}],[\"conditions\",{\"1\":{\"60\":1}}],[\"condition\",{\"1\":{\"60\":1}}],[\"contact\",{\"1\":{\"361\":3}}],[\"contents\",{\"1\":{\"199\":1}}],[\"content\",{\"1\":{\"170\":1}}],[\"contract\",{\"1\":{\"369\":4}}],[\"contributors\",{\"1\":{\"364\":1}}],[\"contribution\",{\"1\":{\"360\":1,\"361\":1}}],[\"contributing\",{\"1\":{\"336\":1}}],[\"contribute\",{\"1\":{\"116\":1}}],[\"control\",{\"1\":{\"215\":1}}],[\"controls\",{\"1\":{\"22\":1}}],[\"continue\",{\"1\":{\"9\":1}}],[\"clr\",{\"1\":{\"371\":3}}],[\"closures\",{\"1\":{\"404\":1}}],[\"closure\",{\"1\":{\"283\":1}}],[\"cloned\",{\"1\":{\"200\":1}}],[\"cloth\",{\"1\":{\"108\":1}}],[\"cloud\",{\"1\":{\"104\":1}}],[\"cloudwu\",{\"1\":{\"26\":1}}],[\"clearflags\",{\"1\":{\"212\":1}}],[\"clear\",{\"0\":{\"212\":1},\"1\":{\"81\":1,\"144\":2,\"211\":1,\"212\":3,\"280\":1,\"282\":2}}],[\"cleaninvaliditems\",{\"1\":{\"144\":1}}],[\"clean\",{\"1\":{\"35\":1,\"205\":3}}],[\"clang\",{\"1\":{\"47\":1,\"57\":2,\"76\":1}}],[\"classifier\",{\"1\":{\"332\":1}}],[\"class>\",{\"1\":{\"284\":3}}],[\"classes\",{\"1\":{\"189\":1}}],[\"class\",{\"1\":{\"41\":1,\"42\":1,\"48\":3,\"60\":2,\"63\":2,\"68\":1,\"123\":1,\"246\":1,\"254\":1,\"262\":1,\"263\":1,\"279\":1,\"280\":5,\"281\":2,\"309\":1,\"377\":1,\"404\":2}}],[\"claude\",{\"1\":{\"7\":1,\"9\":2}}],[\"clumsy\",{\"1\":{\"33\":1}}],[\"client\",{\"1\":{\"87\":1,\"335\":3,\"336\":1}}],[\"clippingregistry\",{\"1\":{\"144\":1}}],[\"clipping\",{\"1\":{\"144\":2,\"329\":1}}],[\"clipperregistry\",{\"1\":{\"144\":1,\"150\":2}}],[\"clipper\",{\"1\":{\"30\":1}}],[\"clip\",{\"1\":{\"51\":1}}],[\"cline\",{\"1\":{\"9\":1}}],[\"cli\",{\"1\":{\"5\":1,\"9\":1,\"335\":1,\"336\":1}}],[\"cn\",{\"1\":{\"0\":1,\"20\":2,\"30\":1,\"339\":1}}],[\"tutorial\",{\"1\":{\"393\":1}}],[\"ts\",{\"1\":{\"367\":1}}],[\"tmp\",{\"1\":{\"169\":20}}],[\"tmtheme\",{\"1\":{\"34\":1}}],[\"t2\",{\"1\":{\"145\":2}}],[\"t1\",{\"1\":{\"145\":2}}],[\"two\",{\"1\":{\"98\":1,\"221\":1,\"361\":2}}],[\"twotextencoders\",{\"1\":{\"17\":1}}],[\"tlsf\",{\"1\":{\"98\":1,\"99\":3}}],[\"tls\",{\"0\":{\"102\":1},\"1\":{\"98\":3,\"102\":2,\"104\":1}}],[\"tcp和udp的区别\",{\"1\":{\"93\":1}}],[\"tcp\",{\"1\":{\"71\":1,\"87\":1,\"314\":1}}],[\"t在b组\",{\"1\":{\"60\":1}}],[\"taa\",{\"1\":{\"214\":1}}],[\"targetframerate\",{\"1\":{\"275\":5}}],[\"targets\",{\"1\":{\"166\":1}}],[\"target\",{\"1\":{\"121\":2,\"122\":1,\"160\":1,\"166\":12,\"179\":2,\"190\":1,\"339\":1}}],[\"ta\",{\"0\":{\"318\":1},\"1\":{\"49\":1,\"52\":1,\"58\":1}}],[\"tap\",{\"1\":{\"49\":1}}],[\"task\",{\"1\":{\"49\":3,\"52\":1,\"57\":5,\"60\":5,\"92\":1}}],[\"tags\",{\"1\":{\"120\":1,\"121\":1,\"122\":1,\"160\":1}}],[\"tag\",{\"1\":{\"42\":1,\"358\":2,\"363\":2,\"365\":1}}],[\"typeof\",{\"1\":{\"181\":1}}],[\"types\",{\"1\":{\"121\":1,\"280\":1}}],[\"typetree\",{\"1\":{\"98\":3,\"104\":1,\"394\":16}}],[\"typed\",{\"1\":{\"97\":1,\"284\":1}}],[\"type\",{\"0\":{\"48\":2},\"1\":{\"48\":2,\"63\":2,\"68\":2,\"97\":1,\"118\":1,\"234\":1,\"265\":2,\"284\":1,\"335\":1,\"336\":2}}],[\"t\",{\"1\":{\"41\":1,\"52\":1,\"60\":3,\"160\":2,\"212\":1,\"221\":1,\"275\":1,\"283\":1,\"285\":1,\"369\":5,\"404\":1}}],[\"tip\",{\"1\":{\"366\":1}}],[\"tips\",{\"1\":{\"177\":1,\"185\":1}}],[\"title\",{\"1\":{\"365\":1,\"367\":3}}],[\"tint\",{\"1\":{\"160\":1}}],[\"tile\",{\"1\":{\"212\":4}}],[\"tiler\",{\"1\":{\"151\":6}}],[\"tilemaps\",{\"1\":{\"22\":1}}],[\"timeline\",{\"1\":{\"302\":2,\"306\":2,\"313\":1}}],[\"times\",{\"1\":{\"145\":2,\"400\":1}}],[\"timestep\",{\"1\":{\"60\":1}}],[\"time\",{\"1\":{\"41\":1,\"47\":2,\"57\":3,\"76\":1,\"134\":2,\"190\":2,\"201\":1,\"222\":1,\"281\":1,\"283\":1,\"285\":1,\"333\":1,\"371\":2}}],[\"t3d\",{\"1\":{\"30\":1}}],[\"throughput\",{\"1\":{\"400\":1}}],[\"throwargumentoutofrangeexception\",{\"1\":{\"369\":2}}],[\"throwhelper\",{\"1\":{\"369\":2}}],[\"three\",{\"1\":{\"361\":2}}],[\"threedposeunitybarracuda\",{\"1\":{\"22\":1}}],[\"threadpriority\",{\"1\":{\"269\":4}}],[\"threadsafe\",{\"1\":{\"98\":1}}],[\"thread\",{\"0\":{\"101\":1,\"102\":1,\"103\":1},\"1\":{\"55\":1,\"60\":1,\"98\":2,\"101\":2,\"102\":2,\"103\":1,\"104\":10,\"254\":1}}],[\"thumbs\",{\"1\":{\"338\":1}}],[\"thanks\",{\"1\":{\"369\":1}}],[\"than\",{\"1\":{\"145\":1}}],[\"that\",{\"1\":{\"145\":1,\"181\":1,\"285\":2,\"369\":1}}],[\"this\",{\"1\":{\"59\":1,\"252\":2,\"281\":1,\"282\":2,\"283\":1,\"285\":1,\"369\":1}}],[\"themehope\",{\"1\":{\"354\":1,\"360\":1}}],[\"themes\",{\"1\":{\"335\":1,\"336\":1}}],[\"theme\",{\"1\":{\"335\":5,\"336\":4,\"346\":3,\"355\":6,\"357\":4,\"358\":2,\"359\":2,\"360\":2,\"361\":1,\"362\":1,\"367\":4}}],[\"theorem\",{\"1\":{\"326\":2}}],[\"theoraplayer\",{\"1\":{\"19\":1}}],[\"they\",{\"1\":{\"181\":1,\"331\":1}}],[\"the\",{\"1\":{\"55\":1,\"96\":2,\"121\":1,\"132\":1,\"145\":4,\"181\":4,\"275\":1,\"279\":2,\"280\":7,\"281\":2,\"282\":3,\"283\":2,\"285\":3,\"331\":1,\"336\":1,\"339\":1,\"340\":5,\"369\":2}}],[\"tearing\",{\"1\":{\"230\":1}}],[\"teamviewer\",{\"1\":{\"33\":1}}],[\"team\",{\"1\":{\"22\":1}}],[\"tessellation\",{\"1\":{\"217\":1}}],[\"testrunner\",{\"1\":{\"298\":2}}],[\"testing\",{\"1\":{\"215\":2}}],[\"test\",{\"1\":{\"60\":1,\"238\":6,\"298\":3,\"323\":1}}],[\"texel\",{\"1\":{\"160\":1}}],[\"texcoord1\",{\"1\":{\"160\":1}}],[\"texcoord0\",{\"1\":{\"160\":2}}],[\"texcoord\",{\"1\":{\"160\":5}}],[\"textmesh\",{\"1\":{\"169\":8}}],[\"textmeshprougui\",{\"1\":{\"169\":3}}],[\"textmeshpro\",{\"0\":{\"169\":1},\"1\":{\"169\":4}}],[\"text\",{\"1\":{\"141\":1,\"150\":3,\"152\":1,\"168\":16,\"169\":2,\"170\":1,\"280\":11,\"335\":8,\"336\":18,\"360\":4,\"361\":3}}],[\"textureview\",{\"1\":{\"205\":1}}],[\"texturerebuiltcallback\",{\"1\":{\"168\":1}}],[\"texturerebuilt\",{\"1\":{\"168\":2}}],[\"texture\",{\"0\":{\"221\":1,\"396\":1},\"1\":{\"43\":1,\"60\":1,\"70\":1,\"160\":1,\"200\":1,\"214\":1,\"216\":1,\"221\":1,\"247\":3,\"329\":1,\"396\":2,\"397\":1}}],[\"texturesampleadd\",{\"1\":{\"160\":2}}],[\"textures\",{\"0\":{\"219\":1},\"1\":{\"22\":1,\"106\":1,\"210\":1}}],[\"tex2d\",{\"1\":{\"121\":1,\"160\":1}}],[\"temporal\",{\"1\":{\"214\":1}}],[\"temporary\",{\"1\":{\"102\":1,\"103\":1,\"104\":2,\"189\":1,\"280\":2,\"281\":1}}],[\"temp\",{\"1\":{\"102\":4,\"103\":1,\"104\":12,\"338\":1,\"347\":1,\"367\":1}}],[\"technical\",{\"1\":{\"116\":1}}],[\"technologies\",{\"1\":{\"4\":1,\"22\":1,\"139\":1,\"144\":1}}],[\"tech\",{\"1\":{\"75\":1}}],[\"troubleshooting\",{\"1\":{\"335\":1,\"336\":1}}],[\"try\",{\"1\":{\"144\":2}}],[\"trees\",{\"1\":{\"331\":2}}],[\"tree\",{\"1\":{\"104\":1,\"145\":2,\"326\":1,\"331\":3,\"332\":1}}],[\"trellis3d\",{\"1\":{\"7\":2}}],[\"true\",{\"1\":{\"62\":1,\"65\":2,\"67\":1,\"70\":3,\"93\":1,\"109\":1,\"112\":1,\"128\":1,\"144\":2,\"160\":2,\"166\":1,\"181\":2,\"246\":1,\"267\":1,\"279\":1,\"291\":2,\"335\":1,\"357\":2,\"358\":4,\"362\":1}}],[\"triple\",{\"0\":{\"230\":1}}],[\"tripo\",{\"1\":{\"7\":1}}],[\"trigger\",{\"1\":{\"62\":3,\"67\":3}}],[\"tracing\",{\"1\":{\"329\":1,\"333\":3}}],[\"translucency\",{\"1\":{\"333\":1}}],[\"translate\",{\"1\":{\"273\":1}}],[\"transparency\",{\"1\":{\"215\":1,\"333\":1}}],[\"transparentgeometry\",{\"1\":{\"149\":2}}],[\"transparent\",{\"1\":{\"142\":1,\"160\":2}}],[\"transfer\",{\"1\":{\"118\":1,\"122\":1}}],[\"transformations\",{\"1\":{\"325\":1}}],[\"transformation\",{\"1\":{\"325\":2}}],[\"transforms\",{\"1\":{\"120\":1,\"145\":1,\"170\":1,\"248\":1}}],[\"transform\",{\"1\":{\"60\":1,\"108\":1,\"144\":2,\"145\":4,\"150\":1,\"166\":2,\"172\":1,\"181\":2,\"273\":1}}],[\"trail\",{\"1\":{\"108\":1,\"110\":1}}],[\"trade\",{\"1\":{\"54\":1,\"60\":1}}],[\"trae下载\",{\"1\":{\"9\":1}}],[\"trae\",{\"1\":{\"9\":1}}],[\"token\",{\"1\":{\"339\":3}}],[\"todo\",{\"1\":{\"336\":1}}],[\"tone\",{\"1\":{\"329\":1}}],[\"torebuild\",{\"1\":{\"145\":4}}],[\"too\",{\"1\":{\"103\":1,\"367\":1}}],[\"tool\",{\"1\":{\"30\":1}}],[\"toolkit\",{\"1\":{\"22\":1,\"322\":1}}],[\"tools\",{\"1\":{\"19\":1,\"30\":1,\"199\":2,\"309\":1}}],[\"to$\",{\"1\":{\"79\":9}}],[\"tostring\",{\"1\":{\"59\":1,\"280\":4}}],[\"total\",{\"1\":{\"33\":2,\"205\":8,\"238\":4}}],[\"tolua\",{\"1\":{\"22\":1}}],[\"touchcount\",{\"1\":{\"285\":5}}],[\"touches\",{\"1\":{\"285\":10}}],[\"touch\",{\"1\":{\"22\":1,\"285\":8}}],[\"to\",{\"1\":{\"4\":1,\"22\":2,\"30\":2,\"47\":1,\"57\":1,\"145\":2,\"181\":1,\"185\":1,\"201\":1,\"238\":4,\"280\":1,\"281\":2,\"283\":2,\"335\":1,\"369\":3,\"392\":3}}],[\"bvh\",{\"1\":{\"326\":1}}],[\"bp++\",{\"1\":{\"252\":1}}],[\"bp\",{\"1\":{\"252\":9}}],[\"bim\",{\"1\":{\"321\":1,\"323\":1}}],[\"bits\",{\"1\":{\"233\":2}}],[\"binary2text\",{\"1\":{\"199\":2}}],[\"binders\",{\"1\":{\"205\":4}}],[\"bind\",{\"1\":{\"112\":2,\"135\":2}}],[\"bigger\",{\"1\":{\"145\":1}}],[\"bilibili\",{\"1\":{\"386\":1,\"404\":1}}],[\"bilibil\",{\"1\":{\"20\":1}}],[\"b组\",{\"1\":{\"60\":1}}],[\"brands\",{\"1\":{\"359\":1}}],[\"branches\",{\"1\":{\"339\":1}}],[\"branch\",{\"1\":{\"339\":2}}],[\"broad\",{\"1\":{\"326\":1}}],[\"browser\",{\"1\":{\"22\":1}}],[\"breaking\",{\"1\":{\"148\":1}}],[\"break\",{\"1\":{\"145\":1,\"146\":1,\"181\":1}}],[\"breadth\",{\"1\":{\"60\":1}}],[\"b\",{\"1\":{\"42\":1,\"45\":2,\"60\":3,\"97\":1,\"123\":2,\"149\":7,\"241\":1,\"252\":6,\"260\":3,\"280\":1,\"304\":2}}],[\"battlescenefightalliancelose\",{\"1\":{\"377\":1}}],[\"battlescenefightalliancewin\",{\"1\":{\"377\":3}}],[\"batches\",{\"1\":{\"317\":1}}],[\"batcher的同一个shader\",{\"1\":{\"60\":1}}],[\"batcher\",{\"0\":{\"125\":1,\"127\":1,\"128\":1,\"129\":1,\"135\":1},\"1\":{\"41\":2,\"43\":1,\"50\":1,\"55\":1,\"58\":4,\"60\":4,\"74\":2,\"83\":1,\"106\":6,\"108\":1,\"112\":4,\"114\":8,\"115\":1,\"123\":1,\"124\":2,\"125\":1,\"127\":1,\"128\":3,\"129\":5,\"130\":3,\"131\":1,\"132\":2,\"133\":2,\"134\":8,\"135\":7,\"136\":3,\"137\":6}}],[\"batchrenderergroup\",{\"1\":{\"124\":1}}],[\"batchsize\",{\"1\":{\"118\":2}}],[\"batch\",{\"0\":{\"143\":1},\"1\":{\"112\":1,\"135\":2,\"141\":1,\"148\":1,\"178\":1}}],[\"batching\",{\"0\":{\"216\":1},\"1\":{\"41\":3,\"43\":3,\"55\":2,\"60\":2,\"64\":2,\"69\":2,\"74\":2,\"83\":3,\"108\":3,\"109\":4,\"110\":2,\"216\":2,\"288\":2}}],[\"bayes\",{\"1\":{\"332\":1}}],[\"base\",{\"1\":{\"218\":1}}],[\"based\",{\"1\":{\"75\":1,\"85\":1,\"121\":1,\"212\":4,\"333\":1,\"394\":4}}],[\"barriers\",{\"1\":{\"275\":1}}],[\"bar\",{\"1\":{\"215\":1,\"361\":3}}],[\"back\",{\"1\":{\"200\":1}}],[\"backend\",{\"1\":{\"190\":1}}],[\"backends\",{\"0\":{\"190\":1}}],[\"backgroundloadingpriority\",{\"1\":{\"269\":2}}],[\"background\",{\"1\":{\"104\":2}}],[\"bacher\",{\"1\":{\"127\":1}}],[\"bands\",{\"1\":{\"116\":1}}],[\"bake\",{\"1\":{\"156\":1}}],[\"baked\",{\"1\":{\"116\":2}}],[\"baking\",{\"1\":{\"104\":3}}],[\"bad\",{\"1\":{\"53\":1,\"280\":2,\"281\":1,\"282\":1,\"283\":1,\"285\":2}}],[\"babelua\",{\"1\":{\"19\":2}}],[\"bohem\",{\"1\":{\"402\":1}}],[\"board\",{\"1\":{\"331\":1}}],[\"boats\",{\"1\":{\"326\":2}}],[\"boat\",{\"1\":{\"132\":1}}],[\"bolt\",{\"1\":{\"312\":3}}],[\"bold\",{\"1\":{\"168\":2}}],[\"boehm\",{\"0\":{\"401\":1},\"1\":{\"275\":1,\"400\":2,\"401\":3,\"404\":1}}],[\"boundingsphere\",{\"1\":{\"270\":2}}],[\"bounding\",{\"1\":{\"215\":2,\"326\":6}}],[\"bounds\",{\"1\":{\"60\":1}}],[\"boolean\",{\"1\":{\"365\":3}}],[\"bool\",{\"1\":{\"48\":1,\"181\":1,\"252\":2}}],[\"books\",{\"0\":{\"406\":1}}],[\"book\",{\"1\":{\"31\":1,\"132\":1}}],[\"bookfere\",{\"1\":{\"30\":1}}],[\"box2d\",{\"1\":{\"324\":1}}],[\"boxed\",{\"1\":{\"97\":1}}],[\"boxing\",{\"0\":{\"284\":1},\"1\":{\"42\":1,\"48\":1,\"55\":1,\"57\":1,\"60\":1,\"76\":1,\"284\":1}}],[\"box\",{\"1\":{\"41\":1,\"215\":2,\"284\":4,\"326\":2}}],[\"bsp\",{\"1\":{\"30\":1}}],[\"bezier\",{\"1\":{\"325\":1}}],[\"bee\",{\"1\":{\"308\":2}}],[\"been\",{\"1\":{\"279\":1,\"280\":1}}],[\"become\",{\"1\":{\"283\":1}}],[\"better\",{\"1\":{\"280\":1,\"285\":2}}],[\"beta剪枝\",{\"1\":{\"331\":1}}],[\"beta\",{\"1\":{\"197\":1,\"304\":2,\"331\":1}}],[\"behavior\",{\"1\":{\"222\":3,\"322\":1,\"331\":4}}],[\"behaviour\",{\"1\":{\"181\":2}}],[\"benchmarks\",{\"1\":{\"210\":1,\"252\":1}}],[\"before\",{\"1\":{\"145\":1,\"369\":1}}],[\"beginsample\",{\"1\":{\"144\":5}}],[\"be\",{\"1\":{\"125\":1,\"136\":1,\"145\":1,\"281\":1}}],[\"bevy\",{\"1\":{\"29\":1}}],[\"best\",{\"1\":{\"4\":1,\"22\":2,\"150\":1,\"152\":1,\"168\":8,\"169\":3,\"185\":1,\"280\":1,\"285\":2}}],[\"bytes\",{\"1\":{\"99\":1,\"100\":2,\"101\":3,\"102\":2,\"233\":1}}],[\"by\",{\"1\":{\"27\":1,\"340\":1}}],[\"bump\",{\"1\":{\"329\":1}}],[\"buoyancy\",{\"1\":{\"326\":1}}],[\"but\",{\"1\":{\"145\":1,\"181\":1,\"404\":1}}],[\"bufferqueue\",{\"1\":{\"234\":1}}],[\"buffering\",{\"0\":{\"230\":2}}],[\"buffername\",{\"1\":{\"118\":6}}],[\"buffer\",{\"0\":{\"231\":1,\"232\":2},\"1\":{\"112\":1,\"118\":4,\"121\":2,\"122\":2,\"200\":2,\"201\":1,\"210\":1,\"212\":4,\"233\":1,\"392\":7,\"396\":3}}],[\"buffers\",{\"1\":{\"106\":1,\"126\":1,\"205\":1,\"216\":1,\"222\":1}}],[\"buckets\",{\"1\":{\"100\":8}}],[\"bucketcount\",{\"1\":{\"100\":1,\"104\":2}}],[\"bucket\",{\"0\":{\"100\":1},\"1\":{\"98\":1,\"100\":9,\"101\":2,\"104\":12}}],[\"burst\",{\"1\":{\"96\":2}}],[\"bugly\",{\"1\":{\"91\":1}}],[\"bug\",{\"1\":{\"91\":1,\"316\":1,\"400\":1}}],[\"built\",{\"0\":{\"50\":1,\"244\":1},\"1\":{\"50\":1,\"58\":1,\"108\":1,\"110\":1,\"120\":1,\"244\":1}}],[\"buildcompression\",{\"1\":{\"394\":2}}],[\"buildreport\",{\"1\":{\"199\":2}}],[\"buildplayeroption\",{\"1\":{\"196\":1}}],[\"building\",{\"1\":{\"185\":1}}],[\"buildbatch\",{\"1\":{\"148\":3,\"150\":1,\"152\":1,\"169\":1}}],[\"build\",{\"0\":{\"199\":1,\"238\":1},\"1\":{\"22\":1,\"100\":1,\"141\":1,\"151\":1,\"199\":1,\"300\":1,\"301\":1,\"339\":2,\"350\":2,\"351\":2,\"394\":3}}],[\"bus\",{\"1\":{\"44\":1,\"56\":1}}],[\"bundler\",{\"1\":{\"335\":3,\"336\":3,\"346\":3}}],[\"bundles\",{\"1\":{\"169\":1}}],[\"bundle\",{\"1\":{\"22\":1,\"169\":7,\"200\":1,\"394\":2}}],[\"bdframework\",{\"1\":{\"22\":1}}],[\"blue\",{\"1\":{\"359\":2}}],[\"blank\",{\"1\":{\"275\":2}}],[\"black\",{\"1\":{\"17\":1}}],[\"blen\",{\"1\":{\"252\":3}}],[\"blending\",{\"1\":{\"215\":1}}],[\"blend\",{\"1\":{\"160\":1}}],[\"blender\",{\"1\":{\"30\":6}}],[\"blit\",{\"0\":{\"234\":2},\"1\":{\"234\":5}}],[\"blob\",{\"1\":{\"336\":2}}],[\"bloom\",{\"1\":{\"236\":1}}],[\"blocking\",{\"1\":{\"166\":1,\"179\":2}}],[\"blocksize\",{\"1\":{\"104\":2}}],[\"block\",{\"1\":{\"99\":2,\"100\":6,\"101\":6,\"102\":5,\"103\":2,\"104\":37,\"136\":6,\"200\":1,\"367\":2,\"399\":2}}],[\"bloghome\",{\"1\":{\"358\":1}}],[\"blog\",{\"1\":{\"4\":1,\"19\":1,\"20\":1,\"22\":4,\"23\":1,\"26\":1,\"27\":1,\"94\":1,\"358\":3,\"361\":1}}],[\"3500\",{\"1\":{\"266\":1}}],[\"3470\",{\"1\":{\"265\":1}}],[\"34\",{\"1\":{\"252\":1}}],[\"34099200\",{\"1\":{\"233\":1}}],[\"34488k\",{\"1\":{\"205\":1}}],[\"3mb\",{\"1\":{\"205\":1}}],[\"39mb\",{\"1\":{\"238\":1}}],[\"39088k\",{\"1\":{\"205\":1}}],[\"39674\",{\"1\":{\"100\":1}}],[\"33177600\",{\"1\":{\"233\":1}}],[\"339410\",{\"1\":{\"205\":1}}],[\"332\",{\"1\":{\"205\":1}}],[\"3768\",{\"1\":{\"205\":1}}],[\"36616\",{\"1\":{\"205\":1}}],[\"3668k\",{\"1\":{\"205\":1}}],[\"368\",{\"1\":{\"205\":1}}],[\"36\",{\"1\":{\"178\":1}}],[\"315885\",{\"1\":{\"205\":1}}],[\"31448\",{\"1\":{\"205\":2}}],[\"31467\",{\"1\":{\"205\":1}}],[\"31ms\",{\"1\":{\"130\":2}}],[\"31\",{\"1\":{\"100\":1,\"238\":1}}],[\"384184\",{\"1\":{\"205\":2}}],[\"3846\",{\"1\":{\"205\":1}}],[\"3810\",{\"1\":{\"205\":1}}],[\"38\",{\"1\":{\"177\":1,\"185\":1}}],[\"3868\",{\"1\":{\"100\":1}}],[\"3889\",{\"1\":{\"100\":1}}],[\"324\",{\"1\":{\"271\":1}}],[\"3244\",{\"1\":{\"205\":1}}],[\"320\",{\"1\":{\"253\":1}}],[\"32x32px\",{\"1\":{\"212\":1}}],[\"328\",{\"1\":{\"205\":1}}],[\"323012\",{\"1\":{\"205\":1}}],[\"327552\",{\"1\":{\"205\":1}}],[\"32kb\",{\"1\":{\"102\":1,\"104\":2}}],[\"32b\",{\"1\":{\"100\":2}}],[\"32mbplayer\",{\"1\":{\"104\":2}}],[\"32mb\",{\"1\":{\"99\":1}}],[\"32\",{\"1\":{\"99\":3,\"101\":2,\"102\":2,\"104\":2,\"190\":1,\"201\":1,\"232\":1,\"233\":3,\"369\":1}}],[\"304900\",{\"1\":{\"205\":2}}],[\"304918\",{\"1\":{\"205\":1}}],[\"30\",{\"1\":{\"52\":2,\"275\":1,\"394\":1}}],[\"302\",{\"1\":{\"30\":1}}],[\"3ds\",{\"1\":{\"323\":1}}],[\"3d模型\",{\"1\":{\"30\":1}}],[\"3d\",{\"1\":{\"12\":1,\"22\":1,\"157\":5,\"158\":2,\"166\":3,\"179\":2,\"205\":1,\"215\":2,\"247\":1,\"313\":2,\"324\":1,\"327\":1,\"331\":1,\"379\":1,\"383\":1}}],[\"3\",{\"0\":{\"81\":1,\"165\":1,\"389\":1},\"1\":{\"4\":1,\"7\":1,\"14\":1,\"19\":2,\"26\":1,\"27\":1,\"56\":3,\"60\":2,\"74\":2,\"75\":2,\"76\":1,\"77\":1,\"100\":2,\"101\":5,\"121\":2,\"124\":1,\"134\":1,\"135\":1,\"144\":1,\"148\":1,\"160\":1,\"168\":1,\"190\":1,\"193\":2,\"201\":1,\"205\":3,\"206\":1,\"221\":1,\"225\":1,\"228\":1,\"233\":2,\"236\":1,\"246\":1,\"254\":1,\"258\":1,\"265\":1,\"266\":1,\"278\":2,\"292\":1,\"302\":2,\"303\":10,\"304\":2,\"305\":2,\"388\":1,\"393\":1,\"394\":1}}],[\"官网\",{\"0\":{\"354\":1},\"1\":{\"4\":1,\"17\":1,\"19\":1,\"20\":1,\"22\":3,\"23\":1,\"24\":1,\"25\":2,\"26\":2,\"27\":1,\"29\":1,\"38\":1,\"342\":1,\"352\":1,\"354\":1}}],[\"官方的建议是每个\",{\"1\":{\"394\":1}}],[\"官方课程\",{\"1\":{\"312\":12,\"313\":15,\"315\":3,\"317\":6,\"318\":5,\"319\":4,\"320\":3,\"321\":5}}],[\"官方示例\",{\"1\":{\"22\":1}}],[\"官方文档\",{\"1\":{\"19\":1,\"23\":1,\"312\":1,\"313\":5,\"318\":1}}],[\"官方汇总\",{\"1\":{\"10\":1}}],[\"官方相关网站\",{\"1\":{\"4\":1}}],[\"官方\",{\"1\":{\"3\":1}}],[\"ubuntu\",{\"1\":{\"339\":1}}],[\"ue4\",{\"1\":{\"320\":1}}],[\"ue5\",{\"1\":{\"23\":1}}],[\"umbra\",{\"1\":{\"213\":1}}],[\"upr\",{\"1\":{\"404\":1}}],[\"upload\",{\"0\":{\"222\":1},\"1\":{\"396\":2}}],[\"uptime\",{\"1\":{\"205\":2}}],[\"updatebatches\",{\"1\":{\"150\":1,\"152\":1}}],[\"updatematerial\",{\"1\":{\"146\":1}}],[\"updategeometry\",{\"1\":{\"146\":1,\"150\":1}}],[\"update和\",{\"1\":{\"52\":1}}],[\"update\",{\"0\":{\"267\":1},\"1\":{\"41\":4,\"42\":1,\"53\":1,\"55\":4,\"56\":2,\"59\":3,\"60\":7,\"62\":3,\"63\":1,\"67\":4,\"68\":1,\"70\":2,\"74\":2,\"77\":2,\"79\":3,\"81\":1,\"146\":2,\"173\":1,\"267\":6,\"280\":4,\"282\":3,\"285\":3}}],[\"uwp\",{\"1\":{\"190\":1}}],[\"udp还是web形式的http\",{\"1\":{\"383\":1}}],[\"udp\",{\"1\":{\"71\":2,\"87\":1,\"314\":1}}],[\"uv1\",{\"1\":{\"109\":1,\"110\":1}}],[\"uv0\",{\"1\":{\"109\":1,\"110\":1}}],[\"uv\",{\"1\":{\"51\":5,\"109\":1,\"110\":1,\"121\":2,\"248\":1}}],[\"ugui系统在制作完成后\",{\"1\":{\"379\":1}}],[\"ugui系统首先要做的就是构建网格\",{\"1\":{\"379\":1}}],[\"ugui\",{\"0\":{\"379\":1},\"1\":{\"44\":1,\"55\":1,\"93\":1,\"139\":1,\"144\":1,\"169\":1,\"313\":2,\"378\":1,\"379\":3}}],[\"urp\",{\"0\":{\"50\":1},\"1\":{\"41\":1,\"43\":2,\"45\":1,\"50\":1,\"55\":1,\"58\":6,\"60\":1,\"74\":1,\"90\":2,\"108\":1,\"109\":1,\"110\":1,\"112\":10,\"114\":1,\"118\":1,\"215\":1}}],[\"ui框架\",{\"1\":{\"383\":1}}],[\"ui层\",{\"1\":{\"383\":2}}],[\"uint\",{\"1\":{\"369\":4}}],[\"uitext\",{\"1\":{\"169\":2}}],[\"uisystemprofilerapi\",{\"1\":{\"144\":8}}],[\"ui需要弹出提示\",{\"1\":{\"60\":1}}],[\"ui系统\",{\"1\":{\"60\":1}}],[\"uimanager\",{\"1\":{\"44\":1}}],[\"uibuilder\",{\"1\":{\"22\":1}}],[\"ui自动化测试\",{\"1\":{\"22\":1}}],[\"ui\",{\"0\":{\"44\":1,\"138\":1,\"139\":1,\"140\":1,\"147\":1,\"155\":1,\"156\":1,\"159\":1,\"160\":1,\"161\":1,\"164\":1,\"167\":1,\"168\":1,\"171\":1,\"175\":1,\"177\":1,\"182\":1,\"184\":1},\"1\":{\"22\":3,\"30\":2,\"41\":3,\"44\":5,\"55\":1,\"57\":1,\"59\":2,\"60\":1,\"74\":1,\"75\":2,\"80\":1,\"83\":2,\"85\":2,\"104\":2,\"138\":2,\"139\":18,\"140\":2,\"141\":4,\"142\":2,\"143\":1,\"144\":1,\"145\":3,\"146\":1,\"147\":1,\"148\":17,\"149\":14,\"150\":1,\"151\":11,\"152\":3,\"154\":8,\"155\":6,\"156\":2,\"157\":5,\"158\":2,\"159\":17,\"160\":5,\"161\":9,\"162\":5,\"163\":8,\"164\":1,\"165\":2,\"166\":4,\"167\":2,\"168\":20,\"169\":1,\"170\":15,\"171\":3,\"173\":10,\"174\":1,\"175\":4,\"177\":2,\"178\":9,\"179\":8,\"180\":1,\"181\":4,\"182\":2,\"183\":1,\"184\":1,\"185\":4,\"199\":1,\"215\":2,\"247\":1,\"249\":1,\"280\":4,\"313\":1,\"322\":1,\"379\":2,\"396\":1,\"404\":1}}],[\"utf8字符串在lua的截取和字数统计\",{\"1\":{\"19\":1}}],[\"unknown\",{\"1\":{\"205\":4,\"206\":1}}],[\"unfortunate\",{\"1\":{\"145\":1}}],[\"unlit\",{\"1\":{\"129\":1,\"236\":2}}],[\"unloadscene\",{\"1\":{\"200\":1}}],[\"unloading\",{\"1\":{\"200\":1}}],[\"unloadunusedassets\",{\"1\":{\"84\":1,\"97\":3,\"200\":2}}],[\"unload\",{\"1\":{\"65\":2,\"70\":5,\"93\":1}}],[\"unmanaged\",{\"1\":{\"96\":1}}],[\"undraw\",{\"1\":{\"30\":1}}],[\"unify\",{\"1\":{\"261\":1}}],[\"uniform\",{\"1\":{\"127\":2}}],[\"unique\",{\"1\":{\"205\":1,\"238\":4,\"388\":1}}],[\"universal\",{\"0\":{\"50\":1},\"1\":{\"50\":1,\"58\":1,\"60\":1}}],[\"unicode\",{\"1\":{\"30\":1,\"168\":1}}],[\"unittestassembly\",{\"1\":{\"308\":1}}],[\"unite\",{\"1\":{\"245\":3,\"254\":1}}],[\"unitask\",{\"1\":{\"22\":1}}],[\"unity2019\",{\"1\":{\"389\":1}}],[\"unity2022\",{\"1\":{\"124\":1,\"160\":1}}],[\"unityxr\",{\"1\":{\"321\":1}}],[\"unitywebrequest\",{\"1\":{\"269\":2}}],[\"unitywebrequestassetbundle\",{\"1\":{\"65\":1,\"70\":1}}],[\"unitydevelopers\",{\"1\":{\"202\":1}}],[\"unity3d\",{\"0\":{\"371\":1,\"375\":1,\"383\":1},\"1\":{\"199\":1,\"205\":1,\"379\":1,\"394\":2}}],[\"unitylinker\",{\"1\":{\"192\":2,\"195\":6,\"196\":4}}],[\"unitylearn\",{\"1\":{\"138\":1,\"177\":1,\"186\":1,\"209\":1,\"311\":1,\"388\":1}}],[\"unityui\",{\"1\":{\"160\":1}}],[\"unityuioptimizationtool\",{\"1\":{\"22\":1}}],[\"unityblog\",{\"1\":{\"125\":1}}],[\"unity6\",{\"1\":{\"124\":1}}],[\"unityobjecttoclippos\",{\"1\":{\"122\":1}}],[\"unitycg\",{\"1\":{\"122\":1,\"160\":1}}],[\"unityperdraw\",{\"1\":{\"112\":1,\"129\":1,\"136\":7}}],[\"unitypermaterial\",{\"1\":{\"58\":1,\"60\":1,\"112\":3,\"129\":1,\"136\":2}}],[\"unitymanual\",{\"1\":{\"96\":1,\"106\":1,\"113\":1,\"245\":1,\"274\":1,\"288\":1,\"289\":1}}],[\"unity的safety\",{\"1\":{\"60\":1}}],[\"unity的协程\",{\"1\":{\"60\":1}}],[\"unity引入了\",{\"1\":{\"60\":1}}],[\"unitysynchronizationcontext\",{\"1\":{\"60\":1}}],[\"unityeditor\",{\"1\":{\"309\":3,\"312\":1}}],[\"unityevent\",{\"1\":{\"60\":2}}],[\"unityengine\",{\"0\":{\"259\":1},\"1\":{\"45\":1,\"123\":1,\"144\":6,\"259\":1,\"263\":2,\"279\":1,\"280\":8,\"281\":2,\"291\":1,\"308\":1,\"309\":2}}],[\"unitygameframework\",{\"1\":{\"22\":1}}],[\"unity\",{\"0\":{\"4\":1,\"22\":1,\"42\":1,\"47\":1,\"49\":1,\"62\":1,\"67\":1,\"73\":1,\"78\":1,\"96\":1,\"126\":1,\"138\":1,\"139\":1,\"140\":1,\"147\":1,\"148\":1,\"149\":1,\"164\":1,\"177\":1,\"186\":1,\"191\":1,\"194\":2,\"209\":1,\"245\":1,\"285\":1,\"302\":1,\"304\":1,\"311\":1,\"385\":1,\"386\":1,\"389\":1},\"1\":{\"4\":10,\"14\":1,\"22\":23,\"30\":1,\"31\":1,\"40\":2,\"41\":2,\"42\":2,\"43\":1,\"45\":1,\"46\":2,\"47\":1,\"49\":1,\"50\":1,\"53\":1,\"54\":1,\"57\":5,\"61\":4,\"63\":1,\"64\":2,\"65\":2,\"66\":2,\"69\":2,\"73\":1,\"75\":1,\"76\":1,\"77\":1,\"79\":1,\"80\":2,\"81\":2,\"88\":1,\"90\":1,\"93\":1,\"95\":1,\"96\":18,\"97\":15,\"98\":2,\"99\":2,\"101\":1,\"102\":2,\"103\":1,\"104\":8,\"106\":16,\"108\":14,\"109\":9,\"110\":17,\"111\":5,\"112\":18,\"114\":1,\"115\":5,\"116\":3,\"118\":25,\"119\":4,\"120\":7,\"121\":4,\"122\":10,\"124\":1,\"125\":1,\"126\":2,\"127\":3,\"129\":2,\"130\":1,\"132\":1,\"133\":2,\"135\":2,\"136\":5,\"137\":1,\"138\":2,\"139\":13,\"140\":2,\"141\":8,\"142\":2,\"143\":1,\"144\":2,\"145\":2,\"146\":1,\"147\":3,\"148\":5,\"149\":9,\"150\":5,\"151\":3,\"157\":1,\"159\":1,\"160\":5,\"162\":5,\"163\":5,\"164\":1,\"165\":6,\"168\":10,\"169\":2,\"170\":5,\"173\":3,\"174\":2,\"175\":2,\"177\":3,\"178\":2,\"180\":1,\"185\":3,\"187\":1,\"188\":3,\"189\":1,\"190\":1,\"191\":2,\"192\":1,\"193\":6,\"194\":7,\"196\":4,\"197\":1,\"198\":1,\"199\":5,\"200\":11,\"201\":8,\"205\":5,\"208\":1,\"210\":2,\"211\":1,\"212\":6,\"213\":11,\"215\":15,\"216\":5,\"217\":2,\"218\":2,\"219\":1,\"220\":2,\"221\":4,\"222\":10,\"223\":2,\"224\":1,\"225\":5,\"227\":1,\"228\":1,\"231\":3,\"234\":5,\"237\":2,\"238\":2,\"239\":1,\"240\":1,\"241\":2,\"242\":2,\"243\":2,\"244\":2,\"245\":1,\"246\":2,\"247\":2,\"248\":6,\"249\":2,\"250\":1,\"252\":1,\"254\":5,\"255\":1,\"257\":1,\"258\":1,\"261\":2,\"262\":1,\"265\":1,\"266\":1,\"267\":1,\"269\":3,\"270\":1,\"271\":1,\"272\":2,\"274\":13,\"275\":12,\"278\":2,\"279\":1,\"280\":1,\"284\":4,\"285\":3,\"286\":1,\"288\":5,\"289\":3,\"290\":3,\"291\":3,\"294\":1,\"295\":1,\"298\":2,\"299\":1,\"300\":1,\"301\":3,\"302\":3,\"304\":3,\"305\":1,\"306\":2,\"307\":3,\"308\":1,\"310\":1,\"312\":21,\"313\":26,\"314\":1,\"315\":6,\"317\":11,\"318\":9,\"319\":5,\"320\":7,\"321\":10,\"322\":1,\"323\":2,\"327\":1,\"371\":1,\"374\":1,\"384\":5,\"385\":1,\"386\":1,\"387\":1,\"388\":2,\"389\":9,\"390\":1,\"391\":2,\"392\":2,\"393\":5,\"394\":6,\"400\":3,\"401\":4}}],[\"unreal\",{\"0\":{\"23\":1},\"1\":{\"23\":3,\"30\":1,\"327\":1}}],[\"unet\",{\"1\":{\"17\":1,\"314\":1}}],[\"usrmxinny1nr2\",{\"1\":{\"385\":1}}],[\"uss\",{\"1\":{\"205\":4,\"388\":2}}],[\"using\",{\"1\":{\"123\":1,\"279\":2,\"280\":9,\"281\":4,\"283\":1,\"309\":2}}],[\"use\",{\"1\":{\"121\":1,\"135\":1,\"185\":1,\"274\":2,\"275\":3,\"279\":1,\"282\":2,\"299\":1,\"302\":2,\"331\":1}}],[\"uses\",{\"1\":{\"121\":1,\"282\":1,\"339\":4,\"340\":1}}],[\"usescriptablerenderpipelinebatching\",{\"1\":{\"112\":1,\"128\":1}}],[\"useproxyvolume\",{\"1\":{\"116\":1}}],[\"used\",{\"1\":{\"100\":2,\"101\":1,\"103\":1,\"205\":2,\"281\":1,\"367\":1}}],[\"username\",{\"1\":{\"339\":3}}],[\"user\",{\"1\":{\"30\":1,\"196\":1,\"313\":1}}],[\"users\",{\"1\":{\"26\":1}}],[\"usage\",{\"1\":{\"41\":2,\"55\":3,\"99\":1,\"101\":2,\"102\":1,\"205\":2,\"274\":2,\"335\":1}}],[\"us\",{\"1\":{\"0\":1}}]],\"version\":2}}")).map(([e,t])=>[e,It(t,{fields:["h","t","c"],storeFields:["h","t","c"]})]));self.onmessage=({data:{type:e="all",query:t,locale:s,options:n,id:o}})=>{const r=Ct[s];e==="suggest"?self.postMessage([e,o,et(t,r,n)]):e==="search"?self.postMessage([e,o,tt(t,r,n)]):self.postMessage({suggestions:[e,o,et(t,r,n)],results:[e,o,tt(t,r,n)]})};
//# sourceMappingURL=index.js.map
